"use strict";(self.webpackChunkmediapipe_facemesh_effects=self.webpackChunkmediapipe_facemesh_effects||[]).push([[104],{6104:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  CloseModule: () => (/* binding */ CloseModule),\n  SdkEngine: () => (/* binding */ SdkEngine),\n  configSliderHandler: () => (/* binding */ configSliderHandler),\n  disableInitLoading: () => (/* binding */ disableInitLoading),\n  fakeInit: () => (/* binding */ fakeInit),\n  getAnimationFrameId: () => (/* binding */ getAnimationFrameId),\n  getComparisonState: () => (/* binding */ getComparisonState),\n  getCurrentStream: () => (/* binding */ getCurrentStream),\n  getCurrentTryon: () => (/* binding */ getCurrentTryon),\n  getDebug: () => (/* binding */ getDebug),\n  getInputImage: () => (/* binding */ sdkEngine_getInputImage),\n  getIsInitialized: () => (/* binding */ getIsInitialized),\n  getIsVideo: () => (/* binding */ getIsVideo),\n  getProviders: () => (/* binding */ getProviders),\n  getSceneManagerInstance: () => (/* binding */ getSceneManagerInstance),\n  getTrackingMode: () => (/* binding */ getTrackingMode),\n  getVideo: () => (/* binding */ getVideo),\n  getVideoEl: () => (/* binding */ getVideoEl),\n  getuseOrtho: () => (/* binding */ getuseOrtho),\n  handleApiResponse: () => (/* binding */ handleApiResponse),\n  initialize: () => (/* binding */ initialize),\n  loadML: () => (/* binding */ loadML),\n  modelsEventHandler: () => (/* binding */ modelsEventHandler),\n  onCameraFrame: () => (/* binding */ onCameraFrame),\n  onClearClick: () => (/* binding */ onClearClick),\n  onHairSegment: () => (/* binding */ onHairSegment),\n  onHandLandsmarks: () => (/* binding */ onHandLandsmarks),\n  onImageClick: () => (/* binding */ onImageClick),\n  onLandmarks: () => (/* binding */ onLandmarks),\n  optionsEventHandler: () => (/* binding */ optionsEventHandler),\n  setClicked: () => (/* binding */ setClicked),\n  setComparisonState: () => (/* binding */ setComparisonState),\n  setCurrentTryon: () => (/* binding */ setCurrentTryon),\n  setImageSource: () => (/* binding */ setImageSource),\n  setInputImage: () => (/* binding */ setInputImage),\n  setInputImageTexture: () => (/* binding */ setInputImageTexture),\n  setIsPause: () => (/* binding */ setIsPause),\n  setIsVideo: () => (/* binding */ setIsVideo),\n  setProvider: () => (/* binding */ setProvider),\n  setSceneManager: () => (/* binding */ setSceneManager),\n  setSdkState: () => (/* binding */ setSdkState),\n  setTempWidth: () => (/* binding */ setTempWidth),\n  setTrackingMode: () => (/* binding */ setTrackingMode),\n  setVideo: () => (/* binding */ setVideo),\n  setVideoEl: () => (/* binding */ setVideoEl),\n  setVisibilityStateOfUploadInput: () => (/* binding */ setVisibilityStateOfUploadInput),\n  tryOnEventHandler: () => (/* binding */ tryOnEventHandler)\n});\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.for-each.js\nvar es6_array_for_each = __webpack_require__(4336);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.array.includes.js\nvar es7_array_includes = __webpack_require__(2773);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.to-string.js\nvar es6_object_to_string = __webpack_require__(6253);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.promise.js\nvar es6_promise = __webpack_require__(851);\n// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__(5666);\n// EXTERNAL MODULE: ./src/htmlService/mainHtml.js\nvar mainHtml = __webpack_require__(168);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.define-property.js\nvar es6_object_define_property = __webpack_require__(8388);\n// EXTERNAL MODULE: ./src/env.js\nvar env = __webpack_require__(2685);\n// EXTERNAL MODULE: ./src/js/utils/event.js + 1 modules\nvar utils_event = __webpack_require__(2239);\n;// CONCATENATED MODULE: ./src/js/utils/snackbar.js\n\n\n\n\nvar snackbarElement = null;\n\nfunction getSnackbarElement() {\n  return snackbarElement;\n}\n\nfunction setSnackbarElement() {\n  snackbarElement = document.getElementById("snackbar");\n}\nfunction showSnackbar() {\n  var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "Something Went Wrong";\n  return new Promise(function (resolve, reject) {\n    try {\n      emitError(message);\n\n      var _snackbarElement = getSnackbarElement();\n\n      _snackbarElement.classList.add("show-bar");\n\n      _snackbarElement.innerHTML = "";\n      var snackBarInnerDiv = "\\n      <div class=\'snackbar-container\'>\\n        <div class=\'snackbar-left-icon-container\'>\\n          <img class=\'snackbar-left-icon-image\' src=\\"https://cdn.pixelbin.io/v2/glamar-fynd-835885/original/glamar_assets/camera-off.svg\\"/>\\n        </div>\\n        <div class=\'snackbar-text-container\'>\\n          ".concat(message, "\\n        </div>\\n        <div class=\'snackbar-right-icon-container\'>\\n          <img id=\\"snackbar-close-icon\\" src=\\"https://cdn.pixelbin.io/v2/glamar-fynd-835885/original/glamar_assets/x-close.svg\\"/>\\n        </div>\\n      </div>");\n      _snackbarElement.innerHTML = snackBarInnerDiv;\n      resolve("hidden succesfully");\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\nfunction hideSnackbar() {\n  var snackbarElement = getSnackbarElement();\n  snackbarElement.classList.remove("show-bar");\n}\nfunction isSnackBarVisible() {\n  if (snackbarElement && snackbarElement.style.display !== "none") return true;else return false;\n}\n// EXTERNAL MODULE: ./src/js/utils/globalVariables.js\nvar globalVariables = __webpack_require__(113);\n;// CONCATENATED MODULE: ./src/assets/svg/Camera_denied.svg\n/* harmony default export */ const Camera_denied = (__webpack_require__.p + "assets/models/64b369fd4518daffdb45b45301d2fa41.svg");\n;// CONCATENATED MODULE: ./src/js/utils/cameraPermissionPanel.js\n\n\n\nvar Panel = null;\nvar msg = null;\nvar img = null;\nvar btn = null;\nfunction hideCameraPermissionPanel() {\n  Panel.style.display = "none";\n}\nfunction cameraPermissionPanel_showCameraPermissionPanel(url) {\n  Panel.style.display = "flex";\n}\nfunction setCameraPermissionElement(handler) {\n  Panel = document.querySelector(".camera-permission-panel");\n  msg = document.querySelector(".camera-permission-message");\n  img = document.getElementById("camera-permission-icon");\n  btn = document.getElementById("camera-permission-btn");\n  img.src = Camera_denied;\n  msg.innerHTML = globalVariables/* errorMessages */.Qj.cameraPermissionNotGranted;\n  btn.addEventListener("click", function () {\n    handleCameraPermissionClickEvent(handler);\n  });\n}\n\nvar handleCameraPermissionClickEvent = function handleCameraPermissionClickEvent(handler) {\n  handler();\n};\n;// CONCATENATED MODULE: ./src/js/camera_frame_provider.js\n\n\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar cameraPermissionState = 0;\nvar zoomFactor = 1;\nvar isCameraPermissionGranted = function isCameraPermissionGranted() {\n  if (cameraPermissionState === 2) {\n    // emitCameraFailed();\n    return false;\n  } else return true;\n};\nvar CameraFrameProvider = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {\n  function CameraFrameProvider(videoElement, _onFrame) {\n    var _this = this;\n\n    _classCallCheck(this, CameraFrameProvider);\n\n    _defineProperty(this, "start", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _this.camera.start();\n\n            case 3:\n              cameraPermissionState = 1;\n              _this.isInitialized = true;\n              _context.next = 13;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context["catch"](0);\n              // emitCameraFailed();\n              showCameraPermissionPanel();\n              emitCameraAccessIssue(); // if (error.name === "NotAllowedError") {\n              //   showSnackbar(errorMessages.cameraPermissionNotGranted);\n              // } else {\n              //   showSnackbar(errorMessages.cameraIssue);\n              // }\n\n              cameraPermissionState = 2;\n              _this.isInitialized = false;\n\n            case 13:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    })));\n\n    _defineProperty(this, "stop", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this.camera.stop();\n\n            case 2:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    this.cameraOptions = {\n      onFrame: function () {\n        var _onFrame2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _onFrame(videoElement);\n\n                case 1:\n                case "end":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        function onFrame() {\n          return _onFrame2.apply(this, arguments);\n        }\n\n        return onFrame;\n      }(),\n      width: window.innerWidth,\n      height: window.innerHeight // width: 360 * zoomFactor, //360,  // Need to change the width accordingly for nail(360) and face(640)\n      // height: 640 * zoomFactor, //480\n\n    }; //let details = navigator.userAgent;\n\n    /* Creating a regular expression  \n    containing some mobile devices keywords  \n    to search it in details string*/\n\n    var mql = window.matchMedia("(orientation: portrait)"); //let regexp = /iPad/i;\n\n    /* Using test() method to search regexp in details\n    it returns boolean value*/\n    //\n    // let isMobileDevice = regexp.test(details);\n\n    if (mql.matches) {\n      this.cameraOptions.width = window.innerHeight;\n      this.cameraOptions.height = window.innerWidth;\n    } // console.log("isMobileDevice", isMobileDevice);\n    // if (isMobileDevice) {\n    //   this.cameraOptions.width = window.innerHeight;\n    //   this.cameraOptions.height = window.innerWidth;\n    // } else {\n    // }\n    // var mql = window.matchMedia("(orientation: portrait)");\n    // // If there are matches, we\'re in portrait\n    // if (mql.matches) {\n    //   this.cameraOptions.width = window.innerHeight;\n    //   this.cameraOptions.height = window.innerWidth;\n    // }\n\n\n    var camera = new Camera(videoElement, this.cameraOptions);\n    this.camera = camera;\n    this.isInitialized = false;\n  }\n\n  _createClass(CameraFrameProvider, [{\n    key: "handleWindowResize",\n    value: function handleWindowResize() {\n      if (this.cameraOptions) {\n        this.cameraOptions.width = window.innerWidth;\n        this.cameraOptions.height = window.innerHeight;\n      } // const newWidth = window.innerWidth; // Get the new width\n      // const newHeight = window.innerHeight; // Get the new height\n      // // Update the camera\'s width and height properties\n      // if (this.camera) {\n      //   this.camera.options.options = newWidth;\n      //   this.camera.options.height = newHeight;\n      // }\n\n    }\n  }, {\n    key: "getInitalizedState",\n    value: function getInitalizedState() {\n      return this.isInitialized;\n    }\n  }]);\n\n  return CameraFrameProvider;\n}()));\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.function.bind.js\nvar es6_function_bind = __webpack_require__(9730);\n// EXTERNAL MODULE: ./node_modules/@mediapipe/face_mesh/face_mesh.js\nvar face_mesh = __webpack_require__(8818);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.replace.js\nvar es6_regexp_replace = __webpack_require__(9357);\n;// CONCATENATED MODULE: ./src/js/public_path.js\n\nvar PUBLIC_PATH = __webpack_require__.p.replace(/\\/$/, \'\') || \'\';\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.find.js\nvar es6_array_find = __webpack_require__(2310);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.map.js\nvar es6_array_map = __webpack_require__(9371);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.includes.js\nvar es6_string_includes = __webpack_require__(2850);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.index-of.js\nvar es6_array_index_of = __webpack_require__(3369);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.keys.js\nvar es6_object_keys = __webpack_require__(7476);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js\nvar es6_symbol = __webpack_require__(5767);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.filter.js\nvar es6_array_filter = __webpack_require__(8837);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js\nvar es6_object_get_own_property_descriptor = __webpack_require__(4882);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js\nvar es7_object_get_own_property_descriptors = __webpack_require__(8351);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.define-properties.js\nvar es6_object_define_properties = __webpack_require__(7470);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(9477);\n// EXTERNAL MODULE: ./node_modules/three-subdivide/src/index.js + 1 modules\nvar src = __webpack_require__(4458);\n;// CONCATENATED MODULE: ./src/js/facemesh/face_geom.js\n//\nvar FACE_MESH_INDEX_BUFFER = [173, 155, 133, 246, 33, 7, 382, 398, 362, 263, 466, 249, 308, 415, 324, 78, 95, 191, 356, 389, 264, 127, 34, 162, 368, 264, 389, 139, 162, 34, 267, 0, 302, 37, 72, 0, 11, 302, 0, 11, 0, 72, 349, 451, 350, 120, 121, 231, 452, 350, 451, 232, 231, 121, 267, 302, 269, 37, 39, 72, 303, 269, 302, 73, 72, 39, 357, 343, 350, 128, 121, 114, 277, 350, 343, 47, 114, 121, 350, 452, 357, 121, 128, 232, 453, 357, 452, 233, 232, 128, 299, 333, 297, 69, 67, 104, 332, 297, 333, 103, 104, 67, 175, 152, 396, 175, 171, 152, 377, 396, 152, 148, 152, 171, 381, 384, 382, 154, 155, 157, 398, 382, 384, 173, 157, 155, 280, 347, 330, 50, 101, 118, 348, 330, 347, 119, 118, 101, 269, 303, 270, 39, 40, 73, 304, 270, 303, 74, 73, 40, 9, 336, 151, 9, 151, 107, 337, 151, 336, 108, 107, 151, 344, 278, 360, 115, 131, 48, 279, 360, 278, 49, 48, 131, 262, 431, 418, 32, 194, 211, 424, 418, 431, 204, 211, 194, 304, 408, 270, 74, 40, 184, 409, 270, 408, 185, 184, 40, 272, 310, 407, 42, 183, 80, 415, 407, 310, 191, 80, 183, 322, 270, 410, 92, 186, 40, 409, 410, 270, 185, 40, 186, 347, 449, 348, 118, 119, 229, 450, 348, 449, 230, 229, 119, 434, 432, 430, 214, 210, 212, 422, 430, 432, 202, 212, 210, 313, 314, 18, 83, 18, 84, 17, 18, 314, 17, 84, 18, 307, 375, 306, 77, 76, 146, 291, 306, 375, 61, 146, 76, 259, 387, 260, 29, 30, 160, 388, 260, 387, 161, 160, 30, 286, 414, 384, 56, 157, 190, 398, 384, 414, 173, 190, 157, 418, 424, 406, 194, 182, 204, 335, 406, 424, 106, 204, 182, 367, 416, 364, 138, 135, 192, 434, 364, 416, 214, 192, 135, 391, 423, 327, 165, 98, 203, 358, 327, 423, 129, 203, 98, 298, 301, 284, 68, 54, 71, 251, 284, 301, 21, 71, 54, 4, 275, 5, 4, 5, 45, 281, 5, 275, 51, 45, 5, 254, 373, 253, 24, 23, 144, 374, 253, 373, 145, 144, 23, 320, 321, 307, 90, 77, 91, 375, 307, 321, 146, 91, 77, 280, 425, 411, 50, 187, 205, 427, 411, 425, 207, 205, 187, 421, 313, 200, 201, 200, 83, 18, 200, 313, 18, 83, 200, 335, 321, 406, 106, 182, 91, 405, 406, 321, 181, 91, 182, 405, 321, 404, 181, 180, 91, 320, 404, 321, 90, 91, 180, 17, 314, 16, 17, 16, 84, 315, 16, 314, 85, 84, 16, 425, 266, 426, 205, 206, 36, 423, 426, 266, 203, 36, 206, 369, 396, 400, 140, 176, 171, 377, 400, 396, 148, 171, 176, 391, 269, 322, 165, 92, 39, 270, 322, 269, 40, 39, 92, 417, 465, 413, 193, 189, 245, 464, 413, 465, 244, 245, 189, 257, 258, 386, 27, 159, 28, 385, 386, 258, 158, 28, 159, 260, 388, 467, 30, 247, 161, 466, 467, 388, 246, 161, 247, 248, 456, 419, 3, 196, 236, 399, 419, 456, 174, 236, 196, 333, 298, 332, 104, 103, 68, 284, 332, 298, 54, 68, 103, 285, 8, 417, 55, 193, 8, 168, 417, 8, 168, 8, 193, 340, 261, 346, 111, 117, 31, 448, 346, 261, 228, 31, 117, 285, 417, 441, 55, 221, 193, 413, 441, 417, 189, 193, 221, 327, 460, 326, 98, 97, 240, 328, 326, 460, 99, 240, 97, 277, 355, 329, 47, 100, 126, 371, 329, 355, 142, 126, 100, 309, 392, 438, 79, 218, 166, 439, 438, 392, 219, 166, 218, 381, 382, 256, 154, 26, 155, 341, 256, 382, 112, 155, 26, 360, 279, 420, 131, 198, 49, 429, 420, 279, 209, 49, 198, 365, 364, 379, 136, 150, 135, 394, 379, 364, 169, 135, 150, 355, 277, 437, 126, 217, 47, 343, 437, 277, 114, 47, 217, 443, 444, 282, 223, 52, 224, 283, 282, 444, 53, 224, 52, 281, 275, 363, 51, 134, 45, 440, 363, 275, 220, 45, 134, 431, 262, 395, 211, 170, 32, 369, 395, 262, 140, 32, 170, 337, 299, 338, 108, 109, 69, 297, 338, 299, 67, 69, 109, 335, 273, 321, 106, 91, 43, 375, 321, 273, 146, 43, 91, 348, 450, 349, 119, 120, 230, 451, 349, 450, 231, 230, 120, 467, 359, 342, 247, 113, 130, 446, 342, 359, 226, 130, 113, 282, 283, 334, 52, 105, 53, 293, 334, 283, 63, 53, 105, 250, 458, 462, 20, 242, 238, 461, 462, 458, 241, 238, 242, 276, 353, 300, 46, 70, 124, 383, 300, 353, 156, 124, 70, 325, 292, 324, 96, 95, 62, 308, 324, 292, 78, 62, 95, 283, 276, 293, 53, 63, 46, 300, 293, 276, 70, 46, 63, 447, 264, 345, 227, 116, 34, 372, 345, 264, 143, 34, 116, 352, 345, 346, 123, 117, 116, 340, 346, 345, 111, 116, 117, 1, 19, 274, 1, 44, 19, 354, 274, 19, 125, 19, 44, 248, 281, 456, 3, 236, 51, 363, 456, 281, 134, 51, 236, 425, 426, 427, 205, 207, 206, 436, 427, 426, 216, 206, 207, 380, 381, 252, 153, 22, 154, 256, 252, 381, 26, 154, 22, 391, 393, 269, 165, 39, 167, 267, 269, 393, 37, 167, 39, 199, 428, 200, 199, 200, 208, 421, 200, 428, 201, 208, 200, 330, 329, 266, 101, 36, 100, 371, 266, 329, 142, 100, 36, 422, 432, 273, 202, 43, 212, 287, 273, 432, 57, 212, 43, 290, 250, 328, 60, 99, 20, 462, 328, 250, 242, 20, 99, 258, 286, 385, 28, 158, 56, 384, 385, 286, 157, 56, 158, 342, 446, 353, 113, 124, 226, 265, 353, 446, 35, 226, 124, 257, 386, 259, 27, 29, 159, 387, 259, 386, 160, 159, 29, 430, 422, 431, 210, 211, 202, 424, 431, 422, 204, 202, 211, 445, 342, 276, 225, 46, 113, 353, 276, 342, 124, 113, 46, 424, 422, 335, 204, 106, 202, 273, 335, 422, 43, 202, 106, 306, 292, 307, 76, 77, 62, 325, 307, 292, 96, 62, 77, 366, 447, 352, 137, 123, 227, 345, 352, 447, 116, 227, 123, 302, 268, 303, 72, 73, 38, 271, 303, 268, 41, 38, 73, 371, 358, 266, 142, 36, 129, 423, 266, 358, 203, 129, 36, 327, 294, 460, 98, 240, 64, 455, 460, 294, 235, 64, 240, 294, 331, 278, 64, 48, 102, 279, 278, 331, 49, 102, 48, 303, 271, 304, 73, 74, 41, 272, 304, 271, 42, 41, 74, 427, 436, 434, 207, 214, 216, 432, 434, 436, 212, 216, 214, 304, 272, 408, 74, 184, 42, 407, 408, 272, 183, 42, 184, 394, 430, 395, 169, 170, 210, 431, 395, 430, 211, 210, 170, 395, 369, 378, 170, 149, 140, 400, 378, 369, 176, 140, 149, 296, 334, 299, 66, 69, 105, 333, 299, 334, 104, 105, 69, 417, 168, 351, 193, 122, 168, 6, 351, 168, 6, 168, 122, 280, 411, 352, 50, 123, 187, 376, 352, 411, 147, 187, 123, 319, 320, 325, 89, 96, 90, 307, 325, 320, 77, 90, 96, 285, 295, 336, 55, 107, 65, 296, 336, 295, 66, 65, 107, 404, 320, 403, 180, 179, 90, 319, 403, 320, 89, 90, 179, 330, 348, 329, 101, 100, 119, 349, 329, 348, 120, 119, 100, 334, 293, 333, 105, 104, 63, 298, 333, 293, 68, 63, 104, 323, 454, 366, 93, 137, 234, 447, 366, 454, 227, 234, 137, 16, 315, 15, 16, 15, 85, 316, 15, 315, 86, 85, 15, 429, 279, 358, 209, 129, 49, 331, 358, 279, 102, 49, 129, 15, 316, 14, 15, 14, 86, 317, 14, 316, 87, 86, 14, 8, 285, 9, 8, 9, 55, 336, 9, 285, 107, 55, 9, 329, 349, 277, 100, 47, 120, 350, 277, 349, 121, 120, 47, 252, 253, 380, 22, 153, 23, 374, 380, 253, 145, 23, 153, 402, 403, 318, 178, 88, 179, 319, 318, 403, 89, 179, 88, 351, 6, 419, 122, 196, 6, 197, 419, 6, 197, 6, 196, 324, 318, 325, 95, 96, 88, 319, 325, 318, 89, 88, 96, 397, 367, 365, 172, 136, 138, 364, 365, 367, 135, 138, 136, 288, 435, 397, 58, 172, 215, 367, 397, 435, 138, 215, 172, 438, 439, 344, 218, 115, 219, 278, 344, 439, 48, 219, 115, 271, 311, 272, 41, 42, 81, 310, 272, 311, 80, 81, 42, 5, 281, 195, 5, 195, 51, 248, 195, 281, 3, 51, 195, 273, 287, 375, 43, 146, 57, 291, 375, 287, 61, 57, 146, 396, 428, 175, 171, 175, 208, 199, 175, 428, 199, 208, 175, 268, 312, 271, 38, 41, 82, 311, 271, 312, 81, 82, 41, 444, 445, 283, 224, 53, 225, 276, 283, 445, 46, 225, 53, 254, 339, 373, 24, 144, 110, 390, 373, 339, 163, 110, 144, 295, 282, 296, 65, 66, 52, 334, 296, 282, 105, 52, 66, 346, 448, 347, 117, 118, 228, 449, 347, 448, 229, 228, 118, 454, 356, 447, 234, 227, 127, 264, 447, 356, 34, 127, 227, 336, 296, 337, 107, 108, 66, 299, 337, 296, 69, 66, 108, 151, 337, 10, 151, 10, 108, 338, 10, 337, 109, 108, 10, 278, 439, 294, 48, 64, 219, 455, 294, 439, 235, 219, 64, 407, 415, 292, 183, 62, 191, 308, 292, 415, 78, 191, 62, 358, 371, 429, 129, 209, 142, 355, 429, 371, 126, 142, 209, 345, 372, 340, 116, 111, 143, 265, 340, 372, 35, 143, 111, 388, 390, 466, 161, 246, 163, 249, 466, 390, 7, 163, 246, 352, 346, 280, 123, 50, 117, 347, 280, 346, 118, 117, 50, 295, 442, 282, 65, 52, 222, 443, 282, 442, 223, 222, 52, 19, 94, 354, 19, 125, 94, 370, 354, 94, 141, 94, 125, 295, 285, 442, 65, 222, 55, 441, 442, 285, 221, 55, 222, 419, 197, 248, 196, 3, 197, 195, 248, 197, 195, 197, 3, 359, 263, 255, 130, 25, 33, 249, 255, 263, 7, 33, 25, 275, 274, 440, 45, 220, 44, 457, 440, 274, 237, 44, 220, 300, 383, 301, 70, 71, 156, 368, 301, 383, 139, 156, 71, 417, 351, 465, 193, 245, 122, 412, 465, 351, 188, 122, 245, 466, 263, 467, 246, 247, 33, 359, 467, 263, 130, 33, 247, 389, 251, 368, 162, 139, 21, 301, 368, 251, 71, 21, 139, 374, 386, 380, 145, 153, 159, 385, 380, 386, 158, 159, 153, 379, 394, 378, 150, 149, 169, 395, 378, 394, 170, 169, 149, 351, 419, 412, 122, 188, 196, 399, 412, 419, 174, 196, 188, 426, 322, 436, 206, 216, 92, 410, 436, 322, 186, 92, 216, 387, 373, 388, 160, 161, 144, 390, 388, 373, 163, 144, 161, 393, 326, 164, 167, 164, 97, 2, 164, 326, 2, 97, 164, 354, 370, 461, 125, 241, 141, 462, 461, 370, 242, 141, 241, 0, 267, 164, 0, 164, 37, 393, 164, 267, 167, 37, 164, 11, 12, 302, 11, 72, 12, 268, 302, 12, 38, 12, 72, 386, 374, 387, 159, 160, 145, 373, 387, 374, 144, 145, 160, 12, 13, 268, 12, 38, 13, 312, 268, 13, 82, 13, 38, 293, 300, 298, 63, 68, 70, 301, 298, 300, 71, 70, 68, 340, 265, 261, 111, 31, 35, 446, 261, 265, 226, 35, 31, 380, 385, 381, 153, 154, 158, 384, 381, 385, 157, 158, 154, 280, 330, 425, 50, 205, 101, 266, 425, 330, 36, 101, 205, 423, 391, 426, 203, 206, 165, 322, 426, 391, 92, 165, 206, 429, 355, 420, 209, 198, 126, 437, 420, 355, 217, 126, 198, 391, 327, 393, 165, 167, 98, 326, 393, 327, 97, 98, 167, 457, 438, 440, 237, 220, 218, 344, 440, 438, 115, 218, 220, 382, 362, 341, 155, 112, 133, 463, 341, 362, 243, 133, 112, 457, 461, 459, 237, 239, 241, 458, 459, 461, 238, 241, 239, 434, 430, 364, 214, 135, 210, 394, 364, 430, 169, 210, 135, 414, 463, 398, 190, 173, 243, 362, 398, 463, 133, 243, 173, 262, 428, 369, 32, 140, 208, 396, 369, 428, 171, 208, 140, 457, 274, 461, 237, 241, 44, 354, 461, 274, 125, 44, 241, 316, 403, 317, 86, 87, 179, 402, 317, 403, 178, 179, 87, 315, 404, 316, 85, 86, 180, 403, 316, 404, 179, 180, 86, 314, 405, 315, 84, 85, 181, 404, 315, 405, 180, 181, 85, 313, 406, 314, 83, 84, 182, 405, 314, 406, 181, 182, 84, 418, 406, 421, 194, 201, 182, 313, 421, 406, 83, 182, 201, 366, 401, 323, 137, 93, 177, 361, 323, 401, 132, 177, 93, 408, 407, 306, 184, 76, 183, 292, 306, 407, 62, 183, 76, 408, 306, 409, 184, 185, 76, 291, 409, 306, 61, 76, 185, 410, 409, 287, 186, 57, 185, 291, 287, 409, 61, 185, 57, 436, 410, 432, 216, 212, 186, 287, 432, 410, 57, 186, 212, 434, 416, 427, 214, 207, 192, 411, 427, 416, 187, 192, 207, 264, 368, 372, 34, 143, 139, 383, 372, 368, 156, 139, 143, 457, 459, 438, 237, 218, 239, 309, 438, 459, 79, 239, 218, 352, 376, 366, 123, 137, 147, 401, 366, 376, 177, 147, 137, 4, 1, 275, 4, 45, 1, 274, 275, 1, 44, 1, 45, 428, 262, 421, 208, 201, 32, 418, 421, 262, 194, 32, 201, 327, 358, 294, 98, 64, 129, 331, 294, 358, 102, 129, 64, 367, 435, 416, 138, 192, 215, 433, 416, 435, 213, 215, 192, 455, 439, 289, 235, 59, 219, 392, 289, 439, 166, 219, 59, 328, 462, 326, 99, 97, 242, 370, 326, 462, 141, 242, 97, 326, 370, 2, 97, 2, 141, 94, 2, 370, 94, 141, 2, 460, 455, 305, 240, 75, 235, 289, 305, 455, 59, 235, 75, 448, 339, 449, 228, 229, 110, 254, 449, 339, 24, 110, 229, 261, 446, 255, 31, 25, 226, 359, 255, 446, 130, 226, 25, 449, 254, 450, 229, 230, 24, 253, 450, 254, 23, 24, 230, 450, 253, 451, 230, 231, 23, 252, 451, 253, 22, 23, 231, 451, 252, 452, 231, 232, 22, 256, 452, 252, 26, 22, 232, 256, 341, 452, 26, 232, 112, 453, 452, 341, 233, 112, 232, 413, 464, 414, 189, 190, 244, 463, 414, 464, 243, 244, 190, 441, 413, 286, 221, 56, 189, 414, 286, 413, 190, 189, 56, 441, 286, 442, 221, 222, 56, 258, 442, 286, 28, 56, 222, 442, 258, 443, 222, 223, 28, 257, 443, 258, 27, 28, 223, 444, 443, 259, 224, 29, 223, 257, 259, 443, 27, 223, 29, 259, 260, 444, 29, 224, 30, 445, 444, 260, 225, 30, 224, 260, 467, 445, 30, 225, 247, 342, 445, 467, 113, 247, 225, 250, 309, 458, 20, 238, 79, 459, 458, 309, 239, 79, 238, 290, 305, 392, 60, 166, 75, 289, 392, 305, 59, 75, 166, 460, 305, 328, 240, 99, 75, 290, 328, 305, 60, 75, 99, 376, 433, 401, 147, 177, 213, 435, 401, 433, 215, 213, 177, 250, 290, 309, 20, 79, 60, 392, 309, 290, 166, 60, 79, 411, 416, 376, 187, 147, 192, 433, 376, 416, 213, 192, 147, 341, 463, 453, 112, 233, 243, 464, 453, 463, 244, 243, 233, 453, 464, 357, 233, 128, 244, 465, 357, 464, 245, 244, 128, 412, 343, 465, 188, 245, 114, 357, 465, 343, 128, 114, 245, 437, 343, 399, 217, 174, 114, 412, 399, 343, 188, 114, 174, 363, 440, 360, 134, 131, 220, 344, 360, 440, 115, 220, 131, 456, 420, 399, 236, 174, 198, 437, 399, 420, 217, 198, 174, 456, 363, 420, 236, 198, 134, 360, 420, 363, 131, 134, 198, 361, 401, 288, 132, 58, 177, 435, 288, 401, 215, 177, 58, 353, 265, 383, 124, 156, 35, 372, 383, 265, 143, 35, 156, 255, 249, 339, 25, 110, 7, 390, 339, 249, 163, 7, 110, 261, 255, 448, 31, 228, 25, 339, 448, 255, 110, 25, 228, //Lips--\n14, 317, 13, 14, 13, 87, 312, 13, 317, 82, 87, 13, 317, 402, 312, 87, 82, 178, 311, 312, 402, 81, 178, 82, 402, 318, 311, 178, 81, 88, 310, 311, 318, 80, 88, 81, 318, 324, 310, 88, 80, 95, //------\n415, 310, 324, 191, 95, 80];\nvar FACE_MESH_INDEX_test = (/* unused pure expression or super */ null && ([246, 33, 7, 7, 163, 246, 161, 246, 163, 163, 144, 161, 160, 161, 144, 144, 145, 160, 159, 160, 145, 145, 153, 159, 158, 159, 153, 153, 154, 158, 157, 158, 154, 154, 155, 157, 173, 157, 155, 155, 133, 173]));\nvar FACE_MESH_INDEX_test1 = (/* unused pure expression or super */ null && ([15, 1, 0, 0, 13, 15, 12, 15, 13, 13, 3, 12, 11, 12, 3, 3, 4, 11, 10, 11, 4, 4, 5, 10, 9, 10, 5, 5, 6, 9, 8, 9, 6, 6, 7, 8, 14, 8, 7, 7, 2, 14])); //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar FACE_MESH_UV = [[0.499976992607117, 0.652534008026123], [0.500025987625122, 0.547487020492554], [0.499974012374878, 0.602371990680695], [0.482113003730774, 0.471979022026062], [0.500150978565216, 0.527155995368958], [0.499909996986389, 0.498252987861633], [0.499523013830185, 0.40106201171875], [0.289712011814117, 0.380764007568359], [0.499954998493195, 0.312398016452789], [0.499987006187439, 0.269918978214264], [0.500023007392883, 0.107050001621246], [0.500023007392883, 0.666234016418457], [0.5000159740448, 0.679224014282227], [0.500023007392883, 0.692348003387451], [0.499976992607117, 0.695277988910675], [0.499976992607117, 0.70593398809433], [0.499976992607117, 0.719385027885437], [0.499976992607117, 0.737019002437592], [0.499967992305756, 0.781370997428894], [0.499816000461578, 0.562981009483337], [0.473773002624512, 0.573909997940063], [0.104906998574734, 0.254140973091125], [0.365929991006851, 0.409575998783112], [0.338757991790771, 0.41302502155304], [0.311120003461838, 0.409460008144379], [0.274657994508743, 0.389131009578705], //[-0.005, +0.003],\n[0.393361985683441, 0.403706014156342], [0.345234006643295, 0.344011008739471], //[+0.001, -0.024],\n[0.370094001293182, 0.346076011657715], //[+0.008, -0.021],\n[0.319321990013123, 0.347265005111694], //[0.319321990013123, 0.325265005111694],\n[0.297903001308441, 0.353591024875641], //[+0.012, -0.015],\n[0.24779200553894, 0.410809993743896], [0.396889001131058, 0.842755019664764], [0.280097991228104, 0.375599980354309], [0.106310002505779, 0.399955987930298], [0.2099249958992, 0.391353011131287], [0.355807989835739, 0.534406006336212], [0.471751004457474, 0.65040397644043], [0.474155008792877, 0.680191993713379], [0.439785003662109, 0.657229006290436], [0.414617002010345, 0.66654098033905], [0.450374007225037, 0.680860996246338], [0.428770989179611, 0.682690978050232], [0.374971002340317, 0.727805018424988], [0.486716985702515, 0.547628998756409], [0.485300987958908, 0.527395009994507], [0.257764995098114, 0.314490020275116], //[-0.01, -0.03],\n[0.401223003864288, 0.455172002315521], [0.429818987846375, 0.548614978790283], [0.421351999044418, 0.533740997314453], [0.276895999908447, 0.532056987285614], [0.483370006084442, 0.499586999416351], [0.33721199631691, 0.282882988452911], //[-0.012, -0.022],\n[0.296391993761063, 0.293242990970612], //[-0.056, -0.004],\n[0.169294998049736, 0.193813979625702], [0.447580009698868, 0.302609980106354], //[+0.01, -0.02],\n[0.392390012741089, 0.353887975215912], //[0.405390012741089, 0.338887975215912],\n[0.354490011930466, 0.696784019470215], [0.067304998636246, 0.730105042457581], [0.442739009857178, 0.572826027870178], [0.457098007202148, 0.584792017936707], [0.381974011659622, 0.694710969924927], [0.392388999462128, 0.694203019142151], [0.277076005935669, 0.271932005882263], [0.422551989555359, 0.563233017921448], [0.385919004678726, 0.281364023685455], //[-0.01, -0.01],\n[0.383103013038635, 0.255840003490448], [0.331431001424789, 0.119714021682739], [0.229923993349075, 0.232002973556519], [0.364500999450684, 0.189113974571228], [0.229622006416321, 0.299540996551514], [0.173287004232407, 0.278747975826263], [0.472878992557526, 0.666198015213013], [0.446828007698059, 0.668527007102966], [0.422762006521225, 0.673889994621277], [0.445307999849319, 0.580065965652466], [0.388103008270264, 0.693961024284363], [0.403039008378983, 0.706539988517761], [0.403629004955292, 0.693953037261963], [0.460041999816895, 0.557139039039612], [0.431158006191254, 0.692366003990173], [0.452181994915009, 0.692366003990173], [0.475387006998062, 0.692366003990173], [0.465828001499176, 0.779190003871918], [0.472328990697861, 0.736225962638855], [0.473087012767792, 0.717857003211975], [0.473122000694275, 0.704625964164734], [0.473033010959625, 0.695277988910675], [0.427942007780075, 0.695277988910675], [0.426479011774063, 0.703539967536926], [0.423162013292313, 0.711845993995667], [0.4183090031147, 0.720062971115112], [0.390094995498657, 0.639572978019714], [0.013953999616206, 0.560034036636353], [0.499913990497589, 0.58014702796936], [0.413199990987778, 0.69539999961853], [0.409626007080078, 0.701822996139526], [0.468080013990402, 0.601534962654114], [0.422728985548019, 0.585985004901886], [0.463079988956451, 0.593783974647522], [0.37211999297142, 0.47341400384903], [0.334562003612518, 0.496073007583618], [0.411671012639999, 0.546965003013611], [0.242175996303558, 0.14767599105835], [0.290776997804642, 0.201445996761322], [0.327338010072708, 0.256527006626129], [0.399509996175766, 0.748921036720276], [0.441727995872498, 0.261676013469696], [0.429764986038208, 0.187834024429321], [0.412198007106781, 0.108901023864746], [0.288955003023148, 0.398952007293701], //[-0.008, +0.002],\n[0.218936994671822, 0.435410976409912], [0.41278201341629, 0.398970007896423], [0.257135003805161, 0.355440020561218], //[0, -0.013],\n[0.427684992551804, 0.437960982322693], [0.448339998722076, 0.536936044692993], [0.178560003638268, 0.45755398273468], [0.247308000922203, 0.457193970680237], [0.286267012357712, 0.467674970626831], [0.332827985286713, 0.460712015628815], [0.368755996227264, 0.447206974029541], [0.398963987827301, 0.432654976844788], [0.476410001516342, 0.405806005001068], [0.189241006970406, 0.523923993110657], [0.228962004184723, 0.348950982093811], //[0, -0.01],\n[0.490725994110107, 0.562400996685028], [0.404670000076294, 0.485132992267609], [0.019469000399113, 0.401564002037048], [0.426243007183075, 0.420431017875671], [0.396993011236191, 0.548797011375427], [0.266469985246658, 0.376977026462555], //[0, -0.003]\n[0.439121007919312, 0.51895797252655], [0.032313998788595, 0.644356966018677], [0.419054001569748, 0.387154996395111], [0.462783008813858, 0.505746960639954], [0.238978996872902, 0.779744982719421], [0.198220998048782, 0.831938028335571], [0.107550002634525, 0.540755033493042], [0.183610007166862, 0.740257024765015], [0.134409993886948, 0.333683013916016], [0.385764002799988, 0.883153975009918], [0.490967005491257, 0.579378008842468], [0.382384985685349, 0.508572995662689], [0.174399003386497, 0.397670984268188], [0.318785011768341, 0.39623498916626], [0.343364000320435, 0.400596976280212], [0.396100014448166, 0.710216999053955], [0.187885001301765, 0.588537991046906], [0.430987000465393, 0.944064974784851], [0.318993002176285, 0.898285031318665], [0.266247987747192, 0.869701027870178], [0.500023007392883, 0.190576016902924], [0.499976992607117, 0.954452991485596], [0.366169989109039, 0.398822009563446], [0.393207013607025, 0.39553701877594], [0.410373002290726, 0.391080021858215], [0.194993004202843, 0.342101991176605], [0.388664990663528, 0.362284004688263], [0.365961998701096, 0.355970978736877], [0.343364000320435, 0.355356991291046], [0.318785011768341, 0.35834002494812], [0.301414996385574, 0.363156020641327], [0.058132998645306, 0.319076001644135], [0.301414996385574, 0.387449026107788], [0.499987989664078, 0.618434011936188], [0.415838003158569, 0.624195992946625], [0.445681989192963, 0.566076993942261], [0.465844005346298, 0.620640993118286], [0.49992299079895, 0.351523995399475], [0.288718998432159, 0.819945991039276], [0.335278987884521, 0.852819979190826], [0.440512001514435, 0.902418971061707], [0.128294005990028, 0.791940987110138], [0.408771991729736, 0.373893976211548], [0.455606997013092, 0.451801002025604], [0.499877005815506, 0.908990025520325], [0.375436991453171, 0.924192011356354], [0.11421000212431, 0.615022003650665], [0.448662012815475, 0.695277988910675], [0.4480200111866, 0.704632043838501], [0.447111994028091, 0.715808033943176], [0.444831997156143, 0.730794012546539], [0.430011987686157, 0.766808986663818], [0.406787008047104, 0.685672998428345], [0.400738000869751, 0.681069016456604], [0.392399996519089, 0.677703022956848], [0.367855995893478, 0.663918972015381], [0.247923001646996, 0.601333022117615], [0.452769994735718, 0.420849978923798], [0.43639200925827, 0.359887003898621], //[+0.02, 0],\n[0.416164010763168, 0.368713974952698], //[+0.007, -0.008],\n[0.413385987281799, 0.692366003990173], [0.228018000721931, 0.683571994304657], [0.468268007040024, 0.352671027183533], [0.411361992359161, 0.804327011108398], [0.499989002943039, 0.469825029373169], [0.479153990745544, 0.442654013633728], [0.499974012374878, 0.439637005329132], [0.432112008333206, 0.493588984012604], [0.499886006116867, 0.866917014122009], [0.49991300702095, 0.821729004383087], [0.456548988819122, 0.819200992584229], [0.344549000263214, 0.745438992977142], [0.37890899181366, 0.574010014533997], [0.374292999505997, 0.780184984207153], [0.319687992334366, 0.570737957954407], [0.357154995203018, 0.604269981384277], [0.295284003019333, 0.621580958366394], [0.447750002145767, 0.862477004528046], [0.410986006259918, 0.508723020553589], [0.31395098567009, 0.775308012962341], [0.354128003120422, 0.812552988529205], [0.324548006057739, 0.703992962837219], [0.189096003770828, 0.646299958229065], [0.279776990413666, 0.71465802192688], [0.1338230073452, 0.682700991630554], [0.336768001317978, 0.644733011722565], [0.429883986711502, 0.466521978378296], [0.455527991056442, 0.548622965812683], [0.437114000320435, 0.558896005153656], [0.467287987470627, 0.529924988746643], [0.414712011814117, 0.335219979286194], //[+0.015, -0.01],\n[0.37704598903656, 0.322777986526489], //[0, -0.01],\n[0.344107985496521, 0.320150971412659], //[+0.006, -0.013],\n[0.312875986099243, 0.32233202457428], //[-0.02, -0.022],\n[0.283526003360748, 0.333190023899078], //[-0.003, -0.023],\n[0.241245999932289, 0.382785975933075], [0.102986000478268, 0.468762993812561], [0.267612010240555, 0.424560010433197], [0.297879010438919, 0.433175981044769], [0.333433985710144, 0.433878004550934], [0.366427004337311, 0.426115989685059], [0.396012008190155, 0.416696012020111], [0.420121014118195, 0.41022801399231], [0.007561000064015, 0.480777025222778], [0.432949006557465, 0.569517970085144], [0.458638995885849, 0.479089021682739], [0.473466008901596, 0.545744001865387], [0.476087987422943, 0.563830018043518], [0.468472003936768, 0.555056989192963], [0.433990985155106, 0.582361996173859], [0.483518004417419, 0.562983989715576], [0.482482999563217, 0.57784903049469], [0.42645001411438, 0.389798998832703], [0.438998997211456, 0.39649498462677], [0.450067013502121, 0.400434017181396], [0.289712011814117, 0.368252992630005], [0.276670008897781, 0.363372981548309], //[+0.001, -0.013],\n[0.517862021923065, 0.471948027610779], [0.710287988185883, 0.380764007568359], [0.526226997375488, 0.573909997940063], [0.895093023777008, 0.254140973091125], [0.634069979190826, 0.409575998783112], [0.661242008209229, 0.41302502155304], [0.688880026340485, 0.409460008144379], [0.725341975688934, 0.389131009578705], [0.606630027294159, 0.40370500087738], [0.654766023159027, 0.344011008739471], [0.629905998706818, 0.346076011657715], [0.680678009986877, 0.347265005111694], [0.702096998691559, 0.353591024875641], [0.75221198797226, 0.410804986953735], [0.602918028831482, 0.842862963676453], [0.719901978969574, 0.375599980354309], [0.893692970275879, 0.399959981441498], [0.790081977844238, 0.391354024410248], [0.643998026847839, 0.534487962722778], [0.528249025344849, 0.65040397644043], [0.525849997997284, 0.680191040039062], [0.560214996337891, 0.657229006290436], [0.585384011268616, 0.66654098033905], [0.549625992774963, 0.680860996246338], [0.57122802734375, 0.682691991329193], [0.624852001667023, 0.72809898853302], [0.513050019741058, 0.547281980514526], [0.51509702205658, 0.527251958847046], [0.742246985435486, 0.314507007598877], [0.598631024360657, 0.454979002475739], [0.570338010787964, 0.548575043678284], [0.578631997108459, 0.533622980117798], [0.723087012767792, 0.532054007053375], [0.516445994377136, 0.499638974666595], [0.662801027297974, 0.282917976379395], [0.70362401008606, 0.293271005153656], [0.830704987049103, 0.193813979625702], [0.552385985851288, 0.302568018436432], [0.607609987258911, 0.353887975215912], [0.645429015159607, 0.696707010269165], [0.932694971561432, 0.730105042457581], [0.557260990142822, 0.572826027870178], [0.542901992797852, 0.584792017936707], [0.6180260181427, 0.694710969924927], [0.607590973377228, 0.694203019142151], [0.722943007946014, 0.271963000297546], [0.577413976192474, 0.563166975975037], [0.614082992076874, 0.281386971473694], [0.616907000541687, 0.255886018276215], [0.668509006500244, 0.119913995265961], [0.770092010498047, 0.232020974159241], [0.635536015033722, 0.189248979091644], [0.77039098739624, 0.299556016921997], [0.826722025871277, 0.278755009174347], [0.527121007442474, 0.666198015213013], [0.553171992301941, 0.668527007102966], [0.577238023281097, 0.673889994621277], [0.554691970348358, 0.580065965652466], [0.611896991729736, 0.693961024284363], [0.59696102142334, 0.706539988517761], [0.596370995044708, 0.693953037261963], [0.539958000183105, 0.557139039039612], [0.568841993808746, 0.692366003990173], [0.547818005084991, 0.692366003990173], [0.52461302280426, 0.692366003990173], [0.534089982509613, 0.779141008853912], [0.527670979499817, 0.736225962638855], [0.526912987232208, 0.717857003211975], [0.526877999305725, 0.704625964164734], [0.526966989040375, 0.695277988910675], [0.572058022022247, 0.695277988910675], [0.573521018028259, 0.703539967536926], [0.57683801651001, 0.711845993995667], [0.581691026687622, 0.720062971115112], [0.609944999217987, 0.639909982681274], [0.986046016216278, 0.560034036636353], [0.5867999792099, 0.69539999961853], [0.590372025966644, 0.701822996139526], [0.531915009021759, 0.601536989212036], [0.577268004417419, 0.585934996604919], [0.536915004253387, 0.593786001205444], [0.627542972564697, 0.473352015018463], [0.665585994720459, 0.495950996875763], [0.588353991508484, 0.546862006187439], [0.757824003696442, 0.14767599105835], [0.709249973297119, 0.201507985591888], [0.672684013843536, 0.256581008434296], [0.600408971309662, 0.74900496006012], [0.55826598405838, 0.261672019958496], [0.570303976535797, 0.187870979309082], [0.588165998458862, 0.109044015407562], [0.711045026779175, 0.398952007293701], [0.781069993972778, 0.435405015945435], [0.587247014045715, 0.398931980133057], [0.742869973182678, 0.355445981025696], [0.572156012058258, 0.437651991844177], [0.55186802148819, 0.536570012569427], [0.821442008018494, 0.457556009292603], [0.752701997756958, 0.457181990146637], [0.71375697851181, 0.467626988887787], [0.66711300611496, 0.460672974586487], [0.631101012229919, 0.447153985500336], [0.6008620262146, 0.432473003864288], [0.523481011390686, 0.405627012252808], [0.810747981071472, 0.523926019668579], [0.771045982837677, 0.348959028720856], [0.509127020835876, 0.562718033790588], [0.595292985439301, 0.485023975372314], [0.980530977249146, 0.401564002037048], [0.573499977588654, 0.420000016689301], [0.602994978427887, 0.548687994480133], [0.733529984951019, 0.376977026462555], [0.560611009597778, 0.519016981124878], [0.967685997486115, 0.644356966018677], [0.580985009670258, 0.387160003185272], [0.537728011608124, 0.505385041236877], [0.760966002941132, 0.779752969741821], [0.801778972148895, 0.831938028335571], [0.892440974712372, 0.54076099395752], [0.816350996494293, 0.740260004997253], [0.865594983100891, 0.333687007427216], [0.614073991775513, 0.883246004581451], [0.508952975273132, 0.579437971115112], [0.617941975593567, 0.508316040039062], [0.825608015060425, 0.397674977779388], [0.681214988231659, 0.39623498916626], [0.656635999679565, 0.400596976280212], [0.603900015354156, 0.710216999053955], [0.81208598613739, 0.588539004325867], [0.56801301240921, 0.944564998149872], [0.681007981300354, 0.898285031318665], [0.733752012252808, 0.869701027870178], [0.633830010890961, 0.398822009563446], [0.606792986392975, 0.39553701877594], [0.589659988880157, 0.391062021255493], [0.805015981197357, 0.342108011245728], [0.611334979534149, 0.362284004688263], [0.634037971496582, 0.355970978736877], [0.656635999679565, 0.355356991291046], [0.681214988231659, 0.35834002494812], [0.698584973812103, 0.363156020641327], [0.941866993904114, 0.319076001644135], [0.698584973812103, 0.387449026107788], [0.584177017211914, 0.624107003211975], [0.554318010807037, 0.566076993942261], [0.534153997898102, 0.62064003944397], [0.711217999458313, 0.819975018501282], [0.664629995822906, 0.852871000766754], [0.559099972248077, 0.902631998062134], [0.871706008911133, 0.791940987110138], [0.591234028339386, 0.373893976211548], [0.544341027736664, 0.451583981513977], [0.624562978744507, 0.924192011356354], [0.88577002286911, 0.615028977394104], [0.551338016986847, 0.695277988910675], [0.551980018615723, 0.704632043838501], [0.552887976169586, 0.715808033943176], [0.555167973041534, 0.730794012546539], [0.569944024085999, 0.767035007476807], [0.593203008174896, 0.685675978660583], [0.599261999130249, 0.681069016456604], [0.607599973678589, 0.677703022956848], [0.631937980651855, 0.663500010967255], [0.752032995223999, 0.601315021514893], [0.547226011753082, 0.420395016670227], [0.563543975353241, 0.359827995300293], [0.583841025829315, 0.368713974952698], [0.586614012718201, 0.692366003990173], [0.771915018558502, 0.683578014373779], [0.531597018241882, 0.352482974529266], [0.588370978832245, 0.804440975189209], [0.52079701423645, 0.442565023899078], [0.567984998226166, 0.493479013442993], [0.543282985687256, 0.819254994392395], [0.655317008495331, 0.745514988899231], [0.621008992195129, 0.574018001556396], [0.625559985637665, 0.78031200170517], [0.680198013782501, 0.570719003677368], [0.64276397228241, 0.604337990283966], [0.704662978649139, 0.621529996395111], [0.552012026309967, 0.862591981887817], [0.589071989059448, 0.508637011051178], [0.685944974422455, 0.775357007980347], [0.645735025405884, 0.812640011310577], [0.675342977046967, 0.703978002071381], [0.810858011245728, 0.646304965019226], [0.72012197971344, 0.714666962623596], [0.866151988506317, 0.682704985141754], [0.663187026977539, 0.644596993923187], [0.570082008838654, 0.466325998306274], [0.544561982154846, 0.548375964164734], [0.562758982181549, 0.558784961700439], [0.531987011432648, 0.530140042304993], [0.585271000862122, 0.335177004337311], [0.622952997684479, 0.32277899980545], [0.655896008014679, 0.320163011550903], [0.687132000923157, 0.322345972061157], [0.716481983661652, 0.333200991153717], [0.758756995201111, 0.382786989212036], [0.897013008594513, 0.468769013881683], [0.732392013072968, 0.424547016620636], [0.70211398601532, 0.433162987232208], [0.66652500629425, 0.433866024017334], [0.633504986763, 0.426087975502014], [0.603875994682312, 0.416586995124817], [0.579657971858978, 0.409945011138916], [0.992439985275269, 0.480777025222778], [0.567192018032074, 0.569419980049133], [0.54136598110199, 0.478899002075195], [0.526564002037048, 0.546118021011353], [0.523913025856018, 0.563830018043518], [0.531529009342194, 0.555056989192963], [0.566035985946655, 0.582329034805298], [0.51631098985672, 0.563053965568542], [0.5174720287323, 0.577877044677734], [0.573594987392426, 0.389806985855103], [0.560697972774506, 0.395331978797913], [0.549755990505219, 0.399751007556915], [0.710287988185883, 0.368252992630005], [0.723330020904541, 0.363372981548309]]; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar FACE_MESH_UV_Eyelid = [[0.499976992607117, 0.652534008026123], [0.500025987625122, 0.547487020492554], [0.499974012374878, 0.602371990680695], [0.482113003730774, 0.471979022026062], [0.500150978565216, 0.527155995368958], [0.499909996986389, 0.498252987861633], [0.499523013830185, 0.40106201171875], [0.289712011814117, 0.380764007568359], [0.499954998493195, 0.312398016452789], [0.499987006187439, 0.269918978214264], [0.500023007392883, 0.107050001621246], [0.500023007392883, 0.666234016418457], [0.5000159740448, 0.679224014282227], [0.500023007392883, 0.692348003387451], [0.499976992607117, 0.695277988910675], [0.499976992607117, 0.70593398809433], [0.499976992607117, 0.719385027885437], [0.499976992607117, 0.737019002437592], [0.499967992305756, 0.781370997428894], [0.499816000461578, 0.562981009483337], [0.473773002624512, 0.573909997940063], [0.104906998574734, 0.254140973091125], [0.365929991006851, 0.409575998783112], [0.338757991790771, 0.41302502155304], [0.311120003461838, 0.409460008144379], [0.269657994508743, 0.392131009578705], [0.393361985683441, 0.403706014156342], [0.346234006643295, 0.320011008739471], [0.378094001293182, 0.325076011657715], [0.319321990013123, 0.325265005111694], [0.285903001308441, 0.338591024875641], [0.24779200553894, 0.410809993743896], [0.396889001131058, 0.842755019664764], [0.280097991228104, 0.375599980354309], [0.106310002505779, 0.399955987930298], [0.2099249958992, 0.391353011131287], [0.355807989835739, 0.534406006336212], [0.471751004457474, 0.65040397644043], [0.474155008792877, 0.680191993713379], [0.439785003662109, 0.657229006290436], [0.414617002010345, 0.66654098033905], [0.450374007225037, 0.680860996246338], [0.428770989179611, 0.682690978050232], [0.374971002340317, 0.727805018424988], [0.486716985702515, 0.547628998756409], [0.485300987958908, 0.527395009994507], [0.247764995098114, 0.284490020275116], [0.401223003864288, 0.455172002315521], [0.429818987846375, 0.548614978790283], [0.421351999044418, 0.533740997314453], [0.276895999908447, 0.532056987285614], [0.483370006084442, 0.499586999416351], [0.32521199631691, 0.260882988452911], [0.240391993761063, 0.289242990970612], [0.169294998049736, 0.193813979625702], [0.457580009698868, 0.292609980106354], [0.405390012741089, 0.338887975215912], [0.354490011930466, 0.696784019470215], [0.067304998636246, 0.730105042457581], [0.442739009857178, 0.572826027870178], [0.457098007202148, 0.584792017936707], [0.381974011659622, 0.694710969924927], [0.392388999462128, 0.694203019142151], [0.277076005935669, 0.271932005882263], [0.422551989555359, 0.563233017921448], [0.375919004678726, 0.271364023685455], [0.383103013038635, 0.255840003490448], [0.331431001424789, 0.119714021682739], [0.229923993349075, 0.232002973556519], [0.364500999450684, 0.189113974571228], [0.229622006416321, 0.299540996551514], [0.173287004232407, 0.278747975826263], [0.472878992557526, 0.666198015213013], [0.446828007698059, 0.668527007102966], [0.422762006521225, 0.673889994621277], [0.445307999849319, 0.580065965652466], [0.388103008270264, 0.693961024284363], [0.403039008378983, 0.706539988517761], [0.403629004955292, 0.693953037261963], [0.460041999816895, 0.557139039039612], [0.431158006191254, 0.692366003990173], [0.452181994915009, 0.692366003990173], [0.475387006998062, 0.692366003990173], [0.465828001499176, 0.779190003871918], [0.472328990697861, 0.736225962638855], [0.473087012767792, 0.717857003211975], [0.473122000694275, 0.704625964164734], [0.473033010959625, 0.695277988910675], [0.427942007780075, 0.695277988910675], [0.426479011774063, 0.703539967536926], [0.423162013292313, 0.711845993995667], [0.4183090031147, 0.720062971115112], [0.390094995498657, 0.639572978019714], [0.013953999616206, 0.560034036636353], [0.499913990497589, 0.58014702796936], [0.413199990987778, 0.69539999961853], [0.409626007080078, 0.701822996139526], [0.468080013990402, 0.601534962654114], [0.422728985548019, 0.585985004901886], [0.463079988956451, 0.593783974647522], [0.37211999297142, 0.47341400384903], [0.334562003612518, 0.496073007583618], [0.411671012639999, 0.546965003013611], [0.242175996303558, 0.14767599105835], [0.290776997804642, 0.201445996761322], [0.327338010072708, 0.256527006626129], [0.399509996175766, 0.748921036720276], [0.441727995872498, 0.261676013469696], [0.429764986038208, 0.187834024429321], [0.412198007106781, 0.108901023864746], [0.280955003023148, 0.400952007293701], [0.218936994671822, 0.435410976409912], [0.41278201341629, 0.398970007896423], [0.257135003805161, 0.342440020561218], [0.427684992551804, 0.437960982322693], [0.448339998722076, 0.536936044692993], [0.178560003638268, 0.45755398273468], [0.247308000922203, 0.457193970680237], [0.286267012357712, 0.467674970626831], [0.332827985286713, 0.460712015628815], [0.368755996227264, 0.447206974029541], [0.398963987827301, 0.432654976844788], [0.476410001516342, 0.405806005001068], [0.189241006970406, 0.523923993110657], [0.228962004184723, 0.338950982093811], [0.490725994110107, 0.562400996685028], [0.404670000076294, 0.485132992267609], [0.019469000399113, 0.401564002037048], [0.426243007183075, 0.420431017875671], [0.396993011236191, 0.548797011375427], [0.266469985246658, 0.373977026462555], [0.439121007919312, 0.51895797252655], [0.032313998788595, 0.644356966018677], [0.419054001569748, 0.387154996395111], [0.462783008813858, 0.505746960639954], [0.238978996872902, 0.779744982719421], [0.198220998048782, 0.831938028335571], [0.107550002634525, 0.540755033493042], [0.183610007166862, 0.740257024765015], [0.134409993886948, 0.333683013916016], [0.385764002799988, 0.883153975009918], [0.490967005491257, 0.579378008842468], [0.382384985685349, 0.508572995662689], [0.174399003386497, 0.397670984268188], [0.318785011768341, 0.39623498916626], [0.343364000320435, 0.400596976280212], [0.396100014448166, 0.710216999053955], [0.187885001301765, 0.588537991046906], [0.430987000465393, 0.944064974784851], [0.318993002176285, 0.898285031318665], [0.266247987747192, 0.869701027870178], [0.500023007392883, 0.190576016902924], [0.499976992607117, 0.954452991485596], [0.366169989109039, 0.398822009563446], [0.393207013607025, 0.39553701877594], [0.410373002290726, 0.391080021858215], [0.194993004202843, 0.342101991176605], [0.388664990663528, 0.362284004688263], [0.365961998701096, 0.355970978736877], [0.343364000320435, 0.355356991291046], [0.318785011768341, 0.35834002494812], [0.301414996385574, 0.363156020641327], [0.058132998645306, 0.319076001644135], [0.301414996385574, 0.387449026107788], [0.499987989664078, 0.618434011936188], [0.415838003158569, 0.624195992946625], [0.445681989192963, 0.566076993942261], [0.465844005346298, 0.620640993118286], [0.49992299079895, 0.351523995399475], [0.288718998432159, 0.819945991039276], [0.335278987884521, 0.852819979190826], [0.440512001514435, 0.902418971061707], [0.128294005990028, 0.791940987110138], [0.408771991729736, 0.373893976211548], [0.455606997013092, 0.451801002025604], [0.499877005815506, 0.908990025520325], [0.375436991453171, 0.924192011356354], [0.11421000212431, 0.615022003650665], [0.448662012815475, 0.695277988910675], [0.4480200111866, 0.704632043838501], [0.447111994028091, 0.715808033943176], [0.444831997156143, 0.730794012546539], [0.430011987686157, 0.766808986663818], [0.406787008047104, 0.685672998428345], [0.400738000869751, 0.681069016456604], [0.392399996519089, 0.677703022956848], [0.367855995893478, 0.663918972015381], [0.247923001646996, 0.601333022117615], [0.452769994735718, 0.420849978923798], [0.45639200925827, 0.359887003898621], [0.423164010763168, 0.360713974952698], [0.413385987281799, 0.692366003990173], [0.228018000721931, 0.683571994304657], [0.468268007040024, 0.352671027183533], [0.411361992359161, 0.804327011108398], [0.499989002943039, 0.469825029373169], [0.479153990745544, 0.442654013633728], [0.499974012374878, 0.439637005329132], [0.432112008333206, 0.493588984012604], [0.499886006116867, 0.866917014122009], [0.49991300702095, 0.821729004383087], [0.456548988819122, 0.819200992584229], [0.344549000263214, 0.745438992977142], [0.37890899181366, 0.574010014533997], [0.374292999505997, 0.780184984207153], [0.319687992334366, 0.570737957954407], [0.357154995203018, 0.604269981384277], [0.295284003019333, 0.621580958366394], [0.447750002145767, 0.862477004528046], [0.410986006259918, 0.508723020553589], [0.31395098567009, 0.775308012962341], [0.354128003120422, 0.812552988529205], [0.324548006057739, 0.703992962837219], [0.189096003770828, 0.646299958229065], [0.279776990413666, 0.71465802192688], [0.1338230073452, 0.682700991630554], [0.336768001317978, 0.644733011722565], [0.429883986711502, 0.466521978378296], [0.455527991056442, 0.548622965812683], [0.437114000320435, 0.558896005153656], [0.467287987470627, 0.529924988746643], [0.429712011814117, 0.325219979286194], [0.37704598903656, 0.312777986526489], [0.350107985496521, 0.307150971412659], [0.292875986099243, 0.30033202457428], [0.280526003360748, 0.310190023899078], [0.241245999932289, 0.385785975933075], [0.102986000478268, 0.468762993812561], [0.267612010240555, 0.424560010433197], [0.297879010438919, 0.433175981044769], [0.333433985710144, 0.433878004550934], [0.366427004337311, 0.426115989685059], [0.396012008190155, 0.416696012020111], [0.420121014118195, 0.41022801399231], [0.007561000064015, 0.480777025222778], [0.432949006557465, 0.569517970085144], [0.458638995885849, 0.479089021682739], [0.473466008901596, 0.545744001865387], [0.476087987422943, 0.563830018043518], [0.468472003936768, 0.555056989192963], [0.433990985155106, 0.582361996173859], [0.483518004417419, 0.562983989715576], [0.482482999563217, 0.57784903049469], [0.43045001411438, 0.389798998832703], [0.438998997211456, 0.39649498462677], [0.450067013502121, 0.400434017181396], [0.289712011814117, 0.368252992630005], [0.275670008897781, 0.350372981548309], [0.517862021923065, 0.471948027610779], [0.710287988185883, 0.380764007568359], [0.526226997375488, 0.573909997940063], [0.895093023777008, 0.254140973091125], [0.634069979190826, 0.409575998783112], [0.661242008209229, 0.41302502155304], [0.688880026340485, 0.409460008144379], [0.730341975688934, 0.392131009578705], //[-0.005, +0.003],\n[0.606630027294159, 0.40370500087738], [0.653766023159027, 0.320011008739471], //[-0.001, -0.024],\n[0.621905998706818, 0.325076011657715], //[-0.008, -0.021],\n[0.680678009986877, 0.325265005111694], [0.714096998691559, 0.338591024875641], //[+0.012, -0.015],\n[0.75221198797226, 0.410804986953735], [0.602918028831482, 0.842862963676453], [0.719901978969574, 0.375599980354309], [0.893692970275879, 0.399959981441498], [0.790081977844238, 0.391354024410248], [0.643998026847839, 0.534487962722778], [0.528249025344849, 0.65040397644043], [0.525849997997284, 0.680191040039062], [0.560214996337891, 0.657229006290436], [0.585384011268616, 0.66654098033905], [0.549625992774963, 0.680860996246338], [0.57122802734375, 0.682691991329193], [0.624852001667023, 0.72809898853302], [0.513050019741058, 0.547281980514526], [0.51509702205658, 0.527251958847046], [0.752246985435486, 0.284507007598877], //[-0.01, -0.03],\n[0.598631024360657, 0.454979002475739], [0.570338010787964, 0.548575043678284], [0.578631997108459, 0.533622980117798], [0.723087012767792, 0.532054007053375], [0.516445994377136, 0.499638974666595], [0.674801027297974, 0.260917976379395], //[-0.012, -0.022],\n[0.75962401008606, 0.289271005153656], //[-0.056, -0.004],\n[0.830704987049103, 0.193813979625702], [0.542385985851288, 0.292568018436432], //[+0.01, -0.02],\n[0.59409987258911, 0.338887975215912], [0.645429015159607, 0.696707010269165], [0.932694971561432, 0.730105042457581], [0.557260990142822, 0.572826027870178], [0.542901992797852, 0.584792017936707], [0.6180260181427, 0.694710969924927], [0.607590973377228, 0.694203019142151], [0.722943007946014, 0.271963000297546], [0.577413976192474, 0.563166975975037], [0.624082992076874, 0.271386971473694], //[-0.01, -0.01],\n[0.616907000541687, 0.255886018276215], [0.668509006500244, 0.119913995265961], [0.770092010498047, 0.232020974159241], [0.635536015033722, 0.189248979091644], [0.77039098739624, 0.299556016921997], [0.826722025871277, 0.278755009174347], [0.527121007442474, 0.666198015213013], [0.553171992301941, 0.668527007102966], [0.577238023281097, 0.673889994621277], [0.554691970348358, 0.580065965652466], [0.611896991729736, 0.693961024284363], [0.59696102142334, 0.706539988517761], [0.596370995044708, 0.693953037261963], [0.539958000183105, 0.557139039039612], [0.568841993808746, 0.692366003990173], [0.547818005084991, 0.692366003990173], [0.52461302280426, 0.692366003990173], [0.534089982509613, 0.779141008853912], [0.527670979499817, 0.736225962638855], [0.526912987232208, 0.717857003211975], [0.526877999305725, 0.704625964164734], [0.526966989040375, 0.695277988910675], [0.572058022022247, 0.695277988910675], [0.573521018028259, 0.703539967536926], [0.57683801651001, 0.711845993995667], [0.581691026687622, 0.720062971115112], [0.609944999217987, 0.639909982681274], [0.986046016216278, 0.560034036636353], [0.5867999792099, 0.69539999961853], [0.590372025966644, 0.701822996139526], [0.531915009021759, 0.601536989212036], [0.577268004417419, 0.585934996604919], [0.536915004253387, 0.593786001205444], [0.627542972564697, 0.473352015018463], [0.665585994720459, 0.495950996875763], [0.588353991508484, 0.546862006187439], [0.757824003696442, 0.14767599105835], [0.709249973297119, 0.201507985591888], [0.672684013843536, 0.256581008434296], [0.600408971309662, 0.74900496006012], [0.55826598405838, 0.261672019958496], [0.570303976535797, 0.187870979309082], [0.588165998458862, 0.109044015407562], [0.719045026779175, 0.400952007293701], //[-0.008, +0.002],\n[0.781069993972778, 0.435405015945435], [0.587247014045715, 0.398931980133057], [0.742869973182678, 0.342445981025696], //[0, -0.013],\n[0.572156012058258, 0.437651991844177], [0.55186802148819, 0.536570012569427], [0.821442008018494, 0.457556009292603], [0.752701997756958, 0.457181990146637], [0.71375697851181, 0.467626988887787], [0.66711300611496, 0.460672974586487], [0.631101012229919, 0.447153985500336], [0.6008620262146, 0.432473003864288], [0.523481011390686, 0.405627012252808], [0.810747981071472, 0.523926019668579], [0.771045982837677, 0.338959028720856], //[0, -0.01],\n[0.509127020835876, 0.562718033790588], [0.595292985439301, 0.485023975372314], [0.980530977249146, 0.401564002037048], [0.573499977588654, 0.420000016689301], [0.602994978427887, 0.548687994480133], [0.733529984951019, 0.373977026462555], //[0, -0.003]\n[0.560611009597778, 0.519016981124878], [0.967685997486115, 0.644356966018677], [0.580985009670258, 0.387160003185272], [0.537728011608124, 0.505385041236877], [0.760966002941132, 0.779752969741821], [0.801778972148895, 0.831938028335571], [0.892440974712372, 0.54076099395752], [0.816350996494293, 0.740260004997253], [0.865594983100891, 0.333687007427216], [0.614073991775513, 0.883246004581451], [0.508952975273132, 0.579437971115112], [0.617941975593567, 0.508316040039062], [0.825608015060425, 0.397674977779388], [0.681214988231659, 0.39623498916626], [0.656635999679565, 0.400596976280212], [0.603900015354156, 0.710216999053955], [0.81208598613739, 0.588539004325867], [0.56801301240921, 0.944564998149872], [0.681007981300354, 0.898285031318665], [0.733752012252808, 0.869701027870178], [0.633830010890961, 0.398822009563446], [0.606792986392975, 0.39553701877594], [0.589659988880157, 0.391062021255493], [0.805015981197357, 0.342108011245728], [0.611334979534149, 0.362284004688263], [0.634037971496582, 0.355970978736877], [0.656635999679565, 0.355356991291046], [0.681214988231659, 0.35834002494812], [0.698584973812103, 0.363156020641327], [0.941866993904114, 0.319076001644135], [0.698584973812103, 0.387449026107788], [0.584177017211914, 0.624107003211975], [0.554318010807037, 0.566076993942261], [0.534153997898102, 0.62064003944397], [0.711217999458313, 0.819975018501282], [0.664629995822906, 0.852871000766754], [0.559099972248077, 0.902631998062134], [0.871706008911133, 0.791940987110138], [0.591234028339386, 0.373893976211548], [0.544341027736664, 0.451583981513977], [0.624562978744507, 0.924192011356354], [0.88577002286911, 0.615028977394104], [0.551338016986847, 0.695277988910675], [0.551980018615723, 0.704632043838501], [0.552887976169586, 0.715808033943176], [0.555167973041534, 0.730794012546539], [0.569944024085999, 0.767035007476807], [0.593203008174896, 0.685675978660583], [0.599261999130249, 0.681069016456604], [0.607599973678589, 0.677703022956848], [0.631937980651855, 0.663500010967255], [0.752032995223999, 0.601315021514893], [0.547226011753082, 0.420395016670227], [0.543543975353241, 0.359827995300293], //[+0.02, 0],\n[0.576841025829315, 0.360713974952698], //[+0.007, -0.008],\n[0.586614012718201, 0.692366003990173], [0.771915018558502, 0.683578014373779], [0.531597018241882, 0.352482974529266], [0.588370978832245, 0.804440975189209], [0.52079701423645, 0.442565023899078], [0.567984998226166, 0.493479013442993], [0.543282985687256, 0.819254994392395], [0.655317008495331, 0.745514988899231], [0.621008992195129, 0.574018001556396], [0.625559985637665, 0.78031200170517], [0.680198013782501, 0.570719003677368], [0.64276397228241, 0.604337990283966], [0.704662978649139, 0.621529996395111], [0.552012026309967, 0.862591981887817], [0.589071989059448, 0.508637011051178], [0.685944974422455, 0.775357007980347], [0.645735025405884, 0.812640011310577], [0.675342977046967, 0.703978002071381], [0.810858011245728, 0.646304965019226], [0.72012197971344, 0.714666962623596], [0.866151988506317, 0.682704985141754], [0.663187026977539, 0.644596993923187], [0.570082008838654, 0.466325998306274], [0.544561982154846, 0.548375964164734], [0.562758982181549, 0.558784961700439], [0.531987011432648, 0.530140042304993], [0.570271000862122, 0.325177004337311], //[+0.015, -0.01],\n[0.622952997684479, 0.31277899980545], //[0, -0.01],\n[0.649896008014679, 0.308163011550903], //[+0.006, -0.013],\n[0.707132000923157, 0.300345972061157], //[-0.02, -0.022],\n[0.719481983661652, 0.310200991153717], //[-0.003, -0.023],\n[0.758756995201111, 0.382786989212036], [0.897013008594513, 0.468769013881683], [0.732392013072968, 0.424547016620636], [0.70211398601532, 0.433162987232208], [0.66652500629425, 0.433866024017334], [0.633504986763, 0.426087975502014], [0.603875994682312, 0.416586995124817], [0.579657971858978, 0.409945011138916], [0.992439985275269, 0.480777025222778], [0.567192018032074, 0.569419980049133], [0.54136598110199, 0.478899002075195], [0.526564002037048, 0.546118021011353], [0.523913025856018, 0.563830018043518], [0.531529009342194, 0.555056989192963], [0.566035985946655, 0.582329034805298], [0.51631098985672, 0.563053965568542], [0.5174720287323, 0.577877044677734], [0.569594987392426, 0.389806985855103], [0.560697972774506, 0.395331978797913], [0.549755990505219, 0.399751007556915], [0.710287988185883, 0.368252992630005], [0.722330020904541, 0.350372981548309] //[+0.001, -0.013],\n]; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar FACE_MESH_UV_EyeLash = (/* unused pure expression or super */ null && ([[0.499976992607117, 0.652534008026123], [0.500025987625122, 0.547487020492554], [0.499974012374878, 0.602371990680695], [0.482113003730774, 0.471979022026062], [0.500150978565216, 0.527155995368958], [0.499909996986389, 0.498252987861633], [0.499523013830185, 0.40106201171875], [0.289712011814117, 0.380764007568359], [0.499954998493195, 0.312398016452789], [0.499987006187439, 0.269918978214264], [0.500023007392883, 0.107050001621246], [0.500023007392883, 0.666234016418457], [0.5000159740448, 0.679224014282227], [0.500023007392883, 0.692348003387451], [0.499976992607117, 0.695277988910675], [0.499976992607117, 0.70593398809433], [0.499976992607117, 0.719385027885437], [0.499976992607117, 0.737019002437592], [0.499967992305756, 0.781370997428894], [0.499816000461578, 0.562981009483337], [0.473773002624512, 0.573909997940063], [0.104906998574734, 0.254140973091125], [0.365929991006851, 0.409575998783112], [0.338757991790771, 0.41302502155304], [0.311120003461838, 0.409460008144379], [0.269657994508743, 0.392131009578705], [0.393361985683441, 0.403706014156342], [0.343364000320435, 0.355356991291046], //[0.346234006643295, 0.320011008739471],\n[0.365961998701096, 0.355970978736877], //[0.378094001293182, 0.325076011657715],\n[0.318785011768341, 0.35834002494812], //[0.319321990013123, 0.325265005111694],\n[0.301414996385574, 0.363156020641327], //[0.285903001308441, 0.338591024875641],\n[0.24779200553894, 0.410809993743896], [0.396889001131058, 0.842755019664764], [0.280097991228104, 0.375599980354309], [0.106310002505779, 0.399955987930298], [0.2099249958992, 0.391353011131287], [0.355807989835739, 0.534406006336212], [0.471751004457474, 0.65040397644043], [0.474155008792877, 0.680191993713379], [0.439785003662109, 0.657229006290436], [0.414617002010345, 0.66654098033905], [0.450374007225037, 0.680860996246338], [0.428770989179611, 0.682690978050232], [0.374971002340317, 0.727805018424988], [0.486716985702515, 0.547628998756409], [0.485300987958908, 0.527395009994507], [0.247764995098114, 0.284490020275116], [0.401223003864288, 0.455172002315521], [0.429818987846375, 0.548614978790283], [0.421351999044418, 0.533740997314453], [0.276895999908447, 0.532056987285614], [0.483370006084442, 0.499586999416351], [0.32521199631691, 0.260882988452911], [0.240391993761063, 0.289242990970612], [0.169294998049736, 0.193813979625702], [0.457580009698868, 0.292609980106354], [0.388664990663528, 0.362284004688263], //[0.405390012741089, 0.338887975215912],\n[0.354490011930466, 0.696784019470215], [0.067304998636246, 0.730105042457581], [0.442739009857178, 0.572826027870178], [0.457098007202148, 0.584792017936707], [0.381974011659622, 0.694710969924927], [0.392388999462128, 0.694203019142151], [0.277076005935669, 0.271932005882263], [0.422551989555359, 0.563233017921448], [0.375919004678726, 0.271364023685455], [0.383103013038635, 0.255840003490448], [0.331431001424789, 0.119714021682739], [0.229923993349075, 0.232002973556519], [0.364500999450684, 0.189113974571228], [0.229622006416321, 0.299540996551514], [0.173287004232407, 0.278747975826263], [0.472878992557526, 0.666198015213013], [0.446828007698059, 0.668527007102966], [0.422762006521225, 0.673889994621277], [0.445307999849319, 0.580065965652466], [0.388103008270264, 0.693961024284363], [0.403039008378983, 0.706539988517761], [0.403629004955292, 0.693953037261963], [0.460041999816895, 0.557139039039612], [0.431158006191254, 0.692366003990173], [0.452181994915009, 0.692366003990173], [0.475387006998062, 0.692366003990173], [0.465828001499176, 0.779190003871918], [0.472328990697861, 0.736225962638855], [0.473087012767792, 0.717857003211975], [0.473122000694275, 0.704625964164734], [0.473033010959625, 0.695277988910675], [0.427942007780075, 0.695277988910675], [0.426479011774063, 0.703539967536926], [0.423162013292313, 0.711845993995667], [0.4183090031147, 0.720062971115112], [0.390094995498657, 0.639572978019714], [0.013953999616206, 0.560034036636353], [0.499913990497589, 0.58014702796936], [0.413199990987778, 0.69539999961853], [0.409626007080078, 0.701822996139526], [0.468080013990402, 0.601534962654114], [0.422728985548019, 0.585985004901886], [0.463079988956451, 0.593783974647522], [0.37211999297142, 0.47341400384903], [0.334562003612518, 0.496073007583618], [0.411671012639999, 0.546965003013611], [0.242175996303558, 0.14767599105835], [0.290776997804642, 0.201445996761322], [0.327338010072708, 0.256527006626129], [0.399509996175766, 0.748921036720276], [0.441727995872498, 0.261676013469696], [0.429764986038208, 0.187834024429321], [0.412198007106781, 0.108901023864746], [0.280955003023148, 0.400952007293701], [0.218936994671822, 0.435410976409912], [0.41278201341629, 0.398970007896423], [0.289712011814117, 0.368252992630005], // [0.257135003805161, 0.342440020561218],\n[0.427684992551804, 0.437960982322693], [0.448339998722076, 0.536936044692993], [0.178560003638268, 0.45755398273468], [0.247308000922203, 0.457193970680237], [0.286267012357712, 0.467674970626831], [0.332827985286713, 0.460712015628815], [0.368755996227264, 0.447206974029541], [0.398963987827301, 0.432654976844788], [0.476410001516342, 0.405806005001068], [0.189241006970406, 0.523923993110657], [0.228962004184723, 0.338950982093811], [0.490725994110107, 0.562400996685028], [0.404670000076294, 0.485132992267609], [0.019469000399113, 0.401564002037048], [0.426243007183075, 0.420431017875671], [0.396993011236191, 0.548797011375427], [0.280097991228104, 0.375599980354309], //[0.266469985246658, 0.373977026462555],\n[0.439121007919312, 0.51895797252655], [0.032313998788595, 0.644356966018677], [0.419054001569748, 0.387154996395111], [0.462783008813858, 0.505746960639954], [0.238978996872902, 0.779744982719421], [0.198220998048782, 0.831938028335571], [0.107550002634525, 0.540755033493042], [0.183610007166862, 0.740257024765015], [0.134409993886948, 0.333683013916016], [0.385764002799988, 0.883153975009918], [0.490967005491257, 0.579378008842468], [0.382384985685349, 0.508572995662689], [0.174399003386497, 0.397670984268188], [0.318785011768341, 0.39623498916626], [0.343364000320435, 0.400596976280212], [0.396100014448166, 0.710216999053955], [0.187885001301765, 0.588537991046906], [0.430987000465393, 0.944064974784851], [0.318993002176285, 0.898285031318665], [0.266247987747192, 0.869701027870178], [0.500023007392883, 0.190576016902924], [0.499976992607117, 0.954452991485596], [0.366169989109039, 0.398822009563446], [0.393207013607025, 0.39553701877594], [0.410373002290726, 0.391080021858215], [0.194993004202843, 0.342101991176605], [0.388664990663528, 0.362284004688263], [0.365961998701096, 0.355970978736877], [0.343364000320435, 0.355356991291046], [0.318785011768341, 0.35834002494812], [0.301414996385574, 0.363156020641327], [0.058132998645306, 0.319076001644135], [0.301414996385574, 0.387449026107788], [0.499987989664078, 0.618434011936188], [0.415838003158569, 0.624195992946625], [0.445681989192963, 0.566076993942261], [0.465844005346298, 0.620640993118286], [0.49992299079895, 0.351523995399475], [0.288718998432159, 0.819945991039276], [0.335278987884521, 0.852819979190826], [0.440512001514435, 0.902418971061707], [0.128294005990028, 0.791940987110138], [0.408771991729736, 0.373893976211548], [0.455606997013092, 0.451801002025604], [0.499877005815506, 0.908990025520325], [0.375436991453171, 0.924192011356354], [0.11421000212431, 0.615022003650665], [0.448662012815475, 0.695277988910675], [0.4480200111866, 0.704632043838501], [0.447111994028091, 0.715808033943176], [0.444831997156143, 0.730794012546539], [0.430011987686157, 0.766808986663818], [0.406787008047104, 0.685672998428345], [0.400738000869751, 0.681069016456604], [0.392399996519089, 0.677703022956848], [0.367855995893478, 0.663918972015381], [0.247923001646996, 0.601333022117615], [0.452769994735718, 0.420849978923798], [0.408771991729736, 0.373893976211548], //[0.45639200925827, 0.359887003898621],\n[0.408771991729736, 0.373893976211548], //[0.423164010763168, 0.360713974952698],\n[0.413385987281799, 0.692366003990173], [0.228018000721931, 0.683571994304657], [0.468268007040024, 0.352671027183533], [0.411361992359161, 0.804327011108398], [0.499989002943039, 0.469825029373169], [0.479153990745544, 0.442654013633728], [0.499974012374878, 0.439637005329132], [0.432112008333206, 0.493588984012604], [0.499886006116867, 0.866917014122009], [0.49991300702095, 0.821729004383087], [0.456548988819122, 0.819200992584229], [0.344549000263214, 0.745438992977142], [0.37890899181366, 0.574010014533997], [0.374292999505997, 0.780184984207153], [0.319687992334366, 0.570737957954407], [0.357154995203018, 0.604269981384277], [0.295284003019333, 0.621580958366394], [0.447750002145767, 0.862477004528046], [0.410986006259918, 0.508723020553589], [0.31395098567009, 0.775308012962341], [0.354128003120422, 0.812552988529205], [0.324548006057739, 0.703992962837219], [0.189096003770828, 0.646299958229065], [0.279776990413666, 0.71465802192688], [0.1338230073452, 0.682700991630554], [0.336768001317978, 0.644733011722565], [0.429883986711502, 0.466521978378296], [0.455527991056442, 0.548622965812683], [0.437114000320435, 0.558896005153656], [0.467287987470627, 0.529924988746643], [0.388664990663528, 0.362284004688263], // [0.429712011814117, 0.325219979286194],\n[0.365961998701096, 0.355970978736877], // [0.37704598903656, 0.312777986526489],\n[0.343364000320435, 0.355356991291046], // [0.350107985496521, 0.307150971412659],\n[0.318785011768341, 0.35834002494812], // [0.292875986099243, 0.30033202457428],\n[0.301414996385574, 0.363156020641327], // [0.280526003360748, 0.310190023899078],\n[0.280097991228104, 0.375599980354309], //[0.241245999932289, 0.385785975933075],\n[0.102986000478268, 0.468762993812561], [0.267612010240555, 0.424560010433197], [0.297879010438919, 0.433175981044769], [0.333433985710144, 0.433878004550934], [0.366427004337311, 0.426115989685059], [0.396012008190155, 0.416696012020111], [0.420121014118195, 0.41022801399231], [0.007561000064015, 0.480777025222778], [0.432949006557465, 0.569517970085144], [0.458638995885849, 0.479089021682739], [0.473466008901596, 0.545744001865387], [0.476087987422943, 0.563830018043518], [0.468472003936768, 0.555056989192963], [0.433990985155106, 0.582361996173859], [0.483518004417419, 0.562983989715576], [0.482482999563217, 0.57784903049469], [0.419054001569748, 0.387154996395111], //[0.43045001411438, 0.389798998832703],\n[0.419054001569748, 0.387154996395111], //[0.438998997211456, 0.39649498462677],\n[0.450067013502121, 0.400434017181396], [0.289712011814117, 0.368252992630005], [0.289712011814117, 0.368252992630005], //[0.275670008897781, 0.350372981548309],\n[0.517862021923065, 0.471948027610779], [0.710287988185883, 0.380764007568359], [0.526226997375488, 0.573909997940063], [0.895093023777008, 0.254140973091125], [0.634069979190826, 0.409575998783112], [0.661242008209229, 0.41302502155304], [0.688880026340485, 0.409460008144379], [0.730341975688934, 0.392131009578705], [0.606630027294159, 0.40370500087738], [0.653766023159027, 0.320011008739471], [0.621905998706818, 0.325076011657715], [0.680678009986877, 0.325265005111694], [0.714096998691559, 0.338591024875641], [0.75221198797226, 0.410804986953735], [0.602918028831482, 0.842862963676453], [0.719901978969574, 0.375599980354309], [0.893692970275879, 0.399959981441498], [0.790081977844238, 0.391354024410248], [0.643998026847839, 0.534487962722778], [0.528249025344849, 0.65040397644043], [0.525849997997284, 0.680191040039062], [0.560214996337891, 0.657229006290436], [0.585384011268616, 0.66654098033905], [0.549625992774963, 0.680860996246338], [0.57122802734375, 0.682691991329193], [0.624852001667023, 0.72809898853302], [0.513050019741058, 0.547281980514526], [0.51509702205658, 0.527251958847046], [0.752246985435486, 0.284507007598877], [0.598631024360657, 0.454979002475739], [0.570338010787964, 0.548575043678284], [0.578631997108459, 0.533622980117798], [0.723087012767792, 0.532054007053375], [0.516445994377136, 0.499638974666595], [0.674801027297974, 0.260917976379395], [0.75962401008606, 0.289271005153656], [0.830704987049103, 0.193813979625702], [0.542385985851288, 0.292568018436432], [0.59409987258911, 0.338887975215912], [0.645429015159607, 0.696707010269165], [0.932694971561432, 0.730105042457581], [0.557260990142822, 0.572826027870178], [0.542901992797852, 0.584792017936707], [0.6180260181427, 0.694710969924927], [0.607590973377228, 0.694203019142151], [0.722943007946014, 0.271963000297546], [0.577413976192474, 0.563166975975037], [0.624082992076874, 0.271386971473694], [0.616907000541687, 0.255886018276215], [0.668509006500244, 0.119913995265961], [0.770092010498047, 0.232020974159241], [0.635536015033722, 0.189248979091644], [0.77039098739624, 0.299556016921997], [0.826722025871277, 0.278755009174347], [0.527121007442474, 0.666198015213013], [0.553171992301941, 0.668527007102966], [0.577238023281097, 0.673889994621277], [0.554691970348358, 0.580065965652466], [0.611896991729736, 0.693961024284363], [0.59696102142334, 0.706539988517761], [0.596370995044708, 0.693953037261963], [0.539958000183105, 0.557139039039612], [0.568841993808746, 0.692366003990173], [0.547818005084991, 0.692366003990173], [0.52461302280426, 0.692366003990173], [0.534089982509613, 0.779141008853912], [0.527670979499817, 0.736225962638855], [0.526912987232208, 0.717857003211975], [0.526877999305725, 0.704625964164734], [0.526966989040375, 0.695277988910675], [0.572058022022247, 0.695277988910675], [0.573521018028259, 0.703539967536926], [0.57683801651001, 0.711845993995667], [0.581691026687622, 0.720062971115112], [0.609944999217987, 0.639909982681274], [0.986046016216278, 0.560034036636353], [0.5867999792099, 0.69539999961853], [0.590372025966644, 0.701822996139526], [0.531915009021759, 0.601536989212036], [0.577268004417419, 0.585934996604919], [0.536915004253387, 0.593786001205444], [0.627542972564697, 0.473352015018463], [0.665585994720459, 0.495950996875763], [0.588353991508484, 0.546862006187439], [0.757824003696442, 0.14767599105835], [0.709249973297119, 0.201507985591888], [0.672684013843536, 0.256581008434296], [0.600408971309662, 0.74900496006012], [0.55826598405838, 0.261672019958496], [0.570303976535797, 0.187870979309082], [0.588165998458862, 0.109044015407562], [0.719045026779175, 0.400952007293701], [0.781069993972778, 0.435405015945435], [0.587247014045715, 0.398931980133057], [0.742869973182678, 0.342445981025696], [0.572156012058258, 0.437651991844177], [0.55186802148819, 0.536570012569427], [0.821442008018494, 0.457556009292603], [0.752701997756958, 0.457181990146637], [0.71375697851181, 0.467626988887787], [0.66711300611496, 0.460672974586487], [0.631101012229919, 0.447153985500336], [0.6008620262146, 0.432473003864288], [0.523481011390686, 0.405627012252808], [0.810747981071472, 0.523926019668579], [0.771045982837677, 0.338959028720856], [0.509127020835876, 0.562718033790588], [0.595292985439301, 0.485023975372314], [0.980530977249146, 0.401564002037048], [0.573499977588654, 0.420000016689301], [0.602994978427887, 0.548687994480133], [0.733529984951019, 0.373977026462555], [0.560611009597778, 0.519016981124878], [0.967685997486115, 0.644356966018677], [0.580985009670258, 0.387160003185272], [0.537728011608124, 0.505385041236877], [0.760966002941132, 0.779752969741821], [0.801778972148895, 0.831938028335571], [0.892440974712372, 0.54076099395752], [0.816350996494293, 0.740260004997253], [0.865594983100891, 0.333687007427216], [0.614073991775513, 0.883246004581451], [0.508952975273132, 0.579437971115112], [0.617941975593567, 0.508316040039062], [0.825608015060425, 0.397674977779388], [0.681214988231659, 0.39623498916626], [0.656635999679565, 0.400596976280212], [0.603900015354156, 0.710216999053955], [0.81208598613739, 0.588539004325867], [0.56801301240921, 0.944564998149872], [0.681007981300354, 0.898285031318665], [0.733752012252808, 0.869701027870178], [0.633830010890961, 0.398822009563446], [0.606792986392975, 0.39553701877594], [0.589659988880157, 0.391062021255493], [0.805015981197357, 0.342108011245728], [0.611334979534149, 0.362284004688263], [0.634037971496582, 0.355970978736877], [0.656635999679565, 0.355356991291046], [0.681214988231659, 0.35834002494812], [0.698584973812103, 0.363156020641327], [0.941866993904114, 0.319076001644135], [0.698584973812103, 0.387449026107788], [0.584177017211914, 0.624107003211975], [0.554318010807037, 0.566076993942261], [0.534153997898102, 0.62064003944397], [0.711217999458313, 0.819975018501282], [0.664629995822906, 0.852871000766754], [0.559099972248077, 0.902631998062134], [0.871706008911133, 0.791940987110138], [0.591234028339386, 0.373893976211548], [0.544341027736664, 0.451583981513977], [0.624562978744507, 0.924192011356354], [0.88577002286911, 0.615028977394104], [0.551338016986847, 0.695277988910675], [0.551980018615723, 0.704632043838501], [0.552887976169586, 0.715808033943176], [0.555167973041534, 0.730794012546539], [0.569944024085999, 0.767035007476807], [0.593203008174896, 0.685675978660583], [0.599261999130249, 0.681069016456604], [0.607599973678589, 0.677703022956848], [0.631937980651855, 0.663500010967255], [0.752032995223999, 0.601315021514893], [0.547226011753082, 0.420395016670227], [0.543543975353241, 0.359827995300293], [0.576841025829315, 0.360713974952698], [0.586614012718201, 0.692366003990173], [0.771915018558502, 0.683578014373779], [0.531597018241882, 0.352482974529266], [0.588370978832245, 0.804440975189209], [0.52079701423645, 0.442565023899078], [0.567984998226166, 0.493479013442993], [0.543282985687256, 0.819254994392395], [0.655317008495331, 0.745514988899231], [0.621008992195129, 0.574018001556396], [0.625559985637665, 0.78031200170517], [0.680198013782501, 0.570719003677368], [0.64276397228241, 0.604337990283966], [0.704662978649139, 0.621529996395111], [0.552012026309967, 0.862591981887817], [0.589071989059448, 0.508637011051178], [0.685944974422455, 0.775357007980347], [0.645735025405884, 0.812640011310577], [0.675342977046967, 0.703978002071381], [0.810858011245728, 0.646304965019226], [0.72012197971344, 0.714666962623596], [0.866151988506317, 0.682704985141754], [0.663187026977539, 0.644596993923187], [0.570082008838654, 0.466325998306274], [0.544561982154846, 0.548375964164734], [0.562758982181549, 0.558784961700439], [0.531987011432648, 0.530140042304993], [0.570271000862122, 0.325177004337311], [0.622952997684479, 0.31277899980545], [0.649896008014679, 0.308163011550903], [0.707132000923157, 0.300345972061157], [0.719481983661652, 0.310200991153717], [0.758756995201111, 0.382786989212036], [0.897013008594513, 0.468769013881683], [0.732392013072968, 0.424547016620636], [0.70211398601532, 0.433162987232208], [0.66652500629425, 0.433866024017334], [0.633504986763, 0.426087975502014], [0.603875994682312, 0.416586995124817], [0.579657971858978, 0.409945011138916], [0.992439985275269, 0.480777025222778], [0.567192018032074, 0.569419980049133], [0.54136598110199, 0.478899002075195], [0.526564002037048, 0.546118021011353], [0.523913025856018, 0.563830018043518], [0.531529009342194, 0.555056989192963], [0.566035985946655, 0.582329034805298], [0.51631098985672, 0.563053965568542], [0.5174720287323, 0.577877044677734], [0.569594987392426, 0.389806985855103], [0.560697972774506, 0.395331978797913], [0.549755990505219, 0.399751007556915], [0.710287988185883, 0.368252992630005], [0.722330020904541, 0.350372981548309]]));\nvar FACE_MESH_UV_test = (/* unused pure expression or super */ null && ([[0.499976992607117, 0.652534008026123], [0.500025987625122, 0.547487020492554], [0.499974012374878, 0.602371990680695], [0.482113003730774, 0.471979022026062], [0.500150978565216, 0.527155995368958], [0.499909996986389, 0.498252987861633], [0.499523013830185, 0.40106201171875], [0.289712011814117, 0.380764007568359], [0.499954998493195, 0.312398016452789], [0.499987006187439, 0.269918978214264], [0.500023007392883, 0.107050001621246], [0.500023007392883, 0.666234016418457], [0.5000159740448, 0.679224014282227], [0.500023007392883, 0.692348003387451], [0.499976992607117, 0.695277988910675], [0.499976992607117, 0.70593398809433]]));\n;// CONCATENATED MODULE: ./src/js/facemesh/landmarks_helpers.js\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { landmarks_helpers_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction landmarks_helpers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Mediapipe uses different convention for axis\n * than three js. This function adapts mediapipe\n * landmarks for three js.\n * @param {*} landmarks\n */\n\nvar transformLandmarks = function transformLandmarks(landmarks) {\n  // console.log(landmarks);\n  if (!landmarks) {\n    return landmarks;\n  }\n\n  var hasVisiblity = !!landmarks.find(function (l) {\n    return l.visibility;\n  });\n  var minZ = 1e-4; // currently mediapipe facemesh js\n  // has visibility set to undefined\n  // so we use a heuristic to set z position of facemesh\n\n  if (hasVisiblity) {\n    landmarks.forEach(function (landmark) {\n      var z = landmark.z,\n          visibility = landmark.visibility;\n      z = -z;\n\n      if (z < minZ && visibility) {\n        minZ = z;\n      }\n    });\n  } else {\n    minZ = Math.max(-landmarks[234].z, -landmarks[454].z);\n  }\n\n  return landmarks.map(function (landmark) {\n    var x = landmark.x,\n        y = landmark.y,\n        z = landmark.z;\n    return {\n      x: -0.5 + x,\n      y: 0.5 - y,\n      z: -z - minZ,\n      visibility: landmark.visibility\n    };\n  });\n};\n/**\n * Scales landmark by width and height\n * @param {*} landmark\n * @param {*} width\n * @param {*} height\n */\n\nvar scaleLandmark = function scaleLandmark(landmark, width, height) {\n  var x = landmark.x,\n      y = landmark.y,\n      z = landmark.z;\n  return _objectSpread(_objectSpread({}, landmark), {}, {\n    x: x * width,\n    y: y * height,\n    z: z * width\n  });\n};\n/**\n * makes buffer geometry from facemesh landmarks\n * @param {*} landmarks\n */\n\nvar geometry = new three_module/* BufferGeometry */.u9r();\nvar params = {\n  iterations: 1,\n  split: false,\n  // optional, default: true\n  uvSmooth: true,\n  // optional, default: false\n  preserveEdges: true,\n  // optional, default: false\n  flatOnly: false,\n  // optional, default: false\n  maxTriangles: 2000,\n  // optional, default: Infinity\n  flatShading: false,\n  textured: false,\n  wireframe: false\n};\nvar makeGeometry = function makeGeometry(landmarks, type, pattern) {\n  var vertices = [];\n  var uvs = [];\n\n  for (var i = 0; i < 468; i++) {\n    var _landmarks$i = landmarks[i],\n        x = _landmarks$i.x,\n        y = _landmarks$i.y,\n        z = _landmarks$i.z;\n    var vertex = [x, y, z];\n\n    if (type && type === "eyelash") {\n      if (EyelidUpperLeftLandmarkIndices.includes(i) || EyelidDownLeftLandmarkIndices.includes(i) || EyelidSecondUpperLeftLandmarkIndices.includes(i) || EyelidThirdUpperLeftLandmarkIndices.includes(i) || EyelidUpperRightLandmarkIndices.includes(i) || EyelidDownRightLandmarkIndices.includes(i) || EyelidSecondUpperRightLandmarkIndices.includes(i) || EyelidThirdUpperRightLandmarkIndices.includes(i)) {\n        var p1 = landmarks[264];\n        var p2 = landmarks[34];\n        var p3 = landmarks[10];\n        var p4 = landmarks[151];\n        var vec1 = new three_module/* Vector3 */.Pa4(p1.x, p1.y, p1.z);\n        var vec2 = new three_module/* Vector3 */.Pa4(p2.x, p2.y, p2.z);\n        var vec3 = new three_module/* Vector3 */.Pa4(p3.x, p3.y, p3.z);\n        var vec4 = new three_module/* Vector3 */.Pa4(p4.x, p4.y, p4.z);\n        var distH = Math.abs(vec2.distanceTo(vec1) * 4.5);\n        var distV = Math.abs(vec3.distanceTo(vec4) * 18);\n\n        if (EyelidUpperLeftLandmarkIndices.includes(i)) {\n          var index = EyelidUpperLeftLandmarkIndices.indexOf(i);\n          var lower = EyelidDownLeftLandmarkIndices.at(index);\n          var offset = EyelidOffeset.at(index);\n          vertex[0] = landmarks[lower].x + offset.x * distH;\n          vertex[1] = landmarks[lower].y + offset.y * distV; // vertex[2] = landmarks[lower].z;\n\n          vertex[2] = landmarks[EyelidDownLeftLandmarkIndices.at(4)].z;\n        }\n\n        if (EyelidSecondUpperLeftLandmarkIndices.includes(i)) {\n          var _index = EyelidSecondUpperLeftLandmarkIndices.indexOf(i);\n\n          var _lower = EyelidDownLeftLandmarkIndices.at(_index);\n\n          var _offset = EyelidOffeset1.at(_index);\n\n          vertex[0] = landmarks[_lower].x + _offset.x * distH;\n          vertex[1] = landmarks[_lower].y + _offset.y * distV;\n          vertex[2] = landmarks[EyelidDownLeftLandmarkIndices.at(4)].z;\n        }\n\n        if (EyelidThirdUpperLeftLandmarkIndices.includes(i)) {\n          var _index2 = EyelidThirdUpperLeftLandmarkIndices.indexOf(i);\n\n          var _lower2 = EyelidDownLeftLandmarkIndices.at(_index2);\n\n          var _offset2 = EyelidOffeset2.at(_index2);\n\n          vertex[0] = landmarks[_lower2].x + _offset2.x * distH;\n          vertex[1] = landmarks[_lower2].y + _offset2.y * distV;\n          vertex[2] = landmarks[EyelidDownLeftLandmarkIndices.at(4)].z;\n        } ///\n\n\n        if (EyelidUpperRightLandmarkIndices.includes(i)) {\n          var _index3 = EyelidUpperRightLandmarkIndices.indexOf(i);\n\n          var _lower3 = EyelidDownRightLandmarkIndices.at(_index3);\n\n          var _offset3 = EyelidOffeset.at(_index3);\n\n          vertex[0] = landmarks[_lower3].x - _offset3.x * distH;\n          vertex[1] = landmarks[_lower3].y + _offset3.y * distV; // vertex[2] = landmarks[lower].z;\n\n          vertex[2] = landmarks[EyelidDownRightLandmarkIndices.at(4)].z;\n        }\n\n        if (EyelidSecondUpperRightLandmarkIndices.includes(i)) {\n          var _index4 = EyelidSecondUpperRightLandmarkIndices.indexOf(i);\n\n          var _lower4 = EyelidDownRightLandmarkIndices.at(_index4);\n\n          var _offset4 = EyelidOffeset1.at(_index4);\n\n          vertex[0] = landmarks[_lower4].x - _offset4.x * distH;\n          vertex[1] = landmarks[_lower4].y + _offset4.y * distV;\n          vertex[2] = landmarks[EyelidDownRightLandmarkIndices.at(4)].z;\n        }\n\n        if (EyelidThirdUpperRightLandmarkIndices.includes(i)) {\n          var _index5 = EyelidThirdUpperRightLandmarkIndices.indexOf(i);\n\n          var _lower5 = EyelidDownRightLandmarkIndices.at(_index5);\n\n          var _offset5 = EyelidOffeset2.at(_index5);\n\n          vertex[0] = landmarks[_lower5].x - _offset5.x * distH;\n          vertex[1] = landmarks[_lower5].y + _offset5.y * distV;\n          vertex[2] = landmarks[EyelidDownRightLandmarkIndices.at(4)].z;\n        }\n      } else {//vertex[2] -= 100;\n      }\n\n      vertices.push.apply(vertices, vertex);\n    } else if (type && type === "foundation") {\n      if (lipsOuterFull.includes(i)) {\n        var _index6 = lipsOuterFull.indexOf(i);\n\n        var _lower6 = lipsInnerFull.at(_index6);\n\n        vertex[0] = three_module/* MathUtils */.M8C.lerp(landmarks[i].x, landmarks[_lower6].x, 0.65);\n        vertex[1] = three_module/* MathUtils */.M8C.lerp(landmarks[i].y, landmarks[_lower6].y, 0.65);\n      }\n\n      if (foundationUpperIndices.includes(i)) {\n        var _p = landmarks[264];\n        var _p2 = landmarks[34];\n        var _p3 = landmarks[10];\n        var _p4 = landmarks[151];\n\n        var _vec = new three_module/* Vector3 */.Pa4(_p.x, _p.y, _p.z);\n\n        var _vec2 = new three_module/* Vector3 */.Pa4(_p2.x, _p2.y, _p2.z);\n\n        var _vec3 = new three_module/* Vector3 */.Pa4(_p3.x, _p3.y, _p3.z);\n\n        var _vec4 = new three_module/* Vector3 */.Pa4(_p4.x, _p4.y, _p4.z);\n\n        var _distH = Math.abs(_vec2.distanceTo(_vec) * 4.5);\n\n        var _distV = Math.abs(_vec3.distanceTo(_vec4) * 18);\n\n        var _index7 = foundationUpperIndices.indexOf(i);\n\n        var _offset6 = foundationUpperOffset.at(_index7);\n\n        vertex[0] = landmarks[i].x + _offset6.x * _distH;\n        vertex[1] = landmarks[i].y + _offset6.y * _distV;\n        vertex[2] = landmarks[i].z + _offset6.z * _distV;\n      }\n\n      if (foundationLowerIndices.includes(i)) {\n        var _p5 = landmarks[264];\n        var _p6 = landmarks[34];\n        var _p7 = landmarks[10];\n        var _p8 = landmarks[151];\n\n        var _vec5 = new three_module/* Vector3 */.Pa4(_p5.x, _p5.y, _p5.z);\n\n        var _vec6 = new three_module/* Vector3 */.Pa4(_p6.x, _p6.y, _p6.z);\n\n        var _vec7 = new three_module/* Vector3 */.Pa4(_p7.x, _p7.y, _p7.z);\n\n        var _vec8 = new three_module/* Vector3 */.Pa4(_p8.x, _p8.y, _p8.z);\n\n        var _distH2 = Math.abs(_vec6.distanceTo(_vec5) * 4.5);\n\n        var _distV2 = Math.abs(_vec7.distanceTo(_vec8) * 18);\n\n        var _index8 = foundationLowerIndices.indexOf(i);\n\n        var _offset7 = foundationLowerOffset.at(_index8);\n\n        vertex[0] = landmarks[i].x + _offset7.x / 1.5 * _distH2;\n        vertex[1] = landmarks[i].y + _offset7.y / 1.5 * _distV2;\n        vertex[2] = landmarks[i].z + _offset7.z * _distV2;\n      }\n\n      vertices.push.apply(vertices, vertex);\n    } else if (type && type === "lipliner") {\n      var liplinerPattern = lipLinerPatternConfig.find(function (config) {\n        return config.pattern === pattern;\n      });\n\n      if (lipsOuter.includes(i)) {\n        var _index9 = lipsOuter.indexOf(i);\n\n        if (liplinerPattern.ignoreUpper && _index9 < lipsOuter.length / 2 || liplinerPattern.ignoreLower && _index9 >= lipsOuter.length / 2) {\n          var _lower7 = lipsInner.at(_index9);\n\n          vertex[0] = three_module/* MathUtils */.M8C.lerp(landmarks[i].x, landmarks[_lower7].x, liplinerPattern.defaultOuterLayerOffset);\n          vertex[1] = three_module/* MathUtils */.M8C.lerp(landmarks[i].y, landmarks[_lower7].y, liplinerPattern.defaultOuterLayerOffset);\n        } else {\n          var _lower8 = lipsInner.at(_index9);\n\n          vertex[0] = three_module/* MathUtils */.M8C.lerp(landmarks[i].x, landmarks[_lower8].x, liplinerPattern.outerLayerOffset);\n          vertex[1] = three_module/* MathUtils */.M8C.lerp(landmarks[i].y, landmarks[_lower8].y, liplinerPattern.outerLayerOffset);\n        }\n      }\n\n      if (lipsOuterCorner.includes(i)) {\n        var _index10 = lipsOuterCorner.indexOf(i);\n\n        if (liplinerPattern.ignoreUpper && _index10 < lipsOuterCorner.length / 2 || liplinerPattern.ignoreLower && _index10 >= lipsOuterCorner.length / 2) {\n          var _lower9 = lipsInnerCorner.at(_index10);\n\n          vertex[0] = three_module/* MathUtils */.M8C.lerp(landmarks[i].x, landmarks[_lower9].x, liplinerPattern.defaultCornerOffset);\n          vertex[1] = three_module/* MathUtils */.M8C.lerp(landmarks[i].y, landmarks[_lower9].y, liplinerPattern.defaultCornerOffset);\n        } else {\n          var _lower10 = lipsInnerCorner.at(_index10);\n\n          vertex[0] = three_module/* MathUtils */.M8C.lerp(landmarks[i].x, landmarks[_lower10].x, liplinerPattern.cornerOffset);\n          vertex[1] = three_module/* MathUtils */.M8C.lerp(landmarks[i].y, landmarks[_lower10].y, liplinerPattern.cornerOffset);\n        }\n      }\n\n      if (lipsOuterCornerLast.includes(i)) {\n        var _index11 = lipsOuterCornerLast.indexOf(i);\n\n        var _lower11 = lipsInnerCornerLast.at(_index11);\n\n        vertex[0] = three_module/* MathUtils */.M8C.lerp(landmarks[i].x, landmarks[_lower11].x, liplinerPattern.cornerLastOffset);\n        vertex[1] = three_module/* MathUtils */.M8C.lerp(landmarks[i].y, landmarks[_lower11].y, liplinerPattern.cornerLastOffset);\n      }\n\n      if (lipsInnerFull.includes(i)) {\n        var _index12 = lipsInnerFull.indexOf(i);\n\n        var _lower12 = lipsInnerSecond.at(_index12);\n\n        vertex[0] = three_module/* MathUtils */.M8C.lerp(landmarks[i].x, landmarks[_lower12].x, liplinerPattern.innerLayerOffset);\n        vertex[1] = three_module/* MathUtils */.M8C.lerp(landmarks[i].y, landmarks[_lower12].y, liplinerPattern.innerLayerOffset);\n      }\n\n      vertices.push.apply(vertices, vertex);\n    } else if (type && type === "lipstick") {\n      if (lipsOuterFull.includes(i)) {\n        var _index13 = lipsOuterFull.indexOf(i);\n\n        var _lower13 = lipsInnerFull.at(_index13);\n\n        vertex[0] = three_module/* MathUtils */.M8C.lerp(landmarks[i].x, landmarks[_lower13].x, 0.65);\n        vertex[1] = three_module/* MathUtils */.M8C.lerp(landmarks[i].y, landmarks[_lower13].y, 0.65);\n      }\n\n      vertices.push.apply(vertices, vertex);\n    } else {\n      vertices.push.apply(vertices, vertex);\n    }\n  }\n\n  if (type && type === "eyeliner") {\n    for (var j = 0; j < 468; j++) {\n      uvs[j * 2] = FACE_MESH_UV_Eyelid[j][0];\n      uvs[j * 2 + 1] = FACE_MESH_UV_Eyelid[j][1];\n    }\n  } else {\n    for (var _j = 0; _j < 468; _j++) {\n      uvs[_j * 2] = FACE_MESH_UV[_j][0];\n      uvs[_j * 2 + 1] = FACE_MESH_UV[_j][1];\n    }\n  }\n\n  geometry.setIndex(FACE_MESH_INDEX_BUFFER);\n  geometry.setAttribute("position", new three_module/* Float32BufferAttribute */.a$l(vertices, 3));\n  geometry.setAttribute("uv", new three_module/* Float32BufferAttribute */.a$l(uvs, 2));\n  geometry.computeVertexNormals(); //geometry = LoopSubdivision.modify(geometry, params.iterations, params);\n\n  return geometry;\n};\n\nvar isMouthLandmark = function isMouthLandmark(index, landmarks) {\n  return mouthLandmarkIndices.includes(index);\n};\n\nvar mouthLandmarkIndices = (/* unused pure expression or super */ null && ([14, 87, 317, 82, 13, 402, 178, 311, 312, 81, 318, 88, 310, 80, 324, 95, 415, 191]));\nvar eyetest = (/* unused pure expression or super */ null && ([7, 33, 133, 144, 145, 153, 154, 155, 157, 158, 159, 160, 161, 163, 173, 246]));\nvar eyetest1 = (/* unused pure expression or super */ null && ([9, 107, 108, 151]));\nvar EyelidDownLeftLandmarkIndices = [33, 246, 161, 160, 159, 158, 157, 173, 133, //down\n155, 154, 153, 145, 144, 163, 7];\nvar EyelidUpperLeftLandmarkIndices = [130, 247, 30, 29, 27, 28, 56, 190, 243, //down\n112, 26, 22, 23, 24, 110, 25];\nvar EyelidSecondUpperLeftLandmarkIndices = [226, 113, 225, 224, 223, 222, 221, 189, 244, //down\n233, 232, 231, 230, 229, 228, 31];\nvar EyelidThirdUpperLeftLandmarkIndices = [35, 124, 46, 53, 52, 65, 55, 193, 245];\nvar EyelidDownRightLandmarkIndices = [263, 466, 388, 387, 386, 385, 384, 398, 362, //down\n382, 381, 380, 374, 373, 390, 249];\nvar EyelidUpperRightLandmarkIndices = [359, 467, 260, 259, 257, 258, 286, 414, 463, //down\n341, 256, 252, 253, 254, 339, 255];\nvar EyelidSecondUpperRightLandmarkIndices = [446, 342, 445, 444, 443, 442, 441, 413, 464, //down\n453, 452, 451, 450, 449, 448, 261];\nvar EyelidThirdUpperRightLandmarkIndices = [265, 353, 276, 283, 282, 295, 285, 417, 465];\nvar foundationUpperIndices = [152, 148, 176, 149, 150, 136, 172, 58, 132, 93, 234, 127, 162, 21, 54, 103, 67, 109, 10, 338, 297, 332, 284, 251, 389, 356, 454, 323, 361, 288, 397, 365, 379, 378, 400, 377];\nvar foundationLowerIndices = [34, 139, 71, 68, 104, 69, 108, 151, 337, 299, 333, 298, 301, 368, 264];\nvar foundationUpperOffset = [new three_module/* Vector3 */.Pa4(0, -0.03, 0), new three_module/* Vector3 */.Pa4(0, -0.03, 0), new three_module/* Vector3 */.Pa4(0, -0.03, 0), new three_module/* Vector3 */.Pa4(0, -0.03, 0), new three_module/* Vector3 */.Pa4(0, -0.03, 0), new three_module/* Vector3 */.Pa4(-0.001, -0.025, 0), new three_module/* Vector3 */.Pa4(-0.002, -0.02, 0), new three_module/* Vector3 */.Pa4(-0.002, -0.015, 0), new three_module/* Vector3 */.Pa4(-0.0035, -0.01, 0), new three_module/* Vector3 */.Pa4(-0.0035, 0, 0), new three_module/* Vector3 */.Pa4(-0.0035, 0, 0), //\nnew three_module/* Vector3 */.Pa4(-0.0035, 0.015, 0), new three_module/* Vector3 */.Pa4(-0.0035, 0.025, 0), new three_module/* Vector3 */.Pa4(-0.0035, 0.055, 0), new three_module/* Vector3 */.Pa4(-0.003, 0.09, 0), new three_module/* Vector3 */.Pa4(-0.0025, 0.11, 0), new three_module/* Vector3 */.Pa4(-0.0015, 0.12, 0), new three_module/* Vector3 */.Pa4(-0.001, 0.12, 0), new three_module/* Vector3 */.Pa4(0, 0.12, 0), new three_module/* Vector3 */.Pa4(0.001, 0.12, 0), new three_module/* Vector3 */.Pa4(0.0015, 0.12, 0), new three_module/* Vector3 */.Pa4(0.0025, 0.11, 0), new three_module/* Vector3 */.Pa4(0.003, 0.09, 0), new three_module/* Vector3 */.Pa4(0.0035, 0.055, 0), new three_module/* Vector3 */.Pa4(0.0035, 0.025, 0), new three_module/* Vector3 */.Pa4(0.0035, 0.015, 0), //\nnew three_module/* Vector3 */.Pa4(0.0035, 0, 0), new three_module/* Vector3 */.Pa4(0.0035, 0, 0), new three_module/* Vector3 */.Pa4(0.0035, -0.01, 0), new three_module/* Vector3 */.Pa4(0.002, -0.015, 0), new three_module/* Vector3 */.Pa4(0.002, -0.02, 0), new three_module/* Vector3 */.Pa4(0.001, -0.025, 0), new three_module/* Vector3 */.Pa4(0, -0.03, 0), new three_module/* Vector3 */.Pa4(0, -0.03, 0), new three_module/* Vector3 */.Pa4(0, -0.03, 0), new three_module/* Vector3 */.Pa4(0, -0.03, 0)];\nvar foundationLowerOffset = [new three_module/* Vector3 */.Pa4(-0.0035, 0.015, 0), new three_module/* Vector3 */.Pa4(-0.0035, 0.025, 0), new three_module/* Vector3 */.Pa4(-0.0035, 0.055, 0), new three_module/* Vector3 */.Pa4(-0.0025, 0.065, 0), new three_module/* Vector3 */.Pa4(-0.002, 0.085, 0), new three_module/* Vector3 */.Pa4(-0.0015, 0.09, 0), new three_module/* Vector3 */.Pa4(-0.001, 0.09, 0), new three_module/* Vector3 */.Pa4(0, 0.09, 0), new three_module/* Vector3 */.Pa4(0.001, 0.09, 0), new three_module/* Vector3 */.Pa4(0.0015, 0.09, 0), new three_module/* Vector3 */.Pa4(0.002, 0.085, 0), new three_module/* Vector3 */.Pa4(0.0025, 0.065, 0), new three_module/* Vector3 */.Pa4(0.0035, 0.055, 0), new three_module/* Vector3 */.Pa4(0.0035, 0.025, 0), new three_module/* Vector3 */.Pa4(0.0035, 0.015, 0)];\nvar EyelidOffeset = [new three_module/* Vector3 */.Pa4(-0.0045, -0.0013, 0), new three_module/* Vector3 */.Pa4(-0.0047, 0.004, 0), new three_module/* Vector3 */.Pa4(-0.002, 0.007, 0), new three_module/* Vector3 */.Pa4(-0.0007, 0.008, 0), new three_module/* Vector3 */.Pa4(0.0002, 0.0085, 0), new three_module/* Vector3 */.Pa4(0.0015, 0.0085, 0), new three_module/* Vector3 */.Pa4(0.001, 0.007, 0), new three_module/* Vector3 */.Pa4(0.0037, 0.0035, 0), new three_module/* Vector3 */.Pa4(0.004, -0.001, 0), //down\nnew three_module/* Vector3 */.Pa4(0.0024, -0.0063, 0), new three_module/* Vector3 */.Pa4(-0.00019, -0.009, 0), new three_module/* Vector3 */.Pa4(0.00015, -0.01, 0), new three_module/* Vector3 */.Pa4(-0.0015, -0.011, 0), new three_module/* Vector3 */.Pa4(-0.0016, -0.01, 0), new three_module/* Vector3 */.Pa4(-0.003, -0.009, 0), new three_module/* Vector3 */.Pa4(-0.005, -0.006, 0)];\nvar EyelidOffeset1 = [new three_module/* Vector3 */.Pa4(-0.012, -0.005, 0), new three_module/* Vector3 */.Pa4(-0.0105, 0.009, 0), new three_module/* Vector3 */.Pa4(-0.0078, 0.018, 0), new three_module/* Vector3 */.Pa4(-0.004, 0.023, 0), new three_module/* Vector3 */.Pa4(-0.001, 0.024, 0), new three_module/* Vector3 */.Pa4(0.003, 0.023, 0), new three_module/* Vector3 */.Pa4(0.009, 0.019, 0), new three_module/* Vector3 */.Pa4(0.011, 0.0078, 0), new three_module/* Vector3 */.Pa4(0.009, -0.003, 0), //down\nnew three_module/* Vector3 */.Pa4(0.005, -0.017, 0), new three_module/* Vector3 */.Pa4(0.0014, -0.022, 0), new three_module/* Vector3 */.Pa4(0.00023, -0.024, 0), new three_module/* Vector3 */.Pa4(-0.003, -0.026, 0), new three_module/* Vector3 */.Pa4(-0.005, -0.027, 0), new three_module/* Vector3 */.Pa4(-0.009, -0.026, 0), new three_module/* Vector3 */.Pa4(-0.013, -0.017, 0)];\nvar EyelidOffeset2 = [new three_module/* Vector3 */.Pa4(-0.02, -0.01, 0), new three_module/* Vector3 */.Pa4(-0.018, 0.014, 0), new three_module/* Vector3 */.Pa4(-0.016, 0.028, 0), new three_module/* Vector3 */.Pa4(-0.011, 0.037, 0), new three_module/* Vector3 */.Pa4(-0.005, 0.039, 0), new three_module/* Vector3 */.Pa4(0.0053, 0.039, 0), new three_module/* Vector3 */.Pa4(0.0215, 0.0275, 0), new three_module/* Vector3 */.Pa4(0.023, 0.008, 0), new three_module/* Vector3 */.Pa4(0.015, -0.008, 0)];\nvar lipsOuter = [92, 165, 167, 164, 393, 391, 322, //down\n335, 406, 313, 18, 83, 182, 106];\nvar lipsInner = [40, 39, 37, 0, 267, 269, 270, //down\n321, 405, 314, 17, 84, 181, 91];\nvar lipsOuterFull = [57, 186, 92, 165, 167, 164, 393, 391, 322, 410, 287, //down\n273, 335, 406, 313, 18, 83, 182, 106, 43];\nvar lipsInnerFull = [61, 185, 40, 39, 37, 0, 267, 269, 270, 409, 291, //down\n375, 321, 405, 314, 17, 84, 181, 91, 146];\nvar lipsInnerSecond = [76, 184, 74, 73, 72, 11, 302, 303, 304, 408, 306, //down\n307, 320, 404, 315, 16, 85, 180, 90, 77];\nvar lipsOuterCorner = [186, 410, //down\n273, 43];\nvar lipsInnerCorner = [185, 409, //down\n375, 146];\nvar lipsOuterCornerLast = [57, 287];\nvar lipsInnerCornerLast = [61, 291];\nvar lipLinerPatternConfig = [{\n  pattern: "natural",\n  ignoreUpper: false,\n  ignoreLower: false,\n  defaultOuterLayerOffset: 0.65,\n  outerLayerOffset: 0.65,\n  cornerOffset: 0.65,\n  cornerLastOffset: 0.65,\n  innerLayerOffset: 0\n}, {\n  pattern: "wide",\n  ignoreUpper: false,\n  ignoreLower: false,\n  defaultOuterLayerOffset: 0.65,\n  outerLayerOffset: 0.68,\n  cornerOffset: 0.57,\n  cornerLastOffset: 0.52,\n  innerLayerOffset: 0.15\n}, {\n  pattern: "small",\n  ignoreUpper: false,\n  ignoreLower: false,\n  defaultOuterLayerOffset: 0.65,\n  outerLayerOffset: 0.85,\n  cornerOffset: 0.85,\n  cornerLastOffset: 0.85,\n  innerLayerOffset: 0.4\n}, {\n  pattern: "largeandfull",\n  ignoreUpper: false,\n  ignoreLower: false,\n  defaultOuterLayerOffset: 0.65,\n  outerLayerOffset: 0.48,\n  cornerOffset: 0.5,\n  cornerLastOffset: 0.52,\n  innerLayerOffset: 0\n}, {\n  pattern: "largelower",\n  ignoreUpper: true,\n  ignoreLower: false,\n  defaultOuterLayerOffset: 0.68,\n  outerLayerOffset: 0.5,\n  defaultCornerOffset: 0.68,\n  cornerOffset: 0.57,\n  cornerLastOffset: 0.62,\n  innerLayerOffset: 0\n}, {\n  pattern: "largeupper",\n  ignoreUpper: false,\n  ignoreLower: true,\n  defaultOuterLayerOffset: 0.68,\n  outerLayerOffset: 0.5,\n  defaultCornerOffset: 0.68,\n  cornerOffset: 0.57,\n  cornerLastOffset: 0.62,\n  innerLayerOffset: 0\n}, {\n  pattern: "rosebud",\n  ignoreUpper: false,\n  ignoreLower: false,\n  defaultOuterLayerOffset: 0.65,\n  outerLayerOffset: 0.53,\n  cornerOffset: 0.64,\n  cornerLastOffset: 0.78,\n  innerLayerOffset: 0\n}];\n// EXTERNAL MODULE: ./node_modules/@mediapipe/tasks-vision/vision_bundle.mjs\nvar vision_bundle = __webpack_require__(203);\n;// CONCATENATED MODULE: ./src/MLModels/face_landmarker.task\n/* harmony default export */ const face_landmarker = (__webpack_require__.p + "671b47307d70e9bf1540c81113dab1e6.task");\n;// CONCATENATED MODULE: ./src/js/facemesh/landmarks_provider.js\n\n\nfunction landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction landmarks_provider_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\nfunction landmarks_provider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction landmarks_provider_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction landmarks_provider_createClass(Constructor, protoProps, staticProps) { if (protoProps) landmarks_provider_defineProperties(Constructor.prototype, protoProps); if (staticProps) landmarks_provider_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n //import { transformLandmarks } from "./eyeliner_landmark_helper";\n\nvar FacemeshLandmarksProvider = /*#__PURE__*/function () {\n  function FacemeshLandmarksProvider(callback, outputcanvas) {\n    landmarks_provider_classCallCheck(this, FacemeshLandmarksProvider);\n\n    this.isold = false;\n    this.callback = callback;\n    this.faceMesh = null;\n    this.faceLandmarker;\n    this.runningMode = "VIDEO";\n    this.init = false;\n    this.landmarks;\n    this.distanceState = -1;\n    this.prevdistanceState = -1;\n    this.positionState = -1;\n    this.prevPositionState = -1;\n    this.shouldCalculate = false;\n    this.result;\n    this.lastVideoTime = -1;\n  }\n\n  landmarks_provider_createClass(FacemeshLandmarksProvider, [{\n    key: "send",\n    value: function send(image) {\n      var _this = this;\n\n      var _shouldCalculate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var isVideo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.shouldCalculate = _shouldCalculate;\n\n      if (this.isold) {\n        return new Promise(function (resolve, reject) {\n          _this.faceMesh.send({\n            image: image\n          }).then(function () {\n            // Add any additional logic after successful send\n            resolve(); // Resolve the Promise upon successful completion\n          })["catch"](function (error) {\n            // Handle errors from the send method\n            // console.error("Error sending image:", error);\n            // Perform appropriate actions based on the error, such as retries or fallbacks\n            reject(error); // Reject the Promise with the encountered error\n          });\n        });\n      } else {\n        if (isVideo) {\n          if (this.lastVideoTime !== image.currentTime) {\n            this.lastVideoTime = image.currentTime;\n            this.result = this.faceLandmarker.detectForVideo(image, performance.now());\n          }\n        } else {\n          this.result = this.faceLandmarker.detect(image);\n        }\n\n        this.landmarks = this.result.faceLandmarks[0];\n        var multiFaceLandmarks = transformLandmarks(this.result.faceLandmarks[0]);\n\n        if (this.shouldCalculate && this.landmarks) {\n          this.calculateDistance(this.landmarks[300].x, this.landmarks[70].x, this.landmarks[300].y, this.landmarks[70].y);\n          this.categorizePosition(this.landmarks[4].x, this.landmarks[4].y);\n        }\n\n        this.callback({\n          image: image,\n          landmarks: multiFaceLandmarks,\n          ogLandmarks: this.result.faceLandmarks[0]\n        });\n      }\n    }\n  }, {\n    key: "onResults",\n    value: function onResults(_ref) {\n      var image = _ref.image,\n          multiFaceLandmarks = _ref.multiFaceLandmarks,\n          multiFaceGeometry = _ref.multiFaceGeometry;\n\n      if (this.isold) {\n        if (image != null && multiFaceLandmarks != null) {\n          this.landmarks = multiFaceLandmarks[0];\n          multiFaceLandmarks = transformLandmarks(multiFaceLandmarks[0]);\n          this.callback({\n            image: image,\n            landmarks: multiFaceLandmarks\n          });\n\n          if (this.shouldCalculate && this.landmarks) {\n            this.calculateDistance(this.landmarks[300].x, this.landmarks[70].x, this.landmarks[300].y, this.landmarks[70].y);\n            this.categorizePosition(this.landmarks[4].x, this.landmarks[4].y); //console.log(this.landmarks[9].x, this.landmarks[9].y);\n          }\n        }\n      }\n    }\n  }, {\n    key: "createFaceLandmark",\n    value: function () {\n      var _createFaceLandmark = landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var vision;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return vision_bundle/* FilesetResolver */.n.forVisionTasks("".concat(PUBLIC_PATH, "/mediapipe/task-vision/wasm"));\n\n              case 3:\n                vision = _context.sent;\n                _context.next = 6;\n                return vision_bundle/* FaceLandmarker */.jr.createFromOptions(vision, {\n                  baseOptions: {\n                    modelAssetPath: face_landmarker,\n                    delegate: "GPU"\n                  },\n                  outputFaceBlendshapes: false,\n                  outputFacialTransformationMatrixes: false,\n                  runningMode: this.runningMode,\n                  numFaces: 1\n                });\n\n              case 6:\n                this.faceLandmarker = _context.sent;\n                console.log("success");\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context["catch"](0);\n                console.log("error"); // Handle errors here\n                // console.error("Error in createImageSegmenter:", error);\n                // You might want to throw the error again to propagate it to the caller\n                //throw error;\n\n              case 13:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n\n      function createFaceLandmark() {\n        return _createFaceLandmark.apply(this, arguments);\n      }\n\n      return createFaceLandmark;\n    }()\n  }, {\n    key: "initialize",\n    value: function () {\n      var _initialize = landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isold) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.initializeOld();\n\n              case 3:\n                _context2.next = 9;\n                break;\n\n              case 5:\n                console.log("face init called");\n                _context2.next = 8;\n                return this.createFaceLandmark();\n\n              case 8:\n                this.init = true;\n\n              case 9:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }, {\n    key: "initializeOld",\n    value: function () {\n      var _initializeOld = landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var onResults;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // console.log("face init");\n                onResults = this.onResults.bind(this);\n                this.faceMesh = new face_mesh.FaceMesh({\n                  locateFile: function locateFile(file) {\n                    var url = "".concat(PUBLIC_PATH, "/mediapipe/").concat(file);\n                    return url;\n                  }\n                });\n                this.faceMesh.setOptions({\n                  maxNumFaces: 1,\n                  //enableFaceGeometry: true,\n                  selfieMode: true,\n                  refineLandmarks: true,\n                  minDetectionConfidence: 0.5,\n                  minTrackingConfidence: 0.5,\n                  useCpuInference: true\n                });\n                this.faceMesh.onResults(onResults);\n                _context3.next = 6;\n                return this.faceMesh.initialize();\n\n              case 6:\n                this.init = true;\n\n              case 7:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function initializeOld() {\n        return _initializeOld.apply(this, arguments);\n      }\n\n      return initializeOld;\n    }()\n  }, {\n    key: "IsInit",\n    value: function IsInit() {\n      return this.init;\n    }\n  }, {\n    key: "setInit",\n    value: function setInit(state) {\n      this.init = state;\n    }\n  }, {\n    key: "setSelfieMode",\n    value: function () {\n      var _setSelfieMode = landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(state) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.isold) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                this.faceMesh.setOptions({\n                  selfieMode: state\n                });\n                _context4.next = 9;\n                break;\n\n              case 4:\n                if (!(this.getState() === state)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt("return");\n\n              case 6:\n                if (state) this.runningMode = "VIDEO";else this.runningMode = "IMAGE";\n                _context4.next = 9;\n                return this.faceLandmarker.setOptions({\n                  runningMode: this.runningMode\n                });\n\n              case 9:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setSelfieMode(_x) {\n        return _setSelfieMode.apply(this, arguments);\n      }\n\n      return setSelfieMode;\n    }()\n  }, {\n    key: "getState",\n    value: function getState() {\n      if (this.runningMode === "IMAGE") return false;else return true;\n    }\n  }, {\n    key: "close",\n    value: function () {\n      var _close = landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this.isold) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return this.faceMesh.close();\n\n              case 3:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }, {\n    key: "calculateDistance",\n    value: function calculateDistance(lefteye, righteyes, lefteyeY, righteyesY) {\n      var eyeToEye = 13.0;\n      var depthToFace = 48.0;\n      var eyeToEyeInPixel = 384.5; // Calculate focal length\n\n      var calculatedFocalLength = this.focalLength(depthToFace, eyeToEye, eyeToEyeInPixel); // Calculate eye measurement (assuming x_300 and x_70 are defined)\n\n      var x_300 = lefteye;\n      var x_70 = righteyes;\n      var y_300 = lefteyeY;\n      var y_70 = righteyesY;\n      var distance;\n\n      if (Math.abs(x_300 - x_70) > Math.abs(y_300 - y_70)) {\n        distance = Math.abs(x_300 - x_70);\n      } else {\n        distance = Math.abs(y_300 - y_70);\n      }\n\n      var eyeMeasurement = distance; //Math.abs(x_300 - x_70);\n      // Calculate distance\n\n      var calculatedDistance = this.distanceFinder(calculatedFocalLength, eyeToEye, eyeMeasurement);\n      var categorizedDepth = this.categorizeDepth(calculatedDistance);\n    }\n  }, {\n    key: "categorizeDepth",\n    value: function categorizeDepth(distance) {\n      var smallThreshold = 40000;\n      var mediumThreshold = 72000; // if (isMobileDevice()) {\n      //   smallThreshold = 50000;\n      //   mediumThreshold = 100000;\n      // }\n\n      var msg = null; //console.log("distance", distance);\n\n      if (distance < smallThreshold) {\n        this.distanceState = 1; //emitRecognizationDistanceAlert("TOO_CLOSE");\n\n        msg = "TOO_CLOSE"; // showDistanceMessagePanel();\n        // setDistanceMsg("Too Close");\n      } else if (distance > mediumThreshold) {\n        this.distanceState = 2; //emitRecognizationDistanceAlert("TOO_FAR");\n\n        msg = "TOO_FAR"; // showDistanceMessagePanel();\n        // setDistanceMsg("Too far");\n      } else {\n        this.distanceState = 0; //emitRecognizationDistanceAlert("PERFECT");\n\n        msg = "PERFECT"; //hideDistanceMessagePanel();\n      }\n\n      if (this.distanceState !== this.prevdistanceState) {\n        if (msg) {\n          var json = {\n            state: this.distanceState,\n            message: msg\n          };\n          (0,utils_event/* emitFaceAnalysisEvent */.i1)("distance", json);\n        }\n\n        this.prevdistanceState = this.distanceState;\n      }\n\n      return distance > smallThreshold && distance < mediumThreshold ? false : true;\n    }\n  }, {\n    key: "categorizePosition",\n    value: function categorizePosition(xdist, ydist) {\n      var xMinThresold = 0.4;\n      var xMaxThresold = 0.6;\n      var yMinThresold = 0.4;\n      var yMaxThresold = 0.75;\n      var msg = null; //console.log("distance", distance);\n\n      if (xdist > xMinThresold && xdist < xMaxThresold && ydist > yMinThresold && ydist < yMaxThresold) {\n        this.positionState = 0;\n        msg = "PERFECT";\n      } else {\n        this.positionState = 1;\n        msg = "Out";\n      }\n\n      if (this.positionState !== this.prevPositionState) {\n        if (msg) {\n          var json = {\n            state: this.positionState,\n            message: msg\n          };\n          (0,utils_event/* emitFaceAnalysisEvent */.i1)("position", json);\n        }\n\n        this.prevPositionState = this.positionState;\n      }\n    }\n  }, {\n    key: "focalLength",\n    value: function focalLength(depthToFace, eyeToEye, eyeToEyeInPixel) {\n      return eyeToEyeInPixel * depthToFace / eyeToEye;\n    } // Function to find distance based on focal length, eye-to-eye in pixels, and width calculated\n\n  }, {\n    key: "distanceFinder",\n    value: function distanceFinder(focalLength, eyeToEyeInPixel, widthCalculated) {\n      var distance = eyeToEyeInPixel * focalLength / widthCalculated;\n      return distance - 6;\n    }\n  }]);\n\n  return FacemeshLandmarksProvider;\n}();\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.date.to-string.js\nvar es6_date_to_string = __webpack_require__(6331);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.to-string.js\nvar es6_regexp_to_string = __webpack_require__(6108);\n;// CONCATENATED MODULE: ./src/js/utils/general.js\n\n\n\n\n\nvar hexToRgb = function hexToRgb(hex) {\n  if (!hex) return [0, 0, 1]; // Expand shorthand form (e.g. "03F") to full form (e.g. "0033FF")\n\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : [0, 0, 1];\n};\nvar isMobile = function isMobile() {\n  var isAndroid = /Android/i.test(navigator.userAgent);\n  var isiOS = /iPhone|iPad|iPod/i.test(navigator.userAgent);\n  return isAndroid || isiOS;\n};\nvar canvasToBlob = function canvasToBlob(canvas) {\n  return new Promise(function (resolve) {\n    canvas.toBlob(function (blob) {\n      resolve(blob);\n    });\n  });\n};\nvar isEmpty = function isEmpty(item) {\n  return item === null || item === undefined;\n};\nvar createSkuParamsString = function createSkuParamsString(params) {\n  var str = new URLSearchParams(params).toString();\n  return str;\n};\nvar getAspectRatio = function getAspectRatio(width, height) {\n  var divisor = gcd(width, height);\n  var aspectWidth = width / divisor;\n  var aspectHeight = height / divisor;\n  return {\n    aspectWidth: aspectWidth,\n    aspectHeight: aspectHeight\n  };\n};\n\nfunction gcd(a, b) {\n  while (b != 0) {\n    var t = b;\n    b = a % b;\n    a = t;\n  }\n\n  return a;\n}\n;// CONCATENATED MODULE: ./src/js/three_components/video_bg.js\nfunction video_bg_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction video_bg_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction video_bg_createClass(Constructor, protoProps, staticProps) { if (protoProps) video_bg_defineProperties(Constructor.prototype, protoProps); if (staticProps) video_bg_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\nvar plane;\nfunction getCurrentPlaneMap() {\n  return plane.material.map;\n}\nvar VideoBackground = /*#__PURE__*/function () {\n  function VideoBackground(scene, width, height) {\n    video_bg_classCallCheck(this, VideoBackground);\n\n    this.scene = scene;\n    this.image = null; // plane = null;\n\n    this.width = width;\n    this.height = height;\n    this.imageUpdated = false;\n    this.sizeUpdated = false;\n    this.isVideo = true;\n    this.flipCanvas = false;\n    this.video;\n    this.log;\n    this.texture;\n  }\n\n  video_bg_createClass(VideoBackground, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      if (plane) {\n        plane.scale.x = width;\n        plane.scale.y = height;\n      }\n    }\n  }, {\n    key: "setImage",\n    value: function setImage(image, isvideo_, flip) {\n      this.image = image;\n      this.imageUpdated = true;\n      this.isVideo = isvideo_; // if (flip && flip === true) {\n      //   this.flipCanvas = flip;\n      //   if (plane) plane.scale.set(-1, 1, 1);\n      // } else {\n      //   this.flipCanvas = false;\n      //   if (plane) plane.scale.set(1, 1, 1);\n      // }\n    }\n  }, {\n    key: "createNewPlane",\n    value: function createNewPlane(video) {\n      this.video = video;\n      var geometry = this.createGeometry();\n\n      if (video) {\n        this.texture = new three_module/* VideoTexture */.fO1(video);\n        this.texture.generateMipmaps = false;\n        this.texture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n      }\n\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        map: this.texture,\n        depthWrite: false\n      });\n      plane = new three_module/* Mesh */.Kj0(geometry, material); //plane.scale.set(1, 1, 1);\n      // this.updateDimensions();\n\n      this.addPlaneToScene();\n    }\n  }, {\n    key: "updatePlaneWithImage",\n    value: function updatePlaneWithImage(texture) {\n      if (plane) {\n        texture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n        texture.generateMipmaps = false;\n        plane.material.map = texture;\n        plane.material.needsUpdate = true;\n      } else {\n        texture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n        texture.generateMipmaps = false;\n        var geometry = this.createGeometry();\n        var material = new three_module/* MeshBasicMaterial */.vBJ({\n          map: texture,\n          depthWrite: false\n        });\n        plane = new three_module/* Mesh */.Kj0(geometry, material);\n        this.addPlaneToScene();\n      }\n    } // createNewPlane() {\n    //   const geometry = this.createGeometry();\n    //   const material = this.createMaterial();\n    //   plane = new THREE.Mesh(geometry, material);\n    //   if (this.flipCanvas) {\n    //     //  console.log(this.flipCanvas);\n    //     plane.scale.set(-1, 1, 1);\n    //   } else plane.scale.set(1, 1, 1);\n    //   // this.updateDimensions();\n    //   this.addPlaneToScene();\n    //   if (this.isVideo) plane.material = this.createMaterial();\n    //   else plane.material = this.createMaterialImage();\n    // }\n\n  }, {\n    key: "addPlaneToScene",\n    value: function addPlaneToScene() {\n      if (plane != null) {\n        // this.updateDimensions();\n        this.scene.add(plane);\n        plane.position.set(0, 0, 0);\n      }\n    }\n  }, {\n    key: "createGeometry",\n    value: function createGeometry() {\n      return new three_module/* PlaneGeometry */._12(1, 1);\n    }\n  }, {\n    key: "createMaterial",\n    value: function createMaterial() {\n      if (this.image == null) {\n        return new three_module/* MeshBasicMaterial */.vBJ({\n          color: new three_module/* Color */.Ilk(0xcccccc)\n        });\n      } // console.log(this.image);\n\n\n      var texture = new three_module/* VideoTexture */.fO1(this.image); // texture.colorSpace = THREE.SRGBColorSpace;\n\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        map: texture //new THREE.CanvasTexture(this.image),\n        // depthWrite: false,\n        //color: 0xffff00,\n\n      });\n      return material;\n    }\n  }, {\n    key: "createMaterialImage",\n    value: function createMaterialImage() {\n      if (this.image == null) {\n        return new three_module/* MeshBasicMaterial */.vBJ({\n          color: new three_module/* Color */.Ilk(0xcccccc)\n        });\n      }\n\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        map: this.image //color: 0xffff00,\n\n      }); // material.needsUpdate = true;\n\n      return material;\n    }\n  }, {\n    key: "removePlaneFromScene",\n    value: function removePlaneFromScene() {// this.scene.remove(plane);\n      // plane = null;\n    }\n  }, {\n    key: "update",\n    value: function update(trueVideoWidth, trueVideoHeight) {\n      if (plane) {\n        /*\n        let windowAspect = window.innerWidth / window.innerHeight;\n        var mql = window.matchMedia("(orientation: portrait)");\n        let cw = this.video.videoWidth;\n        let ch = this.video.videoHeight;\n         let videoAspect;\n         if (mql.matches && isMobileDevice()) videoAspect = ch / cw;\n        else videoAspect = cw / ch;\n         let offset = 1;\n        let diff = 0;\n        let boundry = 0;\n         if (mql.matches && isMobileDevice()) {\n          offset = videoAspect;\n        } else {\n          if (windowAspect < videoAspect) {\n            diff = videoAspect - windowAspect;\n            offset = videoAspect - diff;\n            if (windowAspect < 1) offset = 1;\n          } else {\n            offset = videoAspect;\n          }\n        }\n         // this.log.innerHTML = `v9+${windowAspect} + ${videoAspect} + ${offset}\n        // + ${this.video.videoWidth}+ ${this.video.videoHeight} +${window.innerWidth}+${window.innerHeight}\n        // +${mql.matches}+  ${trueVideoWidth}+ ${trueVideoHeight} +  ${diff}`;\n         plane.scale.x = cw / offset;\n        plane.scale.y = ch / offset;\n        */\n        plane.scale.x = trueVideoWidth;\n        plane.scale.y = trueVideoHeight;\n      } // if (plane == null) {\n      //   this.createNewPlane();\n      // }\n      // if (this.sizeUpdated) {\n      //   this.removePlaneFromScene();\n      //   this.createNewPlane();\n      //   this.sizeUpdated = false;\n      //   this.imageUpdated = false;\n      // }\n      // if (this.imageUpdated) {\n      //   if (this.isVideo) null; //plane.material = this.createMaterial();\n      //   else plane.material = this.createMaterialImage();\n      //   this.imageUpdated = false;\n      // }\n\n    }\n  }]);\n\n  return VideoBackground;\n}();\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(9365);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.set-prototype-of.js\nvar es6_object_set_prototype_of = __webpack_require__(8838);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.get-prototype-of.js\nvar es6_object_get_prototype_of = __webpack_require__(1520);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.reflect.construct.js\nvar es6_reflect_construct = __webpack_require__(2139);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.create.js\nvar es6_object_create = __webpack_require__(8132);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.iterator.js\nvar es6_string_iterator = __webpack_require__(9115);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.iterator.js\nvar es6_array_iterator = __webpack_require__(6997);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js\nvar web_dom_iterable = __webpack_require__(1181);\n;// CONCATENATED MODULE: ./src/js/style_factory.js\n\n\nfunction style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar StyleFactory = /*#__PURE__*/function () {\n  function StyleFactory() {\n    style_factory_classCallCheck(this, StyleFactory);\n\n    if (this.constructor === StyleFactory) {\n      throw new Error("Abstract class StyleFactory cannot be instantiated.");\n    }\n  }\n\n  style_factory_createClass(StyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      throw new Error("Method createStyle() must be implemented.");\n    }\n  }]);\n\n  return StyleFactory;\n}();\n;// CONCATENATED MODULE: ./src/js/utils/color_utils.js\n\n\n\nfunction color_utils_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction color_utils_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction color_utils_createClass(Constructor, protoProps, staticProps) { if (protoProps) color_utils_defineProperties(Constructor.prototype, protoProps); if (staticProps) color_utils_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\nvar ColorUtils = /*#__PURE__*/function () {\n  function ColorUtils() {\n    color_utils_classCallCheck(this, ColorUtils);\n  }\n\n  color_utils_createClass(ColorUtils, null, [{\n    key: "hexToColor",\n    value: function hexToColor(hex) {\n      hex = hex.replace("#", "");\n      var red = parseInt(hex.substring(0, 2), 16);\n      var green = parseInt(hex.substring(2, 4), 16);\n      var blue = parseInt(hex.substring(4, 6), 16);\n      return "rgb(".concat(red, ", ").concat(green, ", ").concat(blue, ")");\n    }\n  }, {\n    key: "hexToVector4",\n    value: function hexToVector4(hex) {\n      var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1.0;\n      // Remove the hash if it exists\n      hex = hex.replace(/^#/, ""); // Parse the hex values\n\n      var bigint = parseInt(hex, 16);\n      var r = bigint >> 16 & 255;\n      var g = bigint >> 8 & 255;\n      var b = bigint & 255; // Normalize to [0, 1] range and create the THREE.Vector4\n\n      return new three_module/* Vector4 */.Ltg(r / 255, g / 255, b / 255, alpha);\n    }\n  }, {\n    key: "getColorWithIntensity",\n    value: function getColorWithIntensity(hex, intensity) {\n      var red = parseInt(hex.substring(1, 3), 16);\n      var green = parseInt(hex.substring(3, 5), 16);\n      var blue = parseInt(hex.substring(5, 7), 16);\n      var alpha = Math.floor(intensity / 100 * 255);\n      return "rgba(".concat(red, ", ").concat(green, ", ").concat(blue, ", ").concat(alpha, ")");\n    }\n  }]);\n\n  return ColorUtils;\n}();\n;// CONCATENATED MODULE: ./src/js/lips-style/glossy_face_mask.js\n\n\nfunction glossy_face_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction glossy_face_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction glossy_face_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) glossy_face_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) glossy_face_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar GlossyFaceMask = /*#__PURE__*/function () {\n  function GlossyFaceMask(_pattern, _texture) {\n    glossy_face_mask_classCallCheck(this, GlossyFaceMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var material = new three_module/* MeshPhysicalMaterial */.EJi({\n      map: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        // texture.premultiplyAlpha = true;\n        texture.flipY = false;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      roughness: 1,\n      metalness: 0,\n      envMapIntensity: 0,\n      toneMapped: false,\n      fog: false,\n      clearcoat: 0.8,\n      clearcoatRoughness: 0.2,\n      // envMap: new THREE.TextureLoader().load(_texture, function (texture) {\n      //   // texture.premultiplyAlpha = true;\n      //   texture.flipY = false;\n      // }),\n      color: threeColor\n    });\n    this.MaterialArray = [material];\n  }\n\n  glossy_face_mask_createClass(GlossyFaceMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return GlossyFaceMask;\n}();\n;// CONCATENATED MODULE: ./src/assets/Lips_Shimmer_2.png\n/* harmony default export */ const Lips_Shimmer_2 = (__webpack_require__.p + "assets/models/9047bdae55bc01310b83a52d34b7df35.png");\n;// CONCATENATED MODULE: ./src/js/lips-style/shimmer_face_mask.js\n\n\nfunction shimmer_face_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction shimmer_face_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction shimmer_face_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) shimmer_face_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) shimmer_face_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\nvar ShimmerFaceMask = /*#__PURE__*/function () {\n  function ShimmerFaceMask(_pattern, _texture) {\n    shimmer_face_mask_classCallCheck(this, ShimmerFaceMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor1 = null;\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n\n    if (_pattern.colors.length > 1) {\n      var color1 = _pattern.colors[1];\n      var newColor1 = ColorUtils.getColorWithIntensity(color1, 100);\n      threeColor1 = new three_module/* Color */.Ilk(newColor1);\n    } else {\n      threeColor1 = new three_module/* Color */.Ilk("0xffffff");\n    }\n\n    var material = new three_module/* MeshPhysicalMaterial */.EJi({\n      map: new three_module/* TextureLoader */.dpR().load(_texture[0], function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      roughness: 0.3,\n      metalness: 0,\n      envMapIntensity: 0,\n      toneMapped: false,\n      fog: false,\n      clearcoat: 1,\n      clearcoatRoughness: 0.2,\n      specularIntensity: 1,\n      specularColor: threeColor,\n      color: threeColor\n    });\n    var material1 = new three_module/* MeshPhysicalMaterial */.EJi({\n      map: new three_module/* TextureLoader */.dpR().load(_texture[1], function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      toneMapped: false,\n      fog: false,\n      roughness: 0.24,\n      metalness: 0,\n      envMapIntensity: 0,\n      specularIntensity: 0.6,\n      specularColor: threeColor,\n      color: threeColor1\n    });\n    this.MaterialArray = [material, material1];\n  }\n\n  shimmer_face_mask_createClass(ShimmerFaceMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return ShimmerFaceMask;\n}();\n;// CONCATENATED MODULE: ./src/js/lips-style/matte_face_mask.js\n\n\nfunction matte_face_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matte_face_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matte_face_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) matte_face_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) matte_face_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar MatteFaceMask = /*#__PURE__*/function () {\n  function MatteFaceMask(_pattern, _texture) {\n    matte_face_mask_classCallCheck(this, MatteFaceMask);\n\n    // console.log(_pattern);\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var material = new three_module/* MeshBasicMaterial */.vBJ({\n      map: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      toneMapped: false,\n      color: threeColor,\n      fog: false\n    });\n    this.MaterialArray = [material];\n  }\n\n  matte_face_mask_createClass(MatteFaceMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteFaceMask;\n}(); // export function getMatteFaceMask(_texture, _color) {\n//   const material = new THREE.MeshBasicMaterial({\n//     map: new THREE.TextureLoader().load(_texture, function (texture) {\n//       // texture.premultiplyAlpha = true;\n//       texture.flipY = false;\n//     }),\n//     transparent: true,\n//     side: THREE.DoubleSide,\n//     roughness: 1,\n//     metalness: 0,\n//     envMapIntensity: 0,\n//     toneMapped: false,\n//     color: _color,\n//   });\n//   return material;\n// }\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.function.name.js\nvar es6_function_name = __webpack_require__(6059);\n;// CONCATENATED MODULE: ./src/js/three_components/texture_mapping.js\n// import faceTexture from "../../assets/model.png";\n//import TotalTexture from "../../assets/makeupNew.png";\n// import EyeLinerTexture from "../../assets/Eyeliner_1.png";\n// import EyeShadowTexture from "../../assets/Eyeshadow_1.png";\n// import LipsTexture from "../../assets/Lips_1.png";\nvar textureMapping = {// //TotalTexture,\n  // EyeLinerTexture,\n  // EyeShadowTexture,\n  // LipsTexture,\n};\n/* harmony default export */ const texture_mapping = (textureMapping);\n;// CONCATENATED MODULE: ./src/constants/configContants.js\n\nvar iconLinks = {\n  imgTryOnNormal: "".concat(env/* default */.Z.ASSET_URL1, "icons/imagetryon_n.svg"),\n  imgTryOnSelect: "".concat(env/* default */.Z.ASSET_URL1, "icons/config_s.svg"),\n  liveTryOnNormal: "".concat(env/* default */.Z.ASSET_URL1, "icons/livetryon_n.svg"),\n  liveTryOnSelect: "".concat(env/* default */.Z.ASSET_URL1, "icons/livetryon_s.svg"),\n  modelTryOnNormal: "".concat(env/* default */.Z.ASSET_URL1, "icons/modeltryon_n.svg"),\n  modelTryOnSelect: "".concat(env/* default */.Z.ASSET_URL1, "icons/modeltryon_s.svg")\n};\nvar configContants_modelSelectionIcons = {\n  selected: "".concat(env/* default */.Z.ASSET_URL1, "icons/modelselection_s.svg")\n};\nvar iconConfig = [{\n  normalIconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/imagetryon_n.svg"),\n  selectIconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/imagetryon_s.svg"),\n  tag: "imgTryOn",\n  isSelected: false,\n  mutuallyConnected: true,\n  toolTip: "Browse Image"\n}, {\n  normalIconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/livetryon_n.svg"),\n  selectIconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/livetryon_s.svg"),\n  tag: "liveTryOn",\n  isSelected: false,\n  mutuallyConnected: true,\n  toolTip: "Experience Live"\n}, {\n  normalIconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/modeltryon_n.svg"),\n  selectIconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/modeltryon_s.svg"),\n  tag: "modelTryOn",\n  isSelected: false,\n  mutuallyConnected: true,\n  toolTip: "Model Trial"\n}, {\n  normalIconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/config_n.svg"),\n  selectIconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/config_s.svg"),\n  tag: "configScreen",\n  isSelected: false,\n  mutuallyConnected: false,\n  toolTip: "Adjustment"\n}];\nvar configContants_sliderConfigurations = [{\n  text: "Opacity",\n  leftText: "",\n  rightText: "",\n  tag: "Opacity",\n  min: 0.2,\n  max: 0.8,\n  step: 0.01,\n  defaultValue: 0.5\n} // {\n//   text: "Shift Horizontally",\n//   leftText: "Left",\n//   rightText: "Right",\n//   tag: "horizontal",\n//   min: -1,\n//   max: 1,\n//   step: 0.1,\n//   defaultValue: 0,\n// },\n// {\n//   text: "Zoom",\n//   leftText: "Zoom Out",\n//   rightText: "Zoom In",\n//   tag: "zoom",\n//   min: 0.8,\n//   max: 1.2,\n//   step: 0.03,\n//   defaultValue: 1,\n// },\n];\nvar distortConfig = {\n  move: [{\n    iconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/move_left_n.svg"),\n    tag: "left"\n  }, {\n    iconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/move_right_n.svg"),\n    tag: "right"\n  }, {\n    iconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/move_up_n.svg"),\n    tag: "up"\n  }, {\n    iconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/move_down_n.svg"),\n    tag: "down"\n  }],\n  zoom: [{\n    iconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/zoom_in_n.svg"),\n    tag: "zoom_in"\n  }, {\n    iconLink: "".concat(env/* default */.Z.ASSET_URL1, "icons/zoom_out_n.svg"),\n    tag: "zoom_out"\n  }]\n};\nvar configBottomSheetConfig = {\n  tabs: [{\n    label: "Finger",\n    selectedIcon: "",\n    tag: "",\n    unSelectedIcon: "",\n    allowedCategory: null,\n    selected: false,\n    subComponent: {\n      type: "fingers"\n    }\n  }, {\n    label: "Position",\n    tag: "position",\n    selectedIcon: "",\n    unSelectedIcon: "",\n    allowedCategory: null,\n    selected: false,\n    subComponent: {\n      type: "slider",\n      leftText: "",\n      rightText: "",\n      defaultValue: 50\n    }\n  }, {\n    label: "Back-Forth",\n    tag: "horizontal",\n    selectedIcon: "",\n    unSelectedIcon: "",\n    allowedCategory: null,\n    selected: false,\n    subComponent: {\n      type: "slider",\n      leftText: "",\n      rightText: "",\n      defaultValue: 50\n    }\n  }, {\n    label: "Scale",\n    tag: "scale",\n    selectedIcon: "",\n    unSelectedIcon: "",\n    allowedCategory: null,\n    selected: false,\n    subComponent: {\n      type: "slider",\n      leftText: "",\n      defaultValue: 50\n    }\n  }, {\n    label: "Color Adjustment",\n    tag: "intensity",\n    selectedIcon: "",\n    unSelectedIcon: "",\n    allowedCategory: ["lipstick", "eyeLiner", "eyeShadow", "blush"],\n    selected: false,\n    subComponent: {\n      type: "slider",\n      leftText: "Intensity",\n      defaultValue: 50\n    }\n  }]\n};\nvar CategoriesTypes = [{\n  allowedCategory: ["lipstick", "eyeliner", "eyeshadow", "blush", "eyebrow"],\n  apiPayload: "lipstick",\n  // any of makeup category\n  categoryKey: "makeup"\n}, {\n  allowedCategory: ["hair"],\n  apiPayload: "hair",\n  // hair category\n  categoryKey: "hair"\n}];\n;// CONCATENATED MODULE: ./src/js/utils/sliderHandler.js\n\nvar opacityDefaultValue = configContants_sliderConfigurations[0].defaultValue;\nvar opacityValue = configContants_sliderConfigurations[0].defaultValue;\nfunction getOpacitySliderValue() {\n  return opacityValue;\n}\nfunction setDefaultOpacitySliderValue(value) {\n  opacityDefaultValue = value;\n}\nfunction setOpacitySliderValue(value) {\n  opacityValue = value;\n}\nfunction ResetOpacitySliderValue() {\n  opacityValue = opacityDefaultValue;\n}\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.slice.js\nvar es6_array_slice = __webpack_require__(110);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.from.js\nvar es6_array_from = __webpack_require__(522);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.is-array.js\nvar es6_array_is_array = __webpack_require__(774);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(3379);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(7795);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(569);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(3565);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(9216);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(4589);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/configSlider.css\nvar configSlider = __webpack_require__(3254);\n;// CONCATENATED MODULE: ./src/htmlService/styles/configSlider.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, "head");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(configSlider/* default */.Z, options);\n\n\n\n\n       /* harmony default export */ const styles_configSlider = (configSlider/* default */.Z && configSlider/* default */.Z.locals ? configSlider/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/assets/svg/Angle Right.svg\n/* harmony default export */ const Angle_Right = (__webpack_require__.p + "assets/models/6b0ce42a64a47f553718d3988c3990b2.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/resetBig.svg\n/* harmony default export */ const resetBig = (__webpack_require__.p + "assets/models/5f362eb24ce2c23177b1ee26c5d0702a.svg");\n;// CONCATENATED MODULE: ./src/htmlService/getHtmlElemets.js\nvar loaderContainer = null;\nvar LoaderImage = null;\nvar videoContainer = null;\nvar video_Container = null;\nvar optionsContainer = null;\nvar canavas_container = null;\nvar imageInput = null;\nvar dragContainer = null;\nvar dragLineSpan = null;\nvar dragIcon = null;\nvar modelsContainer = null;\nvar dropZone = null;\nvar canvas = null;\nvar configurationContainer = null;\nvar configurationSubContainer = null;\nvar toastElement = null;\nvar canvasBackButton = null;\nvar log = null;\nvar tryOnScreen = null;\nvar settingOptions = null;\nvar statusPill = null;\nvar popupModal = null;\nvar screenShotTag = null;\nvar lottieLoader = null;\nvar setHtmlElements = function setHtmlElements() {\n  loaderContainer = document.querySelector(".loader-container");\n  LoaderImage = document.getElementById("loadergif");\n  videoContainer = document.querySelector(".video-container");\n  video_Container = document.querySelector(".video_container");\n  optionsContainer = document.querySelector(".options-conatiner");\n  canavas_container = document.querySelector(".canavas_container");\n  imageInput = document.getElementById("imageInput");\n  dragContainer = document.querySelector(".drag-container");\n  dragLineSpan = document.querySelector(".drag-line-container");\n  dragIcon = document.querySelector(".drag-btn");\n  modelsContainer = document.querySelector(".models-container");\n  dropZone = document.getElementById("dropZone");\n  canvas = document.querySelector(".output_canvas");\n  configurationContainer = document.querySelector(".configuration-container");\n  configurationSubContainer = document.querySelector(".configuration-sub-container");\n  toastElement = document.getElementById("snackbar");\n  canvasBackButton = document.querySelector("#canvas-back-btn");\n  log = document.querySelector(".log-Text");\n  tryOnScreen = document.querySelector(".tryon-screen");\n  settingOptions = document.querySelector(".setting-options");\n  statusPill = document.querySelector(".status-pill");\n  popupModal = document.querySelector(".popup-modal");\n  screenShotTag = document.querySelector(".screenshot-tag");\n  lottieLoader = document.querySelector("#lottie");\n};\nfunction getHtmlElemets_getHtmlElements() {\n  return {\n    loaderContainer: loaderContainer,\n    LoaderImage: LoaderImage,\n    videoContainer: videoContainer,\n    video_Container: video_Container,\n    optionsContainer: optionsContainer,\n    canavas_container: canavas_container,\n    imageInput: imageInput,\n    dragContainer: dragContainer,\n    dragLineSpan: dragLineSpan,\n    dragIcon: dragIcon,\n    modelsContainer: modelsContainer,\n    dropZone: dropZone,\n    canvas: canvas,\n    configurationContainer: configurationContainer,\n    configurationSubContainer: configurationSubContainer,\n    toastElement: toastElement,\n    canvasBackButton: canvasBackButton,\n    log: log,\n    tryOnScreen: tryOnScreen,\n    settingOptions: settingOptions,\n    statusPill: statusPill,\n    popupModal: popupModal,\n    screenShotTag: screenShotTag,\n    lottieLoader: lottieLoader\n  };\n}\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/settingOptions.css\nvar styles_settingOptions = __webpack_require__(991);\n;// CONCATENATED MODULE: ./src/htmlService/styles/settingOptions.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar settingOptions_options = {};\n\nsettingOptions_options.styleTagTransform = (styleTagTransform_default());\nsettingOptions_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      settingOptions_options.insert = insertBySelector_default().bind(null, "head");\n    \nsettingOptions_options.domAPI = (styleDomAPI_default());\nsettingOptions_options.insertStyleElement = (insertStyleElement_default());\n\nvar settingOptions_update = injectStylesIntoStyleTag_default()(styles_settingOptions/* default */.Z, settingOptions_options);\n\n\n\n\n       /* harmony default export */ const htmlService_styles_settingOptions = (styles_settingOptions/* default */.Z && styles_settingOptions/* default */.Z.locals ? styles_settingOptions/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/assets/svg/settingIcon.svg\n/* harmony default export */ const settingIcon = (__webpack_require__.p + "assets/models/321474c901a403472a8efc6d471f5bb0.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/zoomIn.svg\n/* harmony default export */ const zoomIn = (__webpack_require__.p + "assets/models/b2950efd71b5ba30591cb7047bfd8af8.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/zoomOut.svg\n/* harmony default export */ const zoomOut = (__webpack_require__.p + "assets/models/2b4c801ed8ae140c923d8455f605f98d.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/compareIcon.svg\n/* harmony default export */ const compareIcon = (__webpack_require__.p + "assets/models/2c877f981f85423e1abaecd763721f11.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/sliderSelected.svg\n/* harmony default export */ const sliderSelected = (__webpack_require__.p + "assets/models/ed493b4d3da0687d525a232af130d324.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/settingsIconSelected.svg\n/* harmony default export */ const settingsIconSelected = (__webpack_require__.p + "assets/models/e242d716e0950600dac8aad41d076c11.svg");\n;// CONCATENATED MODULE: ./src/htmlService/settingOptions.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar SettingOptionsConfig = [{\n  tag: "configSettings",\n  icon: settingIcon,\n  selectedIcon: settingsIconSelected,\n  isSelected: false,\n  isDisabled: false,\n  show: true,\n  toggleRequired: true\n}, {\n  tag: "comparison",\n  icon: compareIcon,\n  selectedIcon: sliderSelected,\n  isSelected: false,\n  isDisabled: false,\n  show: true,\n  toggleRequired: true\n}, {\n  tag: "zoomIn",\n  icon: zoomIn,\n  selectedIcon: zoomIn,\n  isSelected: false,\n  isDisabled: false,\n  show: true,\n  toggleRequired: false\n}, {\n  tag: "zoomOut",\n  icon: zoomOut,\n  selectedIcon: zoomOut,\n  isSelected: false,\n  isDisabled: true,\n  show: true,\n  toggleRequired: false\n}, {\n  tag: "capture",\n  icon: "",\n  selectedIcon: "",\n  isSelected: false,\n  isDisabled: false,\n  show: true,\n  toggleRequired: true,\n  customIcon: true\n}];\nvar ElementsList = [];\nfunction buildSettingOptions(handler) {\n  var _getHtmlElements = getHtmlElemets_getHtmlElements(),\n      settingOptions = _getHtmlElements.settingOptions;\n\n  var container = document.createElement("div");\n  container.classList.add("settingOptions-container");\n  SettingOptionsConfig.forEach(function (item, index) {\n    if (item !== null && item !== void 0 && item.show) {\n      var iconContainer = document.createElement("div");\n      iconContainer.classList.add("settingOptions-icon-container");\n\n      if (item !== null && item !== void 0 && item.isDisabled) {\n        iconContainer.classList.add("settingOptions-icon-disabled");\n      }\n\n      if (!(item !== null && item !== void 0 && item.customIcon)) {\n        var iconWrapperDiv = document.createElement("div");\n        iconWrapperDiv.classList.add("settingOptions-icon-wrapper");\n        var icon = document.createElement("img");\n        icon.id = "settingIcon-".concat(item.tag);\n        icon.src = item.icon;\n        iconWrapperDiv.appendChild(icon);\n        iconContainer.appendChild(iconWrapperDiv);\n      } else {\n        var _iconWrapperDiv = document.createElement("div");\n\n        _iconWrapperDiv.classList.add("settingOptions-custom-icon-wrapper");\n\n        var customIcon = document.createElement("div");\n        customIcon.classList.add("settingOptions-custom-icon");\n\n        _iconWrapperDiv.appendChild(customIcon);\n\n        iconContainer.appendChild(_iconWrapperDiv);\n      }\n\n      container.appendChild(iconContainer);\n      ElementsList.push(iconContainer);\n      iconContainer.addEventListener("click", function () {\n        handleSettingIconClick(item, index, handler);\n      });\n    }\n  });\n  settingOptions.appendChild(container);\n}\n\nfunction handleSettingIconClick(configItem, ClickedIndex, handler) {\n  if (configItem.isDisabled) return;\n\n  if (configItem !== null && configItem !== void 0 && configItem.toggleRequired) {\n    handleToggle(configItem, ClickedIndex);\n  }\n\n  handler(configItem, ClickedIndex, ElementsList);\n}\n\nfunction handleToggle(configItem, ClickedIndex) {\n  // handle clicked item first\n  var icon = document.getElementById("settingIcon-".concat(configItem.tag));\n\n  if (configItem.isSelected && !(configItem !== null && configItem !== void 0 && configItem.customIcon)) {\n    ElementsList[ClickedIndex].classList.remove("settingOptions-icon-selected");\n    configItem.isSelected = false;\n    icon.src = configItem.icon;\n  } else if (!configItem.isSelected && !(configItem !== null && configItem !== void 0 && configItem.customIcon)) {\n    ElementsList[ClickedIndex].classList.add("settingOptions-icon-selected");\n    configItem.isSelected = true;\n    icon.src = configItem.selectedIcon;\n  } // toggle icon that requires to be toggled\n\n\n  var _iterator = _createForOfIteratorHelper(SettingOptionsConfig.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          eachConfig = _step$value[1];\n\n      if (index !== ClickedIndex && eachConfig !== null && eachConfig !== void 0 && eachConfig.toggleRequired && !(eachConfig !== null && eachConfig !== void 0 && eachConfig.customIcon)) {\n        if (eachConfig !== null && eachConfig !== void 0 && eachConfig.isSelected) {\n          ElementsList[index].classList.remove("settingOptions-icon-selected");\n          eachConfig.isSelected = false;\n          var prevSelectedIcon = document.getElementById("settingIcon-".concat(eachConfig.tag));\n          prevSelectedIcon.src = eachConfig.icon;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction unSelectAllSettings() {\n  SettingOptionsConfig.forEach(function (item, indx) {\n    item.isSelected = false;\n    ElementsList[indx].classList.remove("settingOptions-icon-selected");\n    var prevSelectedIcon = document.getElementById("settingIcon-".concat(item.tag));\n    if (prevSelectedIcon !== null && prevSelectedIcon !== void 0 && prevSelectedIcon.src) prevSelectedIcon.src = item.icon;\n  });\n}\nfunction disableSettingIcon(tag) {\n  var idxToBeDisabled = SettingOptionsConfig.map(function (item) {\n    return item.tag;\n  }).indexOf(tag);\n\n  if (!SettingOptionsConfig[idxToBeDisabled].isDisabled) {\n    ElementsList[idxToBeDisabled].classList.add("settingOptions-icon-disabled");\n    SettingOptionsConfig[idxToBeDisabled].isDisabled = true;\n  }\n}\nfunction enableSettingIcon(tag) {\n  var idxToBeEnabled = SettingOptionsConfig.map(function (item) {\n    return item.tag;\n  }).indexOf(tag);\n\n  if (SettingOptionsConfig[idxToBeEnabled].isDisabled) {\n    ElementsList[idxToBeEnabled].classList.remove("settingOptions-icon-disabled");\n    SettingOptionsConfig[idxToBeEnabled].isDisabled = false;\n  }\n}\nfunction enableBothZoomIcons() {\n  enableSettingIcon("zoomIn");\n  enableSettingIcon("zoomOut");\n}\nfunction showSettingOptions() {\n  var _getHtmlElements2 = getHtmlElemets_getHtmlElements(),\n      settingOptions = _getHtmlElements2.settingOptions;\n\n  settingOptions.classList.remove("hide-settingOptions");\n  settingOptions.style.visibility = "visible";\n}\nfunction hideSettingOptions() {\n  var _getHtmlElements3 = getHtmlElemets_getHtmlElements(),\n      settingOptions = _getHtmlElements3.settingOptions;\n\n  settingOptions.classList.add("hide-settingOptions");\n  settingOptions.style.visibility = "hidden";\n}\n;// CONCATENATED MODULE: ./src/htmlService/configSlider.js\nfunction configSlider_slicedToArray(arr, i) { return configSlider_arrayWithHoles(arr) || configSlider_iterableToArrayLimit(arr, i) || configSlider_unsupportedIterableToArray(arr, i) || configSlider_nonIterableRest(); }\n\nfunction configSlider_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction configSlider_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction configSlider_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\nfunction configSlider_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = configSlider_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction configSlider_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return configSlider_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return configSlider_arrayLikeToArray(o, minLen); }\n\nfunction configSlider_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\nvar configContainerDiv = null;\nvar ringContainerDiv = null;\nvar confgSliderValueDiv = null;\nvar sliderInput = null;\nvar iconBaseUrl = "".concat(env/* default */.Z.ASSET_URL1, "icons/");\nvar selectedImage = null;\nvar defaultOpacity = 50;\nfunction setDefaultOpacitySlider(value) {\n  defaultOpacity = value * 100;\n  ResetSliders();\n}\nvar initConfigContainer = function initConfigContainer(conifContainer, ringContainer) {\n  configContainerDiv = conifContainer;\n}; // export const createSlider = (containerList, handler) => {\n//   let moveBtnsContainer = containerList[0];\n//   let zoomBtnsContainer = containerList[1];\n//   const slideDiv = document.createElement("div");\n//   const MoveImgDiv = document.createElement("div");\n//   MoveImgDiv.classList.add("d-flex");\n//   MoveImgDiv.classList.add("g-8");\n//   const ZoomImgDiv = document.createElement("div");\n//   ZoomImgDiv.classList.add("d-flex");\n//   ZoomImgDiv.classList.add("g-8");\n//   for (const [index, sliderConfig] of distortConfig.move.entries()) {\n//     const img = document.createElement("img");\n//     img.src = sliderConfig.iconLink;\n//     img.addEventListener("click", () => {\n//       handler(sliderConfig.tag);\n//     });\n//     MoveImgDiv.appendChild(img);\n//   }\n//   moveBtnsContainer.appendChild(MoveImgDiv);\n//   for (const [index, sliderConfig] of distortConfig.zoom.entries()) {\n//     const img = document.createElement("img");\n//     img.src = sliderConfig.iconLink;\n//     img.addEventListener("click", () => {\n//       handler(sliderConfig.tag);\n//     });\n//     ZoomImgDiv.appendChild(img);\n//   }\n//   zoomBtnsContainer.appendChild(ZoomImgDiv);\n// };\n\nvar createSlider = function createSlider(container, handler) {\n  var _iterator = configSlider_createForOfIteratorHelper(sliderConfigurations.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = configSlider_slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          sliderConfig = _step$value[1];\n\n      var eachSliderWrapperDiv = "\\n        <div class=\'config-slider\'>\\n            <div class=\\"config-reset-icon\\">\\n              <img src=".concat(resetIcon, "></img>\\n            </div>\\n            <div class=\\"config-slider-type\\">Depth</div>\\n            <div class=\'config-type-slider\'>\\n                <input id=\\"config-slider-type").concat(index, "\\" class=\\"configSlider\\" type=\\"range\\" id=\\"scaleSlider\\" min=\\"").concat(sliderConfig.min, "\\" max=\\"").concat(sliderConfig.max, "\\" step=\\"").concat(sliderConfig.step, "\\" value=\\"").concat(sliderConfig.defaultValue, "\\">\\n            </div>\\n            <div class=\\"config-slider-value\\">").concat(defaultOpacity, "</div>\\n        </div>\\n    ");\n      container.innerHTML += eachSliderWrapperDiv;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  confgSliderValueDiv = document.querySelector(".config-slider-value");\n\n  var _iterator2 = configSlider_createForOfIteratorHelper(sliderConfigurations.entries()),\n      _step2;\n\n  try {\n    var _loop = function _loop() {\n      var _step2$value = configSlider_slicedToArray(_step2.value, 2),\n          index = _step2$value[0],\n          sliderConfig = _step2$value[1];\n\n      var sliderInput = document.querySelector("#config-slider-type".concat(index));\n      sliderInput.addEventListener("input", function () {\n        confgSliderValueDiv.innerText = sliderInput.value;\n        handler(sliderInput.value, sliderConfig.tag);\n      });\n    };\n\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n};\nvar createConfigBottomSheet = function createConfigBottomSheet(listener) {\n  var _getHtmlElements = getHtmlElemets_getHtmlElements(),\n      configurationContainer = _getHtmlElements.configurationContainer;\n\n  var configBottomSheetFragment = document.createDocumentFragment();\n  var configBottomSheetDiv = document.createElement("div");\n  var configBottomSheetHeaderDiv = document.createElement("div");\n  var configBottomSheetDividerDiv = document.createElement("div");\n  var configBottomSheetContentDiv = document.createElement("div");\n  var configBottomSheetActionsDiv = document.createElement("div");\n  configBottomSheetDiv.classList.add("config-bottom-sheet-container");\n  configBottomSheetHeaderDiv.classList.add("config-bottom-sheet-header");\n  configBottomSheetDividerDiv.classList.add("config-bottom-sheet-divider");\n  configBottomSheetContentDiv.classList.add("config-bottom-sheet-content");\n  configBottomSheetActionsDiv.classList.add("config-bottom-sheet-actions");\n  var HeaderElements = getHeaderElements();\n  configBottomSheetHeaderDiv.append(HeaderElements);\n  var SheetContent = getSheetTabContent(listener);\n  configBottomSheetContentDiv.append(SheetContent);\n  var SheetActionsElements = getSheetActionsContent(listener);\n  configBottomSheetActionsDiv.append(SheetActionsElements);\n  configBottomSheetDiv.append(configBottomSheetHeaderDiv, configBottomSheetDividerDiv, configBottomSheetContentDiv, configBottomSheetActionsDiv);\n  configBottomSheetFragment.append(configBottomSheetDiv);\n  configurationContainer.appendChild(configBottomSheetFragment);\n};\n\nfunction getSheetTabContent(handler) {\n  var sheetContentFragment = document.createDocumentFragment();\n  var LeftText = document.createElement("div");\n  LeftText.classList.add("config-bottom-sheet-left-text");\n  LeftText.innerText = "Intensity";\n  var SliderDiv = document.createElement("div");\n  SliderDiv.classList.add("config-bottom-sheet-slider");\n  var SliderInput = document.createElement("input");\n  SliderInput.type = "range";\n  SliderInput.step = "0.01";\n  SliderDiv.append(SliderInput);\n  SliderInput.addEventListener("input", function () {\n    handleSliderCss(sliderInput.value);\n    handleInputEvent(SliderInput.value, handler);\n  });\n  var RightText = document.createElement("div");\n  RightText.classList.add("config-bottom-sheet-right-text");\n  RightText.innerText = "80";\n  RightText.min = "0.2";\n  RightText.max = "0.8";\n  confgSliderValueDiv = RightText;\n  sliderInput = SliderInput;\n  sheetContentFragment.append(LeftText, SliderDiv, RightText);\n  return sheetContentFragment;\n}\n\nfunction handleInputEvent(value, handler) {\n  confgSliderValueDiv.innerText = Math.round(value);\n  handler(value / 100, "Opacity");\n}\n\nfunction getHeaderElements() {\n  var HeaderFragment = document.createDocumentFragment();\n\n  var _iterator3 = configSlider_createForOfIteratorHelper(configBottomSheetConfig.tabs),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _elem$allowedCategory;\n\n      var elem = _step3.value;\n\n      if ((_elem$allowedCategory = elem.allowedCategory) !== null && _elem$allowedCategory !== void 0 && _elem$allowedCategory.length) {\n        var PillDiv = document.createElement("div");\n        PillDiv.classList.add("config-bottom-sheet-header-text");\n        PillDiv.innerText = elem.label;\n        HeaderFragment.append(PillDiv);\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return HeaderFragment;\n}\n\nfunction getSheetActionsContent(handler) {\n  var SheetActionFragment = document.createDocumentFragment();\n  var ResetIconDiv = document.createElement("div");\n  var CloseIconDiv = document.createElement("div");\n  ResetIconDiv.classList.add("config-bottom-sheet-reset-button");\n  CloseIconDiv.classList.add("config-bottom-sheet-close-button");\n  ResetIconDiv.addEventListener("click", function () {\n    handler("", "reset");\n  });\n  CloseIconDiv.addEventListener("click", function () {\n    handler("", "close");\n  });\n  var ResetIcon = document.createElement("img");\n  var CloseIcon = document.createElement("img");\n  ResetIcon.src = resetBig;\n  CloseIcon.src = Angle_Right;\n  ResetIconDiv.append(ResetIcon);\n  CloseIconDiv.append(CloseIcon);\n  SheetActionFragment.append(ResetIconDiv, CloseIconDiv);\n  return SheetActionFragment;\n}\n\nvar ResetSliders = function ResetSliders() {\n  // const sliderInput = document.querySelector(`#config-slider-type${index}`);\n  sliderInput.value = defaultOpacity;\n  confgSliderValueDiv.innerText = defaultOpacity;\n  handleSliderCss(defaultOpacity);\n};\n\nfunction handleSliderCss(value) {\n  sliderInput.style.background = "linear-gradient(to right, white 0%, white ".concat(value, "%, rgba(255, 255, 255, 0.4) ").concat(value, "%, rgba(255, 255, 255, 0.4) 100%)");\n}\n\nvar toggleConfigContainer = function toggleConfigContainer() {\n  // if (!iconConfig[3].isSelected) {\n  if (!SettingOptionsConfig[0].isSelected) {\n    // above value gets set in the settingOptions file first\n    hideConfigContainer();\n  } else {\n    showConfigContainer();\n  }\n};\nvar showConfigContainer = function showConfigContainer() {\n  if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) return;\n  configContainerDiv.classList.add("show-configuration-container");\n};\nvar isConfigContainerActive = function isConfigContainerActive() {\n  if (configContainerDiv.style.visibility === "visible") {\n    return false;\n  }\n\n  return true;\n};\nvar hideConfigContainer = function hideConfigContainer() {\n  configContainerDiv.classList.remove("show-configuration-container");\n};\nfunction setApplyButton(handler) {\n  var applyButton = document.getElementById("config-close"); // applyButton.addEventListener("click", (event) => {\n  //   handler();\n  // });\n}\nfunction setResetButton(handler) {// const resetButton = document.querySelector(".config-reset-icon");\n  // resetButton.addEventListener("click", (event) => {\n  //   handler();\n  //   handler(2);\n  // });\n}\n;// CONCATENATED MODULE: ./src/js/three_components/FlickerSmoother.js\n\n\nfunction FlickerSmoother_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction FlickerSmoother_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction FlickerSmoother_createClass(Constructor, protoProps, staticProps) { if (protoProps) FlickerSmoother_defineProperties(Constructor.prototype, protoProps); if (staticProps) FlickerSmoother_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n //import { GUI } from "dat.gui";\n\nvar FlickerSmoother = /*#__PURE__*/function () {\n  function FlickerSmoother() {\n    FlickerSmoother_classCallCheck(this, FlickerSmoother);\n\n    this.currentvector = new three_module/* Vector3 */.Pa4(0.0004, 0.0003, 0.003);\n    this.params = {\n      floatValue: 0.5 // Initial float value\n\n    }; // const gui = new GUI();\n    // const vectorFolder2 = gui.addFolder("Vector Controls");\n    // vectorFolder2.add(this.currentvector, "x", 0, 5).step(0.0001);\n    // vectorFolder2.add(this.currentvector, "y", 0, 0.01).step(0.0001);\n    // vectorFolder2.add(this.currentvector, "z", 0, 0.01).step(0.0001);\n  }\n\n  FlickerSmoother_createClass(FlickerSmoother, [{\n    key: "smoothAndFilterLandmarks",\n    value: function smoothAndFilterLandmarks(previousLandmarks, currentLandmarks) {\n      var smoothedPosition = new three_module/* Vector3 */.Pa4();\n      smoothedPosition.lerpVectors(previousLandmarks, currentLandmarks, this.params.floatValue);\n      var distance = currentLandmarks.distanceTo(smoothedPosition);\n      var threshold = this.currentvector.z;\n\n      if (distance > threshold) {\n        smoothedPosition.copy(currentLandmarks);\n      } else {}\n\n      return smoothedPosition;\n    }\n  }, {\n    key: "smoothAndFilterLandmarksAll",\n    value: function smoothAndFilterLandmarksAll(previousLandmarks, currentLandmarks) {\n      var smoothedLandmarks = [];\n\n      for (var i = 0; i < currentLandmarks.length; i++) {\n        var previousLandmark = new three_module/* Vector3 */.Pa4(previousLandmarks[i].x, previousLandmarks[i].y, previousLandmarks[i].z);\n        var currentLandmark = new three_module/* Vector3 */.Pa4(currentLandmarks[i].x, currentLandmarks[i].y, currentLandmarks[i].z);\n        var smoothedPosition = new three_module/* Vector3 */.Pa4();\n        smoothedPosition.lerpVectors(previousLandmark, currentLandmark, this.params.floatValue);\n        var distance = currentLandmark.distanceTo(smoothedPosition);\n        var threshold = this.currentvector.z;\n\n        if (distance > threshold) {\n          smoothedLandmarks.push({\n            x: currentLandmark.x,\n            y: currentLandmark.y,\n            z: currentLandmark.z\n          });\n        } else {\n          // smoothedLandmarks.push({\n          //   x: smoothedPosition.x,\n          //   y: smoothedPosition.y,\n          //   z: smoothedPosition.z,\n          // });\n          var previousLandmark1 = new three_module/* Vector3 */.Pa4(currentLandmarks[i].x, currentLandmarks[i].y, currentLandmarks[i].z);\n          var currentLandmark1 = new three_module/* Vector3 */.Pa4(smoothedPosition.x, smoothedPosition.y, smoothedPosition.z);\n          var smoothedPosition1 = new three_module/* Vector3 */.Pa4();\n          smoothedPosition1.lerpVectors(previousLandmark1, currentLandmark1, this.params.floatValue);\n          var distance1 = currentLandmark1.distanceTo(smoothedPosition1);\n          var threshold1 = this.currentvector.y; // console.log(distance1, threshold1);\n\n          if (distance1 > threshold1) {\n            smoothedLandmarks.push({\n              x: smoothedPosition.x,\n              y: smoothedPosition.y,\n              z: smoothedPosition.z\n            });\n          } else {\n            smoothedLandmarks.push({\n              x: smoothedPosition1.x,\n              y: smoothedPosition1.y,\n              z: smoothedPosition1.z\n            });\n          }\n        }\n      }\n\n      return smoothedLandmarks;\n    }\n  }]);\n\n  return FlickerSmoother;\n}();\n;// CONCATENATED MODULE: ./src/js/lips-style/lips_style.js\n\n\n\n\n\n\nfunction lips_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction lips_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction lips_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) lips_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) lips_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n\nvar lips_style_LipsStyle = /*#__PURE__*/function () {\n  function LipsStyle(sku, scene, width, height, materials) {\n    lips_style_classCallCheck(this, LipsStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = [];\n    this.flickerSmoother = new FlickerSmoother();\n    this.Prevlandmark;\n    this.PrevlandmarkBase;\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n  }\n\n  lips_style_createClass(LipsStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      for (var i = 0; i < this.materialArray.length; i++) {\n        var landmarks = void 0;\n        landmarks = this.landmarks;\n        this.Prevlandmark = this.landmarks;\n        var geometry = makeGeometry(landmarks, "lipstick");\n\n        if (!this.faces || this.faces.length <= i) {\n          var tempface = new three_module/* Mesh */.Kj0(geometry, this.materialArray[i]);\n          this.faces.push(tempface);\n          this.scene.add(tempface);\n          this.faces[i].receiveShadow = false; // Disable receiving shadows\n\n          this.faces[i].castShadow = false; // Disable casting shadows\n\n          this.faces[i].position.set(0, 0, 0);\n          this.faces[i].name = "makeup";\n        } else {\n          this.faces[i].geometry = geometry;\n          this.faces[i].material = this.materialArray[i];\n        }\n\n        this.faces[i].scale.set(this.width, this.height, this.width / 2);\n      }\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n\n      while (!!this.scene.getObjectByName("makeup")) {\n        this.scene.remove(this.scene.getObjectByName("makeup"));\n      }\n\n      this.faces = [];\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {// this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.faces != null && this.landmarks != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        //material.uniforms.opacityValue.value = getOpacitySliderValue();\n        material.opacity = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "changeTexture",\n    value: function changeTexture(textureName) {\n      var textureLoader = new three_module/* TextureLoader */.dpR();\n      var newTexture = textureLoader.load(texture_mapping[textureName], function (newTexture) {\n        newTexture.flipY = false;\n        this.material.map = newTexture;\n        this.material.needsUpdate = true;\n        this.material.opacity = 1.0;\n      }.bind(this) // Added bind(this) to retain the context\n      );\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.opacity = intensity;\n        material.needsUpdate = true; //if (material.emissive) material.emissive.setHex(newColorValue);\n      });\n    }\n  }]);\n\n  return LipsStyle;\n}();\n;// CONCATENATED MODULE: ./src/assets/Lips_4.png\n/* harmony default export */ const Lips_4 = (__webpack_require__.p + "assets/models/e9a5a78389f14fa72d1ed509e7127d6e.png");\n;// CONCATENATED MODULE: ./src/js/lips-style/glitter_face_mask.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction glitter_face_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction glitter_face_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) glitter_face_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) glitter_face_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction glitter_face_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n // Import LipsStyle class\n\n\n\nvar vertexShader = ["varying vec2 vUv;", "void main() {", "  vUv = uv;", "  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);", "}"].join("\\n");\nvar fragmentShader = ["uniform sampler2D makeupTexture;", // The texture you want to render\n"uniform vec3 colorValue;", // Uniform for controlling color\n"uniform float opacityValue;", // Uniform for controlling opacity\n"varying vec2 vUv;", "void main() {", "  vec4 textureColor = texture2D(makeupTexture, vUv);", "  if (textureColor.a < 0.01) {", "    discard;", "  }", "  gl_FragColor = vec4(textureColor.rgb * colorValue, textureColor.a * opacityValue);", // Multiply texture color with the specified color and opacity\n"}"].join("\\n");\nvar GlitterFaceMask = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_LipsStyle) {\n  _inherits(GlitterFaceMask, _LipsStyle);\n\n  var _super = _createSuper(GlitterFaceMask);\n\n  function GlitterFaceMask(apiResponseData, scene, width, height) {\n    glitter_face_mask_classCallCheck(this, GlitterFaceMask);\n\n    /*\n    const material = new THREE.ShaderMaterial({\n      vertexShader: vertexShader, // Your vertex shader code\n      fragmentShader: fragmentShader, // Your modified fragment shader code\n      uniforms: {\n        makeupTexture: {\n          value: new THREE.TextureLoader().load(\n            GlitterAOTexture,\n            function (texture) {\n              // texture.premultiplyAlpha = true;\n              texture.flipY = false;\n            }\n          ),\n        },\n        opacityValue: { value: 1 },\n        colorValue: { value: new THREE.Vector3(1, 1, 1) },\n      },\n       transparent: true,\n      color: 0xff0000,\n    });\n    material.uniforms.colorValue.value.set(1, 0, 0); // Example: set color to RGB(0.2, 0.5, 0.8)\n    material.uniforms.opacityValue.value = 0.6;\n     const material1 = new THREE.ShaderMaterial({\n      vertexShader: vertexShader, // Your vertex shader code\n      fragmentShader: fragmentShader, // Your modified fragment shader code\n      uniforms: {\n        makeupTexture: {\n          value: new THREE.TextureLoader().load(\n            GlitterColorMaskTexture,\n            function (texture) {\n              texture.flipY = false;\n            }\n          ),\n        },\n        opacityValue: { value: 1 },\n        colorValue: { value: new THREE.Vector3(1, 1, 1) },\n      },\n       transparent: true,\n      color: 0xff0000,\n    });\n    material1.uniforms.colorValue.value.set(1, 1, 1); // Example: set color to RGB(0.2, 0.5, 0.8)\n    material1.uniforms.opacityValue.value = 0.6;\n    material1.needsUpdate = true;\n    */\n    var material = new THREE.MeshPhysicalMaterial({\n      map: new THREE.TextureLoader().load(GlitterAOTexture, function (texture) {\n        // texture.premultiplyAlpha = true;\n        texture.flipY = false;\n      }),\n      transparent: true,\n      side: THREE.DoubleSide,\n      roughness: 0.25,\n      metalness: 0,\n      specularIntensity: 1,\n      envMapIntensity: 0,\n      toneMapped: false //shadowSide: THREE.BackSide,\n\n    });\n    var material1 = new THREE.MeshPhysicalMaterial({\n      map: new THREE.TextureLoader().load(GlitterColorMaskTexture, function (texture) {\n        // texture.premultiplyAlpha = true;\n        texture.flipY = false;\n      }),\n      transparent: true,\n      side: THREE.DoubleSide,\n      roughness: 0.5,\n      metalness: 1,\n      envMapIntensity: 1,\n      toneMapped: false,\n      specularIntensity: 1,\n      emissiveIntensity: 1,\n      emissive: 0x00ff00 // envMapIntensity: 1,\n      // emissiveMap: new THREE.TextureLoader().load(\n      //   GlitterColorMaskTexture,\n      //   function (texture) {\n      //     // texture.premultiplyAlpha = true;\n      //     texture.flipY = false;\n      //   }\n      // ),\n      //shadowSide: THREE.BackSide,\n\n    });\n    var materialsArray = [material, material1];\n    return _super.call(this, apiResponseData, scene, width, height, materialsArray);\n  }\n\n  return glitter_face_mask_createClass(GlitterFaceMask);\n}(LipsStyle)));\n;// CONCATENATED MODULE: ./src/assets/lips_full.png\n/* harmony default export */ const lips_full = (__webpack_require__.p + "assets/models/07859141e71f9b6527affefca754377b.png");\n;// CONCATENATED MODULE: ./src/js/pattern_factory.js\n\n\nfunction pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar PatternFactory = /*#__PURE__*/function () {\n  function PatternFactory() {\n    pattern_factory_classCallCheck(this, PatternFactory);\n\n    if (this.constructor === PatternFactory) {\n      throw new Error("Abstract class PatternFactory cannot be instantiated.");\n    }\n  }\n\n  pattern_factory_createClass(PatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(apiResponseData, scene, width, height) {\n      throw new Error("Method createPattern() must be implemented.");\n    }\n  }]);\n\n  return PatternFactory;\n}();\n;// CONCATENATED MODULE: ./src/assets/svg/Error.svg\n/* harmony default export */ const svg_Error = (__webpack_require__.p + "assets/models/751eff4b60626436320fc0c8dfa62864.svg");\n;// CONCATENATED MODULE: ./src/js/utils/errorPanel.js\n // import { errorMessages } from "./globalVariables";\n\n\nvar errorPanel_Panel = null;\nvar errorPanel_msg = null;\nvar errorPanel_img = null;\nvar errorPanel_btn = null;\nfunction hideErrorPermissionPanel() {\n  errorPanel_Panel.style.display = "none";\n}\nfunction showErrorPermissionPanel(msgText) {\n  errorPanel_msg.innerHTML = msgText || "Something Went Wrong";\n  errorPanel_Panel.style.display = "flex";\n}\nfunction setErrorElement(handler) {\n  errorPanel_Panel = document.querySelector(".error-panel");\n  errorPanel_msg = document.querySelector(".error-message");\n  errorPanel_img = document.getElementById("error-icon");\n  errorPanel_btn = document.getElementById("error-btn");\n  errorPanel_img.src = svg_Error;\n  errorPanel_msg.innerHTML = "Something Went Wrong";\n  hideErrorPermissionPanel();\n  errorPanel_btn.addEventListener("click", function () {\n    handleErrorPermissionClickEvent(handler);\n  });\n}\n\nvar handleErrorPermissionClickEvent = function handleErrorPermissionClickEvent(handler) {\n  handler();\n};\n;// CONCATENATED MODULE: ./src/js/lips-style/lips_pattern_factory.js\nfunction lips_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return lips_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, lips_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction lips_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction lips_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction lips_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) lips_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) lips_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction lips_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) lips_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction lips_pattern_factory_setPrototypeOf(o, p) { lips_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return lips_pattern_factory_setPrototypeOf(o, p); }\n\nfunction lips_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = lips_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = lips_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = lips_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return lips_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction lips_pattern_factory_possibleConstructorReturn(self, call) { if (call && (lips_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return lips_pattern_factory_assertThisInitialized(self); }\n\nfunction lips_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction lips_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction lips_pattern_factory_getPrototypeOf(o) { lips_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return lips_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\nvar LipsPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  lips_pattern_factory_inherits(LipsPatternFactory, _PatternFactory);\n\n  var _super = lips_pattern_factory_createSuper(LipsPatternFactory);\n\n  function LipsPatternFactory() {\n    var _this;\n\n    lips_pattern_factory_classCallCheck(this, LipsPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      matte: MatteFaceMask,\n      glossy: GlossyFaceMask,\n      shimmer: ShimmerFaceMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  lips_pattern_factory_createClass(LipsPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      //console.log(this.patternClass.MaterialArray);\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return LipsPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/lips-style/lips_single_tone.js\nfunction lips_single_tone_typeof(obj) { "@babel/helpers - typeof"; return lips_single_tone_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, lips_single_tone_typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || lips_single_tone_unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction lips_single_tone_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return lips_single_tone_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return lips_single_tone_arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return lips_single_tone_arrayLikeToArray(arr); }\n\nfunction lips_single_tone_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction lips_single_tone_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction lips_single_tone_createClass(Constructor, protoProps, staticProps) { if (protoProps) lips_single_tone_defineProperties(Constructor.prototype, protoProps); if (staticProps) lips_single_tone_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction lips_single_tone_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction lips_single_tone_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) lips_single_tone_setPrototypeOf(subClass, superClass); }\n\nfunction lips_single_tone_setPrototypeOf(o, p) { lips_single_tone_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return lips_single_tone_setPrototypeOf(o, p); }\n\nfunction lips_single_tone_createSuper(Derived) { var hasNativeReflectConstruct = lips_single_tone_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = lips_single_tone_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = lips_single_tone_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return lips_single_tone_possibleConstructorReturn(this, result); }; }\n\nfunction lips_single_tone_possibleConstructorReturn(self, call) { if (call && (lips_single_tone_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return lips_single_tone_assertThisInitialized(self); }\n\nfunction lips_single_tone_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction lips_single_tone_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction lips_single_tone_getPrototypeOf(o) { lips_single_tone_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return lips_single_tone_getPrototypeOf(o); }\n\n\n // Import LipsStyle class\n\n //import MatteAOTexture from "../../assets/lips_6.png";\n\n\n\n\n\nvar LipsSingleTone = /*#__PURE__*/function (_LipsStyle) {\n  lips_single_tone_inherits(LipsSingleTone, _LipsStyle);\n\n  var _super = lips_single_tone_createSuper(LipsSingleTone);\n\n  function LipsSingleTone(sku, scene, width, height) {\n    lips_single_tone_classCallCheck(this, LipsSingleTone);\n\n    var patternDefaultTextures = {\n      matte: lips_full,\n      glossy: lips_full,\n      shimmer: [lips_full, Lips_Shimmer_2]\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var lipsPatternFactory = new LipsPatternFactory();\n      var pattern = lipsPatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, _toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return lips_single_tone_createClass(LipsSingleTone);\n}(lips_style_LipsStyle);\n;// CONCATENATED MODULE: ./src/assets/Lips_Matte_Top.png\n/* harmony default export */ const Lips_Matte_Top = (__webpack_require__.p + "assets/models/8ea0818c57d7e406b10fec1911d77a13.png");\n;// CONCATENATED MODULE: ./src/assets/Lips_Matte_Lower.png\n/* harmony default export */ const Lips_Matte_Lower = (__webpack_require__.p + "assets/models/1819da3266d86061a2793caa126f921b.png");\n;// CONCATENATED MODULE: ./src/assets/lips_bottom_shimmer.png\n/* harmony default export */ const lips_bottom_shimmer = (__webpack_require__.p + "assets/models/e1c64c6c39dedd6d92d318eac0e9acdd.png");\n;// CONCATENATED MODULE: ./src/assets/lips_top_shimmer.png\n/* harmony default export */ const lips_top_shimmer = (__webpack_require__.p + "assets/models/7afd760ceb63c1516217b54880bf9437.png");\n;// CONCATENATED MODULE: ./src/js/lips-style/lips_two_tone.js\nfunction lips_two_tone_typeof(obj) { "@babel/helpers - typeof"; return lips_two_tone_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, lips_two_tone_typeof(obj); }\n\nfunction lips_two_tone_toConsumableArray(arr) { return lips_two_tone_arrayWithoutHoles(arr) || lips_two_tone_iterableToArray(arr) || lips_two_tone_unsupportedIterableToArray(arr) || lips_two_tone_nonIterableSpread(); }\n\nfunction lips_two_tone_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction lips_two_tone_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return lips_two_tone_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return lips_two_tone_arrayLikeToArray(o, minLen); }\n\nfunction lips_two_tone_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction lips_two_tone_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return lips_two_tone_arrayLikeToArray(arr); }\n\nfunction lips_two_tone_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction lips_two_tone_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction lips_two_tone_createClass(Constructor, protoProps, staticProps) { if (protoProps) lips_two_tone_defineProperties(Constructor.prototype, protoProps); if (staticProps) lips_two_tone_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction lips_two_tone_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction lips_two_tone_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) lips_two_tone_setPrototypeOf(subClass, superClass); }\n\nfunction lips_two_tone_setPrototypeOf(o, p) { lips_two_tone_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return lips_two_tone_setPrototypeOf(o, p); }\n\nfunction lips_two_tone_createSuper(Derived) { var hasNativeReflectConstruct = lips_two_tone_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = lips_two_tone_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = lips_two_tone_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return lips_two_tone_possibleConstructorReturn(this, result); }; }\n\nfunction lips_two_tone_possibleConstructorReturn(self, call) { if (call && (lips_two_tone_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return lips_two_tone_assertThisInitialized(self); }\n\nfunction lips_two_tone_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction lips_two_tone_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction lips_two_tone_getPrototypeOf(o) { lips_two_tone_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return lips_two_tone_getPrototypeOf(o); }\n\n\n // Import LipsStyle class\n\n\n\n\n\n\n\n\nvar LipsTwoTone = /*#__PURE__*/function (_LipsStyle) {\n  lips_two_tone_inherits(LipsTwoTone, _LipsStyle);\n\n  var _super = lips_two_tone_createSuper(LipsTwoTone);\n\n  function LipsTwoTone(sku, scene, width, height) {\n    lips_two_tone_classCallCheck(this, LipsTwoTone);\n\n    var patternDefaultTexturesU = {\n      matte: Lips_Matte_Top,\n      glossy: Lips_Matte_Top,\n      shimmer: [Lips_Matte_Top, lips_top_shimmer]\n    };\n    var patternDefaultTexturesL = {\n      matte: Lips_Matte_Lower,\n      glossy: Lips_Matte_Lower,\n      shimmer: [Lips_Matte_Lower, lips_bottom_shimmer]\n    };\n    var materialsArray = []; // console.log(sku.attributes.patterns);\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var lipsPatternFactory = new LipsPatternFactory();\n\n      if (i === 0) {\n        var pattern = lipsPatternFactory.createPattern(sku.attributes[i], patternDefaultTexturesU[sku.attributes[i].name.toLowerCase()] //need to change with link data\n        );\n        materialsArray.push.apply(materialsArray, lips_two_tone_toConsumableArray(pattern.getMaterials()));\n      } else if (i === 1) {\n        var _pattern = lipsPatternFactory.createPattern(sku.attributes[i], patternDefaultTexturesL[sku.attributes[i].name.toLowerCase()] //need to change with link data\n        );\n\n        materialsArray.push.apply(materialsArray, lips_two_tone_toConsumableArray(_pattern.getMaterials()));\n      } //materialsArray.push(...pattern.getMaterials());\n\n    } //console.log("asfasf" + materialsArray.length);\n\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return lips_two_tone_createClass(LipsTwoTone);\n}(lips_style_LipsStyle);\n;// CONCATENATED MODULE: ./src/js/lips-style/lips_style_factory.js\nfunction lips_style_factory_typeof(obj) { "@babel/helpers - typeof"; return lips_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, lips_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction lips_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction lips_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction lips_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) lips_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) lips_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction lips_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) lips_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction lips_style_factory_setPrototypeOf(o, p) { lips_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return lips_style_factory_setPrototypeOf(o, p); }\n\nfunction lips_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = lips_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = lips_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = lips_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return lips_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction lips_style_factory_possibleConstructorReturn(self, call) { if (call && (lips_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return lips_style_factory_assertThisInitialized(self); }\n\nfunction lips_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction lips_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction lips_style_factory_getPrototypeOf(o) { lips_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return lips_style_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\nvar LipsStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  lips_style_factory_inherits(LipsStyleFactory, _StyleFactory);\n\n  var _super = lips_style_factory_createSuper(LipsStyleFactory);\n\n  function LipsStyleFactory() {\n    var _this;\n\n    lips_style_factory_classCallCheck(this, LipsStyleFactory);\n\n    _this = _super.call(this);\n    _this.lipStyles = {\n      single: LipsSingleTone,\n      dual: LipsTwoTone\n    };\n    return _this;\n  }\n\n  lips_style_factory_createClass(LipsStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var LipStyleClass = this.lipStyles[styleType.toLowerCase()];\n\n      if (!LipStyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported lips style");\n      }\n\n      return new LipStyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return LipsStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/js/blush-style/blush_style.js\n\n\n\n\n\n\nfunction blush_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction blush_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction blush_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) blush_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) blush_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar blush_style_BlushStyle = /*#__PURE__*/function () {\n  function BlushStyle(sku, scene, width, height, materials) {\n    blush_style_classCallCheck(this, BlushStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = [];\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n  }\n\n  blush_style_createClass(BlushStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      for (var i = 0; i < this.materialArray.length; i++) {\n        var geometry = makeGeometry(this.landmarks);\n\n        if (!this.faces || this.faces.length <= i) {\n          var tempface = new three_module/* Mesh */.Kj0(geometry, this.materialArray[i]);\n          this.faces.push(tempface);\n          this.scene.add(tempface);\n          this.faces[i].receiveShadow = false; // Disable receiving shadows\n\n          this.faces[i].castShadow = false; // Disable casting shadows\n\n          this.faces[i].position.set(0, 0, 0);\n          this.faces[i].name = "makeup";\n        } else {\n          this.faces[i].geometry = geometry;\n          this.faces[i].material = this.materialArray[i];\n        }\n\n        this.faces[i].scale.set(this.width, this.height, this.width / 10);\n      }\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n\n      while (!!this.scene.getObjectByName("makeup")) {\n        this.scene.remove(this.scene.getObjectByName("makeup"));\n      }\n\n      this.faces = [];\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {// this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.faces != null && this.landmarks != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        material.opacity = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.opacity = intensity;\n        material.needsUpdate = true; //if (material.emissive) material.emissive.setHex(newColorValue);\n      });\n    }\n  }, {\n    key: "changeTexture",\n    value: function changeTexture(textureName) {\n      var textureLoader = new three_module/* TextureLoader */.dpR();\n      var newTexture = textureLoader.load(texture_mapping[textureName], function (newTexture) {\n        newTexture.flipY = false;\n        this.material.map = newTexture;\n        this.material.needsUpdate = true;\n        this.material.opacity = 1.0;\n      }.bind(this) // Added bind(this) to retain the context\n      );\n    }\n  }, {\n    key: "changeTextureColor",\n    value: function changeTextureColor(color, intensity) {\n      var newColorValue = new three_module/* Color */.Ilk(color);\n\n      if (this.materialArray[0].uniforms.colorValue === undefined) {\n        this.materialArray[0].uniforms.colorValue = {\n          value: newColorValue\n        };\n        this.materialArray[0].uniforms.opacityValue.value = intensity;\n      } else {\n        this.materialArray[0].uniforms.colorValue.value = newColorValue;\n        this.materialArray[0].uniforms.opacityValue.value = intensity;\n      }\n\n      this.materialArray[0].needsUpdate = true; //console.log("changeTextureColor");\n    }\n  }]);\n\n  return BlushStyle;\n}();\n;// CONCATENATED MODULE: ./src/assets/Blush_oval.png\n/* harmony default export */ const Blush_oval = (__webpack_require__.p + "assets/models/7a5234702b179c74d49995e1fc369f4b.png");\n;// CONCATENATED MODULE: ./src/js/blush-style/glossy_blush_mask.js\nfunction glossy_blush_mask_typeof(obj) { "@babel/helpers - typeof"; return glossy_blush_mask_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, glossy_blush_mask_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction glossy_blush_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction glossy_blush_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) glossy_blush_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) glossy_blush_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction glossy_blush_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction glossy_blush_mask_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) glossy_blush_mask_setPrototypeOf(subClass, superClass); }\n\nfunction glossy_blush_mask_setPrototypeOf(o, p) { glossy_blush_mask_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return glossy_blush_mask_setPrototypeOf(o, p); }\n\nfunction glossy_blush_mask_createSuper(Derived) { var hasNativeReflectConstruct = glossy_blush_mask_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = glossy_blush_mask_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = glossy_blush_mask_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return glossy_blush_mask_possibleConstructorReturn(this, result); }; }\n\nfunction glossy_blush_mask_possibleConstructorReturn(self, call) { if (call && (glossy_blush_mask_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return glossy_blush_mask_assertThisInitialized(self); }\n\nfunction glossy_blush_mask_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction glossy_blush_mask_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction glossy_blush_mask_getPrototypeOf(o) { glossy_blush_mask_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return glossy_blush_mask_getPrototypeOf(o); }\n\n\n // Import BlushStyle class\n\n\n\nvar glossy_blush_mask_vertexShader = [\'varying vec2 vUv;\', \'void main() {\', \'  vUv = uv;\', \'  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\', \'}\'].join(\'\\n\');\nvar glossy_blush_mask_fragmentShader = [\'uniform sampler2D makeupTexture;\', // The texture you want to render\n\'uniform vec3 colorValue;\', // Uniform for controlling color\n\'uniform float opacityValue;\', // Uniform for controlling opacity\n\'varying vec2 vUv;\', \'void main() {\', \'  vec4 textureColor = texture2D(makeupTexture, vUv);\', \'  if (textureColor.a < 0.01) {\', \'    discard;\', \'  }\', \'  gl_FragColor = vec4(textureColor.rgb * colorValue, textureColor.a * opacityValue);\', // Multiply texture color with the specified color and opacity\n\'}\'].join(\'\\n\');\nvar GlossyBlushMask = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BlushStyle) {\n  glossy_blush_mask_inherits(GlossyBlushMask, _BlushStyle);\n\n  var _super = glossy_blush_mask_createSuper(GlossyBlushMask);\n\n  function GlossyBlushMask(apiResponseData, scene, width, height) {\n    glossy_blush_mask_classCallCheck(this, GlossyBlushMask);\n\n    var material = new THREE.ShaderMaterial({\n      vertexShader: glossy_blush_mask_vertexShader,\n      // Your vertex shader code\n      fragmentShader: glossy_blush_mask_fragmentShader,\n      // Your modified fragment shader code\n      uniforms: {\n        makeupTexture: {\n          value: new THREE.TextureLoader().load(GlossyAOTexture, function (texture) {\n            // texture.premultiplyAlpha = true;\n            texture.flipY = false;\n          })\n        },\n        opacityValue: {\n          value: 1\n        },\n        colorValue: {\n          value: new THREE.Vector3(1, 1, 1)\n        }\n      },\n      transparent: true,\n      color: 0xff0000\n    });\n    material.uniforms.colorValue.value.set(1, 0, 0); // Example: set color to RGB(0.2, 0.5, 0.8)\n\n    material.uniforms.opacityValue.value = 0.6;\n    var material1 = new THREE.ShaderMaterial({\n      vertexShader: glossy_blush_mask_vertexShader,\n      // Your vertex shader code\n      fragmentShader: glossy_blush_mask_fragmentShader,\n      // Your modified fragment shader code\n      uniforms: {\n        makeupTexture: {\n          value: new THREE.TextureLoader().load(GlossyColorMaskTexture, function (texture) {\n            // texture.premultiplyAlpha = true;\n            texture.flipY = false;\n          })\n        },\n        opacityValue: {\n          value: 1\n        },\n        colorValue: {\n          value: new THREE.Vector3(1, 1, 1)\n        }\n      },\n      transparent: true,\n      color: 0xff0000\n    });\n    material1.uniforms.colorValue.value.set(1, 1, 1); // Example: set color to RGB(0.2, 0.5, 0.8)\n\n    material1.uniforms.opacityValue.value = 0.6;\n    material1.needsUpdate = true;\n    var materialsArray = [material, material1];\n    return _super.call(this, apiResponseData, scene, width, height, materialsArray);\n  }\n\n  return glossy_blush_mask_createClass(GlossyBlushMask);\n}(BlushStyle)));\n;// CONCATENATED MODULE: ./src/js/blush-style/shimmer_blush_mask.js\n\n\nfunction shimmer_blush_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction shimmer_blush_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction shimmer_blush_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) shimmer_blush_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) shimmer_blush_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar ShimmerBlushMask = /*#__PURE__*/function () {\n  function ShimmerBlushMask(_pattern, _texture) {\n    shimmer_blush_mask_classCallCheck(this, ShimmerBlushMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor1 = null;\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n\n    if (_pattern.colors.length > 1) {\n      var color1 = _pattern.colors[1];\n      var newColor1 = ColorUtils.getColorWithIntensity(color1, 100);\n      threeColor1 = new three_module/* Color */.Ilk(newColor1);\n    } else {\n      threeColor1 = new three_module/* Color */.Ilk("0xffffff");\n    }\n\n    var material = new three_module/* MeshPhysicalMaterial */.EJi({\n      map: new three_module/* TextureLoader */.dpR().load(_texture[0], function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      roughness: 0.22,\n      metalness: 0,\n      envMapIntensity: 0,\n      toneMapped: false,\n      fog: false,\n      // clearcoat: 1,\n      // clearcoatRoughness: 0.3,\n      specularIntensity: 0.5,\n      specularColor: threeColor,\n      color: threeColor\n    });\n    var material1 = new three_module/* MeshPhysicalMaterial */.EJi({\n      map: new three_module/* TextureLoader */.dpR().load(_texture[1], function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      toneMapped: false,\n      fog: false,\n      roughness: 0.22,\n      metalness: 0,\n      specularIntensity: 0.6,\n      specularColor: threeColor1,\n      color: threeColor1\n    });\n    this.MaterialArray = [material, material1];\n  }\n\n  shimmer_blush_mask_createClass(ShimmerBlushMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return ShimmerBlushMask;\n}();\n;// CONCATENATED MODULE: ./src/js/blush-style/matte_blush_mask.js\n\n\nfunction matte_blush_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matte_blush_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matte_blush_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) matte_blush_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) matte_blush_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar MatteBlushMask = /*#__PURE__*/function () {\n  function MatteBlushMask(_pattern, _texture) {\n    matte_blush_mask_classCallCheck(this, MatteBlushMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var material = new three_module/* MeshBasicMaterial */.vBJ({\n      map: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      toneMapped: false,\n      color: threeColor,\n      fog: false\n    });\n    this.MaterialArray = [material];\n  }\n\n  matte_blush_mask_createClass(MatteBlushMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteBlushMask;\n}();\n;// CONCATENATED MODULE: ./src/js/blush-style/glitter_blush_mask.js\nfunction glitter_blush_mask_typeof(obj) { "@babel/helpers - typeof"; return glitter_blush_mask_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, glitter_blush_mask_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction glitter_blush_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction glitter_blush_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) glitter_blush_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) glitter_blush_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction glitter_blush_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction glitter_blush_mask_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) glitter_blush_mask_setPrototypeOf(subClass, superClass); }\n\nfunction glitter_blush_mask_setPrototypeOf(o, p) { glitter_blush_mask_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return glitter_blush_mask_setPrototypeOf(o, p); }\n\nfunction glitter_blush_mask_createSuper(Derived) { var hasNativeReflectConstruct = glitter_blush_mask_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = glitter_blush_mask_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = glitter_blush_mask_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return glitter_blush_mask_possibleConstructorReturn(this, result); }; }\n\nfunction glitter_blush_mask_possibleConstructorReturn(self, call) { if (call && (glitter_blush_mask_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return glitter_blush_mask_assertThisInitialized(self); }\n\nfunction glitter_blush_mask_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction glitter_blush_mask_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction glitter_blush_mask_getPrototypeOf(o) { glitter_blush_mask_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return glitter_blush_mask_getPrototypeOf(o); }\n\n\n // Import BlushStyle class\n\n\n\n\nvar glitter_blush_mask_vertexShader = [\'varying vec2 vUv;\', \'void main() {\', \'  vUv = uv;\', \'  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\', \'}\'].join(\'\\n\');\nvar glitterFragmentShader = [\'uniform sampler2D makeupAO;\', \'uniform sampler2D makeupColorMask;\', \'uniform sampler2D makeupLighting;\', \'uniform vec3 colorValue;\', \'uniform float mainTextureAlpha;\', \'uniform vec3 newColorValue;\', // New color for color mask\n\'uniform float roughness;\', // Roughness property\n\'varying vec2 vUv;\', \'void main() {\', \'  vec2 uv = vec2(vUv.x, 1.0 - vUv.y);\', // Flip the texture in the y-axis\n\'  float aoValue = texture2D(makeupAO, uv).r;\', \'  vec4 colorMask = texture2D(makeupColorMask, uv);\', \'  vec4 lighting = texture2D(makeupLighting, uv);\', \'  vec4 finalColor = colorMask * vec4(colorValue, 0.1);\', // Consider original lighting color\n\'  finalColor.rgb *= aoValue;\', \'\', \'  // Adjust the opacity and intensity of the color mask\', \'  float colorMaskAlpha = colorMask.a * 0.8;\', // Reduce the alpha value of the color mask\n\'  float colorMaskIntensity = colorMask.r;\', // Grayscale intensity of the color mask\n\'  float adjustedColorMaskIntensity = mix(colorMaskIntensity, dot(newColorValue.rgb, vec3(0.299, 0.587, 0.114)), 0.9);\', // Blend the intensity with the new color value\n\'  colorMask = vec4(adjustedColorMaskIntensity, adjustedColorMaskIntensity, adjustedColorMaskIntensity, colorMaskAlpha);\', // Update the color mask with the adjusted intensity and opacity\n\'\', \'  // Adjust the opacity of the lighting texture only\', \'  finalColor.a *= 0.8 * lighting.a;\', // Set opacity to 80% multiplied by lighting texture\'s opacity\n\'\', \'  // Use green color value in the lighting texture as white light\', \'  vec3 whiteLight = vec3(1.0, 1.0, 1.0);\', // White light color\n\'  vec3 greenLight = vec3(0.0, 1.0, 0.0);\', // Green light color\n\'  float greenLightIntensity = lighting.g;\', // Green channel intensity in the lighting texture\n\'  float blendFactor = 0.8;\', // Adjust the blend factor as desired (0.0 - 1.0)\n\'  vec3 blendedColor = mix(whiteLight * greenLightIntensity, newColorValue, blendFactor);\', // Blend white light and new color based on green intensity\n\'  finalColor.rgb *= blendedColor;\', \'\', \'  // Add emission for glitter effect\', \'  vec3 emissionColor = vec3(1.0, 1.0, 1.0);\', // Emission color (adjust as desired)\n\'  float glitterIntensity = 0.8 * lighting.g;\', // Intensity of glitter effect based on red channel in the lighting texture\n\'  finalColor.rgb += emissionColor * glitterIntensity;\', // Add emission color multiplied by glitter intensity\n\'\', \'  finalColor.rgb *= mainTextureAlpha;\', \'  finalColor.a = pow(finalColor.a, 0.13);\', // Apply roughness effect to opacity\n\'  gl_FragColor = finalColor;\', \'}\'].join(\'\\n\');\nvar GlitterBlushMask = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BlushStyle) {\n  glitter_blush_mask_inherits(GlitterBlushMask, _BlushStyle);\n\n  var _super = glitter_blush_mask_createSuper(GlitterBlushMask);\n\n  function GlitterBlushMask(apiResponseData, scene, width, height) {\n    glitter_blush_mask_classCallCheck(this, GlitterBlushMask);\n\n    var material = new THREE.ShaderMaterial({\n      vertexShader: glitter_blush_mask_vertexShader,\n      fragmentShader: glitterFragmentShader,\n      uniforms: {\n        makeupAO: {\n          value: new THREE.TextureLoader().load(GlitterAOTexture, function (texture) {\n            texture.premultiplyAlpha = true;\n          })\n        },\n        makeupColorMask: {\n          value: new THREE.TextureLoader().load(GlitterColorMaskTexture, function (texture) {\n            texture.premultiplyAlpha = true;\n          })\n        },\n        makeupLighting: {\n          value: new THREE.TextureLoader().load(GlitterLightingTexture, function (texture) {\n            texture.premultiplyAlpha = true;\n          })\n        },\n        colorValue: {\n          value: new THREE.Color(1, 1, 1)\n        },\n        mainTextureAlpha: {\n          value: 1\n        }\n      },\n      transparent: true,\n      depthWrite: false,\n      blending: THREE.AdditiveBlending\n    });\n    return _super.call(this, apiResponseData, scene, width, height, material);\n  }\n\n  return glitter_blush_mask_createClass(GlitterBlushMask);\n}(BlushStyle)));\n;// CONCATENATED MODULE: ./src/assets/blush_round_base.png\n/* harmony default export */ const blush_round_base = (__webpack_require__.p + "assets/models/435e9d096e0af210573b5c7a5d3118ef.png");\n;// CONCATENATED MODULE: ./src/assets/blush_round_shimmer.png\n/* harmony default export */ const blush_round_shimmer = (__webpack_require__.p + "assets/models/4ab07c2a38cab5883b148b0ba0b00394.png");\n;// CONCATENATED MODULE: ./src/js/blush-style/blush_pattern_factory.js\nfunction blush_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return blush_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, blush_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction blush_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction blush_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction blush_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) blush_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) blush_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction blush_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) blush_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction blush_pattern_factory_setPrototypeOf(o, p) { blush_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return blush_pattern_factory_setPrototypeOf(o, p); }\n\nfunction blush_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = blush_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = blush_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = blush_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return blush_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction blush_pattern_factory_possibleConstructorReturn(self, call) { if (call && (blush_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return blush_pattern_factory_assertThisInitialized(self); }\n\nfunction blush_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction blush_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction blush_pattern_factory_getPrototypeOf(o) { blush_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return blush_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\nvar BlushPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  blush_pattern_factory_inherits(BlushPatternFactory, _PatternFactory);\n\n  var _super = blush_pattern_factory_createSuper(BlushPatternFactory);\n\n  function BlushPatternFactory() {\n    var _this;\n\n    blush_pattern_factory_classCallCheck(this, BlushPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      // matte: MatteEyeShadowMask,\n      matte: MatteBlushMask,\n      shimmer: ShimmerBlushMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  blush_pattern_factory_createClass(BlushPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return BlushPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/blush-style/blush_style_1.js\nfunction blush_style_1_typeof(obj) { "@babel/helpers - typeof"; return blush_style_1_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, blush_style_1_typeof(obj); }\n\nfunction blush_style_1_toConsumableArray(arr) { return blush_style_1_arrayWithoutHoles(arr) || blush_style_1_iterableToArray(arr) || blush_style_1_unsupportedIterableToArray(arr) || blush_style_1_nonIterableSpread(); }\n\nfunction blush_style_1_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction blush_style_1_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return blush_style_1_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return blush_style_1_arrayLikeToArray(o, minLen); }\n\nfunction blush_style_1_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction blush_style_1_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return blush_style_1_arrayLikeToArray(arr); }\n\nfunction blush_style_1_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction blush_style_1_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction blush_style_1_createClass(Constructor, protoProps, staticProps) { if (protoProps) blush_style_1_defineProperties(Constructor.prototype, protoProps); if (staticProps) blush_style_1_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction blush_style_1_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction blush_style_1_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) blush_style_1_setPrototypeOf(subClass, superClass); }\n\nfunction blush_style_1_setPrototypeOf(o, p) { blush_style_1_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return blush_style_1_setPrototypeOf(o, p); }\n\nfunction blush_style_1_createSuper(Derived) { var hasNativeReflectConstruct = blush_style_1_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = blush_style_1_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = blush_style_1_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return blush_style_1_possibleConstructorReturn(this, result); }; }\n\nfunction blush_style_1_possibleConstructorReturn(self, call) { if (call && (blush_style_1_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return blush_style_1_assertThisInitialized(self); }\n\nfunction blush_style_1_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction blush_style_1_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction blush_style_1_getPrototypeOf(o) { blush_style_1_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return blush_style_1_getPrototypeOf(o); }\n\n\n\n\n\n\nvar BlushStyle1 = /*#__PURE__*/function (_BlushStyle) {\n  blush_style_1_inherits(BlushStyle1, _BlushStyle);\n\n  var _super = blush_style_1_createSuper(BlushStyle1);\n\n  function BlushStyle1(sku, scene, width, height) {\n    blush_style_1_classCallCheck(this, BlushStyle1);\n\n    var patternDefaultTextures = {\n      matte: blush_round_base,\n      // glossy: MatteAOTexture,\n      shimmer: [blush_round_base, blush_round_shimmer]\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new BlushPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, blush_style_1_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return blush_style_1_createClass(BlushStyle1);\n}(blush_style_BlushStyle);\n;// CONCATENATED MODULE: ./src/assets/blush_oval_base.png\n/* harmony default export */ const blush_oval_base = (__webpack_require__.p + "assets/models/256c0963163ed5433d6d5e92e8d2f83c.png");\n;// CONCATENATED MODULE: ./src/assets/blush_oval_shimmer.png\n/* harmony default export */ const blush_oval_shimmer = (__webpack_require__.p + "assets/models/ed63ceb3dc211e5009307ad9c214b65e.png");\n;// CONCATENATED MODULE: ./src/js/blush-style/blush_style_2.js\nfunction blush_style_2_typeof(obj) { "@babel/helpers - typeof"; return blush_style_2_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, blush_style_2_typeof(obj); }\n\nfunction blush_style_2_toConsumableArray(arr) { return blush_style_2_arrayWithoutHoles(arr) || blush_style_2_iterableToArray(arr) || blush_style_2_unsupportedIterableToArray(arr) || blush_style_2_nonIterableSpread(); }\n\nfunction blush_style_2_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction blush_style_2_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return blush_style_2_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return blush_style_2_arrayLikeToArray(o, minLen); }\n\nfunction blush_style_2_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction blush_style_2_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return blush_style_2_arrayLikeToArray(arr); }\n\nfunction blush_style_2_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction blush_style_2_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction blush_style_2_createClass(Constructor, protoProps, staticProps) { if (protoProps) blush_style_2_defineProperties(Constructor.prototype, protoProps); if (staticProps) blush_style_2_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction blush_style_2_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction blush_style_2_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) blush_style_2_setPrototypeOf(subClass, superClass); }\n\nfunction blush_style_2_setPrototypeOf(o, p) { blush_style_2_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return blush_style_2_setPrototypeOf(o, p); }\n\nfunction blush_style_2_createSuper(Derived) { var hasNativeReflectConstruct = blush_style_2_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = blush_style_2_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = blush_style_2_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return blush_style_2_possibleConstructorReturn(this, result); }; }\n\nfunction blush_style_2_possibleConstructorReturn(self, call) { if (call && (blush_style_2_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return blush_style_2_assertThisInitialized(self); }\n\nfunction blush_style_2_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction blush_style_2_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction blush_style_2_getPrototypeOf(o) { blush_style_2_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return blush_style_2_getPrototypeOf(o); }\n\n\n\n\n\n\nvar BlushStyle2 = /*#__PURE__*/function (_BlushStyle) {\n  blush_style_2_inherits(BlushStyle2, _BlushStyle);\n\n  var _super = blush_style_2_createSuper(BlushStyle2);\n\n  function BlushStyle2(sku, scene, width, height) {\n    blush_style_2_classCallCheck(this, BlushStyle2);\n\n    var patternDefaultTextures = {\n      matte: blush_oval_base,\n      // glossy: MatteAOTexture,\n      shimmer: [blush_oval_base, blush_oval_shimmer]\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var PatternFactory = new BlushPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, blush_style_2_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return blush_style_2_createClass(BlushStyle2);\n}(blush_style_BlushStyle);\n;// CONCATENATED MODULE: ./src/js/blush-style/blush_style_factory.js\nfunction blush_style_factory_typeof(obj) { "@babel/helpers - typeof"; return blush_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, blush_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction blush_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction blush_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction blush_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) blush_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) blush_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction blush_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) blush_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction blush_style_factory_setPrototypeOf(o, p) { blush_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return blush_style_factory_setPrototypeOf(o, p); }\n\nfunction blush_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = blush_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = blush_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = blush_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return blush_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction blush_style_factory_possibleConstructorReturn(self, call) { if (call && (blush_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return blush_style_factory_assertThisInitialized(self); }\n\nfunction blush_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction blush_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction blush_style_factory_getPrototypeOf(o) { blush_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return blush_style_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\nvar BlushStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  blush_style_factory_inherits(BlushStyleFactory, _StyleFactory);\n\n  var _super = blush_style_factory_createSuper(BlushStyleFactory);\n\n  function BlushStyleFactory() {\n    var _this;\n\n    blush_style_factory_classCallCheck(this, BlushStyleFactory);\n\n    _this = _super.call(this);\n    _this.blushStyles = {\n      round: BlushStyle1,\n      oval: BlushStyle2 // "blush3": GlitterBlushMask,\n      // "shimmer": ShimmerBlushMask\n\n    };\n    return _this;\n  }\n\n  blush_style_factory_createClass(BlushStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var StyleClass = this.blushStyles[styleType.toLowerCase()];\n\n      if (!StyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported blush style");\n      }\n\n      return new StyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return BlushStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/assets/Eyeshadow1.png\n/* harmony default export */ const Eyeshadow1 = (__webpack_require__.p + "assets/models/c5be1b049f54e9d13ad94515c6364dc1.png");\n;// CONCATENATED MODULE: ./src/assets/Eyeshadow1_shimmer.png\n/* harmony default export */ const Eyeshadow1_shimmer = (__webpack_require__.p + "assets/models/dac403e8fd098544d4cddae748e397fe.png");\n;// CONCATENATED MODULE: ./src/js/eyeshadow-style/eyeshadow_style.js\n\n\n\n\n\n\nfunction eyeshadow_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyeshadow_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyeshadow_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyeshadow_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyeshadow_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar EyeShadowStyle = /*#__PURE__*/function () {\n  function EyeShadowStyle(sku, scene, width, height, materials) {\n    eyeshadow_style_classCallCheck(this, EyeShadowStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = [];\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n  }\n\n  eyeshadow_style_createClass(EyeShadowStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      for (var i = 0; i < this.materialArray.length; i++) {\n        var geometry = makeGeometry(this.landmarks, "eyeliner");\n\n        if (!this.faces || this.faces.length <= i) {\n          var tempface = new three_module/* Mesh */.Kj0(geometry, this.materialArray[i]);\n          this.faces.push(tempface);\n          this.scene.add(tempface);\n          this.faces[i].receiveShadow = false; // Disable receiving shadows\n\n          this.faces[i].castShadow = false; // Disable casting shadows\n\n          this.faces[i].position.set(0, 0, 0);\n          this.faces[i].name = "makeup";\n        } else {\n          this.faces[i].geometry = geometry;\n          this.faces[i].material = this.materialArray[i];\n        }\n\n        this.faces[i].scale.set(this.width, this.height, this.width / 5);\n      }\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n\n      while (!!this.scene.getObjectByName("makeup")) {\n        this.scene.remove(this.scene.getObjectByName("makeup"));\n      }\n\n      this.faces = [];\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {//this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.faces != null && this.landmarks != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        material.opacity = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.opacity = intensity;\n        material.needsUpdate = true; //if (material.emissive) material.emissive.setHex(newColorValue);\n      });\n    }\n  }, {\n    key: "changeTexture",\n    value: function changeTexture(textureName) {\n      var textureLoader = new three_module/* TextureLoader */.dpR();\n      var newTexture = textureLoader.load(texture_mapping[textureName], function (newTexture) {\n        newTexture.flipY = false;\n        this.material.map = newTexture;\n        this.material.needsUpdate = true;\n        this.material.opacity = 1.0;\n      }.bind(this) // Added bind(this) to retain the context\n      );\n    }\n  }, {\n    key: "changeTextureColor",\n    value: function changeTextureColor(color, intensity) {\n      var newColorValue = new three_module/* Color */.Ilk(color);\n\n      if (this.materialArray[0].uniforms.colorValue === undefined) {\n        this.materialArray[0].uniforms.colorValue = {\n          value: newColorValue\n        };\n        this.materialArray.forEach(function (material) {\n          material.uniforms.opacityValue.value = intensity;\n        });\n      } else {\n        this.materialArray[0].uniforms.colorValue.value = newColorValue;\n        this.materialArray.forEach(function (material) {\n          material.uniforms.opacityValue.value = intensity;\n        });\n      }\n\n      this.materialArray[0].needsUpdate = true; // console.log("changeTextureColor");\n    }\n  }]);\n\n  return EyeShadowStyle;\n}();\n;// CONCATENATED MODULE: ./src/js/eyeshadow-style/matte_eyeshadow_mask.js\n\n\nfunction matte_eyeshadow_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matte_eyeshadow_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matte_eyeshadow_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) matte_eyeshadow_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) matte_eyeshadow_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar MatteEyeShadowMask = /*#__PURE__*/function () {\n  function MatteEyeShadowMask(_pattern, _texture) {\n    matte_eyeshadow_mask_classCallCheck(this, MatteEyeShadowMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var material = new three_module/* MeshBasicMaterial */.vBJ({\n      map: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      toneMapped: false,\n      color: threeColor,\n      fog: false\n    });\n    this.MaterialArray = [material];\n  }\n\n  matte_eyeshadow_mask_createClass(MatteEyeShadowMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteEyeShadowMask;\n}();\n;// CONCATENATED MODULE: ./src/js/eyeshadow-style/shimmer_eyeshadow_mask.js\n\n\nfunction shimmer_eyeshadow_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction shimmer_eyeshadow_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction shimmer_eyeshadow_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) shimmer_eyeshadow_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) shimmer_eyeshadow_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar ShimmerEyeShadowMask = /*#__PURE__*/function () {\n  function ShimmerEyeShadowMask(_pattern, _texture) {\n    shimmer_eyeshadow_mask_classCallCheck(this, ShimmerEyeShadowMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var threeColor1 = null;\n\n    if (_pattern.colors.length > 1) {\n      var color1 = _pattern.colors[1];\n      var newColor1 = ColorUtils.getColorWithIntensity(color1, 100);\n      threeColor1 = new three_module/* Color */.Ilk(newColor1);\n    } else {\n      threeColor1 = new three_module/* Color */.Ilk("0xffffff");\n    }\n\n    var material = new three_module/* MeshPhysicalMaterial */.EJi({\n      map: new three_module/* TextureLoader */.dpR().load(_texture[0], function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      roughness: 0.24,\n      metalness: 0,\n      envMapIntensity: 0,\n      toneMapped: false,\n      fog: false,\n      // clearcoat: 1,\n      // clearcoatRoughness: 0.3,\n      specularIntensity: 0.5,\n      specularColor: threeColor,\n      color: threeColor\n    });\n    var material1 = new three_module/* MeshPhysicalMaterial */.EJi({\n      map: new three_module/* TextureLoader */.dpR().load(_texture[1], function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      toneMapped: false,\n      fog: false,\n      roughness: 0.24,\n      metalness: 0,\n      specularIntensity: 0.6,\n      specularColor: threeColor1,\n      color: threeColor1\n    });\n    this.MaterialArray = [material, material1];\n  }\n\n  shimmer_eyeshadow_mask_createClass(ShimmerEyeShadowMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return ShimmerEyeShadowMask;\n}();\n;// CONCATENATED MODULE: ./src/js/eyeshadow-style/eyeshadow_pattern_factory.js\nfunction eyeshadow_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return eyeshadow_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyeshadow_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyeshadow_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyeshadow_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyeshadow_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyeshadow_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyeshadow_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyeshadow_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyeshadow_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction eyeshadow_pattern_factory_setPrototypeOf(o, p) { eyeshadow_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyeshadow_pattern_factory_setPrototypeOf(o, p); }\n\nfunction eyeshadow_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = eyeshadow_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyeshadow_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyeshadow_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyeshadow_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction eyeshadow_pattern_factory_possibleConstructorReturn(self, call) { if (call && (eyeshadow_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyeshadow_pattern_factory_assertThisInitialized(self); }\n\nfunction eyeshadow_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyeshadow_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyeshadow_pattern_factory_getPrototypeOf(o) { eyeshadow_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyeshadow_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\nvar EyeshadowPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  eyeshadow_pattern_factory_inherits(EyeshadowPatternFactory, _PatternFactory);\n\n  var _super = eyeshadow_pattern_factory_createSuper(EyeshadowPatternFactory);\n\n  function EyeshadowPatternFactory() {\n    var _this;\n\n    eyeshadow_pattern_factory_classCallCheck(this, EyeshadowPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      matte: MatteEyeShadowMask,\n      shimmer: ShimmerEyeShadowMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  eyeshadow_pattern_factory_createClass(EyeshadowPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return EyeshadowPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/eyeshadow-style/eyeshadow_style_1.js\nfunction eyeshadow_style_1_typeof(obj) { "@babel/helpers - typeof"; return eyeshadow_style_1_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyeshadow_style_1_typeof(obj); }\n\nfunction eyeshadow_style_1_toConsumableArray(arr) { return eyeshadow_style_1_arrayWithoutHoles(arr) || eyeshadow_style_1_iterableToArray(arr) || eyeshadow_style_1_unsupportedIterableToArray(arr) || eyeshadow_style_1_nonIterableSpread(); }\n\nfunction eyeshadow_style_1_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyeshadow_style_1_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyeshadow_style_1_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyeshadow_style_1_arrayLikeToArray(o, minLen); }\n\nfunction eyeshadow_style_1_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyeshadow_style_1_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyeshadow_style_1_arrayLikeToArray(arr); }\n\nfunction eyeshadow_style_1_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyeshadow_style_1_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyeshadow_style_1_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyeshadow_style_1_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyeshadow_style_1_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyeshadow_style_1_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyeshadow_style_1_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyeshadow_style_1_setPrototypeOf(subClass, superClass); }\n\nfunction eyeshadow_style_1_setPrototypeOf(o, p) { eyeshadow_style_1_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyeshadow_style_1_setPrototypeOf(o, p); }\n\nfunction eyeshadow_style_1_createSuper(Derived) { var hasNativeReflectConstruct = eyeshadow_style_1_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyeshadow_style_1_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyeshadow_style_1_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyeshadow_style_1_possibleConstructorReturn(this, result); }; }\n\nfunction eyeshadow_style_1_possibleConstructorReturn(self, call) { if (call && (eyeshadow_style_1_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyeshadow_style_1_assertThisInitialized(self); }\n\nfunction eyeshadow_style_1_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyeshadow_style_1_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyeshadow_style_1_getPrototypeOf(o) { eyeshadow_style_1_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyeshadow_style_1_getPrototypeOf(o); }\n\n\n\n\n\n\nvar EyeshadowStyle1 = /*#__PURE__*/function (_EyeShadowStyle) {\n  eyeshadow_style_1_inherits(EyeshadowStyle1, _EyeShadowStyle);\n\n  var _super = eyeshadow_style_1_createSuper(EyeshadowStyle1);\n\n  function EyeshadowStyle1(sku, scene, width, height) {\n    eyeshadow_style_1_classCallCheck(this, EyeshadowStyle1);\n\n    var patternDefaultTextures = {\n      matte: Eyeshadow1,\n      // glossy: MatteAOTexture,\n      shimmer: [Eyeshadow1, Eyeshadow1_shimmer]\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new EyeshadowPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyeshadow_style_1_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return eyeshadow_style_1_createClass(EyeshadowStyle1);\n}(EyeShadowStyle);\n;// CONCATENATED MODULE: ./src/assets/Eyeshadow2.png\n/* harmony default export */ const Eyeshadow2 = (__webpack_require__.p + "assets/models/a9cec0cc80e1d1e0cddd38c52d09c3b2.png");\n;// CONCATENATED MODULE: ./src/assets/Eyeshadow2_shimmer.png\n/* harmony default export */ const Eyeshadow2_shimmer = (__webpack_require__.p + "assets/models/798eba038648a64da017a0c71d27b0cb.png");\n;// CONCATENATED MODULE: ./src/js/eyeshadow-style/eyeshadow_style_2.js\nfunction eyeshadow_style_2_typeof(obj) { "@babel/helpers - typeof"; return eyeshadow_style_2_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyeshadow_style_2_typeof(obj); }\n\nfunction eyeshadow_style_2_toConsumableArray(arr) { return eyeshadow_style_2_arrayWithoutHoles(arr) || eyeshadow_style_2_iterableToArray(arr) || eyeshadow_style_2_unsupportedIterableToArray(arr) || eyeshadow_style_2_nonIterableSpread(); }\n\nfunction eyeshadow_style_2_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyeshadow_style_2_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyeshadow_style_2_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyeshadow_style_2_arrayLikeToArray(o, minLen); }\n\nfunction eyeshadow_style_2_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyeshadow_style_2_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyeshadow_style_2_arrayLikeToArray(arr); }\n\nfunction eyeshadow_style_2_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyeshadow_style_2_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyeshadow_style_2_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyeshadow_style_2_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyeshadow_style_2_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyeshadow_style_2_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyeshadow_style_2_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyeshadow_style_2_setPrototypeOf(subClass, superClass); }\n\nfunction eyeshadow_style_2_setPrototypeOf(o, p) { eyeshadow_style_2_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyeshadow_style_2_setPrototypeOf(o, p); }\n\nfunction eyeshadow_style_2_createSuper(Derived) { var hasNativeReflectConstruct = eyeshadow_style_2_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyeshadow_style_2_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyeshadow_style_2_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyeshadow_style_2_possibleConstructorReturn(this, result); }; }\n\nfunction eyeshadow_style_2_possibleConstructorReturn(self, call) { if (call && (eyeshadow_style_2_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyeshadow_style_2_assertThisInitialized(self); }\n\nfunction eyeshadow_style_2_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyeshadow_style_2_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyeshadow_style_2_getPrototypeOf(o) { eyeshadow_style_2_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyeshadow_style_2_getPrototypeOf(o); }\n\n\n\n\n\n\nvar EyeshadowStyle2 = /*#__PURE__*/function (_EyeShadowStyle) {\n  eyeshadow_style_2_inherits(EyeshadowStyle2, _EyeShadowStyle);\n\n  var _super = eyeshadow_style_2_createSuper(EyeshadowStyle2);\n\n  function EyeshadowStyle2(sku, scene, width, height) {\n    eyeshadow_style_2_classCallCheck(this, EyeshadowStyle2);\n\n    var patternDefaultTextures = {\n      matte: Eyeshadow2,\n      // glossy: MatteAOTexture,\n      shimmer: [Eyeshadow2, Eyeshadow2_shimmer]\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      //console.log(_style.patterns[i]);\n      var PatternFactory = new EyeshadowPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyeshadow_style_2_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return eyeshadow_style_2_createClass(EyeshadowStyle2);\n}(EyeShadowStyle);\n;// CONCATENATED MODULE: ./src/js/eyeshadow-style/eyeshadow_style_factory.js\nfunction eyeshadow_style_factory_typeof(obj) { "@babel/helpers - typeof"; return eyeshadow_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyeshadow_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyeshadow_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyeshadow_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyeshadow_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyeshadow_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyeshadow_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyeshadow_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyeshadow_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction eyeshadow_style_factory_setPrototypeOf(o, p) { eyeshadow_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyeshadow_style_factory_setPrototypeOf(o, p); }\n\nfunction eyeshadow_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = eyeshadow_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyeshadow_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyeshadow_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyeshadow_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction eyeshadow_style_factory_possibleConstructorReturn(self, call) { if (call && (eyeshadow_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyeshadow_style_factory_assertThisInitialized(self); }\n\nfunction eyeshadow_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyeshadow_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyeshadow_style_factory_getPrototypeOf(o) { eyeshadow_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyeshadow_style_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar EyeShadowStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  eyeshadow_style_factory_inherits(EyeShadowStyleFactory, _StyleFactory);\n\n  var _super = eyeshadow_style_factory_createSuper(EyeShadowStyleFactory);\n\n  function EyeShadowStyleFactory() {\n    var _this;\n\n    eyeshadow_style_factory_classCallCheck(this, EyeShadowStyleFactory);\n\n    _this = _super.call(this);\n    _this.eyeShadowStyles = {\n      eyeshadow1: EyeshadowStyle1,\n      eyeshadow2: EyeshadowStyle2 //"eyeShadow3": GlossyEyeShadowMask\n      // "shimmer": ShimmerEyeShadowMask,\n\n    };\n    return _this;\n  }\n\n  eyeshadow_style_factory_createClass(EyeShadowStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var StyleClass = this.eyeShadowStyles[styleType.toLowerCase()];\n\n      if (!StyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported eyeshadow style");\n      }\n\n      return new StyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return EyeShadowStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/assets/Eyeliner_11.png\n/* harmony default export */ const Eyeliner_11 = (__webpack_require__.p + "assets/models/0494961ee1240c6bbb1a83a2c41d669c.png");\n;// CONCATENATED MODULE: ./src/js/eyeliner-style/eyelinerstyle.js\n\n\n\n\n\n\nfunction eyelinerstyle_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyelinerstyle_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyelinerstyle_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyelinerstyle_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyelinerstyle_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n //import { makeGeometry } from "../facemesh/eyeliner_landmark_helper";\n\n\n\n\n\n\n\nvar EyeLinerStyle = /*#__PURE__*/function () {\n  function EyeLinerStyle(sku, scene, width, height, materials) {\n    eyelinerstyle_classCallCheck(this, EyeLinerStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = [];\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n  }\n\n  eyelinerstyle_createClass(EyeLinerStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; // this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      for (var i = 0; i < this.materialArray.length; i++) {\n        var geometry = makeGeometry(this.landmarks, "eyelash");\n\n        if (!this.faces || this.faces.length <= i) {\n          var tempface = new three_module/* Mesh */.Kj0(geometry, this.materialArray[i]);\n          this.faces.push(tempface);\n          this.scene.add(tempface);\n          this.faces[i].receiveShadow = false; // Disable receiving shadows\n\n          this.faces[i].castShadow = false; // Disable casting shadows\n\n          this.faces[i].position.set(0, 0, 0);\n          this.faces[i].name = "makeup";\n        } else {\n          this.faces[i].geometry = geometry;\n          this.faces[i].material = this.materialArray[i];\n        }\n\n        this.faces[i].scale.set(this.width, this.height, this.width);\n      }\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n\n      while (!!this.scene.getObjectByName("makeup")) {\n        this.scene.remove(this.scene.getObjectByName("makeup"));\n      }\n\n      this.faces = [];\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {// this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.faces != null && this.landmarks != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        material.opacity = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.opacity = intensity;\n        material.needsUpdate = true; //if (material.emissive) material.emissive.setHex(newColorValue);\n      });\n    }\n  }, {\n    key: "changeTexture",\n    value: function changeTexture(textureName) {\n      var textureLoader = new three_module/* TextureLoader */.dpR();\n      var newTexture = textureLoader.load(texture_mapping[textureName], function (newTexture) {\n        newTexture.flipY = false;\n        this.material.map = newTexture;\n        this.material.needsUpdate = true;\n        this.material.opacity = 1.0;\n      }.bind(this) // Added bind(this) to retain the context\n      );\n    }\n  }, {\n    key: "changeTextureColor",\n    value: function changeTextureColor(color, intensity) {\n      var newColorValue = new three_module/* Color */.Ilk(color);\n\n      if (this.materialArray[0].uniforms.colorValue === undefined) {\n        this.materialArray[0].uniforms.colorValue = {\n          value: newColorValue\n        };\n        this.materialArray.forEach(function (material) {\n          material.uniforms.opacityValue.value = intensity;\n        });\n      } else {\n        this.materialArray[0].uniforms.colorValue.value = newColorValue;\n        this.materialArray.forEach(function (material) {\n          material.uniforms.opacityValue.value = intensity;\n        });\n      }\n\n      this.materialArray[0].needsUpdate = true;\n    }\n  }]);\n\n  return EyeLinerStyle;\n}();\n;// CONCATENATED MODULE: ./src/js/eyeliner-style/matter_eyeliner.js\n\n\nfunction matter_eyeliner_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matter_eyeliner_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matter_eyeliner_createClass(Constructor, protoProps, staticProps) { if (protoProps) matter_eyeliner_defineProperties(Constructor.prototype, protoProps); if (staticProps) matter_eyeliner_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar MatteEyeLinerMask = /*#__PURE__*/function () {\n  function MatteEyeLinerMask(_pattern, _texture) {\n    matter_eyeliner_classCallCheck(this, MatteEyeLinerMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var material = new three_module/* MeshBasicMaterial */.vBJ({\n      map: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      toneMapped: false,\n      color: threeColor,\n      fog: false\n    });\n    this.MaterialArray = [material];\n  }\n\n  matter_eyeliner_createClass(MatteEyeLinerMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteEyeLinerMask;\n}();\n;// CONCATENATED MODULE: ./src/js/eyeliner-style/eyeliner_pattern_factory.js\nfunction eyeliner_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return eyeliner_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyeliner_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyeliner_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyeliner_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyeliner_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyeliner_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyeliner_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyeliner_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyeliner_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction eyeliner_pattern_factory_setPrototypeOf(o, p) { eyeliner_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyeliner_pattern_factory_setPrototypeOf(o, p); }\n\nfunction eyeliner_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = eyeliner_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyeliner_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyeliner_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyeliner_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction eyeliner_pattern_factory_possibleConstructorReturn(self, call) { if (call && (eyeliner_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyeliner_pattern_factory_assertThisInitialized(self); }\n\nfunction eyeliner_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyeliner_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyeliner_pattern_factory_getPrototypeOf(o) { eyeliner_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyeliner_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar EyelinerPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  eyeliner_pattern_factory_inherits(EyelinerPatternFactory, _PatternFactory);\n\n  var _super = eyeliner_pattern_factory_createSuper(EyelinerPatternFactory);\n\n  function EyelinerPatternFactory() {\n    var _this;\n\n    eyeliner_pattern_factory_classCallCheck(this, EyelinerPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      matte: MatteEyeLinerMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  eyeliner_pattern_factory_createClass(EyelinerPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return EyelinerPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/eyeliner-style/eyeliner_style_1.js\nfunction eyeliner_style_1_typeof(obj) { "@babel/helpers - typeof"; return eyeliner_style_1_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyeliner_style_1_typeof(obj); }\n\nfunction eyeliner_style_1_toConsumableArray(arr) { return eyeliner_style_1_arrayWithoutHoles(arr) || eyeliner_style_1_iterableToArray(arr) || eyeliner_style_1_unsupportedIterableToArray(arr) || eyeliner_style_1_nonIterableSpread(); }\n\nfunction eyeliner_style_1_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyeliner_style_1_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyeliner_style_1_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyeliner_style_1_arrayLikeToArray(o, minLen); }\n\nfunction eyeliner_style_1_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyeliner_style_1_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyeliner_style_1_arrayLikeToArray(arr); }\n\nfunction eyeliner_style_1_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyeliner_style_1_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyeliner_style_1_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyeliner_style_1_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyeliner_style_1_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyeliner_style_1_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyeliner_style_1_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyeliner_style_1_setPrototypeOf(subClass, superClass); }\n\nfunction eyeliner_style_1_setPrototypeOf(o, p) { eyeliner_style_1_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyeliner_style_1_setPrototypeOf(o, p); }\n\nfunction eyeliner_style_1_createSuper(Derived) { var hasNativeReflectConstruct = eyeliner_style_1_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyeliner_style_1_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyeliner_style_1_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyeliner_style_1_possibleConstructorReturn(this, result); }; }\n\nfunction eyeliner_style_1_possibleConstructorReturn(self, call) { if (call && (eyeliner_style_1_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyeliner_style_1_assertThisInitialized(self); }\n\nfunction eyeliner_style_1_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyeliner_style_1_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyeliner_style_1_getPrototypeOf(o) { eyeliner_style_1_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyeliner_style_1_getPrototypeOf(o); }\n\n\n\n\n\n\nvar EyelinerStyle1 = /*#__PURE__*/function (_EyeLinerStyle) {\n  eyeliner_style_1_inherits(EyelinerStyle1, _EyeLinerStyle);\n\n  var _super = eyeliner_style_1_createSuper(EyelinerStyle1);\n\n  function EyelinerStyle1(sku, scene, width, height) {\n    eyeliner_style_1_classCallCheck(this, EyelinerStyle1);\n\n    var patternDefaultTextures = {\n      matte: Eyeliner_11 // glossy: MatteAOTexture,\n      //shimmer: [MatteAOTexture, ShimmerAOTexture],\n\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new EyelinerPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyeliner_style_1_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return eyeliner_style_1_createClass(EyelinerStyle1);\n}(EyeLinerStyle);\n;// CONCATENATED MODULE: ./src/assets/Eyeliner_12.png\n/* harmony default export */ const Eyeliner_12 = (__webpack_require__.p + "assets/models/9d946cbbe6c139627a2ad326529f8795.png");\n;// CONCATENATED MODULE: ./src/js/eyeliner-style/eyeliner_style_2.js\nfunction eyeliner_style_2_typeof(obj) { "@babel/helpers - typeof"; return eyeliner_style_2_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyeliner_style_2_typeof(obj); }\n\nfunction eyeliner_style_2_toConsumableArray(arr) { return eyeliner_style_2_arrayWithoutHoles(arr) || eyeliner_style_2_iterableToArray(arr) || eyeliner_style_2_unsupportedIterableToArray(arr) || eyeliner_style_2_nonIterableSpread(); }\n\nfunction eyeliner_style_2_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyeliner_style_2_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyeliner_style_2_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyeliner_style_2_arrayLikeToArray(o, minLen); }\n\nfunction eyeliner_style_2_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyeliner_style_2_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyeliner_style_2_arrayLikeToArray(arr); }\n\nfunction eyeliner_style_2_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyeliner_style_2_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyeliner_style_2_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyeliner_style_2_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyeliner_style_2_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyeliner_style_2_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyeliner_style_2_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyeliner_style_2_setPrototypeOf(subClass, superClass); }\n\nfunction eyeliner_style_2_setPrototypeOf(o, p) { eyeliner_style_2_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyeliner_style_2_setPrototypeOf(o, p); }\n\nfunction eyeliner_style_2_createSuper(Derived) { var hasNativeReflectConstruct = eyeliner_style_2_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyeliner_style_2_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyeliner_style_2_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyeliner_style_2_possibleConstructorReturn(this, result); }; }\n\nfunction eyeliner_style_2_possibleConstructorReturn(self, call) { if (call && (eyeliner_style_2_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyeliner_style_2_assertThisInitialized(self); }\n\nfunction eyeliner_style_2_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyeliner_style_2_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyeliner_style_2_getPrototypeOf(o) { eyeliner_style_2_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyeliner_style_2_getPrototypeOf(o); }\n\n\n\n\n\n\nvar EyelinerStyle2 = /*#__PURE__*/function (_EyeLinerStyle) {\n  eyeliner_style_2_inherits(EyelinerStyle2, _EyeLinerStyle);\n\n  var _super = eyeliner_style_2_createSuper(EyelinerStyle2);\n\n  function EyelinerStyle2(sku, scene, width, height) {\n    eyeliner_style_2_classCallCheck(this, EyelinerStyle2);\n\n    var patternDefaultTextures = {\n      matte: Eyeliner_12 //shimmer: [MatteAOTextureUpper, ShimmerAOTextureUpper],\n\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new EyelinerPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyeliner_style_2_toConsumableArray(pattern.getMaterials()));\n    } //console.log("asfasf" + materialsArray.length);\n\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return eyeliner_style_2_createClass(EyelinerStyle2);\n}(EyeLinerStyle);\n;// CONCATENATED MODULE: ./src/js/eyeliner-style/eyeliner_style_factory.js\nfunction eyeliner_style_factory_typeof(obj) { "@babel/helpers - typeof"; return eyeliner_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyeliner_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyeliner_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyeliner_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyeliner_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyeliner_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyeliner_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyeliner_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyeliner_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction eyeliner_style_factory_setPrototypeOf(o, p) { eyeliner_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyeliner_style_factory_setPrototypeOf(o, p); }\n\nfunction eyeliner_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = eyeliner_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyeliner_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyeliner_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyeliner_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction eyeliner_style_factory_possibleConstructorReturn(self, call) { if (call && (eyeliner_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyeliner_style_factory_assertThisInitialized(self); }\n\nfunction eyeliner_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyeliner_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyeliner_style_factory_getPrototypeOf(o) { eyeliner_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyeliner_style_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar EyeLinerStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  eyeliner_style_factory_inherits(EyeLinerStyleFactory, _StyleFactory);\n\n  var _super = eyeliner_style_factory_createSuper(EyeLinerStyleFactory);\n\n  function EyeLinerStyleFactory() {\n    var _this;\n\n    eyeliner_style_factory_classCallCheck(this, EyeLinerStyleFactory);\n\n    _this = _super.call(this);\n    _this.eyeLinerStyles = {\n      eyeliner1: EyelinerStyle1,\n      eyeliner2: EyelinerStyle2\n    };\n    return _this;\n  }\n\n  eyeliner_style_factory_createClass(EyeLinerStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var StyleClass = this.eyeLinerStyles[styleType.toLowerCase()];\n\n      if (!StyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported lips style");\n      }\n\n      return new StyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return EyeLinerStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/assets/sam2.png\n/* harmony default export */ const sam2 = (__webpack_require__.p + "assets/models/b7cbccc5c2bba379d50cebf72164fe05.png");\n;// CONCATENATED MODULE: ./src/assets/shine_12.png\n/* harmony default export */ const shine_12 = (__webpack_require__.p + "assets/models/03243d6d7503d2dd96409877f8fd79ad.png");\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.typed.uint8-array.js\nvar es6_typed_uint8_array = __webpack_require__(6964);\n;// CONCATENATED MODULE: ./src/js/nail-style/nailResponse.js\n\n\nfunction nailResponse_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction nailResponse_createClass(Constructor, protoProps, staticProps) { if (protoProps) nailResponse_defineProperties(Constructor.prototype, protoProps); if (staticProps) nailResponse_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction nailResponse_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar nailResponseData = /*#__PURE__*/nailResponse_createClass(function nailResponseData(_image, _mask, _x_cord, _y_cord, _x2_cord, _y2_cord, _angle, _isVideo) {\n  nailResponse_classCallCheck(this, nailResponseData);\n\n  this.image = _image;\n  this.maskData = _mask;\n  this.x_cord = _x_cord;\n  this.y_cord = _y_cord;\n  this.x2_cord = _x2_cord;\n  this.y2_cord = _y2_cord;\n  this.angle = _angle;\n  this.isVideo = _isVideo;\n});\n;// CONCATENATED MODULE: ./src/js/nail-style/nail_style.js\n\n\n\n\n\nfunction nail_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction nail_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction nail_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) nail_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) nail_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n //import { GUI } from "dat.gui";\n\nvar NailStyle = /*#__PURE__*/function () {\n  function NailStyle(sku, scene, width, height, materials) {\n    nail_style_classCallCheck(this, NailStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.imageCanvas;\n    this.ctx;\n    this.nailData;\n    this.maskTexture = null;\n    this.angle = null;\n    this.x_cord = null;\n    this.y_cord = null;\n    this.x2_cord = null;\n    this.y2_cord = null;\n    this.maskMesh = [null, null, null, null, null, null, null, null, null, null];\n    this.faces = null;\n    this.isVideo = true;\n    this.combinecall = false;\n    this.maskCanvas = document.createElement("canvas");\n    var contextAttributes = {\n      willReadFrequently: true\n    };\n    this.canvasCtx = this.maskCanvas.getContext("2d", contextAttributes);\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity); // const gui = new GUI();\n    // this.currentvector = new THREE.Vector3(0, 0, 0);\n    // const vectorFolder2 = gui.addFolder("Vector Controls");\n    // vectorFolder2.add(this.currentvector, "x", -100, 100).step(0.01);\n    // vectorFolder2.add(this.currentvector, "y", -100, 100).step(0.01);\n    // vectorFolder2.add(this.currentvector, "z", -100, 100).step(0.01);\n  }\n\n  nail_style_createClass(NailStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height, offset) {\n      this.width = width;\n      this.height = height;\n      this.offset = offset; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks; // this.needsUpdate = true;\n    }\n  }, {\n    key: "setNeedUpdateTrue",\n    value: function setNeedUpdateTrue() {\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateMask",\n    value: function updateMask(imageCanvas, mask, x_cord, y_cord, x2_cord, y2_cord, angle, isVideo) {\n      // console.log("inside updateMask called",combinecall);\n      //this.imageCanvas = imageCanvas;\n      var contextAttributes = {\n        willReadFrequently: true\n      };\n      this.ctx = this.maskCanvas.getContext("2d", contextAttributes); // console.log("Called  updateMask angle :: ",angle)\n\n      this.angle = angle;\n      this.maskTexture = mask;\n      this.x_cord = x_cord;\n      this.y_cord = y_cord;\n      this.x2_cord = x2_cord;\n      this.y2_cord = y2_cord;\n      this.needsUpdate = true;\n      this.isVideo = isVideo;\n      this.nailData = new nailResponseData(imageCanvas, mask, x_cord, y_cord, x2_cord, y2_cord, angle, isVideo);\n    }\n  }, {\n    key: "getNailData",\n    value: function getNailData() {\n      return this.nailData;\n    }\n  }, {\n    key: "clearNailData",\n    value: function clearNailData() {\n      this.nailData = null;\n    }\n  }, {\n    key: "setNailData",\n    value: function setNailData(_nailData) {\n      this.nailData = _nailData;\n      var contextAttributes = {\n        willReadFrequently: true\n      };\n      this.ctx = this.maskCanvas.getContext("2d", contextAttributes);\n      this.angle = _nailData.angle;\n      this.maskTexture = _nailData.maskData;\n      this.x_cord = _nailData.x_cord;\n      this.y_cord = _nailData.y_cord;\n      this.x2_cord = _nailData.x2_cord;\n      this.y2_cord = _nailData.y2_cord;\n      this.isVideo = _nailData.isVideo;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "flipImageData",\n    value: function flipImageData(data, width, height) {\n      var flippedData = new Uint8Array(data.length);\n      var rowSize = width * 4; // Assuming 4 channels (RGBA)\n\n      for (var row = 0; row < height; row++) {\n        var srcOffset = row * rowSize;\n        var destOffset = (height - row - 1) * rowSize;\n        flippedData.set(data.subarray(srcOffset, srcOffset + rowSize), destOffset);\n      }\n\n      return flippedData;\n    }\n  }, {\n    key: "degreesToRadians",\n    value: function degreesToRadians(degrees) {\n      return degrees * (-Math.PI / 180);\n    }\n  }, {\n    key: "addrendring",\n    value: function addrendring() {\n      if (!this.maskTexture || !this.materialArray || this.materialArray.length <= 0) return;\n      var anglesInRadians = this.angle.map(this.degreesToRadians);\n\n      for (var z = 0; z < this.maskTexture.length; z++) {\n        var sx = void 0;\n        var sy = void 0;\n\n        if (this.isVideo) {\n          var _getVideoEl, _getVideoEl2;\n\n          sx = this.x_cord[z] + this.x2_cord[z] / 1.85 - ((_getVideoEl = getVideoEl()) === null || _getVideoEl === void 0 ? void 0 : _getVideoEl.videoWidth) / 2;\n          sy = ((_getVideoEl2 = getVideoEl()) === null || _getVideoEl2 === void 0 ? void 0 : _getVideoEl2.videoHeight) / 2 - this.y2_cord[z] / 1.85 - this.y_cord[z];\n        } else {\n          sx = this.x_cord[z] + this.x2_cord[z] / 1.85 - this.width / 2;\n          sy = this.height / 2 - this.y2_cord[z] / 1.85 - this.y_cord[z];\n        }\n\n        var sh = this.y2_cord[z];\n        var sw = this.x2_cord[z];\n        var maskImageTexture = this.maskTexture[z];\n        var newColor = new three_module/* Color */.Ilk(0xb76e79); // Green color\n\n        maskImageTexture.generateMipmaps = true;\n        maskImageTexture.magFilter = three_module/* LinearFilter */.wem; // For smoother magnification\n\n        maskImageTexture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n        maskImageTexture.color = newColor;\n        maskImageTexture.opacity = 0.5;\n        maskImageTexture.needsUpdate = true;\n        var maskGeometry = new three_module/* PlaneGeometry */._12(1, 1);\n\n        if (this.isVideo) {\n          this.materialArray[z].vertexShader = nail_style_vertexShader;\n        } else {\n          this.materialArray[z].vertexShader = nail_style_vertexShader;\n        }\n\n        this.materialArray[z].uniforms._MaskTex.value = maskImageTexture;\n        this.materialArray[z].uniforms._RotationAngle.value = anglesInRadians[z]; // this.materialArray[z].uniforms._numMaskTextures.value = 1; //this.mask.length;\n\n        this.materialArray[z].uniforms._Threshold.value = 0.2;\n        this.materialArray[z].needsUpdate = true;\n        this.maskMesh[z] = new three_module/* Mesh */.Kj0(maskGeometry, this.materialArray[z]);\n        this.maskMesh[z].position.set(sx / this.offset, sy / this.offset, 0);\n        this.maskMesh[z].scale.set(sw / this.offset, sh / this.offset, 1);\n        this.scene.add(this.maskMesh[z]);\n      }\n    }\n  }, {\n    key: "updateTransforms",\n    value: function updateTransforms() {\n      if (!this.maskTexture) return;\n\n      for (var z = 0; z < this.maskTexture.length; z++) {\n        var sx = void 0;\n        var sy = void 0;\n\n        if (this.isVideo) {\n          var _getVideoEl3, _getVideoEl4;\n\n          sx = this.x_cord[z] + this.x2_cord[z] / 1.85 - ((_getVideoEl3 = getVideoEl()) === null || _getVideoEl3 === void 0 ? void 0 : _getVideoEl3.videoWidth) / 2;\n          sy = ((_getVideoEl4 = getVideoEl()) === null || _getVideoEl4 === void 0 ? void 0 : _getVideoEl4.videoHeight) / 2 - this.y2_cord[z] / 1.85 - this.y_cord[z];\n        } else {\n          sx = this.x_cord[z] + this.x2_cord[z] / 1.85 - this.width / 2;\n          sy = this.height / 2 - this.y2_cord[z] / 1.85 - this.y_cord[z];\n        }\n\n        var sh = this.y2_cord[z];\n        var sw = this.x2_cord[z];\n        this.maskMesh[z].position.set(sx / this.offset, sy / this.offset, 0);\n        this.maskMesh[z].scale.set(sw / this.offset, sh / this.offset, 1);\n      }\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      //this.scene.remove(this.faces);\n      if (this.maskTexture) {\n        for (var z = 0; z < this.maskTexture.length; z++) {\n          this.scene.remove(this.maskMesh[z]);\n        }\n      }\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.uniforms.opacity.value = intensity;\n      });\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        material.uniforms.opacity.value = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        // console.log("update called 218");//&& !this.combinecall\n        if (this.maskMesh != null) {\n          // if(this.combinecall =="false"){\n          this.removeFaces(); //console.log("removeFaces called 2",this.combinecall);\n          // }\n        }\n\n        if (this.maskTexture != null) {\n          this.addrendring(); // this.addMaskColor();\n        } else {// console.log("addMaskColor not called");\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.maskMesh != null && this.maskTexture != null) {\n        // console.log("nail update");\n        this.updateOpacity();\n      } // if (this.faces != null && this.pointLight != null) {\n      //     this.pointLight.position.copy(this.faces.position);\n      // }\n\n    }\n  }]);\n\n  return NailStyle;\n}();\nvar vertexShaderFlipped = ["varying vec2 vUv;", "void main() {", "  vUv = vec2(1.0 - uv.x, uv.y);", // Flip the texture coordinates horizontally\n"  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);", "}"].join("\\n");\nvar nail_style_vertexShader = ["varying vec2 vUv;", "void main() {", "  vUv = uv;", "  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);", "}"].join("\\n");\n;// CONCATENATED MODULE: ./src/js/nail-style/glossy_nail_mask.js\n\n\nfunction glossy_nail_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction glossy_nail_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction glossy_nail_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) glossy_nail_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) glossy_nail_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar GlossyNailMask = /*#__PURE__*/function () {\n  function GlossyNailMask(_pattern, _texture, index) {\n    glossy_nail_mask_classCallCheck(this, GlossyNailMask);\n\n    var color = _pattern.colors[0];\n    var maskColor = ColorUtils.hexToVector4(color, 100); // let threeColor = new THREE.Color(newColor);\n    // let maskColor = new THREE.Vector4(\n    //   threeColor.r,\n    //   threeColor.g,\n    //   threeColor.b,\n    //   1\n    // );\n\n    var aomap = new three_module/* TextureLoader */.dpR().load(_texture[1], function (texture) {\n      texture.flipY = false;\n      texture.needsUpdate = true;\n    });\n    var vertexShader = "\\n      varying vec2 vUv;\\n      void main() {\\n          vUv = uv;\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n      }\\n    ";\n    var fragmentShader = "\\n  uniform sampler2D _MaskTex;\\n  uniform sampler2D aoTex;\\n  uniform vec4 newColorValue;\\n  uniform float _RotationAngle;\\n  uniform float opacity;\\n  varying vec2 vUv;\\n\\n  // Function to compute a simple box blur (you can adjust the radius for more or less blur)\\n  float smoothMask(vec2 uv, float radius) {\\n    float sum = 0.0;\\n    float count = 0.0;\\n    vec2 offset = vec2(radius / 512.0, radius / 512.0); // Adjust the 512.0 for your texture resolution\\n\\n    for (float x = -1.0; x <= 1.0; x += 1.0) {\\n      for (float y = -1.0; y <= 1.0; y += 1.0) {\\n        vec2 texCoord = uv + vec2(x, y) * offset;\\n        vec4 color = texture2D(_MaskTex, texCoord);\\n        sum += color.r;\\n        count += 1.0;\\n      }\\n    }\\n    return sum / count;\\n  }\\n\\n  void main() {\\n    float blurRadius = 15.0; // Adjust this value for more or less blur\\n    float alpha = smoothMask(vUv, blurRadius);\\n\\n    // Sample the aoTex and apply the mask\\n    vec2 rotatedUV = vec2(\\n      cos(_RotationAngle) * (vUv.x - 0.5) + sin(_RotationAngle) * (vUv.y - 0.5) + 0.5,\\n      cos(_RotationAngle) * (vUv.y - 0.5) - sin(_RotationAngle) * (vUv.x - 0.5) + 0.5\\n    );\\n  \\n    vec4 aoColor = texture2D(aoTex, rotatedUV);\\n    vec4 baseColor = vec4(newColorValue.rgb, alpha);\\n\\n    // Apply the mask to aoTex\\n    vec4 maskedAoColor = vec4(aoColor.rgb, aoColor.a * alpha);\\n\\n    // Mix baseColor and maskedAoColor\\n    vec4 result = mix(baseColor, maskedAoColor, maskedAoColor.a);\\n\\n    // Apply the final opacity to the result\\n    gl_FragColor = vec4(result.rgb, result.a * opacity);\\n  }\\n";\n    var material = new three_module/* ShaderMaterial */.jyz({\n      uniforms: {\n        _MaskTex: {\n          value: null\n        },\n        aoTex: {\n          value: aomap\n        },\n        _Threshold: {\n          value: 0.2\n        },\n        newColorValue: {\n          value: maskColor\n        },\n        opacity: {\n          value: 0.2\n        },\n        _RotationAngle: {\n          value: 0.0\n        }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      transparent: true,\n      fog: false,\n      side: three_module/* FrontSide */.Wl3\n    });\n    this.MaterialArray = [material];\n  }\n\n  glossy_nail_mask_createClass(GlossyNailMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return GlossyNailMask;\n}();\n;// CONCATENATED MODULE: ./src/js/nail-style/matte_nail_mask.js\n\n\nfunction matte_nail_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matte_nail_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matte_nail_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) matte_nail_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) matte_nail_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar MatteNailMask = /*#__PURE__*/function () {\n  function MatteNailMask(_pattern, _texture, index) {\n    matte_nail_mask_classCallCheck(this, MatteNailMask);\n\n    var color = _pattern.colors[0];\n    var maskColor = ColorUtils.hexToVector4(color, 100); // let threeColor = new THREE.Color(newColor);\n    // let maskColor = new THREE.Vector4(\n    //   threeColor.r,\n    //   threeColor.g,\n    //   threeColor.b,\n    //   1\n    // );\n\n    var aomap = new three_module/* TextureLoader */.dpR().load(_texture[1], function (texture) {\n      texture.flipY = false;\n      texture.needsUpdate = true;\n    });\n    var vertexShader = "\\n      varying vec2 vUv;\\n      void main() {\\n          vUv = uv;\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n      }\\n    ";\n    var fragmentShader = "\\n  uniform sampler2D _MaskTex;\\n  uniform vec4 newColorValue;\\n  uniform float opacity;\\n  uniform float _RotationAngle;\\n  varying vec2 vUv;\\n\\n  // Function to compute a simple box blur (you can adjust the radius for more or less blur)\\n  float smoothMask(vec2 uv, float radius) {\\n    float sum = 0.0;\\n    float count = 0.0;\\n    vec2 offset = vec2(radius / 512.0, radius / 512.0); // Adjust the 512.0 for your texture resolution\\n\\n    for (float x = -1.0; x <= 1.0; x += 1.0) {\\n      for (float y = -1.0; y <= 1.0; y += 1.0) {\\n        vec2 texCoord = uv + vec2(x, y) * offset;\\n        vec4 color = texture2D(_MaskTex, texCoord);\\n        sum += color.r;\\n        count += 1.0;\\n      }\\n    }\\n    return sum / count;\\n  }\\n\\n  void main() {\\n    \\n    float blurRadius = 15.0; // Adjust this value for more or less blur\\n    float alpha = smoothMask(vUv, blurRadius);\\n    gl_FragColor = vec4(newColorValue.rgb, alpha * opacity);\\n  }\\n";\n    var material = new three_module/* ShaderMaterial */.jyz({\n      uniforms: {\n        _MaskTex: {\n          value: null\n        },\n        _Threshold: {\n          value: 0.2\n        },\n        newColorValue: {\n          value: maskColor\n        },\n        opacity: {\n          value: 0.2\n        },\n        _RotationAngle: {\n          value: 0.0\n        }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      transparent: true,\n      fog: false,\n      side: three_module/* FrontSide */.Wl3\n    });\n    this.MaterialArray = [material];\n  }\n\n  matte_nail_mask_createClass(MatteNailMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteNailMask;\n}();\n;// CONCATENATED MODULE: ./src/js/nail-style/nail_pattern_factory.js\nfunction nail_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return nail_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, nail_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction nail_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction nail_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction nail_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) nail_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) nail_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction nail_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) nail_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction nail_pattern_factory_setPrototypeOf(o, p) { nail_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return nail_pattern_factory_setPrototypeOf(o, p); }\n\nfunction nail_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = nail_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = nail_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = nail_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return nail_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction nail_pattern_factory_possibleConstructorReturn(self, call) { if (call && (nail_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return nail_pattern_factory_assertThisInitialized(self); }\n\nfunction nail_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction nail_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction nail_pattern_factory_getPrototypeOf(o) { nail_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return nail_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar NailPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  nail_pattern_factory_inherits(NailPatternFactory, _PatternFactory);\n\n  var _super = nail_pattern_factory_createSuper(NailPatternFactory);\n\n  function NailPatternFactory() {\n    var _this;\n\n    nail_pattern_factory_classCallCheck(this, NailPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      matte: MatteNailMask,\n      glossy: GlossyNailMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  nail_pattern_factory_createClass(NailPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      //console.log(this.patternClass.MaterialArray);\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return NailPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/nail-style/nail_single_color.js\nfunction nail_single_color_typeof(obj) { "@babel/helpers - typeof"; return nail_single_color_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, nail_single_color_typeof(obj); }\n\nfunction nail_single_color_toConsumableArray(arr) { return nail_single_color_arrayWithoutHoles(arr) || nail_single_color_iterableToArray(arr) || nail_single_color_unsupportedIterableToArray(arr) || nail_single_color_nonIterableSpread(); }\n\nfunction nail_single_color_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction nail_single_color_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return nail_single_color_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return nail_single_color_arrayLikeToArray(o, minLen); }\n\nfunction nail_single_color_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction nail_single_color_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return nail_single_color_arrayLikeToArray(arr); }\n\nfunction nail_single_color_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction nail_single_color_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction nail_single_color_createClass(Constructor, protoProps, staticProps) { if (protoProps) nail_single_color_defineProperties(Constructor.prototype, protoProps); if (staticProps) nail_single_color_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction nail_single_color_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction nail_single_color_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) nail_single_color_setPrototypeOf(subClass, superClass); }\n\nfunction nail_single_color_setPrototypeOf(o, p) { nail_single_color_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return nail_single_color_setPrototypeOf(o, p); }\n\nfunction nail_single_color_createSuper(Derived) { var hasNativeReflectConstruct = nail_single_color_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = nail_single_color_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = nail_single_color_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return nail_single_color_possibleConstructorReturn(this, result); }; }\n\nfunction nail_single_color_possibleConstructorReturn(self, call) { if (call && (nail_single_color_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return nail_single_color_assertThisInitialized(self); }\n\nfunction nail_single_color_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction nail_single_color_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction nail_single_color_getPrototypeOf(o) { nail_single_color_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return nail_single_color_getPrototypeOf(o); }\n\n\n\n\n\n\nvar NailSingleTone = /*#__PURE__*/function (_NailStyle) {\n  nail_single_color_inherits(NailSingleTone, _NailStyle);\n\n  var _super = nail_single_color_createSuper(NailSingleTone);\n\n  function NailSingleTone(sku, scene, width, height) {\n    nail_single_color_classCallCheck(this, NailSingleTone);\n\n    var patternDefaultTextures = {\n      matte: [sam2, shine_12],\n      glossy: [sam2, shine_12],\n      shimmer: null\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      for (var j = 0; j < 10; j++) {\n        var PatternFactory = new NailPatternFactory();\n        var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n        );\n        materialsArray.push.apply(materialsArray, nail_single_color_toConsumableArray(pattern.getMaterials()));\n      }\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return nail_single_color_createClass(NailSingleTone);\n}(NailStyle);\n;// CONCATENATED MODULE: ./src/js/nail-style/nail_style_factory.js\nfunction nail_style_factory_typeof(obj) { "@babel/helpers - typeof"; return nail_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, nail_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction nail_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction nail_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction nail_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) nail_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) nail_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction nail_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) nail_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction nail_style_factory_setPrototypeOf(o, p) { nail_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return nail_style_factory_setPrototypeOf(o, p); }\n\nfunction nail_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = nail_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = nail_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = nail_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return nail_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction nail_style_factory_possibleConstructorReturn(self, call) { if (call && (nail_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return nail_style_factory_assertThisInitialized(self); }\n\nfunction nail_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction nail_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction nail_style_factory_getPrototypeOf(o) { nail_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return nail_style_factory_getPrototypeOf(o); }\n\n\n\n\n\n\nvar NailStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  nail_style_factory_inherits(NailStyleFactory, _StyleFactory);\n\n  var _super = nail_style_factory_createSuper(NailStyleFactory);\n\n  function NailStyleFactory() {\n    var _this;\n\n    nail_style_factory_classCallCheck(this, NailStyleFactory);\n\n    _this = _super.call(this);\n    _this.nailStyles = {\n      single: NailSingleTone\n    };\n    return _this;\n  }\n\n  nail_style_factory_createClass(NailStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var StyleClass = this.nailStyles[styleType.toLowerCase()];\n\n      if (!StyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported hair style");\n      }\n\n      var styleInstance = new StyleClass(apiResponseData.sku, scene, width, height);\n      styleInstance.isNailStyleFactoryInstance = true;\n      return styleInstance;\n    }\n  }]);\n\n  return NailStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/js/category_factories.js\n\n\nfunction category_factories_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction category_factories_createClass(Constructor, protoProps, staticProps) { if (protoProps) category_factories_defineProperties(Constructor.prototype, protoProps); if (staticProps) category_factories_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction category_factories_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction category_factories_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CategoryFactories = /*#__PURE__*/category_factories_createClass(function CategoryFactories() {\n  category_factories_classCallCheck(this, CategoryFactories);\n});\n\ncategory_factories_defineProperty(CategoryFactories, "lips", "lipstick");\n\ncategory_factories_defineProperty(CategoryFactories, "blush", "blush");\n\ncategory_factories_defineProperty(CategoryFactories, "eyeshadow", "eyeshadow");\n\ncategory_factories_defineProperty(CategoryFactories, "eyeliner", "eyeliner");\n\ncategory_factories_defineProperty(CategoryFactories, "masacara", "mascara");\n\ncategory_factories_defineProperty(CategoryFactories, "lipliner", "lipliner");\n\ncategory_factories_defineProperty(CategoryFactories, "hair", "hair");\n\ncategory_factories_defineProperty(CategoryFactories, "nailcolor", "nailcolor");\n\ncategory_factories_defineProperty(CategoryFactories, "faceanalysis", "faceanalysis");\n\ncategory_factories_defineProperty(CategoryFactories, "eyebrows", "eyebrows");\n\ncategory_factories_defineProperty(CategoryFactories, "eyelashes", "eyelashes");\n\ncategory_factories_defineProperty(CategoryFactories, "foundation", "foundation");\n\ncategory_factories_defineProperty(CategoryFactories, "highlighter", "highlighter");\n\nvar MLCategory = /*#__PURE__*/category_factories_createClass(function MLCategory() {\n  category_factories_classCallCheck(this, MLCategory);\n});\n\ncategory_factories_defineProperty(MLCategory, "face", 1);\n\ncategory_factories_defineProperty(MLCategory, "hair", 2);\n\ncategory_factories_defineProperty(MLCategory, "nail", 3);\n;// CONCATENATED MODULE: ./src/js/model-data/modelDataProvider.js\n\n\nfunction modelDataProvider_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction modelDataProvider_createClass(Constructor, protoProps, staticProps) { if (protoProps) modelDataProvider_defineProperties(Constructor.prototype, protoProps); if (staticProps) modelDataProvider_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction modelDataProvider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar modelDataProvider = /*#__PURE__*/modelDataProvider_createClass(function modelDataProvider(data) {\n  modelDataProvider_classCallCheck(this, modelDataProvider);\n\n  this.category = data.category;\n  this.subCategory = data.subCategory.toLowerCase();\n  this.imageUrl = data.imageUrl;\n  this.isActive = data.isActive;\n});\n;// CONCATENATED MODULE: ./src/js/api_response_data.js\nfunction api_response_data_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nfunction api_response_data_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction api_response_data_createClass(Constructor, protoProps, staticProps) { if (protoProps) api_response_data_defineProperties(Constructor.prototype, protoProps); if (staticProps) api_response_data_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction api_response_data_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar APIResponseData = /*#__PURE__*/(/* unused pure expression or super */ null && (api_response_data_createClass(function APIResponseData(response) {\n  var _response$config, _response$config2, _response$config3, _response$config4, _response$config5, _response$config6;\n\n  api_response_data_classCallCheck(this, APIResponseData);\n\n  this.config = (response === null || response === void 0 ? void 0 : response.config) || {\n    id: response === null || response === void 0 ? void 0 : (_response$config = response.config) === null || _response$config === void 0 ? void 0 : _response$config.id,\n    categoryName: (_response$config2 = response.config) === null || _response$config2 === void 0 ? void 0 : _response$config2.categoryName,\n    name: response === null || response === void 0 ? void 0 : (_response$config3 = response.config) === null || _response$config3 === void 0 ? void 0 : _response$config3.name,\n    baseAsset: response === null || response === void 0 ? void 0 : (_response$config4 = response.config) === null || _response$config4 === void 0 ? void 0 : _response$config4.baseAsset,\n    pattern: response === null || response === void 0 ? void 0 : (_response$config5 = response.config) === null || _response$config5 === void 0 ? void 0 : _response$config5.pattern,\n    imageUrl: response === null || response === void 0 ? void 0 : (_response$config6 = response.config) === null || _response$config6 === void 0 ? void 0 : _response$config6.imageUrl\n  };\n}))); // Enum representing pattern types for the "lipstick" category\n\nvar LipstickPatternType = {\n  0: "matte",\n  1: "glossy",\n  2: "metallic",\n  3: "shimmer",\n  4: "velvet"\n}; // Enum representing pattern types for the "blush" category\n\nvar BlushPatternType = {\n  0: "blush1",\n  1: "blush2" // Add more pattern types for the blush category as needed\n\n}; // Enum representing pattern types for the "eyeliner" category\n\nvar EyelinerPatternType = {\n  0: "eyeliner1",\n  1: "eyeliner2" // Add more pattern types for the eyeliner category as needed\n\n}; // Enum representing pattern types for the "eyeshadow" category\n\nvar EyeshadowPatternType = {\n  0: "eyeShadow1",\n  1: "eyeShadow2" // Add more pattern types for the eyeshadow category as needed\n\n};\n\nfunction mapData2Category(category) {\n  switch (category) {\n    case 0:\n      // lipstick\n      return "lipstick";\n\n    case 1:\n      // eyeliner\n      return "eyeliner";\n\n    case 2:\n      // eyeshadow\n      return "eyeshadow";\n\n    case 3:\n      // blush\n      return "blush";\n\n    default:\n      //   console.error("Invalid category:", category);\n      return null;\n  }\n} // Method to map data2 pattern to the corresponding pattern type based on category\n\n\nfunction mapData2Pattern(category, pattern) {\n  switch (category) {\n    case 0:\n      // lipstick\n      return LipstickPatternType[pattern];\n\n    case 1:\n      // eyeliner\n      return EyelinerPatternType[pattern];\n\n    case 2:\n      // eyeshadow\n      return EyeshadowPatternType[pattern];\n\n    case 3:\n      // blush\n      return BlushPatternType[pattern];\n\n    default:\n      //  console.error("Invalid category:", category);\n      return null;\n  }\n} // Method to check data type and return the appropriate data\n\n\nfunction mapToJSONData(inputData) {\n  if (!inputData) {\n    return null;\n  } // Check if it\'s data type 1\n  // if (\n  //  inputData.hasOwnProperty(\'config\') &&\n  //  inputData.config.hasOwnProperty(\'id\') &&\n  //  inputData.config.hasOwnProperty(\'categoryName\') &&\n  //  inputData.config.hasOwnProperty(\'baseAsset\') &&\n  //  inputData.config.hasOwnProperty(\'pattern\') &&\n  //  Array.isArray(inputData.config.pattern) &&\n  //  inputData.config.pattern.length > 0 &&\n  //  inputData.config.pattern[0].hasOwnProperty(\'name\') &&\n  //  inputData.config.pattern[0].hasOwnProperty(\n  //   inputData.config.pattern[0].name + \'Color\'\n  //  ) &&\n  //  inputData.config.pattern[0].hasOwnProperty(\n  //   inputData.config.pattern[0].name + \'ColorIntensity\'\n  //  ) &&\n  //  inputData.config.pattern[0].hasOwnProperty(\'effectAsset\')\n  // ) {\n  //  console.log("Return data 1");\n  //  return {\n  //   data: {\n  //    id: inputData.config.id,\n  //    categoryName: inputData.config.categoryName,\n  //    baseAsset: inputData.config.baseAsset,\n  //    pattern: [\n  //     {\n  //      name: inputData.config.pattern[0].name,\n  //      color: inputData.config.pattern[0].matteColor,\n  //      intensity: inputData.config.pattern[0].matteColorIntensity,\n  //      effectAsset: inputData.config.pattern[0].effectAsset,\n  //     },\n  //    ],\n  //    imageUrl: null,\n  //   },\n  //  };\n  // }\n  // console.log("mapToJSONData " + inputData);\n\n\n  if (inputData !== null && inputData !== void 0 && inputData.sku) {\n    return inputData;\n  } // Check if it\'s data type 2\n\n\n  if (inputData.hasOwnProperty("color") && inputData.hasOwnProperty("opacity") && inputData.hasOwnProperty("categoryId") && inputData.hasOwnProperty("patternId")) {\n    var _ref;\n\n    var category = inputData.categoryId;\n    var pattern = inputData.patternId;\n    var patternType = mapData2Pattern(category, pattern); // console.log("Return data 2");\n    // if (patternType === null) {\n    //  return null;\n    // }\n\n    return {\n      config: {\n        id: 1,\n        // Set your appropriate ID here\n        categoryName: mapData2Category(category),\n        baseAsset: null,\n        // Replace with appropriate base asset URL\n        pattern: [(_ref = {\n          name: patternType\n        }, api_response_data_defineProperty(_ref, "".concat(patternType, "Color"), inputData.color), api_response_data_defineProperty(_ref, "".concat(patternType, "ColorIntensity"), inputData.opacity), api_response_data_defineProperty(_ref, "effectAsset", null), _ref)],\n        imageUrl: null\n      }\n    };\n  } // Unknown data type\n\n\n  return null;\n}\n;// CONCATENATED MODULE: ./src/js/api_model_response_data.js\n\n\nfunction api_model_response_data_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction api_model_response_data_createClass(Constructor, protoProps, staticProps) { if (protoProps) api_model_response_data_defineProperties(Constructor.prototype, protoProps); if (staticProps) api_model_response_data_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction api_model_response_data_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar APIModelResponseData = /*#__PURE__*/(/* unused pure expression or super */ null && (api_model_response_data_createClass(function APIModelResponseData(response) {\n  var _response$desktop;\n\n  api_model_response_data_classCallCheck(this, APIModelResponseData);\n\n  this.desktop = (response === null || response === void 0 ? void 0 : response.desktop) || {\n    models: response === null || response === void 0 ? void 0 : (_response$desktop = response.desktop) === null || _response$desktop === void 0 ? void 0 : _response$desktop.models\n  };\n  this.hash = (response === null || response === void 0 ? void 0 : response.hash) || "";\n  this.requestId = (response === null || response === void 0 ? void 0 : response.requestId) || "";\n}))); // Method to check data type and return the appropriate data\n\nfunction mapToJSONDataModel(inputData) {\n  if (!inputData) {\n    return null;\n  } // console.log("mapToJSONData " + inputData);\n\n\n  if (inputData !== null && inputData !== void 0 && inputData.desktop) {\n    return inputData;\n  }\n}\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/environments/RoomEnvironment.js\nvar RoomEnvironment = __webpack_require__(516);\n;// CONCATENATED MODULE: ./src/js/hair-style/glossy_hair_mask.js\n\n\nfunction glossy_hair_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction glossy_hair_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction glossy_hair_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) glossy_hair_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) glossy_hair_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar glossy_hair_mask_vertexShader = ["varying vec2 vUv;", "void main() {", "  vUv = uv;", "  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);", "}"].join("\\n"); // var fragmentShader = [\n//   "uniform sampler2D _MainTex;",\n//   "uniform sampler2D _MaskTex;",\n//   "uniform vec4 _MainColor;", // Added variable for main color\n//   "uniform float _Threshold;",\n//   "",\n//   "varying vec2 vUv;",\n//   "",\n//   "void main() {",\n//   " vec2 flippedUV = vec2(1.0 - vUv.x, vUv.y);",\n//   "  vec4 mainCol = texture2D(_MainTex, flippedUV);",\n//   "  vec4 maskCol = texture2D(_MaskTex, flippedUV);",\n//   "",\n//   "  float mask = maskCol.g;",\n//   "  // Apply main color",\n//   "  vec4 mainColor = _MainColor * mainCol;",\n//   "",\n//   "  // Calculate final color based on mask and threshold",\n//   "  vec4 col = mix(maskCol, mix(maskCol, mainColor, mask), step(_Threshold, mask));",\n//   "",\n//   "  gl_FragColor = col;",\n//   "}",\n// ].join("\\n");\n\nvar glossy_hair_mask_fragmentShader = ["uniform sampler2D _MainTex;", "uniform sampler2D _MaskTex;", "uniform vec4 _MainColor;", // Added variable for main color\n"uniform float _Threshold;", "", "varying vec2 vUv;", "", "void main() {", " vec2 flippedUV = vec2(1.0 - vUv.x, vUv.y);", "  vec4 mainCol = texture2D(_MainTex, flippedUV);", "  vec4 maskCol = texture2D(_MaskTex, flippedUV);", "", "  float mask = maskCol.g;", "  // Apply main color", "  vec4 mainColor = _MainColor * mainCol;", "", "  // Calculate final color based on mask and threshold", "  vec4 col = mix(mainCol, mix(mainCol, maskCol, mask), step(_Threshold, mask));", "", "  if (mask > _Threshold) {", "    col = _MainColor;", // Set the mask color to newColorValue if mask value is greater than _Threshold\n"  }", "", "  gl_FragColor = col;", "}"].join("\\n"); // var fragmentShader = [\n//   "uniform sampler2D _MainTex;",\n//   "uniform sampler2D _MaskTex;",\n//   "uniform vec4 _MainColor;", // Original main color variable\n//   "uniform vec4 _EdgeColor;", // New variable for edge color\n//   "uniform float _Threshold;",\n//   "uniform float _EdgeWidth;", // New variable for edge width\n//   "",\n//   "varying vec2 vUv;",\n//   "",\n//   "void main() {",\n//   "  vec2 flippedUV = vec2(1.0 - vUv.x, vUv.y);",\n//   "  vec4 mainCol = texture2D(_MainTex, flippedUV);",\n//   "  vec4 maskCol = texture2D(_MaskTex, flippedUV);",\n//   "",\n//   "  float mask = maskCol.r;",\n//   "  // Apply main color",\n//   "  vec4 mainColor = _MainColor * mainCol;",\n//   "",\n//   "  // Edge detection",\n//   "  float edge = 1.0 - smoothstep(0.5 - _EdgeWidth, 0.5 + _EdgeWidth, mask);",\n//   "  vec4 edgeColor = _EdgeColor * edge;",\n//   "",\n//   "  // Calculate final color based on mask, edges, and threshold",\n//   "  vec4 col = mix(maskCol, mix(mainColor, mainColor + edgeColor, edge), step(_Threshold, mask));",\n//   "",\n//   "  gl_FragColor = col;",\n//   "}",\n// ].join("\\n");\n// var fragmentShader = [\n//   "uniform sampler2D _MainTex;",\n//   "uniform sampler2D _MaskTex;",\n//   "uniform float _Threshold;",\n//   "uniform vec4 _MainColor;",\n//   "",\n//   "varying vec2 vUv;",\n//   "",\n//   "void main() {",\n//   " vec2 flippedUV = vec2(1.0 - vUv.x, vUv.y);",\n//   "  vec4 mainCol = texture2D(_MainTex, flippedUV);",\n//   "  vec4 maskCol = texture2D(_MaskTex, flippedUV);",\n//   "",\n//   "  float mask = maskCol.a;", // Use the red channel value of _MaskTex as the mask value\n//   "  vec4 col = mix(mainCol, mix(mainCol, maskCol, mask), step(_Threshold, mask));",\n//   "",\n// "  if (mask > _Threshold) {",\n// "    col = _MainColor;", // Set the mask color to newColorValue if mask value is greater than _Threshold\n// "  }",\n// "",\n//   "  gl_FragColor = col;",\n//   "}",\n// ].join("\\n");\n\nfunction maskShader(maskColor) {\n  return {\n    uniforms: {\n      _MainTex: {\n        value: null\n      },\n      _MaskTex: {\n        value: null\n      },\n      _Threshold: {\n        value: 0.9\n      },\n      _MainColor: {\n        value: maskColor\n      } // Initialize with an empty Vector4\n\n    },\n    vertexShader: glossy_hair_mask_vertexShader,\n    fragmentShader: glossy_hair_mask_fragmentShader\n  };\n}\n\nvar GlossyHairMask = /*#__PURE__*/function () {\n  function GlossyHairMask(_pattern, _texture) {\n    glossy_hair_mask_classCallCheck(this, GlossyHairMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var maskColor = new three_module/* Vector4 */.Ltg(threeColor.r, threeColor.g, threeColor.b, 0);\n    var material = new three_module/* ShaderMaterial */.jyz({\n      uniforms: maskShader(maskColor).uniforms,\n      vertexShader: maskShader(maskColor).vertexShader,\n      fragmentShader: maskShader(maskColor).fragmentShader,\n      transparent: true,\n      opacity: 0\n    });\n    this.MaterialArray = [material];\n  }\n\n  glossy_hair_mask_createClass(GlossyHairMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return GlossyHairMask;\n}();\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.repeat.js\nvar es6_string_repeat = __webpack_require__(823);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/math/Lut.js\nvar Lut = __webpack_require__(4104);\n;// CONCATENATED MODULE: ./src/js/hair-style/hair_style.js\n\n\n\n\n\nfunction hair_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction hair_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction hair_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) hair_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) hair_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n //import { Lut } from "three/examples/jsm/math/Lut.js";\n// import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader.js";\n// import { GLTFLoader } from "three/addons/loaders/GLTFLoader.js";\n\n\nvar HairStyle = /*#__PURE__*/function () {\n  function HairStyle(sku, scene, width, height, materials) {\n    hair_style_classCallCheck(this, HairStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.imageCanvas;\n    this.mask = null;\n    this.maskMesh = null;\n    this.imageMesh = null;\n    this.isvideo = true;\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n    this.lut = new Lut/* Lut */.A("grayscale", 256);\n    this.lut.setMin(0);\n    this.lut.setMax(1);\n    this.imageMaterial = null;\n  }\n\n  hair_style_createClass(HairStyle, [{\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      if (this.imageMaterial) {\n        this.imageMaterial.opacity = getOpacitySliderValue();\n      }\n\n      this.materialArray.forEach(function (material) {\n        material.uniforms._MainColor.value = new three_module/* Vector4 */.Ltg(material.uniforms._MainColor.value.x, material.uniforms._MainColor.value.y, material.uniforms._MainColor.value.z, 0 //getOpacitySliderValue()\n        ); // material.uniforms._Threshold.value = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.uniforms._MainColor.value = new three_module/* Vector4 */.Ltg(material.uniforms._MainColor.value.x, material.uniforms._MainColor.value.y, material.uniforms._MainColor.value.z, intensity);\n      });\n    }\n  }, {\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateMask",\n    value: function updateMask(imageCanvas, mask, isvideo) {\n      this.isvideo = isvideo;\n\n      if (imageCanvas) {\n        this.imageCanvas = imageCanvas;\n      }\n\n      if (!this.mask || this.mask.width !== mask.width || this.mask.height !== mask.height) {\n        this.mask = {\n          data: this.flipImageData(mask.data, mask.width, mask.height),\n          width: mask.width,\n          height: mask.height\n        };\n      } else {\n        this.mask.data.set( //mask.data\n        this.flipImageData(mask.data, mask.width, mask.height));\n      }\n\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      if (this.maskMesh) {\n        this.scene.remove(this.maskMesh);\n      }\n\n      if (this.imageMesh) {\n        this.scene.remove(this.imageMesh);\n      }\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        this.removeFaces();\n\n        if (this.mask) {\n          this.addRendering();\n        } else {// Handle case when there is no mask\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.mask != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "flipImageData",\n    value: function flipImageData(data, width, height) {\n      var flippedData = new Uint8Array(data.length);\n      var rowSize = width * 4; // Assuming 4 channels (RGBA)\n\n      for (var row = 0; row < height; row++) {\n        var srcOffset = row * rowSize;\n        var destOffset = (height - row - 1) * rowSize;\n        flippedData.set(data.subarray(srcOffset, srcOffset + rowSize), destOffset);\n      }\n\n      return flippedData;\n    }\n  }, {\n    key: "addRendering",\n    value: function addRendering() {\n      var originalImageTexture = new three_module/* Texture */.xEZ(this.imageCanvas); //originalImageTexture.premultiplyAlpha = true;\n      // originalImageTexture.generateMipmaps = false;\n      // originalImageTexture.minFilter = THREE.LinearFilter;\n      // originalImageTexture.magFilter = THREE.LinearFilter;\n\n      originalImageTexture.wrapS = three_module/* RepeatWrapping */.rpg;\n      originalImageTexture.repeat.x = -1; //originalImageTexture.needsUpdate = true;\n\n      var imageGeometry = new three_module/* PlaneGeometry */._12(this.width, this.height);\n      var shaderColor = this.materialArray[0].uniforms._MainColor.value; // Step 2: Create a canvas to manipulate pixel data\n\n      var canvas = document.createElement("canvas");\n      var context = canvas.getContext("2d", {\n        willReadFrequently: true\n      });\n      canvas.width = originalImageTexture.image.width;\n      canvas.height = originalImageTexture.image.height; // Step 3: Iterate through pixels and apply grayscale effect\n\n      context.drawImage(originalImageTexture.image, 0, 0);\n      var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n      var data = imageData.data;\n\n      for (var i = 0; i < data.length; i += 4) {\n        // Extract the original color values\n        var r = data[i] / 255;\n        var g = data[i + 1] / 255;\n        var b = data[i + 2] / 255;\n        var grayscaleColor = this.lut.getColor(1 * r + 0 * g + 0 * b); // Update pixel data with grayscale values\n\n        data[i] = grayscaleColor.r * 255;\n        data[i + 1] = grayscaleColor.g * 255;\n        data[i + 2] = grayscaleColor.b * 255;\n      } // Update the originalImageTexture with the new grayscale data\n\n\n      context.putImageData(imageData, 0, 0);\n      originalImageTexture.needsUpdate = true;\n      var grayscaleTexture = new three_module/* Texture */.xEZ(canvas);\n      grayscaleTexture.generateMipmaps = false;\n      grayscaleTexture.minFilter = three_module/* LinearFilter */.wem;\n      grayscaleTexture.magFilter = three_module/* LinearFilter */.wem;\n      grayscaleTexture.wrapS = three_module/* RepeatWrapping */.rpg;\n      grayscaleTexture.repeat.x = -1;\n      grayscaleTexture.needsUpdate = true;\n      this.imageMaterial = new three_module/* MeshBasicMaterial */.vBJ({\n        map: grayscaleTexture,\n        color: new three_module/* Color */.Ilk().setRGB(shaderColor.x, shaderColor.y, shaderColor.z),\n        transparent: true,\n        premultipliedAlpha: false\n      }); // this.imageMaterial = new THREE.ShaderMaterial({\n      //   uniforms: {\n      //     detailTexture: { value: grayscaleTexture },\n      //     customColor: { value: new THREE.Color(0xeedee9) }, // Set your custom color here\n      //   },\n      //   vertexShader: vertexShader,\n      //   fragmentShader: fragmentShader,\n      // });\n\n      this.imageMesh = new three_module/* Mesh */.Kj0(imageGeometry, this.imageMaterial);\n      this.imageMesh.position.set(0, 0, 0);\n      if (this.isvideo) this.imageMesh.scale.set(-1, 1, 1);else this.imageMesh.scale.set(-1, 1, 1);\n      this.scene.add(this.imageMesh);\n      var maskImageTexture = new three_module/* DataTexture */.IEO(this.mask.data, this.mask.width, this.mask.height, three_module/* RGBAFormat */.wk1);\n      maskImageTexture.generateMipmaps = false;\n      maskImageTexture.minFilter = three_module/* LinearFilter */.wem;\n      maskImageTexture.magFilter = three_module/* LinearFilter */.wem;\n      maskImageTexture.needsUpdate = true;\n      var maskGeometry = new three_module/* PlaneGeometry */._12(this.width, this.height);\n      this.materialArray[0].uniforms._MainTex.value = originalImageTexture;\n      this.materialArray[0].uniforms._MaskTex.value = maskImageTexture;\n      this.materialArray[0].uniforms._Threshold.value = 0.9;\n      this.maskMesh = new three_module/* Mesh */.Kj0(maskGeometry, this.materialArray[0]);\n      this.maskMesh.position.set(0, 0, 0);\n      if (this.isvideo) this.maskMesh.scale.set(-1, 1, 1);else this.maskMesh.scale.set(-1, 1, 1);\n      this.scene.add(this.maskMesh);\n    }\n  }, {\n    key: "changeTextureColor",\n    value: function changeTextureColor(color, intensity) {// Handle texture color change if needed\n    }\n  }]);\n\n  return HairStyle;\n}();\nvar hair_style_vertexShader = ["varying vec2 vUv;", "void main() {", "    vUv = vec2(1.0 - uv.x,  uv.y);", // Adjust UV to correct horizontal flip\n"    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);", "}"].join("\\n");\nvar hair_style_fragmentShader = ["uniform sampler2D detailTexture;", "uniform vec3 customColor;", "varying vec2 vUv;", "vec3 rgbToHsl(vec3 color) {", "    float minVal = min(min(color.r, color.g), color.b);", "    float maxVal = max(max(color.r, color.g), color.b);", "    float delta = maxVal - minVal;", "    float l = (maxVal + minVal) / 2.0;", "    float s = 0.0;", "    if (delta > 0.0) {", "        s = (l < 0.5) ? (delta / (maxVal + minVal)) : (delta / (2.0 - maxVal - minVal));", "    }", "    float h = 0.0;", "    if (delta > 0.0) {", "        if (maxVal == color.r) {", "            h = (color.g - color.b) / delta + ((color.g < color.b) ? 6.0 : 0.0);", "        } else if (maxVal == color.g) {", "            h = (color.b - color.r) / delta + 2.0;", "        } else if (maxVal == color.b) {", "            h = (color.r - color.g) / delta + 4.0;", "        }", "        h /= 6.0;", "    }", "    return vec3(h, s, l);", "}", "vec3 hslToRgb(vec3 hsl) {", "    float c = (1.0 - abs(2.0 * hsl.z - 1.0)) * hsl.y;", "    float x = c * (1.0 - abs(mod(hsl.x * 6.0, 2.0) - 1.0));", "    float m = hsl.z - c / 2.0;", "    vec3 rgb;", "    if (hsl.x < 1.0 / 6.0) {", "        rgb = vec3(c, x, 0.0);", "    } else if (hsl.x < 2.0 / 6.0) {", "        rgb = vec3(x, c, 0.0);", "    } else if (hsl.x < 3.0 / 6.0) {", "        rgb = vec3(0.0, c, x);", "    } else if (hsl.x < 4.0 / 6.0) {", "        rgb = vec3(0.0, x, c);", "    } else if (hsl.x < 5.0 / 6.0) {", "        rgb = vec3(x, 0.0, c);", "    } else {", "        rgb = vec3(c, 0.0, x);", "    }", "    return rgb + vec3(m);", "}", "void main() {", "    vec4 detailColor = texture2D(detailTexture, vUv);", "    vec3 hsl = rgbToHsl(detailColor.rgb);", "    hsl.y = clamp(hsl.y + 0.2, 0.0, 1.0); // Adjust saturation (increase by 0.2)", "    hsl.z = clamp(hsl.z + 0.1, 0.0, 1.0); // Adjust luminosity (increase by 0.1)", "    vec3 adjustedColor = hslToRgb(hsl);", "    vec4 finalColor = vec4(mix(customColor, adjustedColor, detailColor.r), 1.0);", "    gl_FragColor = finalColor;", "}"].join("\\n");\n;// CONCATENATED MODULE: ./src/js/hair-style/hair_pattern_factory.js\nfunction hair_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return hair_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, hair_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction hair_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction hair_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction hair_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) hair_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) hair_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction hair_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) hair_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction hair_pattern_factory_setPrototypeOf(o, p) { hair_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return hair_pattern_factory_setPrototypeOf(o, p); }\n\nfunction hair_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = hair_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = hair_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = hair_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return hair_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction hair_pattern_factory_possibleConstructorReturn(self, call) { if (call && (hair_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return hair_pattern_factory_assertThisInitialized(self); }\n\nfunction hair_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction hair_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction hair_pattern_factory_getPrototypeOf(o) { hair_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return hair_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\n\nvar HairPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  hair_pattern_factory_inherits(HairPatternFactory, _PatternFactory);\n\n  var _super = hair_pattern_factory_createSuper(HairPatternFactory);\n\n  function HairPatternFactory() {\n    var _this;\n\n    hair_pattern_factory_classCallCheck(this, HairPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      glossy: GlossyHairMask,\n      matte: GlossyHairMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  hair_pattern_factory_createClass(HairPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      //console.log(this.patternClass.MaterialArray);\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return HairPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/hair-style/hair_single_tone.js\nfunction hair_single_tone_typeof(obj) { "@babel/helpers - typeof"; return hair_single_tone_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, hair_single_tone_typeof(obj); }\n\nfunction hair_single_tone_toConsumableArray(arr) { return hair_single_tone_arrayWithoutHoles(arr) || hair_single_tone_iterableToArray(arr) || hair_single_tone_unsupportedIterableToArray(arr) || hair_single_tone_nonIterableSpread(); }\n\nfunction hair_single_tone_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction hair_single_tone_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return hair_single_tone_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return hair_single_tone_arrayLikeToArray(o, minLen); }\n\nfunction hair_single_tone_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction hair_single_tone_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return hair_single_tone_arrayLikeToArray(arr); }\n\nfunction hair_single_tone_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction hair_single_tone_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction hair_single_tone_createClass(Constructor, protoProps, staticProps) { if (protoProps) hair_single_tone_defineProperties(Constructor.prototype, protoProps); if (staticProps) hair_single_tone_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction hair_single_tone_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction hair_single_tone_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) hair_single_tone_setPrototypeOf(subClass, superClass); }\n\nfunction hair_single_tone_setPrototypeOf(o, p) { hair_single_tone_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return hair_single_tone_setPrototypeOf(o, p); }\n\nfunction hair_single_tone_createSuper(Derived) { var hasNativeReflectConstruct = hair_single_tone_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = hair_single_tone_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = hair_single_tone_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return hair_single_tone_possibleConstructorReturn(this, result); }; }\n\nfunction hair_single_tone_possibleConstructorReturn(self, call) { if (call && (hair_single_tone_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return hair_single_tone_assertThisInitialized(self); }\n\nfunction hair_single_tone_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction hair_single_tone_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction hair_single_tone_getPrototypeOf(o) { hair_single_tone_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return hair_single_tone_getPrototypeOf(o); }\n\n\n\n\nvar HairSingleTone = /*#__PURE__*/function (_HairStyle) {\n  hair_single_tone_inherits(HairSingleTone, _HairStyle);\n\n  var _super = hair_single_tone_createSuper(HairSingleTone);\n\n  function HairSingleTone(sku, scene, width, height) {\n    hair_single_tone_classCallCheck(this, HairSingleTone);\n\n    var patternDefaultTextures = {\n      matte: null,\n      glossy: null,\n      shimmer: null\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var PatternFactory = new HairPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, hair_single_tone_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return hair_single_tone_createClass(HairSingleTone);\n}(HairStyle);\n;// CONCATENATED MODULE: ./src/js/hair-style/hair_style_factory.js\nfunction hair_style_factory_typeof(obj) { "@babel/helpers - typeof"; return hair_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, hair_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction hair_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction hair_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction hair_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) hair_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) hair_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction hair_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) hair_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction hair_style_factory_setPrototypeOf(o, p) { hair_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return hair_style_factory_setPrototypeOf(o, p); }\n\nfunction hair_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = hair_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = hair_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = hair_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return hair_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction hair_style_factory_possibleConstructorReturn(self, call) { if (call && (hair_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return hair_style_factory_assertThisInitialized(self); }\n\nfunction hair_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction hair_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction hair_style_factory_getPrototypeOf(o) { hair_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return hair_style_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar HairStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  hair_style_factory_inherits(HairStyleFactory, _StyleFactory);\n\n  var _super = hair_style_factory_createSuper(HairStyleFactory);\n\n  function HairStyleFactory() {\n    var _this;\n\n    hair_style_factory_classCallCheck(this, HairStyleFactory);\n\n    _this = _super.call(this);\n    _this.hairStyles = {\n      single: HairSingleTone\n    };\n    return _this;\n  }\n\n  hair_style_factory_createClass(HairStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      // for (let i = 0; i < apiResponseData.config.style.length; i++) {\n      //   if (apiResponseData.config.style[i]._id === parseInt(styleid, 10)) {\n      //     style = apiResponseData.config.style[i];\n      //     break;\n      //   }\n      // }\n      var styleType = apiResponseData.sku.styleVariant;\n      var StyleClass = this.hairStyles[styleType.toLowerCase()];\n\n      if (!StyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported hair style");\n      }\n\n      return new StyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return HairStyleFactory;\n}(StyleFactory);\n// EXTERNAL MODULE: ./src/assets/svg/align_face.svg\nvar align_face = __webpack_require__(9323);\n;// CONCATENATED MODULE: ./src/assets/svg/hand_icon.svg\n/* harmony default export */ const hand_icon = (__webpack_require__.p + "assets/models/57f4f126a72f8423c4d6710e1e7090e5.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/nail_icon.svg\n/* harmony default export */ const nail_icon = (__webpack_require__.p + "assets/models/7e63a97a2966ab6a9f86bba76c09daa0.svg");\n;// CONCATENATED MODULE: ./src/js/utils/alignMessagePanel.js\n\n\n\n\n\nvar alignMessagePanel_Panel = null;\nvar alignMessagePanel_msg = null;\nvar alignMessagePanel_img = null;\nvar CurrentType;\nvar CurrentMsg;\nfunction updateAlignUI(type, message) {\n  if (CurrentType && CurrentMsg && CurrentType === type && CurrentMsg == message) return;\n  setAlignMsg(message);\n  setAlignIcon(type);\n  (0,utils_event/* emitError */.hd)(message);\n  CurrentType = type;\n  CurrentMsg = message;\n}\nfunction setAlignMsg(message) {\n  alignMessagePanel_msg.innerHTML = message;\n}\nfunction setAlignIcon(type) {\n  // if (CurrentType && CurrentType === type) return;\n  // CurrentType = type;\n  switch (type) {\n    case "face":\n      alignMessagePanel_img.src = align_face/* default */.Z;\n      break;\n\n    case "hand":\n      alignMessagePanel_img.src = hand_icon;\n      break;\n\n    case "ring":\n      alignMessagePanel_img.src = hand_icon;\n      break;\n\n    default:\n  }\n}\nfunction hideAlignMessagePanel() {\n  updatePanel("none"); //Panel.style.display = "none";\n}\nfunction showAlignMessagePanel(url) {\n  updatePanel("flex"); // Panel.style.display = "flex";\n}\nvar debouncedUpdatePanel = debounce(function (state) {\n  alignMessagePanel_Panel.style.display = state;\n}, 8); // Adjust delay as needed\n\nfunction updatePanel(state) {\n  debouncedUpdatePanel(state);\n}\n\nfunction setAlignMessageElement() {\n  console.error("emitNailColorEvent");\n  alignMessagePanel_Panel = document.querySelector(".align-message-panel");\n  alignMessagePanel_msg = document.querySelector(".align-message");\n  alignMessagePanel_img = document.getElementById("align-icon");\n  hideAlignMessagePanel();\n}\n\nfunction debounce(func, delay) {\n  var timerId;\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n\n    timerId = setTimeout(function () {\n      return func.apply(_this, args);\n    }, delay);\n  };\n}\n;// CONCATENATED MODULE: ./src/js/masacara-style/matte_masacara_mask.js\n\n\nfunction matte_masacara_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matte_masacara_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matte_masacara_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) matte_masacara_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) matte_masacara_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar MatteMasacaraMask = /*#__PURE__*/function () {\n  function MatteMasacaraMask(_pattern, _texture) {\n    matte_masacara_mask_classCallCheck(this, MatteMasacaraMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var material = new three_module/* MeshStandardMaterial */.Wid({\n      map: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      envMapIntensity: 1,\n      toneMapped: false,\n      color: threeColor,\n      fog: false,\n      envMap: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        texture.flipY = false;\n      })\n    });\n    this.MaterialArray = [material];\n  }\n\n  matte_masacara_mask_createClass(MatteMasacaraMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteMasacaraMask;\n}();\n;// CONCATENATED MODULE: ./src/assets/mascara_natural1.png\n/* harmony default export */ const mascara_natural1 = (__webpack_require__.p + "assets/models/8799edc7e45820de4d8f4ec489860b7f.png");\n;// CONCATENATED MODULE: ./src/js/masacara-style/masacara_style.js\n\n\n\n\n\n\nfunction masacara_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction masacara_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction masacara_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) masacara_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) masacara_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar MasacaraStyle = /*#__PURE__*/function () {\n  function MasacaraStyle(sku, scene, width, height, materials) {\n    masacara_style_classCallCheck(this, MasacaraStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = [];\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n  }\n\n  masacara_style_createClass(MasacaraStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      for (var i = 0; i < this.materialArray.length; i++) {\n        var geometry = makeGeometry(this.landmarks, "eyelash");\n\n        if (!this.faces || this.faces.length <= i) {\n          var tempface = new three_module/* Mesh */.Kj0(geometry, this.materialArray[i]);\n          this.faces.push(tempface);\n          this.scene.add(tempface);\n          this.faces[i].receiveShadow = false; // Disable receiving shadows\n\n          this.faces[i].castShadow = false; // Disable casting shadows\n\n          this.faces[i].position.set(0, 0, 0);\n          this.faces[i].name = "makeup";\n        } else {\n          this.faces[i].geometry = geometry;\n          this.faces[i].material = this.materialArray[i];\n        }\n\n        this.faces[i].scale.set(this.width, this.height, this.width);\n      }\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n\n      while (!!this.scene.getObjectByName("makeup")) {\n        this.scene.remove(this.scene.getObjectByName("makeup"));\n      }\n\n      this.faces = [];\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {//this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.faces != null && this.landmarks != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        material.opacity = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.opacity = intensity;\n        material.needsUpdate = true; //if (material.emissive) material.emissive.setHex(newColorValue);\n      });\n    }\n  }, {\n    key: "changeTexture",\n    value: function changeTexture(textureName) {\n      var textureLoader = new three_module/* TextureLoader */.dpR();\n      var newTexture = textureLoader.load(texture_mapping[textureName], function (newTexture) {\n        newTexture.flipY = false;\n        this.material.map = newTexture;\n        this.material.needsUpdate = true;\n        this.material.opacity = 1.0;\n      }.bind(this) // Added bind(this) to retain the context\n      );\n    }\n  }, {\n    key: "changeTextureColor",\n    value: function changeTextureColor(color, intensity) {\n      var newColorValue = new three_module/* Color */.Ilk(color);\n\n      if (this.materialArray[0].uniforms.colorValue === undefined) {\n        this.materialArray[0].uniforms.colorValue = {\n          value: newColorValue\n        };\n        this.materialArray.forEach(function (material) {\n          material.uniforms.opacityValue.value = intensity;\n        });\n      } else {\n        this.materialArray[0].uniforms.colorValue.value = newColorValue;\n        this.materialArray.forEach(function (material) {\n          material.uniforms.opacityValue.value = intensity;\n        });\n      }\n\n      this.materialArray[0].needsUpdate = true; // console.log("changeTextureColor");\n    }\n  }]);\n\n  return MasacaraStyle;\n}();\n;// CONCATENATED MODULE: ./src/js/masacara-style/masacara_pattern_factory.js\nfunction masacara_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return masacara_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, masacara_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction masacara_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction masacara_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction masacara_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) masacara_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) masacara_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction masacara_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) masacara_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction masacara_pattern_factory_setPrototypeOf(o, p) { masacara_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return masacara_pattern_factory_setPrototypeOf(o, p); }\n\nfunction masacara_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = masacara_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = masacara_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = masacara_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return masacara_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction masacara_pattern_factory_possibleConstructorReturn(self, call) { if (call && (masacara_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return masacara_pattern_factory_assertThisInitialized(self); }\n\nfunction masacara_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction masacara_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction masacara_pattern_factory_getPrototypeOf(o) { masacara_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return masacara_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar MasacaraPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  masacara_pattern_factory_inherits(MasacaraPatternFactory, _PatternFactory);\n\n  var _super = masacara_pattern_factory_createSuper(MasacaraPatternFactory);\n\n  function MasacaraPatternFactory() {\n    var _this;\n\n    masacara_pattern_factory_classCallCheck(this, MasacaraPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      matte: MatteMasacaraMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  masacara_pattern_factory_createClass(MasacaraPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return MasacaraPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/masacara-style/masacara_style_1.js\nfunction masacara_style_1_typeof(obj) { "@babel/helpers - typeof"; return masacara_style_1_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, masacara_style_1_typeof(obj); }\n\nfunction masacara_style_1_toConsumableArray(arr) { return masacara_style_1_arrayWithoutHoles(arr) || masacara_style_1_iterableToArray(arr) || masacara_style_1_unsupportedIterableToArray(arr) || masacara_style_1_nonIterableSpread(); }\n\nfunction masacara_style_1_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction masacara_style_1_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return masacara_style_1_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return masacara_style_1_arrayLikeToArray(o, minLen); }\n\nfunction masacara_style_1_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction masacara_style_1_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return masacara_style_1_arrayLikeToArray(arr); }\n\nfunction masacara_style_1_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction masacara_style_1_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction masacara_style_1_createClass(Constructor, protoProps, staticProps) { if (protoProps) masacara_style_1_defineProperties(Constructor.prototype, protoProps); if (staticProps) masacara_style_1_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction masacara_style_1_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction masacara_style_1_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) masacara_style_1_setPrototypeOf(subClass, superClass); }\n\nfunction masacara_style_1_setPrototypeOf(o, p) { masacara_style_1_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return masacara_style_1_setPrototypeOf(o, p); }\n\nfunction masacara_style_1_createSuper(Derived) { var hasNativeReflectConstruct = masacara_style_1_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = masacara_style_1_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = masacara_style_1_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return masacara_style_1_possibleConstructorReturn(this, result); }; }\n\nfunction masacara_style_1_possibleConstructorReturn(self, call) { if (call && (masacara_style_1_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return masacara_style_1_assertThisInitialized(self); }\n\nfunction masacara_style_1_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction masacara_style_1_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction masacara_style_1_getPrototypeOf(o) { masacara_style_1_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return masacara_style_1_getPrototypeOf(o); }\n\n\n\n\n\nvar MasacaraStyle1 = /*#__PURE__*/function (_MasacaraStyle) {\n  masacara_style_1_inherits(MasacaraStyle1, _MasacaraStyle);\n\n  var _super = masacara_style_1_createSuper(MasacaraStyle1);\n\n  function MasacaraStyle1(sku, scene, width, height) {\n    masacara_style_1_classCallCheck(this, MasacaraStyle1);\n\n    var patternDefaultTextures = {\n      matte: mascara_natural1\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new MasacaraPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, masacara_style_1_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return masacara_style_1_createClass(MasacaraStyle1);\n}(MasacaraStyle);\n;// CONCATENATED MODULE: ./src/assets/mascara_natural2.png\n/* harmony default export */ const mascara_natural2 = (__webpack_require__.p + "assets/models/ef23c78a8f5d8fae47f3b2c3c124bd8c.png");\n;// CONCATENATED MODULE: ./src/js/masacara-style/masacara_style_2.js\nfunction masacara_style_2_typeof(obj) { "@babel/helpers - typeof"; return masacara_style_2_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, masacara_style_2_typeof(obj); }\n\nfunction masacara_style_2_toConsumableArray(arr) { return masacara_style_2_arrayWithoutHoles(arr) || masacara_style_2_iterableToArray(arr) || masacara_style_2_unsupportedIterableToArray(arr) || masacara_style_2_nonIterableSpread(); }\n\nfunction masacara_style_2_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction masacara_style_2_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return masacara_style_2_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return masacara_style_2_arrayLikeToArray(o, minLen); }\n\nfunction masacara_style_2_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction masacara_style_2_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return masacara_style_2_arrayLikeToArray(arr); }\n\nfunction masacara_style_2_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction masacara_style_2_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction masacara_style_2_createClass(Constructor, protoProps, staticProps) { if (protoProps) masacara_style_2_defineProperties(Constructor.prototype, protoProps); if (staticProps) masacara_style_2_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction masacara_style_2_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction masacara_style_2_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) masacara_style_2_setPrototypeOf(subClass, superClass); }\n\nfunction masacara_style_2_setPrototypeOf(o, p) { masacara_style_2_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return masacara_style_2_setPrototypeOf(o, p); }\n\nfunction masacara_style_2_createSuper(Derived) { var hasNativeReflectConstruct = masacara_style_2_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = masacara_style_2_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = masacara_style_2_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return masacara_style_2_possibleConstructorReturn(this, result); }; }\n\nfunction masacara_style_2_possibleConstructorReturn(self, call) { if (call && (masacara_style_2_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return masacara_style_2_assertThisInitialized(self); }\n\nfunction masacara_style_2_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction masacara_style_2_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction masacara_style_2_getPrototypeOf(o) { masacara_style_2_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return masacara_style_2_getPrototypeOf(o); }\n\n\n\n\n\nvar MasacaraStyle2 = /*#__PURE__*/function (_MasacaraStyle) {\n  masacara_style_2_inherits(MasacaraStyle2, _MasacaraStyle);\n\n  var _super = masacara_style_2_createSuper(MasacaraStyle2);\n\n  function MasacaraStyle2(sku, scene, width, height) {\n    masacara_style_2_classCallCheck(this, MasacaraStyle2);\n\n    var patternDefaultTextures = {\n      matte: mascara_natural2\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      //console.log(_style.patterns[i]);\n      var PatternFactory = new MasacaraPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, masacara_style_2_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return masacara_style_2_createClass(MasacaraStyle2);\n}(MasacaraStyle);\n;// CONCATENATED MODULE: ./src/assets/mascara_natural3.png\n/* harmony default export */ const mascara_natural3 = (__webpack_require__.p + "assets/models/2eea2bd0a697a8ec05f8a59d2cfb41fc.png");\n;// CONCATENATED MODULE: ./src/js/masacara-style/masacara_style_3.js\nfunction masacara_style_3_typeof(obj) { "@babel/helpers - typeof"; return masacara_style_3_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, masacara_style_3_typeof(obj); }\n\nfunction masacara_style_3_toConsumableArray(arr) { return masacara_style_3_arrayWithoutHoles(arr) || masacara_style_3_iterableToArray(arr) || masacara_style_3_unsupportedIterableToArray(arr) || masacara_style_3_nonIterableSpread(); }\n\nfunction masacara_style_3_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction masacara_style_3_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return masacara_style_3_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return masacara_style_3_arrayLikeToArray(o, minLen); }\n\nfunction masacara_style_3_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction masacara_style_3_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return masacara_style_3_arrayLikeToArray(arr); }\n\nfunction masacara_style_3_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction masacara_style_3_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction masacara_style_3_createClass(Constructor, protoProps, staticProps) { if (protoProps) masacara_style_3_defineProperties(Constructor.prototype, protoProps); if (staticProps) masacara_style_3_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction masacara_style_3_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction masacara_style_3_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) masacara_style_3_setPrototypeOf(subClass, superClass); }\n\nfunction masacara_style_3_setPrototypeOf(o, p) { masacara_style_3_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return masacara_style_3_setPrototypeOf(o, p); }\n\nfunction masacara_style_3_createSuper(Derived) { var hasNativeReflectConstruct = masacara_style_3_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = masacara_style_3_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = masacara_style_3_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return masacara_style_3_possibleConstructorReturn(this, result); }; }\n\nfunction masacara_style_3_possibleConstructorReturn(self, call) { if (call && (masacara_style_3_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return masacara_style_3_assertThisInitialized(self); }\n\nfunction masacara_style_3_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction masacara_style_3_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction masacara_style_3_getPrototypeOf(o) { masacara_style_3_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return masacara_style_3_getPrototypeOf(o); }\n\n\n\n\n\nvar MasacaraStyle3 = /*#__PURE__*/function (_MasacaraStyle) {\n  masacara_style_3_inherits(MasacaraStyle3, _MasacaraStyle);\n\n  var _super = masacara_style_3_createSuper(MasacaraStyle3);\n\n  function MasacaraStyle3(sku, scene, width, height) {\n    masacara_style_3_classCallCheck(this, MasacaraStyle3);\n\n    var patternDefaultTextures = {\n      matte: mascara_natural3\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      //console.log(_style.patterns[i]);\n      var PatternFactory = new MasacaraPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, masacara_style_3_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return masacara_style_3_createClass(MasacaraStyle3);\n}(MasacaraStyle);\n;// CONCATENATED MODULE: ./src/assets/mascara_upperlower1.png\n/* harmony default export */ const mascara_upperlower1 = (__webpack_require__.p + "assets/models/9f08128418605c6e4dfc2ff5e7712dca.png");\n;// CONCATENATED MODULE: ./src/js/masacara-style/masacara_style_4.js\nfunction masacara_style_4_typeof(obj) { "@babel/helpers - typeof"; return masacara_style_4_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, masacara_style_4_typeof(obj); }\n\nfunction masacara_style_4_toConsumableArray(arr) { return masacara_style_4_arrayWithoutHoles(arr) || masacara_style_4_iterableToArray(arr) || masacara_style_4_unsupportedIterableToArray(arr) || masacara_style_4_nonIterableSpread(); }\n\nfunction masacara_style_4_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction masacara_style_4_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return masacara_style_4_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return masacara_style_4_arrayLikeToArray(o, minLen); }\n\nfunction masacara_style_4_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction masacara_style_4_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return masacara_style_4_arrayLikeToArray(arr); }\n\nfunction masacara_style_4_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction masacara_style_4_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction masacara_style_4_createClass(Constructor, protoProps, staticProps) { if (protoProps) masacara_style_4_defineProperties(Constructor.prototype, protoProps); if (staticProps) masacara_style_4_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction masacara_style_4_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction masacara_style_4_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) masacara_style_4_setPrototypeOf(subClass, superClass); }\n\nfunction masacara_style_4_setPrototypeOf(o, p) { masacara_style_4_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return masacara_style_4_setPrototypeOf(o, p); }\n\nfunction masacara_style_4_createSuper(Derived) { var hasNativeReflectConstruct = masacara_style_4_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = masacara_style_4_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = masacara_style_4_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return masacara_style_4_possibleConstructorReturn(this, result); }; }\n\nfunction masacara_style_4_possibleConstructorReturn(self, call) { if (call && (masacara_style_4_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return masacara_style_4_assertThisInitialized(self); }\n\nfunction masacara_style_4_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction masacara_style_4_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction masacara_style_4_getPrototypeOf(o) { masacara_style_4_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return masacara_style_4_getPrototypeOf(o); }\n\n\n\n\n\nvar MasacaraStyle4 = /*#__PURE__*/function (_MasacaraStyle) {\n  masacara_style_4_inherits(MasacaraStyle4, _MasacaraStyle);\n\n  var _super = masacara_style_4_createSuper(MasacaraStyle4);\n\n  function MasacaraStyle4(sku, scene, width, height) {\n    masacara_style_4_classCallCheck(this, MasacaraStyle4);\n\n    var patternDefaultTextures = {\n      matte: mascara_upperlower1\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      //console.log(_style.patterns[i]);\n      var PatternFactory = new MasacaraPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, masacara_style_4_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return masacara_style_4_createClass(MasacaraStyle4);\n}(MasacaraStyle);\n;// CONCATENATED MODULE: ./src/assets/mascara_upperlower2.png\n/* harmony default export */ const mascara_upperlower2 = (__webpack_require__.p + "assets/models/bd38725034d84a6d3b35f3ae93345d84.png");\n;// CONCATENATED MODULE: ./src/js/masacara-style/masacara_style_5.js\nfunction masacara_style_5_typeof(obj) { "@babel/helpers - typeof"; return masacara_style_5_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, masacara_style_5_typeof(obj); }\n\nfunction masacara_style_5_toConsumableArray(arr) { return masacara_style_5_arrayWithoutHoles(arr) || masacara_style_5_iterableToArray(arr) || masacara_style_5_unsupportedIterableToArray(arr) || masacara_style_5_nonIterableSpread(); }\n\nfunction masacara_style_5_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction masacara_style_5_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return masacara_style_5_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return masacara_style_5_arrayLikeToArray(o, minLen); }\n\nfunction masacara_style_5_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction masacara_style_5_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return masacara_style_5_arrayLikeToArray(arr); }\n\nfunction masacara_style_5_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction masacara_style_5_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction masacara_style_5_createClass(Constructor, protoProps, staticProps) { if (protoProps) masacara_style_5_defineProperties(Constructor.prototype, protoProps); if (staticProps) masacara_style_5_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction masacara_style_5_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction masacara_style_5_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) masacara_style_5_setPrototypeOf(subClass, superClass); }\n\nfunction masacara_style_5_setPrototypeOf(o, p) { masacara_style_5_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return masacara_style_5_setPrototypeOf(o, p); }\n\nfunction masacara_style_5_createSuper(Derived) { var hasNativeReflectConstruct = masacara_style_5_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = masacara_style_5_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = masacara_style_5_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return masacara_style_5_possibleConstructorReturn(this, result); }; }\n\nfunction masacara_style_5_possibleConstructorReturn(self, call) { if (call && (masacara_style_5_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return masacara_style_5_assertThisInitialized(self); }\n\nfunction masacara_style_5_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction masacara_style_5_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction masacara_style_5_getPrototypeOf(o) { masacara_style_5_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return masacara_style_5_getPrototypeOf(o); }\n\n\n //import MatteAOTexture from "../../assets/eyelash_12.png";\n\n\n\nvar MasacaraStyle5 = /*#__PURE__*/function (_MasacaraStyle) {\n  masacara_style_5_inherits(MasacaraStyle5, _MasacaraStyle);\n\n  var _super = masacara_style_5_createSuper(MasacaraStyle5);\n\n  function MasacaraStyle5(sku, scene, width, height) {\n    masacara_style_5_classCallCheck(this, MasacaraStyle5);\n\n    var patternDefaultTextures = {\n      matte: mascara_upperlower2\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      //console.log(_style.patterns[i]);\n      var PatternFactory = new MasacaraPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, masacara_style_5_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return masacara_style_5_createClass(MasacaraStyle5);\n}(MasacaraStyle);\n;// CONCATENATED MODULE: ./src/js/masacara-style/masacara_style_factory.js\nfunction masacara_style_factory_typeof(obj) { "@babel/helpers - typeof"; return masacara_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, masacara_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction masacara_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction masacara_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction masacara_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) masacara_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) masacara_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction masacara_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) masacara_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction masacara_style_factory_setPrototypeOf(o, p) { masacara_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return masacara_style_factory_setPrototypeOf(o, p); }\n\nfunction masacara_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = masacara_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = masacara_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = masacara_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return masacara_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction masacara_style_factory_possibleConstructorReturn(self, call) { if (call && (masacara_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return masacara_style_factory_assertThisInitialized(self); }\n\nfunction masacara_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction masacara_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction masacara_style_factory_getPrototypeOf(o) { masacara_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return masacara_style_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\nvar MasacaraStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  masacara_style_factory_inherits(MasacaraStyleFactory, _StyleFactory);\n\n  var _super = masacara_style_factory_createSuper(MasacaraStyleFactory);\n\n  function MasacaraStyleFactory() {\n    var _this;\n\n    masacara_style_factory_classCallCheck(this, MasacaraStyleFactory);\n\n    _this = _super.call(this);\n    _this.eyeShadowStyles = {\n      natural1: MasacaraStyle1,\n      natural2: MasacaraStyle2,\n      natural3: MasacaraStyle3,\n      upperlower1: MasacaraStyle4,\n      upperlower2: MasacaraStyle5\n    };\n    return _this;\n  }\n\n  masacara_style_factory_createClass(MasacaraStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var StyleClass = this.eyeShadowStyles[styleType.toLowerCase()];\n\n      if (!StyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported masacara style");\n      }\n\n      return new StyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return MasacaraStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/js/lipliner-style/lipliner_style.js\n\n\n\n\nfunction lipliner_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction lipliner_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction lipliner_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) lipliner_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) lipliner_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\nvar LiplinerStyle = /*#__PURE__*/function () {\n  function LiplinerStyle(sku, scene, width, height, materials) {\n    lipliner_style_classCallCheck(this, LiplinerStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = [];\n    this.flickerSmoother = new FlickerSmoother();\n    this.Prevlandmark;\n    this.PrevlandmarkBase;\n    this.colorIntensity = 1;\n    this.liplinerPattern = sku.styleVariant.toLowerCase();\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n  }\n\n  lipliner_style_createClass(LiplinerStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      for (var i = 0; i < this.materialArray.length; i++) {\n        var landmarks = void 0;\n        landmarks = this.landmarks;\n        this.Prevlandmark = this.landmarks;\n        var geometry = makeGeometry(landmarks, "lipliner", this.liplinerPattern);\n\n        if (!this.faces || this.faces.length <= i) {\n          var tempface = new three_module/* Mesh */.Kj0(geometry, this.materialArray[i]);\n          this.faces.push(tempface);\n          this.scene.add(tempface);\n          this.faces[i].receiveShadow = false; // Disable receiving shadows\n\n          this.faces[i].castShadow = false; // Disable casting shadows\n\n          this.faces[i].position.set(0, 0, 0);\n          this.faces[i].name = "makeup";\n        } else {\n          this.faces[i].geometry = geometry;\n          this.faces[i].material = this.materialArray[i];\n        }\n\n        this.faces[i].scale.set(this.width, this.height, this.width);\n      }\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n\n      while (!!this.scene.getObjectByName("makeup")) {\n        this.scene.remove(this.scene.getObjectByName("makeup"));\n      }\n\n      this.faces = [];\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {// this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.faces != null && this.landmarks != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        material.uniforms._Opacity.value = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.uniforms._Opacity.value = intensity;\n        material.needsUpdate = true; //if (material.emissive) material.emissive.setHex(newColorValue);\n      });\n    }\n  }]);\n\n  return LiplinerStyle;\n}();\n;// CONCATENATED MODULE: ./src/assets/lipliner.png\n/* harmony default export */ const lipliner = (__webpack_require__.p + "assets/models/c2e486614bb64b4dacbf9201a1e05a25.png");\n;// CONCATENATED MODULE: ./src/assets/lipliner_mask.png\n/* harmony default export */ const lipliner_mask = (__webpack_require__.p + "assets/models/ce777ab419141df15a940c0ea1ae13b6.png");\n;// CONCATENATED MODULE: ./src/js/lipliner-style/matte_lipliner_mask.js\n\n\nfunction matte_lipliner_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matte_lipliner_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matte_lipliner_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) matte_lipliner_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) matte_lipliner_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\nvar MatteLiplinerMask = /*#__PURE__*/function () {\n  function MatteLiplinerMask(_pattern, _texture) {\n    matte_lipliner_mask_classCallCheck(this, MatteLiplinerMask);\n\n    var color = _pattern.colors[0];\n    var maskColor = ColorUtils.hexToVector4(color); // let threeColor = new THREE.Color(newColor);\n    // let maskColor = new THREE.Vector4(\n    //   threeColor.r,\n    //   threeColor.g,\n    //   threeColor.b,\n    //   1.0\n    // );\n    //let maskColor = new THREE.Vector4(0.4667, 0.0941, 0.2157, 1.0);\n\n    var vertexShader = "\\nvarying vec2 vUv;\\nvoid main() {\\n    vUv = uv;\\n\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\\n";\n    var fragmentShader = "\\n        uniform sampler2D map;\\n    uniform sampler2D alphaMap;\\n    uniform vec4 _MainColor;\\n    uniform float _Threshold;\\n    uniform float _Smoothness; // Controls the intensity of the smooth blending\\n    uniform float _Opacity; // Controls the intensity of the smooth blending\\n    varying vec2 vUv;\\n\\n    void main() {\\n        vec4 mainCol = texture2D(map, vUv);\\n        vec4 maskCol = texture2D(alphaMap, vUv);\\n        float mask = maskCol.a;\\n\\n       // vec4 maincolalpha = vec4(mainCol.r,mainCol.g,mainCol.b,0.5);\\n\\n        // Apply a simple blur to the mask\\n        // float blurRadius = 0.0;\\n        float sum = 0.0;\\n        for (int x = -2; x <= 2; x++) {\\n            for (int y = -2; y <= 2; y++) {\\n                //vec2 offset = vec2(x, y) * blurRadius;\\n                sum += texture2D(alphaMap, vUv).a;\\n            }\\n        }\\n        float blurredMask = sum/3.0;\\n\\n        vec4 mainColor = _MainColor * mainCol;\\n        vec4 col = mix(mainCol, mix(mainCol, maskCol, blurredMask), smoothstep(_Threshold - _Smoothness, _Threshold + _Smoothness,mask));\\n\\n          // if (mask < _Threshold) {\\n          //     col = _MainColor;\\n          //   }\\n\\n          float cola = col.a *_Opacity;\\n        gl_FragColor = vec4(_MainColor.r,_MainColor.g,_MainColor.b,cola);\\n    }\\n     "; // Load the textures\n\n    var texture = new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n      texture.flipY = false;\n      texture.needsUpdate = true;\n    });\n    var alphaMap = new three_module/* TextureLoader */.dpR().load(lipliner_mask, function (texture) {\n      texture.flipY = false;\n      texture.needsUpdate = true;\n    });\n    var material = new three_module/* ShaderMaterial */.jyz({\n      uniforms: {\n        map: {\n          value: texture\n        },\n        alphaMap: {\n          value: alphaMap\n        },\n        _Threshold: {\n          value: 0.2\n        },\n        _Smoothness: {\n          value: 0.2\n        },\n        _Opacity: {\n          value: 0.8\n        },\n        _MainColor: {\n          value: maskColor\n        }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      transparent: true,\n      fog: false,\n      side: three_module/* FrontSide */.Wl3\n    });\n    this.MaterialArray = [material];\n  }\n\n  matte_lipliner_mask_createClass(MatteLiplinerMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteLiplinerMask;\n}();\n;// CONCATENATED MODULE: ./src/js/lipliner-style/lipliner_pattern_factory.js\nfunction lipliner_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return lipliner_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, lipliner_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction lipliner_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction lipliner_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction lipliner_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) lipliner_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) lipliner_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction lipliner_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) lipliner_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction lipliner_pattern_factory_setPrototypeOf(o, p) { lipliner_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return lipliner_pattern_factory_setPrototypeOf(o, p); }\n\nfunction lipliner_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = lipliner_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = lipliner_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = lipliner_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return lipliner_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction lipliner_pattern_factory_possibleConstructorReturn(self, call) { if (call && (lipliner_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return lipliner_pattern_factory_assertThisInitialized(self); }\n\nfunction lipliner_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction lipliner_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction lipliner_pattern_factory_getPrototypeOf(o) { lipliner_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return lipliner_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar LiplinerPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  lipliner_pattern_factory_inherits(LiplinerPatternFactory, _PatternFactory);\n\n  var _super = lipliner_pattern_factory_createSuper(LiplinerPatternFactory);\n\n  function LiplinerPatternFactory() {\n    var _this;\n\n    lipliner_pattern_factory_classCallCheck(this, LiplinerPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      matte: MatteLiplinerMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  lipliner_pattern_factory_createClass(LiplinerPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      //console.log(this.patternClass.MaterialArray);\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return LiplinerPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/lipliner-style/lipliner_style_1.js\nfunction lipliner_style_1_typeof(obj) { "@babel/helpers - typeof"; return lipliner_style_1_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, lipliner_style_1_typeof(obj); }\n\nfunction lipliner_style_1_toConsumableArray(arr) { return lipliner_style_1_arrayWithoutHoles(arr) || lipliner_style_1_iterableToArray(arr) || lipliner_style_1_unsupportedIterableToArray(arr) || lipliner_style_1_nonIterableSpread(); }\n\nfunction lipliner_style_1_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction lipliner_style_1_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return lipliner_style_1_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return lipliner_style_1_arrayLikeToArray(o, minLen); }\n\nfunction lipliner_style_1_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction lipliner_style_1_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return lipliner_style_1_arrayLikeToArray(arr); }\n\nfunction lipliner_style_1_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction lipliner_style_1_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction lipliner_style_1_createClass(Constructor, protoProps, staticProps) { if (protoProps) lipliner_style_1_defineProperties(Constructor.prototype, protoProps); if (staticProps) lipliner_style_1_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction lipliner_style_1_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction lipliner_style_1_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) lipliner_style_1_setPrototypeOf(subClass, superClass); }\n\nfunction lipliner_style_1_setPrototypeOf(o, p) { lipliner_style_1_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return lipliner_style_1_setPrototypeOf(o, p); }\n\nfunction lipliner_style_1_createSuper(Derived) { var hasNativeReflectConstruct = lipliner_style_1_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = lipliner_style_1_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = lipliner_style_1_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return lipliner_style_1_possibleConstructorReturn(this, result); }; }\n\nfunction lipliner_style_1_possibleConstructorReturn(self, call) { if (call && (lipliner_style_1_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return lipliner_style_1_assertThisInitialized(self); }\n\nfunction lipliner_style_1_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction lipliner_style_1_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction lipliner_style_1_getPrototypeOf(o) { lipliner_style_1_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return lipliner_style_1_getPrototypeOf(o); }\n\n\n\n\n\nvar LiplinerStyle1 = /*#__PURE__*/function (_LiplinerStyle) {\n  lipliner_style_1_inherits(LiplinerStyle1, _LiplinerStyle);\n\n  var _super = lipliner_style_1_createSuper(LiplinerStyle1);\n\n  function LiplinerStyle1(sku, scene, width, height) {\n    lipliner_style_1_classCallCheck(this, LiplinerStyle1);\n\n    var patternDefaultTextures = {\n      matte: lipliner\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var lipsPatternFactory = new LiplinerPatternFactory();\n      var pattern = lipsPatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, lipliner_style_1_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return lipliner_style_1_createClass(LiplinerStyle1);\n}(LiplinerStyle);\n;// CONCATENATED MODULE: ./src/js/lipliner-style/lipliner_style_factory.js\nfunction lipliner_style_factory_typeof(obj) { "@babel/helpers - typeof"; return lipliner_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, lipliner_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction lipliner_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction lipliner_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction lipliner_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) lipliner_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) lipliner_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction lipliner_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) lipliner_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction lipliner_style_factory_setPrototypeOf(o, p) { lipliner_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return lipliner_style_factory_setPrototypeOf(o, p); }\n\nfunction lipliner_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = lipliner_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = lipliner_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = lipliner_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return lipliner_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction lipliner_style_factory_possibleConstructorReturn(self, call) { if (call && (lipliner_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return lipliner_style_factory_assertThisInitialized(self); }\n\nfunction lipliner_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction lipliner_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction lipliner_style_factory_getPrototypeOf(o) { lipliner_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return lipliner_style_factory_getPrototypeOf(o); }\n\n // import { MatteFaceMask } from "./matte_lipliner_mask";\n\n\n\n\n\nvar LiplinerStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  lipliner_style_factory_inherits(LiplinerStyleFactory, _StyleFactory);\n\n  var _super = lipliner_style_factory_createSuper(LiplinerStyleFactory);\n\n  function LiplinerStyleFactory() {\n    var _this;\n\n    lipliner_style_factory_classCallCheck(this, LiplinerStyleFactory);\n\n    _this = _super.call(this);\n    _this.lipStyles = {\n      natural: LiplinerStyle1,\n      small: LiplinerStyle1,\n      wide: LiplinerStyle1,\n      rosebud: LiplinerStyle1,\n      largeandfull: LiplinerStyle1,\n      largeupper: LiplinerStyle1,\n      largelower: LiplinerStyle1\n    };\n    return _this;\n  }\n\n  lipliner_style_factory_createClass(LiplinerStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var LipStyleClass = this.lipStyles[styleType.toLowerCase()];\n\n      if (!LipStyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported lipliner style");\n      }\n\n      return new LipStyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return LiplinerStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/assets/eyebrows_arrow1.png\n/* harmony default export */ const eyebrows_arrow1 = (__webpack_require__.p + "assets/models/078498d987d32566465b2206222a2699.png");\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.sort.js\nvar es6_array_sort = __webpack_require__(75);\n;// CONCATENATED MODULE: ./src/js/eyebrows-style/eyebrows_style.js\nfunction eyebrows_style_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = eyebrows_style_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction eyebrows_style_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyebrows_style_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyebrows_style_arrayLikeToArray(o, minLen); }\n\nfunction eyebrows_style_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyebrows_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyebrows_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyebrows_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyebrows_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyebrows_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\nvar EyebrowsStyle = /*#__PURE__*/function () {\n  function EyebrowsStyle(sku, scene, width, height, materials) {\n    eyebrows_style_classCallCheck(this, EyebrowsStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = [];\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n    this.maskMesh; // this.leftEyeBrow = [\n    //   70, 63, 105, 66, 107, 55, 221, 222, 223, 224, 225, 46, 70,\n    // ];\n\n    this.leftEyeBrow = [151, 69, 68, 139, 246, 160, 158, 190, 193, 8, 151];\n    this.RightEyeBrow = [151, 299, 298, 368, 468, 387, 385, 414, 417, 8, 151];\n  }\n\n  eyebrows_style_createClass(EyebrowsStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks, ogLandmarks) {\n      this.landmarks = landmarks;\n      this.ogLandmarks = ogLandmarks; // console.log(ogLandmarks);\n\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      if (!this.maskMesh) {\n        var blurGeom = new three_module/* PlaneGeometry */._12(1, 1);\n        this.maskMesh = new three_module/* Mesh */.Kj0(blurGeom, this.materialArray[0]);\n        this.maskMesh.position.set(0, 0, 0);\n        this.scene.add(this.maskMesh);\n        var cropCoords = [];\n\n        for (var i = 0; i < this.leftEyeBrow.length; i++) {\n          var p = this.ogLandmarks[this.leftEyeBrow[i]];\n          var vec = new three_module/* Vector2 */.FM8(p.x, p.y);\n          cropCoords.push(vec);\n        }\n\n        var cropCoords2 = [];\n\n        for (var _i = 0; _i < this.RightEyeBrow.length; _i++) {\n          var _p = this.ogLandmarks[this.RightEyeBrow[_i]];\n\n          var _vec = new three_module/* Vector2 */.FM8(_p.x, _p.y);\n\n          cropCoords2.push(_vec);\n        }\n\n        this.materialArray[0].uniforms.cropCoords.value = cropCoords;\n        this.materialArray[0].uniforms.cropCoords2.value = cropCoords2;\n        var tex = getCurrentPlaneMap();\n        tex.colorSpace = three_module/* NoColorSpace */.aCh;\n        tex.needsUpdate = true;\n        this.materialArray[0].uniforms.map.value = tex;\n        this.maskMesh.scale.set(this.width, this.height, 0);\n      }\n\n      if (this.faces) {\n        var _cropCoords = [];\n\n        for (var _i2 = 0; _i2 < this.leftEyeBrow.length; _i2++) {\n          var _p2 = this.ogLandmarks[this.leftEyeBrow[_i2]];\n\n          var _vec2 = new three_module/* Vector2 */.FM8(_p2.x, _p2.y);\n\n          _cropCoords.push(_vec2);\n        }\n\n        var _cropCoords2 = [];\n\n        for (var _i3 = 0; _i3 < this.RightEyeBrow.length; _i3++) {\n          var _p3 = this.ogLandmarks[this.RightEyeBrow[_i3]];\n\n          var _vec3 = new three_module/* Vector2 */.FM8(_p3.x, _p3.y);\n\n          _cropCoords2.push(_vec3);\n        }\n\n        this.materialArray[0].uniforms.cropCoords.value = _cropCoords;\n        this.materialArray[0].uniforms.cropCoords2.value = _cropCoords2;\n\n        var _tex = getCurrentPlaneMap();\n\n        _tex.colorSpace = three_module/* NoColorSpace */.aCh;\n        _tex.needsUpdate = true;\n        this.materialArray[0].uniforms.map.value = _tex;\n        this.maskMesh.scale.set(this.width, this.height, 0); //console.log(getCurrentPlaneMap());\n      }\n\n      for (var _i4 = 1; _i4 < this.materialArray.length; _i4++) {\n        var geometry = makeGeometry(this.landmarks);\n\n        if (!this.faces || this.faces.length <= _i4) {\n          var tempface = new three_module/* Mesh */.Kj0(geometry, this.materialArray[_i4]);\n          this.faces.push(tempface);\n          this.scene.add(tempface);\n          this.faces[_i4 - 1].receiveShadow = false; // Disable receiving shadows\n\n          this.faces[_i4 - 1].castShadow = false; // Disable casting shadows\n\n          this.faces[_i4 - 1].position.set(0, 0, 0);\n\n          this.faces[_i4 - 1].name = "makeup";\n        } else {\n          this.faces[_i4 - 1].geometry = geometry;\n          this.faces[_i4 - 1].material = this.materialArray[_i4];\n        }\n\n        this.faces[_i4 - 1].scale.set(this.width, this.height, 0);\n      }\n    }\n  }, {\n    key: "getConvexHull",\n    value: function getConvexHull(points) {\n      points.sort(function (a, b) {\n        return a.x !== b.x ? a.x - b.x : a.y - b.y;\n      });\n      var lower = [];\n\n      var _iterator = eyebrows_style_createForOfIteratorHelper(points),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _p4 = _step.value;\n\n          while (lower.length >= 2 && this.cross(lower[lower.length - 2], lower[lower.length - 1], _p4) <= 0) {\n            lower.pop();\n          }\n\n          lower.push(_p4);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var upper = [];\n\n      for (var i = points.length - 1; i >= 0; i--) {\n        var p = points[i];\n\n        while (upper.length >= 2 && this.cross(upper[upper.length - 2], upper[upper.length - 1], p) <= 0) {\n          upper.pop();\n        }\n\n        upper.push(p);\n      }\n\n      lower.pop();\n      upper.pop();\n      return lower.concat(upper);\n    }\n  }, {\n    key: "cross",\n    value: function cross(o, a, b) {\n      return (a.x - o.x) * (b.y - o.y) - (a.y - o.y) * (b.x - o.x);\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n      this.scene.remove(this.maskMesh);\n\n      while (!!this.scene.getObjectByName("makeup")) {\n        this.scene.remove(this.scene.getObjectByName("makeup"));\n      }\n\n      this.faces = [];\n      this.maskMesh = null;\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {// this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.faces != null && this.landmarks != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        material.opacity = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.opacity = intensity;\n        material.needsUpdate = true; //if (material.emissive) material.emissive.setHex(newColorValue);\n      });\n    }\n  }, {\n    key: "changeTexture",\n    value: function changeTexture(textureName) {\n      var textureLoader = new three_module/* TextureLoader */.dpR();\n      var newTexture = textureLoader.load(texture_mapping[textureName], function (newTexture) {\n        newTexture.flipY = false;\n        this.material.map = newTexture;\n        this.material.needsUpdate = true;\n        this.material.opacity = 1.0;\n      }.bind(this) // Added bind(this) to retain the context\n      );\n    }\n  }, {\n    key: "changeTextureColor",\n    value: function changeTextureColor(color, intensity) {\n      var newColorValue = new three_module/* Color */.Ilk(color);\n\n      if (this.materialArray[0].uniforms.colorValue === undefined) {\n        this.materialArray[0].uniforms.colorValue = {\n          value: newColorValue\n        };\n        this.materialArray[0].uniforms.opacityValue.value = intensity;\n      } else {\n        this.materialArray[0].uniforms.colorValue.value = newColorValue;\n        this.materialArray[0].uniforms.opacityValue.value = intensity;\n      }\n\n      this.materialArray[0].needsUpdate = true; //console.log("changeTextureColor");\n    }\n  }]);\n\n  return EyebrowsStyle;\n}();\n;// CONCATENATED MODULE: ./src/js/eyebrows-style/matte_eyebrows_mask.js\n\n\nfunction matte_eyebrows_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matte_eyebrows_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matte_eyebrows_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) matte_eyebrows_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) matte_eyebrows_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar MatteEyebrowsMask = /*#__PURE__*/function () {\n  function MatteEyebrowsMask(_pattern, _texture) {\n    matte_eyebrows_mask_classCallCheck(this, MatteEyebrowsMask);\n\n    console.log(_texture);\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor); //let maskColor = new THREE.Vector4(0.4667, 0.0941, 0.2157, 1.0);\n\n    var vertexShader = "\\nvarying vec2 vUv;\\nvoid main() {\\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\\n";\n    var fragmentShader = "\\nuniform sampler2D map;\\nuniform int numCoords; // Number of coordinates\\nuniform vec2 cropCoords[11]; // Increase the maximum number of coordinates\\nuniform vec2 cropCoords2[11]; // Increase the maximum number of coordinates\\n\\nvarying vec2 vUv;\\n\\nfloat gaussian(float x, float sigma) {\\n    float PI = 3.141592653589793;\\n    return exp(-(x * x) / (2.0 * sigma * sigma)) / (sqrt(2.0 * PI) * sigma);\\n}\\n\\n// Point-in-polygon test using the ray-casting algorithm\\nbool isInsidePolygon(vec2 point, vec2 polygon[11], int numCoords) {\\n    bool inside = false;\\n    for (int i = 0, j = numCoords - 1; i < numCoords; j = i++) {\\n        if (((polygon[i].y > point.y) != (polygon[j].y > point.y)) &&\\n            (point.x < (polygon[j].x - polygon[i].x) * (point.y - polygon[i].y) / (polygon[j].y - polygon[i].y) + polygon[i].x)) {\\n            inside = !inside;\\n        }\\n    }\\n    return inside;\\n}\\n\\n// Function to calculate the distance to the edge of the polygon\\nfloat distanceToPolygonEdge(vec2 point, vec2 polygon[11], int numCoords) {\\n    float minDistance = 1e20;\\n    for (int i = 0; i < numCoords; i++) {\\n        vec2 a = polygon[i];\\n        vec2 b = polygon[(i + 1) % numCoords];\\n        vec2 ab = b - a;\\n        vec2 ap = point - a;\\n        float t = clamp(dot(ap, ab) / dot(ab, ab), 0.0, 1.0);\\n        vec2 projection = a + t * ab;\\n        float distance = length(point - projection);\\n        minDistance = min(minDistance, distance);\\n    }\\n    return minDistance;\\n}\\n\\nvoid main() {\\n    vec2 flippedUV = vec2(vUv.x, 1.0 - vUv.y);\\n    vec2 textureSizeFloat = vec2(textureSize(map, 0));\\n    vec2 texelSize = 1.0 / textureSizeFloat;\\n\\n    float blurSize = 5.0;\\n    float sigma =5.0;\\n    float blendWidth = 0.02; // Width of the blending region\\n\\n    vec4 sum = vec4(0.0);\\n    float weightSum = 0.0;\\n\\n    vec4 sum2 = vec4(0.0);\\n    float weightSum2 = 0.0;\\n\\n    // Calculate distance to the edge of the polygon\\n    float distance = distanceToPolygonEdge(flippedUV, cropCoords, numCoords);\\n    float distance2 = distanceToPolygonEdge(flippedUV, cropCoords2, numCoords);\\n\\n    // Calculate blending factor based on the distance\\n    float blendFactor = smoothstep(0.0, blendWidth, distance);\\n    float blendFactor2 = smoothstep(0.0, blendWidth, distance2);\\n\\n    // Check if the current UV is inside the crop polygon\\n    if (isInsidePolygon(flippedUV, cropCoords, numCoords)) {\\n        // Apply horizontal blur\\n        for (int i = -5; i <= 5; i++) {\\n            float offset = float(i) * texelSize.x * blurSize;\\n            vec4 col = texture2D(map, vUv + vec2(offset, 0.0));\\n            float weight = gaussian(float(i), sigma);\\n            sum += col * weight;\\n            weightSum += weight;\\n        }\\n\\n        // Normalize by weight sum\\n        vec4 horizontalBlurredCol = sum / weightSum;\\n\\n        sum = vec4(0.0);\\n        weightSum = 0.0;\\n\\n        // Apply vertical blur\\n        for (int i = -5; i <= 5; i++) {\\n            float offset = float(i) * texelSize.y * blurSize;\\n            vec4 col = texture2D(map, vUv + vec2(0.0, offset));\\n            float weight = gaussian(float(i), sigma);\\n            sum += col * weight;\\n            weightSum += weight;\\n        }\\n\\n        // Normalize by weight sum\\n        vec4 verticalBlurredCol = sum / weightSum;\\n\\n        // Blend between the original and blurred color\\n        vec4 originalCol = texture2D(map, vUv);\\n        vec4 blurredCol = mix(horizontalBlurredCol, verticalBlurredCol, 0.5);\\n        gl_FragColor = mix(originalCol, blurredCol, blendFactor);\\n\\n    } else if (isInsidePolygon(flippedUV, cropCoords2, numCoords)) {\\n        // Apply horizontal blur\\n        for (int i = -5; i <= 5; i++) {\\n            float offset = float(i) * texelSize.x * blurSize;\\n            vec4 col = texture2D(map, vUv + vec2(offset, 0.0));\\n            float weight = gaussian(float(i), sigma);\\n            sum2 += col * weight;\\n            weightSum2 += weight;\\n        }\\n\\n        // Normalize by weight sum\\n        vec4 horizontalBlurredCol2 = sum2 / weightSum2;\\n\\n        sum2 = vec4(0.0);\\n        weightSum2 = 0.0;\\n\\n        // Apply vertical blur\\n        for (int i = -5; i <= 5; i++) {\\n            float offset = float(i) * texelSize.y * blurSize;\\n            vec4 col = texture2D(map, vUv + vec2(0.0, offset));\\n            float weight = gaussian(float(i), sigma);\\n            sum2 += col * weight;\\n            weightSum2 += weight;\\n        }\\n\\n        // Normalize by weight sum\\n        vec4 verticalBlurredCol2 = sum2 / weightSum2;\\n\\n        // Blend between the original and blurred color\\n        vec4 originalCol = texture2D(map, vUv);\\n        vec4 blurredCol2 = mix(horizontalBlurredCol2, verticalBlurredCol2, 0.5);\\n        gl_FragColor = mix(originalCol, blurredCol2, blendFactor2);\\n\\n    } else {\\n        // Outside the polygon, render the original texture\\n        vec4 originalCol = texture2D(map, vUv);\\n        gl_FragColor = originalCol;\\n    }\\n}\\n"; // Load the textures\n\n    var texture = new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n      texture.flipY = false;\n      texture.needsUpdate = true;\n    });\n    var numPoints = 11;\n    var radius = 0.25; // Circle radius (half of the 0.0 to 0.5 range)\n\n    var centerX = 0.25; // Circle center x-coordinate\n\n    var centerY = 0.25; // Circle center y-coordinate\n\n    var cropCoords = [];\n\n    for (var i = 0; i < numPoints; i++) {\n      var angle = i / numPoints * Math.PI * 2; // Angle in radians\n\n      var x = centerX + radius * Math.cos(angle);\n      var y = centerY + radius * Math.sin(angle);\n      cropCoords.push(new three_module/* Vector2 */.FM8(x, y));\n      console.log(x, y);\n    }\n\n    var material = new three_module/* ShaderMaterial */.jyz({\n      uniforms: {\n        map: {\n          value: texture\n        },\n        cropCoords: {\n          value: cropCoords\n        },\n        cropCoords2: {\n          value: cropCoords\n        },\n        // cropCoords: {\n        //   value: [\n        //     new THREE.Vector2(0.2, 0.2), // Vertex 0\n        //     new THREE.Vector2(0.3, 0.2), // Vertex 1\n        //     new THREE.Vector2(0.3, 0.3), // Vertex 2\n        //     new THREE.Vector2(0.2, 0.3), // Vertex 3\n        //     new THREE.Vector2(0.2, 0.2),\n        //     new THREE.Vector2(0.3, 0.2),\n        //     // new THREE.Vector2(0.3, 0.3),\n        //     // new THREE.Vector2(0.2, 0.3),\n        //     // new THREE.Vector2(0.2, 0.2), // Closing the loop\n        //   ],\n        // },\n        numCoords: {\n          value: numPoints\n        } // numCoords: { value: 10 },\n        // alphaMap: { value: alphaMap },\n        //  _Threshold: { value: 0 },\n        // resolution: { type: "v2", value: new THREE.Vector2(2048.0, 2048.0) },\n        // blurAmount: { type: "f", value: 10.0 },\n        // _MainColor: { value: maskColor },\n\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      transparent: true,\n      fog: false,\n      side: three_module/* FrontSide */.Wl3,\n      depthWrite: false,\n      toneMapped: false\n    });\n    var material1 = new three_module/* MeshStandardMaterial */.Wid({\n      map: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        // texture.premultiplyAlpha = true;\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* DoubleSide */.ehD,\n      envMapIntensity: 1,\n      toneMapped: false,\n      color: threeColor,\n      fog: false // envMap: new THREE.TextureLoader().load(_texture, function (texture) {\n      //   texture.flipY = false;\n      // }),\n\n    });\n    this.MaterialArray = [material, material1];\n  }\n\n  matte_eyebrows_mask_createClass(MatteEyebrowsMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteEyebrowsMask;\n}();\n;// CONCATENATED MODULE: ./src/js/eyebrows-style/eyebrows_pattern_factory.js\nfunction eyebrows_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return eyebrows_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyebrows_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyebrows_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyebrows_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyebrows_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyebrows_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyebrows_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyebrows_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyebrows_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction eyebrows_pattern_factory_setPrototypeOf(o, p) { eyebrows_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyebrows_pattern_factory_setPrototypeOf(o, p); }\n\nfunction eyebrows_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = eyebrows_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyebrows_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyebrows_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyebrows_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction eyebrows_pattern_factory_possibleConstructorReturn(self, call) { if (call && (eyebrows_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyebrows_pattern_factory_assertThisInitialized(self); }\n\nfunction eyebrows_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyebrows_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyebrows_pattern_factory_getPrototypeOf(o) { eyebrows_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyebrows_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar EyebrowsPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  eyebrows_pattern_factory_inherits(EyebrowsPatternFactory, _PatternFactory);\n\n  var _super = eyebrows_pattern_factory_createSuper(EyebrowsPatternFactory);\n\n  function EyebrowsPatternFactory() {\n    var _this;\n\n    eyebrows_pattern_factory_classCallCheck(this, EyebrowsPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      matte: MatteEyebrowsMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  eyebrows_pattern_factory_createClass(EyebrowsPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return EyebrowsPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/eyebrows-style/eyebrows_style_1.js\nfunction eyebrows_style_1_typeof(obj) { "@babel/helpers - typeof"; return eyebrows_style_1_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyebrows_style_1_typeof(obj); }\n\nfunction eyebrows_style_1_toConsumableArray(arr) { return eyebrows_style_1_arrayWithoutHoles(arr) || eyebrows_style_1_iterableToArray(arr) || eyebrows_style_1_unsupportedIterableToArray(arr) || eyebrows_style_1_nonIterableSpread(); }\n\nfunction eyebrows_style_1_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyebrows_style_1_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyebrows_style_1_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyebrows_style_1_arrayLikeToArray(o, minLen); }\n\nfunction eyebrows_style_1_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyebrows_style_1_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyebrows_style_1_arrayLikeToArray(arr); }\n\nfunction eyebrows_style_1_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyebrows_style_1_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyebrows_style_1_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyebrows_style_1_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyebrows_style_1_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyebrows_style_1_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyebrows_style_1_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyebrows_style_1_setPrototypeOf(subClass, superClass); }\n\nfunction eyebrows_style_1_setPrototypeOf(o, p) { eyebrows_style_1_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyebrows_style_1_setPrototypeOf(o, p); }\n\nfunction eyebrows_style_1_createSuper(Derived) { var hasNativeReflectConstruct = eyebrows_style_1_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyebrows_style_1_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyebrows_style_1_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyebrows_style_1_possibleConstructorReturn(this, result); }; }\n\nfunction eyebrows_style_1_possibleConstructorReturn(self, call) { if (call && (eyebrows_style_1_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyebrows_style_1_assertThisInitialized(self); }\n\nfunction eyebrows_style_1_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyebrows_style_1_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyebrows_style_1_getPrototypeOf(o) { eyebrows_style_1_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyebrows_style_1_getPrototypeOf(o); }\n\n\n\n\n\nvar EyebrowsStyle1 = /*#__PURE__*/function (_EyebrowsStyle) {\n  eyebrows_style_1_inherits(EyebrowsStyle1, _EyebrowsStyle);\n\n  var _super = eyebrows_style_1_createSuper(EyebrowsStyle1);\n\n  function EyebrowsStyle1(sku, scene, width, height) {\n    eyebrows_style_1_classCallCheck(this, EyebrowsStyle1);\n\n    var patternDefaultTextures = {\n      matte: eyebrows_arrow1\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new EyebrowsPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyebrows_style_1_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return eyebrows_style_1_createClass(EyebrowsStyle1);\n}(EyebrowsStyle);\n;// CONCATENATED MODULE: ./src/assets/eyebrows_arrow2.png\n/* harmony default export */ const eyebrows_arrow2 = (__webpack_require__.p + "assets/models/71d5fa4c92c89c15ba50c78f087ac407.png");\n;// CONCATENATED MODULE: ./src/js/eyebrows-style/eyebrows_style_2.js\nfunction eyebrows_style_2_typeof(obj) { "@babel/helpers - typeof"; return eyebrows_style_2_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyebrows_style_2_typeof(obj); }\n\nfunction eyebrows_style_2_toConsumableArray(arr) { return eyebrows_style_2_arrayWithoutHoles(arr) || eyebrows_style_2_iterableToArray(arr) || eyebrows_style_2_unsupportedIterableToArray(arr) || eyebrows_style_2_nonIterableSpread(); }\n\nfunction eyebrows_style_2_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyebrows_style_2_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyebrows_style_2_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyebrows_style_2_arrayLikeToArray(o, minLen); }\n\nfunction eyebrows_style_2_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyebrows_style_2_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyebrows_style_2_arrayLikeToArray(arr); }\n\nfunction eyebrows_style_2_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyebrows_style_2_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyebrows_style_2_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyebrows_style_2_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyebrows_style_2_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyebrows_style_2_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyebrows_style_2_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyebrows_style_2_setPrototypeOf(subClass, superClass); }\n\nfunction eyebrows_style_2_setPrototypeOf(o, p) { eyebrows_style_2_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyebrows_style_2_setPrototypeOf(o, p); }\n\nfunction eyebrows_style_2_createSuper(Derived) { var hasNativeReflectConstruct = eyebrows_style_2_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyebrows_style_2_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyebrows_style_2_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyebrows_style_2_possibleConstructorReturn(this, result); }; }\n\nfunction eyebrows_style_2_possibleConstructorReturn(self, call) { if (call && (eyebrows_style_2_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyebrows_style_2_assertThisInitialized(self); }\n\nfunction eyebrows_style_2_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyebrows_style_2_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyebrows_style_2_getPrototypeOf(o) { eyebrows_style_2_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyebrows_style_2_getPrototypeOf(o); }\n\n\n\n\n\nvar EyebrowsStyle2 = /*#__PURE__*/function (_EyebrowsStyle) {\n  eyebrows_style_2_inherits(EyebrowsStyle2, _EyebrowsStyle);\n\n  var _super = eyebrows_style_2_createSuper(EyebrowsStyle2);\n\n  function EyebrowsStyle2(sku, scene, width, height) {\n    eyebrows_style_2_classCallCheck(this, EyebrowsStyle2);\n\n    var patternDefaultTextures = {\n      matte: eyebrows_arrow2\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new EyebrowsPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyebrows_style_2_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return eyebrows_style_2_createClass(EyebrowsStyle2);\n}(EyebrowsStyle);\n;// CONCATENATED MODULE: ./src/assets/eyebrows_arrow3.png\n/* harmony default export */ const eyebrows_arrow3 = (__webpack_require__.p + "assets/models/e20081010001339b04f4889087498a75.png");\n;// CONCATENATED MODULE: ./src/js/eyebrows-style/eyebrows_style_3.js\nfunction eyebrows_style_3_typeof(obj) { "@babel/helpers - typeof"; return eyebrows_style_3_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyebrows_style_3_typeof(obj); }\n\nfunction eyebrows_style_3_toConsumableArray(arr) { return eyebrows_style_3_arrayWithoutHoles(arr) || eyebrows_style_3_iterableToArray(arr) || eyebrows_style_3_unsupportedIterableToArray(arr) || eyebrows_style_3_nonIterableSpread(); }\n\nfunction eyebrows_style_3_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyebrows_style_3_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyebrows_style_3_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyebrows_style_3_arrayLikeToArray(o, minLen); }\n\nfunction eyebrows_style_3_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyebrows_style_3_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyebrows_style_3_arrayLikeToArray(arr); }\n\nfunction eyebrows_style_3_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyebrows_style_3_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyebrows_style_3_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyebrows_style_3_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyebrows_style_3_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyebrows_style_3_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyebrows_style_3_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyebrows_style_3_setPrototypeOf(subClass, superClass); }\n\nfunction eyebrows_style_3_setPrototypeOf(o, p) { eyebrows_style_3_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyebrows_style_3_setPrototypeOf(o, p); }\n\nfunction eyebrows_style_3_createSuper(Derived) { var hasNativeReflectConstruct = eyebrows_style_3_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyebrows_style_3_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyebrows_style_3_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyebrows_style_3_possibleConstructorReturn(this, result); }; }\n\nfunction eyebrows_style_3_possibleConstructorReturn(self, call) { if (call && (eyebrows_style_3_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyebrows_style_3_assertThisInitialized(self); }\n\nfunction eyebrows_style_3_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyebrows_style_3_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyebrows_style_3_getPrototypeOf(o) { eyebrows_style_3_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyebrows_style_3_getPrototypeOf(o); }\n\n\n\n\n\nvar EyebrowsStyle3 = /*#__PURE__*/function (_EyebrowsStyle) {\n  eyebrows_style_3_inherits(EyebrowsStyle3, _EyebrowsStyle);\n\n  var _super = eyebrows_style_3_createSuper(EyebrowsStyle3);\n\n  function EyebrowsStyle3(sku, scene, width, height) {\n    eyebrows_style_3_classCallCheck(this, EyebrowsStyle3);\n\n    var patternDefaultTextures = {\n      matte: eyebrows_arrow3\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new EyebrowsPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyebrows_style_3_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return eyebrows_style_3_createClass(EyebrowsStyle3);\n}(EyebrowsStyle);\n;// CONCATENATED MODULE: ./src/assets/eyebrows_curved1.png\n/* harmony default export */ const eyebrows_curved1 = (__webpack_require__.p + "assets/models/5b569b6a5368c0d5300ff98594e30d21.png");\n;// CONCATENATED MODULE: ./src/js/eyebrows-style/eyebrows_style_4.js\nfunction eyebrows_style_4_typeof(obj) { "@babel/helpers - typeof"; return eyebrows_style_4_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyebrows_style_4_typeof(obj); }\n\nfunction eyebrows_style_4_toConsumableArray(arr) { return eyebrows_style_4_arrayWithoutHoles(arr) || eyebrows_style_4_iterableToArray(arr) || eyebrows_style_4_unsupportedIterableToArray(arr) || eyebrows_style_4_nonIterableSpread(); }\n\nfunction eyebrows_style_4_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyebrows_style_4_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyebrows_style_4_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyebrows_style_4_arrayLikeToArray(o, minLen); }\n\nfunction eyebrows_style_4_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyebrows_style_4_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyebrows_style_4_arrayLikeToArray(arr); }\n\nfunction eyebrows_style_4_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyebrows_style_4_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyebrows_style_4_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyebrows_style_4_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyebrows_style_4_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyebrows_style_4_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyebrows_style_4_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyebrows_style_4_setPrototypeOf(subClass, superClass); }\n\nfunction eyebrows_style_4_setPrototypeOf(o, p) { eyebrows_style_4_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyebrows_style_4_setPrototypeOf(o, p); }\n\nfunction eyebrows_style_4_createSuper(Derived) { var hasNativeReflectConstruct = eyebrows_style_4_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyebrows_style_4_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyebrows_style_4_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyebrows_style_4_possibleConstructorReturn(this, result); }; }\n\nfunction eyebrows_style_4_possibleConstructorReturn(self, call) { if (call && (eyebrows_style_4_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyebrows_style_4_assertThisInitialized(self); }\n\nfunction eyebrows_style_4_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyebrows_style_4_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyebrows_style_4_getPrototypeOf(o) { eyebrows_style_4_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyebrows_style_4_getPrototypeOf(o); }\n\n\n\n\n\nvar EyebrowsStyle4 = /*#__PURE__*/function (_EyebrowsStyle) {\n  eyebrows_style_4_inherits(EyebrowsStyle4, _EyebrowsStyle);\n\n  var _super = eyebrows_style_4_createSuper(EyebrowsStyle4);\n\n  function EyebrowsStyle4(sku, scene, width, height) {\n    eyebrows_style_4_classCallCheck(this, EyebrowsStyle4);\n\n    var patternDefaultTextures = {\n      matte: eyebrows_curved1\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new EyebrowsPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyebrows_style_4_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return eyebrows_style_4_createClass(EyebrowsStyle4);\n}(EyebrowsStyle);\n;// CONCATENATED MODULE: ./src/assets/eyebrows_straight1.png\n/* harmony default export */ const eyebrows_straight1 = (__webpack_require__.p + "assets/models/893360790d6c31fe8314249d2930585a.png");\n;// CONCATENATED MODULE: ./src/js/eyebrows-style/eyebrows_style_5.js\nfunction eyebrows_style_5_typeof(obj) { "@babel/helpers - typeof"; return eyebrows_style_5_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyebrows_style_5_typeof(obj); }\n\nfunction eyebrows_style_5_toConsumableArray(arr) { return eyebrows_style_5_arrayWithoutHoles(arr) || eyebrows_style_5_iterableToArray(arr) || eyebrows_style_5_unsupportedIterableToArray(arr) || eyebrows_style_5_nonIterableSpread(); }\n\nfunction eyebrows_style_5_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyebrows_style_5_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyebrows_style_5_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyebrows_style_5_arrayLikeToArray(o, minLen); }\n\nfunction eyebrows_style_5_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyebrows_style_5_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyebrows_style_5_arrayLikeToArray(arr); }\n\nfunction eyebrows_style_5_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyebrows_style_5_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyebrows_style_5_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyebrows_style_5_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyebrows_style_5_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyebrows_style_5_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyebrows_style_5_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyebrows_style_5_setPrototypeOf(subClass, superClass); }\n\nfunction eyebrows_style_5_setPrototypeOf(o, p) { eyebrows_style_5_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyebrows_style_5_setPrototypeOf(o, p); }\n\nfunction eyebrows_style_5_createSuper(Derived) { var hasNativeReflectConstruct = eyebrows_style_5_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyebrows_style_5_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyebrows_style_5_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyebrows_style_5_possibleConstructorReturn(this, result); }; }\n\nfunction eyebrows_style_5_possibleConstructorReturn(self, call) { if (call && (eyebrows_style_5_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyebrows_style_5_assertThisInitialized(self); }\n\nfunction eyebrows_style_5_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyebrows_style_5_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyebrows_style_5_getPrototypeOf(o) { eyebrows_style_5_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyebrows_style_5_getPrototypeOf(o); }\n\n\n\n\n\nvar EyebrowsStyle5 = /*#__PURE__*/function (_EyebrowsStyle) {\n  eyebrows_style_5_inherits(EyebrowsStyle5, _EyebrowsStyle);\n\n  var _super = eyebrows_style_5_createSuper(EyebrowsStyle5);\n\n  function EyebrowsStyle5(sku, scene, width, height) {\n    eyebrows_style_5_classCallCheck(this, EyebrowsStyle5);\n\n    var patternDefaultTextures = {\n      matte: eyebrows_straight1\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new EyebrowsPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyebrows_style_5_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  } // getDefaultTexture(type) {\n  //   if (type === "matte") {\n  //     return MatteAOTexture;\n  //   } else if (type === "glossy") {\n  //     return GlossyAOTexture;\n  //   } else if (type === "shimmer") {\n  //     return ShimmerAOTexture;\n  //   }\n  // }\n\n\n  return eyebrows_style_5_createClass(EyebrowsStyle5);\n}(EyebrowsStyle);\n;// CONCATENATED MODULE: ./src/js/eyebrows-style/eyebrows_style_factory.js\nfunction eyebrows_style_factory_typeof(obj) { "@babel/helpers - typeof"; return eyebrows_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyebrows_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyebrows_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyebrows_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyebrows_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyebrows_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyebrows_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyebrows_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyebrows_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction eyebrows_style_factory_setPrototypeOf(o, p) { eyebrows_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyebrows_style_factory_setPrototypeOf(o, p); }\n\nfunction eyebrows_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = eyebrows_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyebrows_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyebrows_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyebrows_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction eyebrows_style_factory_possibleConstructorReturn(self, call) { if (call && (eyebrows_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyebrows_style_factory_assertThisInitialized(self); }\n\nfunction eyebrows_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyebrows_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyebrows_style_factory_getPrototypeOf(o) { eyebrows_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyebrows_style_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\nvar EyebrowsStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  eyebrows_style_factory_inherits(EyebrowsStyleFactory, _StyleFactory);\n\n  var _super = eyebrows_style_factory_createSuper(EyebrowsStyleFactory);\n\n  function EyebrowsStyleFactory() {\n    var _this;\n\n    eyebrows_style_factory_classCallCheck(this, EyebrowsStyleFactory);\n\n    _this = _super.call(this);\n    _this.eyebrowsStyles = {\n      arrow1: EyebrowsStyle1,\n      arrow2: EyebrowsStyle2,\n      arrow3: EyebrowsStyle3,\n      curve1: EyebrowsStyle4,\n      straight1: EyebrowsStyle5\n    };\n    return _this;\n  }\n\n  eyebrows_style_factory_createClass(EyebrowsStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var StyleClass = this.eyebrowsStyles[styleType.toLowerCase()];\n\n      if (!StyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported eyebrows style");\n      }\n\n      return new StyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return EyebrowsStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/js/eyelashes-style/matte_eyelashes_mask.js\n\n\nfunction matte_eyelashes_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matte_eyelashes_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matte_eyelashes_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) matte_eyelashes_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) matte_eyelashes_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar MatteEyelashesMask = /*#__PURE__*/function () {\n  function MatteEyelashesMask(_pattern, _texture) {\n    matte_eyelashes_mask_classCallCheck(this, MatteEyelashesMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var material = new three_module/* MeshBasicMaterial */.vBJ({\n      map: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      toneMapped: false,\n      color: threeColor,\n      fog: false\n    });\n    this.MaterialArray = [material];\n  }\n\n  matte_eyelashes_mask_createClass(MatteEyelashesMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteEyelashesMask;\n}();\n;// CONCATENATED MODULE: ./src/assets/eyelash_natural1.png\n/* harmony default export */ const eyelash_natural1 = (__webpack_require__.p + "assets/models/fc9f891743c8e7a0fa9cd25877a35d0a.png");\n;// CONCATENATED MODULE: ./src/js/eyelashes-style/eyelashes_style.js\n\n\n\n\n\n\nfunction eyelashes_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyelashes_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyelashes_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyelashes_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyelashes_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar EyelashesStyle = /*#__PURE__*/function () {\n  function EyelashesStyle(sku, scene, width, height, materials) {\n    eyelashes_style_classCallCheck(this, EyelashesStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = [];\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n  }\n\n  eyelashes_style_createClass(EyelashesStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      for (var i = 0; i < this.materialArray.length; i++) {\n        var geometry = makeGeometry(this.landmarks, "eyelash");\n\n        if (!this.faces || this.faces.length <= i) {\n          var tempface = new three_module/* Mesh */.Kj0(geometry, this.materialArray[i]);\n          this.faces.push(tempface);\n          this.scene.add(tempface);\n          this.faces[i].receiveShadow = false; // Disable receiving shadows\n\n          this.faces[i].castShadow = false; // Disable casting shadows\n\n          this.faces[i].position.set(0, 0, 0);\n          this.faces[i].name = "makeup";\n        } else {\n          this.faces[i].geometry = geometry;\n          this.faces[i].material = this.materialArray[i];\n        }\n\n        this.faces[i].scale.set(this.width, this.height, this.width);\n      }\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n\n      while (!!this.scene.getObjectByName("makeup")) {\n        this.scene.remove(this.scene.getObjectByName("makeup"));\n      }\n\n      this.faces = [];\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {//this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.faces != null && this.landmarks != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        material.opacity = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.opacity = intensity;\n        material.needsUpdate = true; //if (material.emissive) material.emissive.setHex(newColorValue);\n      });\n    }\n  }, {\n    key: "changeTexture",\n    value: function changeTexture(textureName) {\n      var textureLoader = new three_module/* TextureLoader */.dpR();\n      var newTexture = textureLoader.load(texture_mapping[textureName], function (newTexture) {\n        newTexture.flipY = false;\n        this.material.map = newTexture;\n        this.material.needsUpdate = true;\n        this.material.opacity = 1.0;\n      }.bind(this) // Added bind(this) to retain the context\n      );\n    }\n  }, {\n    key: "changeTextureColor",\n    value: function changeTextureColor(color, intensity) {\n      var newColorValue = new three_module/* Color */.Ilk(color);\n\n      if (this.materialArray[0].uniforms.colorValue === undefined) {\n        this.materialArray[0].uniforms.colorValue = {\n          value: newColorValue\n        };\n        this.materialArray.forEach(function (material) {\n          material.uniforms.opacityValue.value = intensity;\n        });\n      } else {\n        this.materialArray[0].uniforms.colorValue.value = newColorValue;\n        this.materialArray.forEach(function (material) {\n          material.uniforms.opacityValue.value = intensity;\n        });\n      }\n\n      this.materialArray[0].needsUpdate = true; // console.log("changeTextureColor");\n    }\n  }]);\n\n  return EyelashesStyle;\n}();\n;// CONCATENATED MODULE: ./src/js/eyelashes-style/eyelashes_pattern_factory.js\nfunction eyelashes_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return eyelashes_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyelashes_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyelashes_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyelashes_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyelashes_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyelashes_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyelashes_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyelashes_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyelashes_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction eyelashes_pattern_factory_setPrototypeOf(o, p) { eyelashes_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyelashes_pattern_factory_setPrototypeOf(o, p); }\n\nfunction eyelashes_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = eyelashes_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyelashes_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyelashes_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyelashes_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction eyelashes_pattern_factory_possibleConstructorReturn(self, call) { if (call && (eyelashes_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyelashes_pattern_factory_assertThisInitialized(self); }\n\nfunction eyelashes_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyelashes_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyelashes_pattern_factory_getPrototypeOf(o) { eyelashes_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyelashes_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar EyelashesPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  eyelashes_pattern_factory_inherits(EyelashesPatternFactory, _PatternFactory);\n\n  var _super = eyelashes_pattern_factory_createSuper(EyelashesPatternFactory);\n\n  function EyelashesPatternFactory() {\n    var _this;\n\n    eyelashes_pattern_factory_classCallCheck(this, EyelashesPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      matte: MatteEyelashesMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  eyelashes_pattern_factory_createClass(EyelashesPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return EyelashesPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/eyelashes-style/eyelashes_style_1.js\nfunction eyelashes_style_1_typeof(obj) { "@babel/helpers - typeof"; return eyelashes_style_1_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyelashes_style_1_typeof(obj); }\n\nfunction eyelashes_style_1_toConsumableArray(arr) { return eyelashes_style_1_arrayWithoutHoles(arr) || eyelashes_style_1_iterableToArray(arr) || eyelashes_style_1_unsupportedIterableToArray(arr) || eyelashes_style_1_nonIterableSpread(); }\n\nfunction eyelashes_style_1_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyelashes_style_1_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyelashes_style_1_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyelashes_style_1_arrayLikeToArray(o, minLen); }\n\nfunction eyelashes_style_1_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyelashes_style_1_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyelashes_style_1_arrayLikeToArray(arr); }\n\nfunction eyelashes_style_1_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyelashes_style_1_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyelashes_style_1_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyelashes_style_1_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyelashes_style_1_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyelashes_style_1_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyelashes_style_1_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyelashes_style_1_setPrototypeOf(subClass, superClass); }\n\nfunction eyelashes_style_1_setPrototypeOf(o, p) { eyelashes_style_1_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyelashes_style_1_setPrototypeOf(o, p); }\n\nfunction eyelashes_style_1_createSuper(Derived) { var hasNativeReflectConstruct = eyelashes_style_1_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyelashes_style_1_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyelashes_style_1_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyelashes_style_1_possibleConstructorReturn(this, result); }; }\n\nfunction eyelashes_style_1_possibleConstructorReturn(self, call) { if (call && (eyelashes_style_1_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyelashes_style_1_assertThisInitialized(self); }\n\nfunction eyelashes_style_1_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyelashes_style_1_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyelashes_style_1_getPrototypeOf(o) { eyelashes_style_1_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyelashes_style_1_getPrototypeOf(o); }\n\n\n\n\n\nvar EyelashesStyle1 = /*#__PURE__*/function (_EyelashesStyle) {\n  eyelashes_style_1_inherits(EyelashesStyle1, _EyelashesStyle);\n\n  var _super = eyelashes_style_1_createSuper(EyelashesStyle1);\n\n  function EyelashesStyle1(sku, scene, width, height) {\n    eyelashes_style_1_classCallCheck(this, EyelashesStyle1);\n\n    var patternDefaultTextures = {\n      matte: eyelash_natural1\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      // console.log(_style.patterns[i]);\n      var PatternFactory = new EyelashesPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyelashes_style_1_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return eyelashes_style_1_createClass(EyelashesStyle1);\n}(EyelashesStyle);\n;// CONCATENATED MODULE: ./src/assets/eyelash_natural2.png\n/* harmony default export */ const eyelash_natural2 = (__webpack_require__.p + "assets/models/734ea3fec4cdc616365ec0699eb87513.png");\n;// CONCATENATED MODULE: ./src/js/eyelashes-style/eyelashes_style_2.js\nfunction eyelashes_style_2_typeof(obj) { "@babel/helpers - typeof"; return eyelashes_style_2_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyelashes_style_2_typeof(obj); }\n\nfunction eyelashes_style_2_toConsumableArray(arr) { return eyelashes_style_2_arrayWithoutHoles(arr) || eyelashes_style_2_iterableToArray(arr) || eyelashes_style_2_unsupportedIterableToArray(arr) || eyelashes_style_2_nonIterableSpread(); }\n\nfunction eyelashes_style_2_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyelashes_style_2_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyelashes_style_2_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyelashes_style_2_arrayLikeToArray(o, minLen); }\n\nfunction eyelashes_style_2_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyelashes_style_2_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyelashes_style_2_arrayLikeToArray(arr); }\n\nfunction eyelashes_style_2_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyelashes_style_2_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyelashes_style_2_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyelashes_style_2_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyelashes_style_2_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyelashes_style_2_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyelashes_style_2_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyelashes_style_2_setPrototypeOf(subClass, superClass); }\n\nfunction eyelashes_style_2_setPrototypeOf(o, p) { eyelashes_style_2_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyelashes_style_2_setPrototypeOf(o, p); }\n\nfunction eyelashes_style_2_createSuper(Derived) { var hasNativeReflectConstruct = eyelashes_style_2_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyelashes_style_2_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyelashes_style_2_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyelashes_style_2_possibleConstructorReturn(this, result); }; }\n\nfunction eyelashes_style_2_possibleConstructorReturn(self, call) { if (call && (eyelashes_style_2_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyelashes_style_2_assertThisInitialized(self); }\n\nfunction eyelashes_style_2_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyelashes_style_2_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyelashes_style_2_getPrototypeOf(o) { eyelashes_style_2_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyelashes_style_2_getPrototypeOf(o); }\n\n\n\n\n\nvar EyelashesStyle2 = /*#__PURE__*/function (_EyelashesStyle) {\n  eyelashes_style_2_inherits(EyelashesStyle2, _EyelashesStyle);\n\n  var _super = eyelashes_style_2_createSuper(EyelashesStyle2);\n\n  function EyelashesStyle2(sku, scene, width, height) {\n    eyelashes_style_2_classCallCheck(this, EyelashesStyle2);\n\n    var patternDefaultTextures = {\n      matte: eyelash_natural2\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      //console.log(_style.patterns[i]);\n      var PatternFactory = new EyelashesPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyelashes_style_2_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return eyelashes_style_2_createClass(EyelashesStyle2);\n}(EyelashesStyle);\n;// CONCATENATED MODULE: ./src/assets/eyelash_natural3.png\n/* harmony default export */ const eyelash_natural3 = (__webpack_require__.p + "assets/models/f5cdef8246d324499937ffc0aa5e962c.png");\n;// CONCATENATED MODULE: ./src/js/eyelashes-style/eyelashes_style_3.js\nfunction eyelashes_style_3_typeof(obj) { "@babel/helpers - typeof"; return eyelashes_style_3_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyelashes_style_3_typeof(obj); }\n\nfunction eyelashes_style_3_toConsumableArray(arr) { return eyelashes_style_3_arrayWithoutHoles(arr) || eyelashes_style_3_iterableToArray(arr) || eyelashes_style_3_unsupportedIterableToArray(arr) || eyelashes_style_3_nonIterableSpread(); }\n\nfunction eyelashes_style_3_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyelashes_style_3_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyelashes_style_3_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyelashes_style_3_arrayLikeToArray(o, minLen); }\n\nfunction eyelashes_style_3_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyelashes_style_3_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyelashes_style_3_arrayLikeToArray(arr); }\n\nfunction eyelashes_style_3_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyelashes_style_3_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyelashes_style_3_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyelashes_style_3_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyelashes_style_3_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyelashes_style_3_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyelashes_style_3_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyelashes_style_3_setPrototypeOf(subClass, superClass); }\n\nfunction eyelashes_style_3_setPrototypeOf(o, p) { eyelashes_style_3_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyelashes_style_3_setPrototypeOf(o, p); }\n\nfunction eyelashes_style_3_createSuper(Derived) { var hasNativeReflectConstruct = eyelashes_style_3_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyelashes_style_3_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyelashes_style_3_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyelashes_style_3_possibleConstructorReturn(this, result); }; }\n\nfunction eyelashes_style_3_possibleConstructorReturn(self, call) { if (call && (eyelashes_style_3_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyelashes_style_3_assertThisInitialized(self); }\n\nfunction eyelashes_style_3_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyelashes_style_3_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyelashes_style_3_getPrototypeOf(o) { eyelashes_style_3_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyelashes_style_3_getPrototypeOf(o); }\n\n\n\n\n\nvar EyelashesStyle3 = /*#__PURE__*/function (_EyelashesStyle) {\n  eyelashes_style_3_inherits(EyelashesStyle3, _EyelashesStyle);\n\n  var _super = eyelashes_style_3_createSuper(EyelashesStyle3);\n\n  function EyelashesStyle3(sku, scene, width, height) {\n    eyelashes_style_3_classCallCheck(this, EyelashesStyle3);\n\n    var patternDefaultTextures = {\n      matte: eyelash_natural3\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      //console.log(_style.patterns[i]);\n      var PatternFactory = new EyelashesPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyelashes_style_3_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return eyelashes_style_3_createClass(EyelashesStyle3);\n}(EyelashesStyle);\n;// CONCATENATED MODULE: ./src/assets/eyelash_upperlower1.png\n/* harmony default export */ const eyelash_upperlower1 = (__webpack_require__.p + "assets/models/8cfe8ecfdc521a1d3533e624fa4df23f.png");\n;// CONCATENATED MODULE: ./src/js/eyelashes-style/eyelashes_style_4.js\nfunction eyelashes_style_4_typeof(obj) { "@babel/helpers - typeof"; return eyelashes_style_4_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyelashes_style_4_typeof(obj); }\n\nfunction eyelashes_style_4_toConsumableArray(arr) { return eyelashes_style_4_arrayWithoutHoles(arr) || eyelashes_style_4_iterableToArray(arr) || eyelashes_style_4_unsupportedIterableToArray(arr) || eyelashes_style_4_nonIterableSpread(); }\n\nfunction eyelashes_style_4_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyelashes_style_4_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyelashes_style_4_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyelashes_style_4_arrayLikeToArray(o, minLen); }\n\nfunction eyelashes_style_4_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyelashes_style_4_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyelashes_style_4_arrayLikeToArray(arr); }\n\nfunction eyelashes_style_4_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyelashes_style_4_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyelashes_style_4_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyelashes_style_4_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyelashes_style_4_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyelashes_style_4_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyelashes_style_4_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyelashes_style_4_setPrototypeOf(subClass, superClass); }\n\nfunction eyelashes_style_4_setPrototypeOf(o, p) { eyelashes_style_4_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyelashes_style_4_setPrototypeOf(o, p); }\n\nfunction eyelashes_style_4_createSuper(Derived) { var hasNativeReflectConstruct = eyelashes_style_4_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyelashes_style_4_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyelashes_style_4_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyelashes_style_4_possibleConstructorReturn(this, result); }; }\n\nfunction eyelashes_style_4_possibleConstructorReturn(self, call) { if (call && (eyelashes_style_4_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyelashes_style_4_assertThisInitialized(self); }\n\nfunction eyelashes_style_4_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyelashes_style_4_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyelashes_style_4_getPrototypeOf(o) { eyelashes_style_4_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyelashes_style_4_getPrototypeOf(o); }\n\n\n\n\n\nvar EyelashesStyle4 = /*#__PURE__*/function (_EyelashesStyle) {\n  eyelashes_style_4_inherits(EyelashesStyle4, _EyelashesStyle);\n\n  var _super = eyelashes_style_4_createSuper(EyelashesStyle4);\n\n  function EyelashesStyle4(sku, scene, width, height) {\n    eyelashes_style_4_classCallCheck(this, EyelashesStyle4);\n\n    var patternDefaultTextures = {\n      matte: eyelash_upperlower1\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      //console.log(_style.patterns[i]);\n      var PatternFactory = new EyelashesPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyelashes_style_4_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return eyelashes_style_4_createClass(EyelashesStyle4);\n}(EyelashesStyle);\n;// CONCATENATED MODULE: ./src/assets/eyelash_upperlower2.png\n/* harmony default export */ const eyelash_upperlower2 = (__webpack_require__.p + "assets/models/f9bcf289adb4090e9a3f61763a4ba79e.png");\n;// CONCATENATED MODULE: ./src/js/eyelashes-style/eyelashes_style_5.js\nfunction eyelashes_style_5_typeof(obj) { "@babel/helpers - typeof"; return eyelashes_style_5_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyelashes_style_5_typeof(obj); }\n\nfunction eyelashes_style_5_toConsumableArray(arr) { return eyelashes_style_5_arrayWithoutHoles(arr) || eyelashes_style_5_iterableToArray(arr) || eyelashes_style_5_unsupportedIterableToArray(arr) || eyelashes_style_5_nonIterableSpread(); }\n\nfunction eyelashes_style_5_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction eyelashes_style_5_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return eyelashes_style_5_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return eyelashes_style_5_arrayLikeToArray(o, minLen); }\n\nfunction eyelashes_style_5_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction eyelashes_style_5_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return eyelashes_style_5_arrayLikeToArray(arr); }\n\nfunction eyelashes_style_5_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyelashes_style_5_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyelashes_style_5_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyelashes_style_5_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyelashes_style_5_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyelashes_style_5_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyelashes_style_5_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyelashes_style_5_setPrototypeOf(subClass, superClass); }\n\nfunction eyelashes_style_5_setPrototypeOf(o, p) { eyelashes_style_5_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyelashes_style_5_setPrototypeOf(o, p); }\n\nfunction eyelashes_style_5_createSuper(Derived) { var hasNativeReflectConstruct = eyelashes_style_5_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyelashes_style_5_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyelashes_style_5_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyelashes_style_5_possibleConstructorReturn(this, result); }; }\n\nfunction eyelashes_style_5_possibleConstructorReturn(self, call) { if (call && (eyelashes_style_5_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyelashes_style_5_assertThisInitialized(self); }\n\nfunction eyelashes_style_5_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyelashes_style_5_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyelashes_style_5_getPrototypeOf(o) { eyelashes_style_5_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyelashes_style_5_getPrototypeOf(o); }\n\n\n //import MatteAOTexture from "../../assets/eyelash_12.png";\n\n\n\nvar EyelashesStyle5 = /*#__PURE__*/function (_EyelashesStyle) {\n  eyelashes_style_5_inherits(EyelashesStyle5, _EyelashesStyle);\n\n  var _super = eyelashes_style_5_createSuper(EyelashesStyle5);\n\n  function EyelashesStyle5(sku, scene, width, height) {\n    eyelashes_style_5_classCallCheck(this, EyelashesStyle5);\n\n    var patternDefaultTextures = {\n      matte: eyelash_upperlower2\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      //console.log(_style.patterns[i]);\n      var PatternFactory = new EyelashesPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, eyelashes_style_5_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return eyelashes_style_5_createClass(EyelashesStyle5);\n}(EyelashesStyle);\n;// CONCATENATED MODULE: ./src/js/eyelashes-style/eyelashes_style_factory.js\nfunction eyelashes_style_factory_typeof(obj) { "@babel/helpers - typeof"; return eyelashes_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, eyelashes_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction eyelashes_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction eyelashes_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction eyelashes_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) eyelashes_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) eyelashes_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction eyelashes_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) eyelashes_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction eyelashes_style_factory_setPrototypeOf(o, p) { eyelashes_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return eyelashes_style_factory_setPrototypeOf(o, p); }\n\nfunction eyelashes_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = eyelashes_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = eyelashes_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = eyelashes_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return eyelashes_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction eyelashes_style_factory_possibleConstructorReturn(self, call) { if (call && (eyelashes_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return eyelashes_style_factory_assertThisInitialized(self); }\n\nfunction eyelashes_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction eyelashes_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction eyelashes_style_factory_getPrototypeOf(o) { eyelashes_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return eyelashes_style_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\nvar EyelashesStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  eyelashes_style_factory_inherits(EyelashesStyleFactory, _StyleFactory);\n\n  var _super = eyelashes_style_factory_createSuper(EyelashesStyleFactory);\n\n  function EyelashesStyleFactory() {\n    var _this;\n\n    eyelashes_style_factory_classCallCheck(this, EyelashesStyleFactory);\n\n    _this = _super.call(this);\n    _this.eyeShadowStyles = {\n      natural1: EyelashesStyle1,\n      natural2: EyelashesStyle2,\n      natural3: EyelashesStyle3,\n      upperlower1: EyelashesStyle4,\n      upperlower2: EyelashesStyle5\n    };\n    return _this;\n  }\n\n  eyelashes_style_factory_createClass(EyelashesStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var StyleClass = this.eyeShadowStyles[styleType.toLowerCase()];\n\n      if (!StyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported eyelashes style");\n      }\n\n      return new StyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return EyelashesStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/assets/foundation.png\n/* harmony default export */ const foundation = (__webpack_require__.p + "assets/models/23b1c2ed54920cf450cdcfa07cc9189a.png");\n;// CONCATENATED MODULE: ./src/js/foundation-style/foundation_style.js\n\n\n\n\n\n\nfunction foundation_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction foundation_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction foundation_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) foundation_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) foundation_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar FoundationStyle = /*#__PURE__*/function () {\n  function FoundationStyle(sku, scene, width, height, materials) {\n    foundation_style_classCallCheck(this, FoundationStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = [];\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n  }\n\n  foundation_style_createClass(FoundationStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      for (var i = 0; i < this.materialArray.length; i++) {\n        var geometry = makeGeometry(this.landmarks, "foundation");\n\n        if (!this.faces || this.faces.length <= i) {\n          var tempface = new three_module/* Mesh */.Kj0(geometry, this.materialArray[i]);\n          this.faces.push(tempface);\n          this.scene.add(tempface);\n          this.faces[i].receiveShadow = false; // Disable receiving shadows\n\n          this.faces[i].castShadow = false; // Disable casting shadows\n\n          this.faces[i].position.set(0, 0, 0);\n          this.faces[i].name = "makeup";\n        } else {\n          this.faces[i].geometry = geometry;\n          this.faces[i].material = this.materialArray[i];\n        }\n\n        this.faces[i].scale.set(this.width, this.height, this.width);\n      }\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n\n      while (!!this.scene.getObjectByName("makeup")) {\n        this.scene.remove(this.scene.getObjectByName("makeup"));\n      }\n\n      this.faces = [];\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {// this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.faces != null && this.landmarks != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        material.opacity = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.opacity = intensity;\n        material.needsUpdate = true; //if (material.emissive) material.emissive.setHex(newColorValue);\n      });\n    }\n  }, {\n    key: "changeTexture",\n    value: function changeTexture(textureName) {\n      var textureLoader = new three_module/* TextureLoader */.dpR();\n      var newTexture = textureLoader.load(texture_mapping[textureName], function (newTexture) {\n        newTexture.flipY = false;\n        this.material.map = newTexture;\n        this.material.needsUpdate = true;\n        this.material.opacity = 1.0;\n      }.bind(this) // Added bind(this) to retain the context\n      );\n    }\n  }, {\n    key: "changeTextureColor",\n    value: function changeTextureColor(color, intensity) {\n      var newColorValue = new three_module/* Color */.Ilk(color);\n\n      if (this.materialArray[0].uniforms.colorValue === undefined) {\n        this.materialArray[0].uniforms.colorValue = {\n          value: newColorValue\n        };\n        this.materialArray[0].uniforms.opacityValue.value = intensity;\n      } else {\n        this.materialArray[0].uniforms.colorValue.value = newColorValue;\n        this.materialArray[0].uniforms.opacityValue.value = intensity;\n      }\n\n      this.materialArray[0].needsUpdate = true; //console.log("changeTextureColor");\n    }\n  }]);\n\n  return FoundationStyle;\n}();\n;// CONCATENATED MODULE: ./src/js/foundation-style/matte_foundation_mask.js\n\n\nfunction matte_foundation_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matte_foundation_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matte_foundation_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) matte_foundation_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) matte_foundation_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar MatteFoundationMask = /*#__PURE__*/function () {\n  function MatteFoundationMask(_pattern, _texture) {\n    matte_foundation_mask_classCallCheck(this, MatteFoundationMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var material = new three_module/* MeshBasicMaterial */.vBJ({\n      map: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      // envMapIntensity: 0,\n      toneMapped: false,\n      color: threeColor,\n      fog: false // envMap: new THREE.TextureLoader().load(_texture, function (texture) {\n      //   texture.flipY = false;\n      // }),\n\n    });\n    this.MaterialArray = [material];\n  }\n\n  matte_foundation_mask_createClass(MatteFoundationMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteFoundationMask;\n}();\n;// CONCATENATED MODULE: ./src/js/foundation-style/foundation_pattern_factory.js\nfunction foundation_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return foundation_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, foundation_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction foundation_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction foundation_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction foundation_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) foundation_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) foundation_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction foundation_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) foundation_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction foundation_pattern_factory_setPrototypeOf(o, p) { foundation_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return foundation_pattern_factory_setPrototypeOf(o, p); }\n\nfunction foundation_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = foundation_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = foundation_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = foundation_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return foundation_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction foundation_pattern_factory_possibleConstructorReturn(self, call) { if (call && (foundation_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return foundation_pattern_factory_assertThisInitialized(self); }\n\nfunction foundation_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction foundation_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction foundation_pattern_factory_getPrototypeOf(o) { foundation_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return foundation_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\nvar FoundationPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  foundation_pattern_factory_inherits(FoundationPatternFactory, _PatternFactory);\n\n  var _super = foundation_pattern_factory_createSuper(FoundationPatternFactory);\n\n  function FoundationPatternFactory() {\n    var _this;\n\n    foundation_pattern_factory_classCallCheck(this, FoundationPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      matte: MatteFoundationMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  foundation_pattern_factory_createClass(FoundationPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return FoundationPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/foundation-style/foundation_style_1.js\nfunction foundation_style_1_typeof(obj) { "@babel/helpers - typeof"; return foundation_style_1_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, foundation_style_1_typeof(obj); }\n\nfunction foundation_style_1_toConsumableArray(arr) { return foundation_style_1_arrayWithoutHoles(arr) || foundation_style_1_iterableToArray(arr) || foundation_style_1_unsupportedIterableToArray(arr) || foundation_style_1_nonIterableSpread(); }\n\nfunction foundation_style_1_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction foundation_style_1_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return foundation_style_1_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return foundation_style_1_arrayLikeToArray(o, minLen); }\n\nfunction foundation_style_1_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction foundation_style_1_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return foundation_style_1_arrayLikeToArray(arr); }\n\nfunction foundation_style_1_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction foundation_style_1_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction foundation_style_1_createClass(Constructor, protoProps, staticProps) { if (protoProps) foundation_style_1_defineProperties(Constructor.prototype, protoProps); if (staticProps) foundation_style_1_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction foundation_style_1_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction foundation_style_1_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) foundation_style_1_setPrototypeOf(subClass, superClass); }\n\nfunction foundation_style_1_setPrototypeOf(o, p) { foundation_style_1_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return foundation_style_1_setPrototypeOf(o, p); }\n\nfunction foundation_style_1_createSuper(Derived) { var hasNativeReflectConstruct = foundation_style_1_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = foundation_style_1_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = foundation_style_1_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return foundation_style_1_possibleConstructorReturn(this, result); }; }\n\nfunction foundation_style_1_possibleConstructorReturn(self, call) { if (call && (foundation_style_1_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return foundation_style_1_assertThisInitialized(self); }\n\nfunction foundation_style_1_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction foundation_style_1_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction foundation_style_1_getPrototypeOf(o) { foundation_style_1_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return foundation_style_1_getPrototypeOf(o); }\n\n\n\n\nvar FoundationStyle1 = /*#__PURE__*/function (_FoundationStyle) {\n  foundation_style_1_inherits(FoundationStyle1, _FoundationStyle);\n\n  var _super = foundation_style_1_createSuper(FoundationStyle1);\n\n  function FoundationStyle1(sku, scene, width, height) {\n    "";\n\n    foundation_style_1_classCallCheck(this, FoundationStyle1);\n\n    var patternDefaultTextures = {\n      matte: foundation\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var PatternFactory = new FoundationPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, foundation_style_1_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return foundation_style_1_createClass(FoundationStyle1);\n}(FoundationStyle);\n;// CONCATENATED MODULE: ./src/js/foundation-style/foundation_style_factory.js\nfunction foundation_style_factory_typeof(obj) { "@babel/helpers - typeof"; return foundation_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, foundation_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction foundation_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction foundation_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction foundation_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) foundation_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) foundation_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction foundation_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) foundation_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction foundation_style_factory_setPrototypeOf(o, p) { foundation_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return foundation_style_factory_setPrototypeOf(o, p); }\n\nfunction foundation_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = foundation_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = foundation_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = foundation_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return foundation_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction foundation_style_factory_possibleConstructorReturn(self, call) { if (call && (foundation_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return foundation_style_factory_assertThisInitialized(self); }\n\nfunction foundation_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction foundation_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction foundation_style_factory_getPrototypeOf(o) { foundation_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return foundation_style_factory_getPrototypeOf(o); }\n\n\n\n\n\nvar FoundationStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  foundation_style_factory_inherits(FoundationStyleFactory, _StyleFactory);\n\n  var _super = foundation_style_factory_createSuper(FoundationStyleFactory);\n\n  function FoundationStyleFactory() {\n    var _this;\n\n    foundation_style_factory_classCallCheck(this, FoundationStyleFactory);\n\n    _this = _super.call(this);\n    _this.foundationStyles = {\n      foundation1: FoundationStyle1\n    };\n    return _this;\n  }\n\n  foundation_style_factory_createClass(FoundationStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var StyleClass = this.foundationStyles[styleType.toLowerCase()];\n\n      if (!StyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported foundation style");\n      }\n\n      return new StyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return FoundationStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/assets/highlighter_heartface1.png\n/* harmony default export */ const highlighter_heartface1 = (__webpack_require__.p + "assets/models/6a89c78ae318b5702c8f2ed3623ab22c.png");\n;// CONCATENATED MODULE: ./src/js/highlighter-style /highlighter_style.js\n\n\n\n\n\n\nfunction highlighter_style_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction highlighter_style_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction highlighter_style_createClass(Constructor, protoProps, staticProps) { if (protoProps) highlighter_style_defineProperties(Constructor.prototype, protoProps); if (staticProps) highlighter_style_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar HighlighterStyle = /*#__PURE__*/function () {\n  function HighlighterStyle(sku, scene, width, height, materials) {\n    highlighter_style_classCallCheck(this, HighlighterStyle);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.materialArray = materials;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = [];\n    this.colorIntensity = 1;\n    this.colorIntensity = sku.meta.colorIntensity / 100;\n    setDefaultOpacitySlider(this.colorIntensity);\n    setDefaultOpacitySliderValue(this.colorIntensity);\n    setOpacitySliderValue(this.colorIntensity);\n    this.setOpacity(this.colorIntensity);\n  }\n\n  highlighter_style_createClass(HighlighterStyle, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      for (var i = 0; i < this.materialArray.length; i++) {\n        var geometry = makeGeometry(this.landmarks, "foundation");\n\n        if (!this.faces || this.faces.length <= i) {\n          var tempface = new three_module/* Mesh */.Kj0(geometry, this.materialArray[i]);\n          this.faces.push(tempface);\n          this.scene.add(tempface);\n          this.faces[i].receiveShadow = false; // Disable receiving shadows\n\n          this.faces[i].castShadow = false; // Disable casting shadows\n\n          this.faces[i].position.set(0, 0, 0);\n          this.faces[i].name = "makeup";\n        } else {\n          this.faces[i].geometry = geometry;\n          this.faces[i].material = this.materialArray[i];\n        }\n\n        this.faces[i].scale.set(this.width, this.height, this.width);\n      }\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n\n      while (!!this.scene.getObjectByName("makeup")) {\n        this.scene.remove(this.scene.getObjectByName("makeup"));\n      }\n\n      this.faces = [];\n    }\n  }, {\n    key: "setVisibility",\n    value: function setVisibility(state) {\n      this.materialArray.forEach(function (material) {\n        if (material.visible !== state) {\n          material.visible = state;\n        }\n      });\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {// this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n\n      if (this.faces != null && this.landmarks != null) {\n        this.updateOpacity();\n      }\n    }\n  }, {\n    key: "updateOpacity",\n    value: function updateOpacity() {\n      this.materialArray.forEach(function (material) {\n        material.opacity = getOpacitySliderValue();\n      });\n    }\n  }, {\n    key: "setOpacity",\n    value: function setOpacity(intensity) {\n      this.materialArray.forEach(function (material) {\n        material.opacity = intensity;\n        material.needsUpdate = true; //if (material.emissive) material.emissive.setHex(newColorValue);\n      });\n    }\n  }, {\n    key: "changeTexture",\n    value: function changeTexture(textureName) {\n      var textureLoader = new three_module/* TextureLoader */.dpR();\n      var newTexture = textureLoader.load(texture_mapping[textureName], function (newTexture) {\n        newTexture.flipY = false;\n        this.material.map = newTexture;\n        this.material.needsUpdate = true;\n        this.material.opacity = 1.0;\n      }.bind(this) // Added bind(this) to retain the context\n      );\n    }\n  }, {\n    key: "changeTextureColor",\n    value: function changeTextureColor(color, intensity) {\n      var newColorValue = new three_module/* Color */.Ilk(color);\n\n      if (this.materialArray[0].uniforms.colorValue === undefined) {\n        this.materialArray[0].uniforms.colorValue = {\n          value: newColorValue\n        };\n        this.materialArray[0].uniforms.opacityValue.value = intensity;\n      } else {\n        this.materialArray[0].uniforms.colorValue.value = newColorValue;\n        this.materialArray[0].uniforms.opacityValue.value = intensity;\n      }\n\n      this.materialArray[0].needsUpdate = true; //console.log("changeTextureColor");\n    }\n  }]);\n\n  return HighlighterStyle;\n}();\n;// CONCATENATED MODULE: ./src/js/highlighter-style /matte_highlighter_mask.js\n\n\nfunction matte_highlighter_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction matte_highlighter_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction matte_highlighter_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) matte_highlighter_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) matte_highlighter_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar MatteHighlighterMask = /*#__PURE__*/function () {\n  function MatteHighlighterMask(_pattern, _texture) {\n    matte_highlighter_mask_classCallCheck(this, MatteHighlighterMask);\n\n    var color = _pattern.colors[0];\n    var newColor = ColorUtils.getColorWithIntensity(color, 100);\n    var threeColor = new three_module/* Color */.Ilk(newColor);\n    var material = new three_module/* MeshBasicMaterial */.vBJ({\n      map: new three_module/* TextureLoader */.dpR().load(_texture, function (texture) {\n        texture.flipY = false;\n        texture.generateMipmaps = true;\n        texture.magFilter = three_module/* LinearFilter */.wem;\n        texture.minFilter = three_module/* LinearMipMapLinearFilter */.FDw;\n      }),\n      transparent: true,\n      side: three_module/* FrontSide */.Wl3,\n      // envMapIntensity: 0,\n      toneMapped: false,\n      color: threeColor,\n      fog: false // envMap: new THREE.TextureLoader().load(_texture, function (texture) {\n      //   texture.flipY = false;\n      // }),\n\n    });\n    this.MaterialArray = [material];\n  }\n\n  matte_highlighter_mask_createClass(MatteHighlighterMask, [{\n    key: "getMaterials",\n    value: function getMaterials() {\n      return this.MaterialArray;\n    }\n  }]);\n\n  return MatteHighlighterMask;\n}();\n;// CONCATENATED MODULE: ./src/js/highlighter-style /highlighter_pattern_factory.js\nfunction highlighter_pattern_factory_typeof(obj) { "@babel/helpers - typeof"; return highlighter_pattern_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, highlighter_pattern_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction highlighter_pattern_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction highlighter_pattern_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction highlighter_pattern_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) highlighter_pattern_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) highlighter_pattern_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction highlighter_pattern_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) highlighter_pattern_factory_setPrototypeOf(subClass, superClass); }\n\nfunction highlighter_pattern_factory_setPrototypeOf(o, p) { highlighter_pattern_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return highlighter_pattern_factory_setPrototypeOf(o, p); }\n\nfunction highlighter_pattern_factory_createSuper(Derived) { var hasNativeReflectConstruct = highlighter_pattern_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = highlighter_pattern_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = highlighter_pattern_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return highlighter_pattern_factory_possibleConstructorReturn(this, result); }; }\n\nfunction highlighter_pattern_factory_possibleConstructorReturn(self, call) { if (call && (highlighter_pattern_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return highlighter_pattern_factory_assertThisInitialized(self); }\n\nfunction highlighter_pattern_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction highlighter_pattern_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction highlighter_pattern_factory_getPrototypeOf(o) { highlighter_pattern_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return highlighter_pattern_factory_getPrototypeOf(o); }\n\n\n\n\n\nvar HighlighterPatternFactory = /*#__PURE__*/function (_PatternFactory) {\n  highlighter_pattern_factory_inherits(HighlighterPatternFactory, _PatternFactory);\n\n  var _super = highlighter_pattern_factory_createSuper(HighlighterPatternFactory);\n\n  function HighlighterPatternFactory() {\n    var _this;\n\n    highlighter_pattern_factory_classCallCheck(this, HighlighterPatternFactory);\n\n    _this = _super.call(this);\n    _this.pattern = {\n      matte: MatteHighlighterMask\n    };\n    _this.patternClass = null;\n    return _this;\n  }\n\n  highlighter_pattern_factory_createClass(HighlighterPatternFactory, [{\n    key: "createPattern",\n    value: function createPattern(_pattern, _texture) {\n      // console.log(_pattern.type);\n      var patternType = _pattern.name;\n      this.patternClass = this.pattern[patternType.toLowerCase()];\n\n      if (!this.patternClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported pattern" + patternType);\n      }\n\n      return new this.patternClass(_pattern, _texture);\n    }\n  }, {\n    key: "getPatternMaterials",\n    value: function getPatternMaterials() {\n      return this.patternClass["this"].getMaterials();\n    }\n  }]);\n\n  return HighlighterPatternFactory;\n}(PatternFactory);\n;// CONCATENATED MODULE: ./src/js/highlighter-style /highlighter_style_1.js\nfunction highlighter_style_1_typeof(obj) { "@babel/helpers - typeof"; return highlighter_style_1_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, highlighter_style_1_typeof(obj); }\n\nfunction highlighter_style_1_toConsumableArray(arr) { return highlighter_style_1_arrayWithoutHoles(arr) || highlighter_style_1_iterableToArray(arr) || highlighter_style_1_unsupportedIterableToArray(arr) || highlighter_style_1_nonIterableSpread(); }\n\nfunction highlighter_style_1_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction highlighter_style_1_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return highlighter_style_1_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return highlighter_style_1_arrayLikeToArray(o, minLen); }\n\nfunction highlighter_style_1_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction highlighter_style_1_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return highlighter_style_1_arrayLikeToArray(arr); }\n\nfunction highlighter_style_1_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction highlighter_style_1_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction highlighter_style_1_createClass(Constructor, protoProps, staticProps) { if (protoProps) highlighter_style_1_defineProperties(Constructor.prototype, protoProps); if (staticProps) highlighter_style_1_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction highlighter_style_1_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction highlighter_style_1_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) highlighter_style_1_setPrototypeOf(subClass, superClass); }\n\nfunction highlighter_style_1_setPrototypeOf(o, p) { highlighter_style_1_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return highlighter_style_1_setPrototypeOf(o, p); }\n\nfunction highlighter_style_1_createSuper(Derived) { var hasNativeReflectConstruct = highlighter_style_1_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = highlighter_style_1_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = highlighter_style_1_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return highlighter_style_1_possibleConstructorReturn(this, result); }; }\n\nfunction highlighter_style_1_possibleConstructorReturn(self, call) { if (call && (highlighter_style_1_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return highlighter_style_1_assertThisInitialized(self); }\n\nfunction highlighter_style_1_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction highlighter_style_1_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction highlighter_style_1_getPrototypeOf(o) { highlighter_style_1_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return highlighter_style_1_getPrototypeOf(o); }\n\n\n\n\nvar HighlighterStyle1 = /*#__PURE__*/function (_HighlighterStyle) {\n  highlighter_style_1_inherits(HighlighterStyle1, _HighlighterStyle);\n\n  var _super = highlighter_style_1_createSuper(HighlighterStyle1);\n\n  function HighlighterStyle1(sku, scene, width, height) {\n    highlighter_style_1_classCallCheck(this, HighlighterStyle1);\n\n    var patternDefaultTextures = {\n      matte: highlighter_heartface1\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var PatternFactory = new HighlighterPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, highlighter_style_1_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return highlighter_style_1_createClass(HighlighterStyle1);\n}(HighlighterStyle);\n;// CONCATENATED MODULE: ./src/assets/highlighter_heartface2.png\n/* harmony default export */ const highlighter_heartface2 = (__webpack_require__.p + "assets/models/176672a994d76169ff07fec38e46954f.png");\n;// CONCATENATED MODULE: ./src/js/highlighter-style /highlighter_style_2.js\nfunction highlighter_style_2_typeof(obj) { "@babel/helpers - typeof"; return highlighter_style_2_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, highlighter_style_2_typeof(obj); }\n\nfunction highlighter_style_2_toConsumableArray(arr) { return highlighter_style_2_arrayWithoutHoles(arr) || highlighter_style_2_iterableToArray(arr) || highlighter_style_2_unsupportedIterableToArray(arr) || highlighter_style_2_nonIterableSpread(); }\n\nfunction highlighter_style_2_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction highlighter_style_2_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return highlighter_style_2_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return highlighter_style_2_arrayLikeToArray(o, minLen); }\n\nfunction highlighter_style_2_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction highlighter_style_2_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return highlighter_style_2_arrayLikeToArray(arr); }\n\nfunction highlighter_style_2_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction highlighter_style_2_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction highlighter_style_2_createClass(Constructor, protoProps, staticProps) { if (protoProps) highlighter_style_2_defineProperties(Constructor.prototype, protoProps); if (staticProps) highlighter_style_2_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction highlighter_style_2_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction highlighter_style_2_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) highlighter_style_2_setPrototypeOf(subClass, superClass); }\n\nfunction highlighter_style_2_setPrototypeOf(o, p) { highlighter_style_2_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return highlighter_style_2_setPrototypeOf(o, p); }\n\nfunction highlighter_style_2_createSuper(Derived) { var hasNativeReflectConstruct = highlighter_style_2_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = highlighter_style_2_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = highlighter_style_2_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return highlighter_style_2_possibleConstructorReturn(this, result); }; }\n\nfunction highlighter_style_2_possibleConstructorReturn(self, call) { if (call && (highlighter_style_2_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return highlighter_style_2_assertThisInitialized(self); }\n\nfunction highlighter_style_2_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction highlighter_style_2_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction highlighter_style_2_getPrototypeOf(o) { highlighter_style_2_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return highlighter_style_2_getPrototypeOf(o); }\n\n\n\n\nvar HighlighterStyle2 = /*#__PURE__*/function (_HighlighterStyle) {\n  highlighter_style_2_inherits(HighlighterStyle2, _HighlighterStyle);\n\n  var _super = highlighter_style_2_createSuper(HighlighterStyle2);\n\n  function HighlighterStyle2(sku, scene, width, height) {\n    highlighter_style_2_classCallCheck(this, HighlighterStyle2);\n\n    var patternDefaultTextures = {\n      matte: highlighter_heartface2\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var PatternFactory = new HighlighterPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, highlighter_style_2_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return highlighter_style_2_createClass(HighlighterStyle2);\n}(HighlighterStyle);\n;// CONCATENATED MODULE: ./src/assets/highlighter_invtriangle1.png\n/* harmony default export */ const highlighter_invtriangle1 = (__webpack_require__.p + "assets/models/e91f2538acb23d0a41a34130e1b89828.png");\n;// CONCATENATED MODULE: ./src/js/highlighter-style /highlighter_style_3.js\nfunction highlighter_style_3_typeof(obj) { "@babel/helpers - typeof"; return highlighter_style_3_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, highlighter_style_3_typeof(obj); }\n\nfunction highlighter_style_3_toConsumableArray(arr) { return highlighter_style_3_arrayWithoutHoles(arr) || highlighter_style_3_iterableToArray(arr) || highlighter_style_3_unsupportedIterableToArray(arr) || highlighter_style_3_nonIterableSpread(); }\n\nfunction highlighter_style_3_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction highlighter_style_3_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return highlighter_style_3_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return highlighter_style_3_arrayLikeToArray(o, minLen); }\n\nfunction highlighter_style_3_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction highlighter_style_3_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return highlighter_style_3_arrayLikeToArray(arr); }\n\nfunction highlighter_style_3_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction highlighter_style_3_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction highlighter_style_3_createClass(Constructor, protoProps, staticProps) { if (protoProps) highlighter_style_3_defineProperties(Constructor.prototype, protoProps); if (staticProps) highlighter_style_3_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction highlighter_style_3_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction highlighter_style_3_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) highlighter_style_3_setPrototypeOf(subClass, superClass); }\n\nfunction highlighter_style_3_setPrototypeOf(o, p) { highlighter_style_3_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return highlighter_style_3_setPrototypeOf(o, p); }\n\nfunction highlighter_style_3_createSuper(Derived) { var hasNativeReflectConstruct = highlighter_style_3_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = highlighter_style_3_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = highlighter_style_3_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return highlighter_style_3_possibleConstructorReturn(this, result); }; }\n\nfunction highlighter_style_3_possibleConstructorReturn(self, call) { if (call && (highlighter_style_3_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return highlighter_style_3_assertThisInitialized(self); }\n\nfunction highlighter_style_3_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction highlighter_style_3_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction highlighter_style_3_getPrototypeOf(o) { highlighter_style_3_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return highlighter_style_3_getPrototypeOf(o); }\n\n\n\n\nvar HighlighterStyle3 = /*#__PURE__*/function (_HighlighterStyle) {\n  highlighter_style_3_inherits(HighlighterStyle3, _HighlighterStyle);\n\n  var _super = highlighter_style_3_createSuper(HighlighterStyle3);\n\n  function HighlighterStyle3(sku, scene, width, height) {\n    highlighter_style_3_classCallCheck(this, HighlighterStyle3);\n\n    var patternDefaultTextures = {\n      matte: highlighter_invtriangle1\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var PatternFactory = new HighlighterPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, highlighter_style_3_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return highlighter_style_3_createClass(HighlighterStyle3);\n}(HighlighterStyle);\n;// CONCATENATED MODULE: ./src/assets/highlighter_invtriangle2.png\n/* harmony default export */ const highlighter_invtriangle2 = (__webpack_require__.p + "assets/models/6f172e15e154b85f21d3cbb11c43ee95.png");\n;// CONCATENATED MODULE: ./src/js/highlighter-style /highlighter_style_4.js\nfunction highlighter_style_4_typeof(obj) { "@babel/helpers - typeof"; return highlighter_style_4_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, highlighter_style_4_typeof(obj); }\n\nfunction highlighter_style_4_toConsumableArray(arr) { return highlighter_style_4_arrayWithoutHoles(arr) || highlighter_style_4_iterableToArray(arr) || highlighter_style_4_unsupportedIterableToArray(arr) || highlighter_style_4_nonIterableSpread(); }\n\nfunction highlighter_style_4_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction highlighter_style_4_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return highlighter_style_4_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return highlighter_style_4_arrayLikeToArray(o, minLen); }\n\nfunction highlighter_style_4_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction highlighter_style_4_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return highlighter_style_4_arrayLikeToArray(arr); }\n\nfunction highlighter_style_4_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction highlighter_style_4_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction highlighter_style_4_createClass(Constructor, protoProps, staticProps) { if (protoProps) highlighter_style_4_defineProperties(Constructor.prototype, protoProps); if (staticProps) highlighter_style_4_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction highlighter_style_4_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction highlighter_style_4_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) highlighter_style_4_setPrototypeOf(subClass, superClass); }\n\nfunction highlighter_style_4_setPrototypeOf(o, p) { highlighter_style_4_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return highlighter_style_4_setPrototypeOf(o, p); }\n\nfunction highlighter_style_4_createSuper(Derived) { var hasNativeReflectConstruct = highlighter_style_4_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = highlighter_style_4_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = highlighter_style_4_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return highlighter_style_4_possibleConstructorReturn(this, result); }; }\n\nfunction highlighter_style_4_possibleConstructorReturn(self, call) { if (call && (highlighter_style_4_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return highlighter_style_4_assertThisInitialized(self); }\n\nfunction highlighter_style_4_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction highlighter_style_4_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction highlighter_style_4_getPrototypeOf(o) { highlighter_style_4_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return highlighter_style_4_getPrototypeOf(o); }\n\n\n\n\nvar HighlighterStyle4 = /*#__PURE__*/function (_HighlighterStyle) {\n  highlighter_style_4_inherits(HighlighterStyle4, _HighlighterStyle);\n\n  var _super = highlighter_style_4_createSuper(HighlighterStyle4);\n\n  function HighlighterStyle4(sku, scene, width, height) {\n    highlighter_style_4_classCallCheck(this, HighlighterStyle4);\n\n    var patternDefaultTextures = {\n      matte: highlighter_invtriangle2\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var PatternFactory = new HighlighterPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, highlighter_style_4_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return highlighter_style_4_createClass(HighlighterStyle4);\n}(HighlighterStyle);\n;// CONCATENATED MODULE: ./src/assets/highlighter_oblong1.png\n/* harmony default export */ const highlighter_oblong1 = (__webpack_require__.p + "assets/models/fe727cc25b8667e1e1b77c2207f4395a.png");\n;// CONCATENATED MODULE: ./src/js/highlighter-style /highlighter_style_5.js\nfunction highlighter_style_5_typeof(obj) { "@babel/helpers - typeof"; return highlighter_style_5_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, highlighter_style_5_typeof(obj); }\n\nfunction highlighter_style_5_toConsumableArray(arr) { return highlighter_style_5_arrayWithoutHoles(arr) || highlighter_style_5_iterableToArray(arr) || highlighter_style_5_unsupportedIterableToArray(arr) || highlighter_style_5_nonIterableSpread(); }\n\nfunction highlighter_style_5_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction highlighter_style_5_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return highlighter_style_5_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return highlighter_style_5_arrayLikeToArray(o, minLen); }\n\nfunction highlighter_style_5_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction highlighter_style_5_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return highlighter_style_5_arrayLikeToArray(arr); }\n\nfunction highlighter_style_5_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction highlighter_style_5_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction highlighter_style_5_createClass(Constructor, protoProps, staticProps) { if (protoProps) highlighter_style_5_defineProperties(Constructor.prototype, protoProps); if (staticProps) highlighter_style_5_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction highlighter_style_5_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction highlighter_style_5_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) highlighter_style_5_setPrototypeOf(subClass, superClass); }\n\nfunction highlighter_style_5_setPrototypeOf(o, p) { highlighter_style_5_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return highlighter_style_5_setPrototypeOf(o, p); }\n\nfunction highlighter_style_5_createSuper(Derived) { var hasNativeReflectConstruct = highlighter_style_5_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = highlighter_style_5_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = highlighter_style_5_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return highlighter_style_5_possibleConstructorReturn(this, result); }; }\n\nfunction highlighter_style_5_possibleConstructorReturn(self, call) { if (call && (highlighter_style_5_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return highlighter_style_5_assertThisInitialized(self); }\n\nfunction highlighter_style_5_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction highlighter_style_5_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction highlighter_style_5_getPrototypeOf(o) { highlighter_style_5_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return highlighter_style_5_getPrototypeOf(o); }\n\n\n\n\nvar HighlighterStyle5 = /*#__PURE__*/function (_HighlighterStyle) {\n  highlighter_style_5_inherits(HighlighterStyle5, _HighlighterStyle);\n\n  var _super = highlighter_style_5_createSuper(HighlighterStyle5);\n\n  function HighlighterStyle5(sku, scene, width, height) {\n    highlighter_style_5_classCallCheck(this, HighlighterStyle5);\n\n    var patternDefaultTextures = {\n      matte: highlighter_oblong1\n    };\n    var materialsArray = [];\n\n    for (var i = 0; i < sku.attributes.length; i++) {\n      var PatternFactory = new HighlighterPatternFactory();\n      var pattern = PatternFactory.createPattern(sku.attributes[i], patternDefaultTextures[sku.attributes[i].name.toLowerCase()] //need to change with link data\n      );\n      materialsArray.push.apply(materialsArray, highlighter_style_5_toConsumableArray(pattern.getMaterials()));\n    }\n\n    return _super.call(this, sku, scene, width, height, materialsArray);\n  }\n\n  return highlighter_style_5_createClass(HighlighterStyle5);\n}(HighlighterStyle);\n;// CONCATENATED MODULE: ./src/js/highlighter-style /highlighter_style_factory.js\nfunction highlighter_style_factory_typeof(obj) { "@babel/helpers - typeof"; return highlighter_style_factory_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, highlighter_style_factory_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction highlighter_style_factory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction highlighter_style_factory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction highlighter_style_factory_createClass(Constructor, protoProps, staticProps) { if (protoProps) highlighter_style_factory_defineProperties(Constructor.prototype, protoProps); if (staticProps) highlighter_style_factory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction highlighter_style_factory_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) highlighter_style_factory_setPrototypeOf(subClass, superClass); }\n\nfunction highlighter_style_factory_setPrototypeOf(o, p) { highlighter_style_factory_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return highlighter_style_factory_setPrototypeOf(o, p); }\n\nfunction highlighter_style_factory_createSuper(Derived) { var hasNativeReflectConstruct = highlighter_style_factory_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = highlighter_style_factory_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = highlighter_style_factory_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return highlighter_style_factory_possibleConstructorReturn(this, result); }; }\n\nfunction highlighter_style_factory_possibleConstructorReturn(self, call) { if (call && (highlighter_style_factory_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return highlighter_style_factory_assertThisInitialized(self); }\n\nfunction highlighter_style_factory_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction highlighter_style_factory_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction highlighter_style_factory_getPrototypeOf(o) { highlighter_style_factory_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return highlighter_style_factory_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\nvar HighlighterStyleFactory = /*#__PURE__*/function (_StyleFactory) {\n  highlighter_style_factory_inherits(HighlighterStyleFactory, _StyleFactory);\n\n  var _super = highlighter_style_factory_createSuper(HighlighterStyleFactory);\n\n  function HighlighterStyleFactory() {\n    var _this;\n\n    highlighter_style_factory_classCallCheck(this, HighlighterStyleFactory);\n\n    _this = _super.call(this);\n    _this.highlighterStyles = {\n      heartface1: HighlighterStyle1,\n      heartface2: HighlighterStyle2,\n      invtriangle1: HighlighterStyle3,\n      invtriangle2: HighlighterStyle4,\n      oblong1: HighlighterStyle5\n    };\n    return _this;\n  }\n\n  highlighter_style_factory_createClass(HighlighterStyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      var styleType = apiResponseData.sku.styleVariant;\n      var StyleClass = this.highlighterStyles[styleType.toLowerCase()];\n\n      if (!StyleClass) {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n        throw new Error("Unsupported highlighter style");\n      }\n\n      return new StyleClass(apiResponseData.sku, scene, width, height);\n    }\n  }]);\n\n  return HighlighterStyleFactory;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/js/three_components/scene_manager.js\nfunction scene_manager_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction scene_manager_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? scene_manager_ownKeys(Object(source), !0).forEach(function (key) { scene_manager_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : scene_manager_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction scene_manager_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\nfunction scene_manager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction scene_manager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction scene_manager_createClass(Constructor, protoProps, staticProps) { if (protoProps) scene_manager_defineProperties(Constructor.prototype, protoProps); if (staticProps) scene_manager_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar cameraDistance = function cameraDistance(height, fov) {\n  return height / 2 / Math.tan(fov / 2 * Math.PI / 180);\n};\n\nvar response = null; // const directionalLight = new THREE.DirectionalLight(0xffffe0, 2);\n// const ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n\nvar currentStyle = null;\nvar SceneManager = /*#__PURE__*/function () {\n  function SceneManager(canvas) {\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var useOrtho = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    scene_manager_classCallCheck(this, SceneManager);\n\n    this.canvas = canvas;\n    this.scene = new three_module/* Scene */.xsS();\n    this.ambientLight;\n    this.directionalLight; //0xfdf3c6\n\n    this.ambientLight = new three_module/* AmbientLight */.Mig(0xffffff, 0.7);\n    this.ambientLight.castShadow = false;\n    this.scene.add(this.ambientLight);\n    this.directionalLight = new three_module/* DirectionalLight */.Ox3(0xffffff, 1);\n    this.directionalLight.position.set(0, 5, 500);\n    this.directionalLight.castShadow = false;\n    this.scene.add(this.directionalLight);\n    this.scene.fog = null;\n    this.debug = debug;\n    this.useOrtho = useOrtho;\n    this.renderer = new three_module/* WebGLRenderer */.CP7({\n      canvas: this.canvas,\n      devicePixelRation: window.devicePixelRatio || 1,\n      antialias: true,\n      // antialiasSampleCount: 8,\n      preserveDrawingBuffer: true\n    });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setClearColor(0xfefefe);\n    this.renderer.shadowMap.enabled = false; // this.renderer.toneMapping = THREE.ACESFilmicToneMapping;\n    //this.renderer.toneMapping = THREE.ACESFilmicToneMapping;\n\n    var environment = new RoomEnvironment/* RoomEnvironment */.C(this.renderer);\n    var pmremGenerator = new three_module/* PMREMGenerator */.anP(this.renderer);\n    this.scene.environment = pmremGenerator.fromScene(environment, 10, 0, 2000).texture;\n    this.CurrentTryon = "";\n    this.fov = 63;\n    this.videoBg = null;\n    this.styles = [];\n    this.factories = [];\n    this.modelsData = [];\n    this.lastLandmarks;\n    this.lastOGFaceLandmarks;\n    this.lastHairMask;\n    this.lastNailMask;\n    this.lastImageFrame;\n    this.buildCamera();\n    this.buildControls();\n    this.buildVideoBg();\n    this.isVideo = true;\n    this.trueVideoWidth = 640;\n    this.trueVideoHeight = 480;\n    this.calculatedWidth = 640;\n    this.calculatedHeight = 480;\n    this.calculatedOffset = 0;\n    this.cameraZoom = 1;\n    this.cameraZoomFactor = 0.1;\n    this.cameraZoomMax = 1.3;\n    this.modelsMap = {};\n  }\n\n  scene_manager_createClass(SceneManager, [{\n    key: "takeScreenShot",\n    value: function takeScreenShot() {\n      // console.log("take shot being taken");\n      this.renderer.render(this.scene, this.camera);\n      var screenshotDataURL = this.renderer.domElement.toDataURL("image/jpeg");\n      return screenshotDataURL;\n    }\n  }, {\n    key: "setAPIResponse",\n    value: function setAPIResponse(apiResponse) {\n      response = apiResponse;\n\n      if (response && response.sku.subCategory) {\n        var categoryName = response.sku.subCategory.toLowerCase();\n        this.buildStyles(categoryName.toLowerCase());\n      } else {\n        // showSnackbar().then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel();\n        (0,utils_event/* emitModuleClosed */.KQ)();\n      }\n    }\n  }, {\n    key: "setModelAPIResponse",\n    value: function setModelAPIResponse(apiResponse) {\n      response = apiResponse;\n\n      if (response && response.length > 0) {\n        this.buildModels(response);\n      } else {}\n    }\n  }, {\n    key: "mapConfigData",\n    value: function mapConfigData(apiResponse) {}\n  }, {\n    key: "buildVideoBg",\n    value: function buildVideoBg() {\n      this.videoBg = new VideoBackground(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2);\n    }\n  }, {\n    key: "buildControls",\n    value: function buildControls() {\n      if (this.debug) {\n        this.controls = new OrbitControls/* OrbitControls */.z(this.camera, this.renderer.domElement);\n        this.controls.enableDamping = true;\n        this.controls.update();\n      }\n    }\n  }, {\n    key: "buildCamera",\n    value: function buildCamera() {\n      this.useOrtho ? this.buildOrthoCamera() : this.buildPerspectiveCamera();\n    }\n  }, {\n    key: "buildOrthoCamera",\n    value: function buildOrthoCamera() {\n      var aspect = window.innerWidth / window.innerHeight;\n      this.camera = new three_module/* OrthographicCamera */.iKG(1 * aspect / -2, 1 * aspect / 2, 1 / 2, 1 / -2, -2000, 2000);\n      this.camera.position.z = 1;\n    }\n  }, {\n    key: "buildPerspectiveCamera",\n    value: function buildPerspectiveCamera() {\n      this.camera = new three_module/* PerspectiveCamera */.cPb(this.fov, this.renderer.domElement.width / this.renderer.domElement.height, 1.0, // near\n      10000 // far\n      );\n      this.camera.position.z = cameraDistance(this.renderer.domElement.height, this.fov);\n    }\n  }, {\n    key: "buildStyles",\n    value: function buildStyles(styleFactory) {\n      if (currentStyle && styleFactory !== CategoryFactories.nailcolor) currentStyle.removeFaces();\n\n      if (styleFactory === CategoryFactories.faceanalysis) {\n        currentStyle = null;\n        this.styles = [];\n      } // console.log("Build style " + styleFactory);\n\n\n      if (styleFactory === CategoryFactories.lips) {\n        var lipsStyleFactory = new LipsStyleFactory();\n        this.styles.push(currentStyle = lipsStyleFactory.createStyle(response, this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2));\n      } else if (styleFactory === CategoryFactories.blush) {\n        var blushStyleFactory = new BlushStyleFactory();\n        this.styles.push(currentStyle = blushStyleFactory.createStyle(response, this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2));\n      } else if (styleFactory === CategoryFactories.eyeshadow) {\n        var eyeShadowStyleFactory = new EyeShadowStyleFactory();\n        this.styles.push(currentStyle = eyeShadowStyleFactory.createStyle(response, this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2));\n      } else if (styleFactory === CategoryFactories.eyeliner) {\n        var eyeLinerStyleFactory = new EyeLinerStyleFactory();\n        this.styles.push(currentStyle = eyeLinerStyleFactory.createStyle(response, this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2));\n      } else if (styleFactory === CategoryFactories.lipliner) {\n        var StyleFactory = new LiplinerStyleFactory();\n        this.styles.push(currentStyle = StyleFactory.createStyle(response, this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2));\n      } else if (styleFactory === CategoryFactories.masacara) {\n        var _styleFactory = new MasacaraStyleFactory();\n\n        this.styles.push(currentStyle = _styleFactory.createStyle(response, this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2));\n      } else if (styleFactory === CategoryFactories.hair) {\n        var hairStyleFactory = new HairStyleFactory();\n        this.styles.push(currentStyle = hairStyleFactory.createStyle(response, this.scene, this.calculatedWidth, this.calculatedHeight));\n      } else if (styleFactory === CategoryFactories.nailcolor) {\n        var _currentStyle;\n\n        var naildata; // console.log("current style", currentStyle);\n\n        if (currentStyle && currentStyle.isNailStyleFactoryInstance === true) {\n          // console.log("current style is nail", currentStyle);\n          naildata = currentStyle.getNailData();\n        }\n\n        (_currentStyle = currentStyle) === null || _currentStyle === void 0 ? void 0 : _currentStyle.removeFaces();\n        var nailStyleFactory = new NailStyleFactory();\n        this.styles.push(currentStyle = nailStyleFactory.createStyle(response, this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2));\n\n        if (naildata) {\n          currentStyle.setNailData(naildata);\n          currentStyle.addrendring();\n          if (this.isVideo) currentStyle.updateDimensions(this.calculatedWidth, this.calculatedHeight, this.calculatedOffset);else {\n            currentStyle.updateDimensions(this.videoWidth, this.videoHeight, 1);\n          }\n          currentStyle.update();\n        } // naildata.this.onHandsLandmarks(\n        //   this.lastImageFrame,\n        //   naildata.maskData,\n        //   false\n        // );\n\n      } else if (styleFactory === CategoryFactories.eyebrows) {\n        var _StyleFactory = new EyebrowsStyleFactory();\n\n        this.styles.push(currentStyle = _StyleFactory.createStyle(response, this.scene, this.calculatedWidth, this.calculatedHeight));\n      } else if (styleFactory === CategoryFactories.eyelashes) {\n        var _StyleFactory2 = new EyelashesStyleFactory();\n\n        this.styles.push(currentStyle = _StyleFactory2.createStyle(response, this.scene, this.calculatedWidth, this.calculatedHeight));\n      } else if (styleFactory === CategoryFactories.foundation) {\n        var _StyleFactory3 = new FoundationStyleFactory();\n\n        this.styles.push(currentStyle = _StyleFactory3.createStyle(response, this.scene, this.calculatedWidth, this.calculatedHeight));\n      } else if (styleFactory === CategoryFactories.highlighter) {\n        var _StyleFactory4 = new HighlighterStyleFactory();\n\n        this.styles.push(currentStyle = _StyleFactory4.createStyle(response, this.scene, this.calculatedWidth, this.calculatedHeight));\n      } else if (styleFactory === CategoryFactories.faceanalysis) {} // this.styles.forEach((style) => {\n      //   if (style === currentStyle) {\n      //     style.updateDimensions(this.videoWidth, this.videoHeight);\n      //   }\n      // });\n\n\n      if (!this.isVideo) {\n        if (styleFactory === CategoryFactories.hair) {\n          this.onHairSegment(this.lastImageFrame, this.lastHairMask, false);\n        } else if (styleFactory === CategoryFactories.nailcolor) {} else {\n          this.onLandmarks(null, this.lastLandmarks, this.lastOGFaceLandmarks, this.isVideo);\n        }\n\n        this.setImageTryonSettings(this.videoWidth, this.videoHeight);\n      }\n\n      (0,utils_event/* emitSKUApplied */.C7)();\n    } // checkClassFactoryExists(ref) {\n    //   if (this.factories) console.log(this.styles, "||", ref);\n    //   return this.factories.some((style) => style instanceof ref);\n    // }\n    // getClassFactory(ref) {\n    //   return this.factories.find((style) => style instanceof ref);\n    // }\n\n  }, {\n    key: "buildModels",\n    value: function buildModels(_models) {\n      var _this = this;\n\n      _models.forEach(function (modelElements, idx) {\n        // const modelType = element.items.modelType;\n        _this.modelsMap[CategoriesTypes[idx].categoryKey] = modelElements.items;\n        var modelAssets = modelElements.items;\n        modelAssets.forEach(function (itemsElements) {\n          var provider = new modelDataProvider(itemsElements);\n\n          _this.modelsData.push(scene_manager_objectSpread(scene_manager_objectSpread({}, provider), {}, {\n            categoryType: CategoriesTypes[idx].categoryKey\n          }));\n        });\n      });\n    }\n  }, {\n    key: "getModelData",\n    value: function getModelData() {\n      return this.modelsData.filter(function (model) {\n        return model.categoryType === (0,globalVariables/* getCategory */.n3)();\n      });\n    }\n  }, {\n    key: "getModelsByCategoriesType",\n    value: function getModelsByCategoriesType(categoryType) {\n      return this.modelsMap[categoryType];\n    } // Function to get the aspect ratio as a fraction\n\n  }, {\n    key: "updateCamera",\n    value: function updateCamera() {\n      var aspect = window.innerWidth / window.innerHeight;\n      var width, height;\n      var scale;\n      if (this.trueVideoHeight < this.trueVideoWidth) scale = this.trueVideoHeight;else scale = this.trueVideoWidth;\n\n      if (window.innerWidth > window.innerHeight) {\n        width = scale / 2;\n        height = scale / aspect / 2;\n      } else {\n        width = scale * aspect / 2;\n        height = scale / 2;\n      } // Orthographic\'s way\n\n\n      this.camera.right = width;\n      this.camera.left = -width;\n      this.camera.top = height;\n      this.camera.bottom = -height;\n    }\n  }, {\n    key: "updateCameraZoom",\n    value: function updateCameraZoom(state) {\n      var video = getVideo();\n      var img = sdkEngine_getInputImage();\n      var isVideoMode = getIsVideo();\n\n      var _getHtmlElements = getHtmlElemets_getHtmlElements(),\n          canvas = _getHtmlElements.canvas;\n\n      if (state === "up") {\n        var _ref;\n\n        var currenZoom = this.cameraZoom;\n        var total = parseFloat((_ref = currenZoom + this.cameraZoomFactor) === null || _ref === void 0 ? void 0 : _ref.toPrecision(2));\n\n        if (total <= this.cameraZoomMax) {\n          enableSettingIcon("zoomOut");\n\n          if (total === this.cameraZoomMax) {\n            disableSettingIcon("zoomIn");\n          }\n\n          if (isVideoMode) {\n            video.style.transform = "scale(".concat(total, ")");\n            canvas.style.transform = "scaleX(-1) scale(".concat(total, ")");\n            this.cameraZoom = total;\n          } else {\n            img.style.transform = "scale(".concat(total, ")");\n            canvas.style.transform = "scaleX(1) scale(".concat(total, ")");\n            this.cameraZoom = total;\n          }\n        } else {\n          disableSettingIcon("zoomIn");\n        }\n      } else if (state === "down") {\n        var _ref2;\n\n        var _currenZoom = this.cameraZoom;\n\n        var _total = parseFloat((_ref2 = _currenZoom - this.cameraZoomFactor) === null || _ref2 === void 0 ? void 0 : _ref2.toPrecision(2));\n\n        if (_total >= 1) {\n          enableSettingIcon("zoomIn");\n\n          if (_total === 1) {\n            disableSettingIcon("zoomOut");\n          }\n\n          if (isVideoMode) {\n            video.style.transform = "scale(".concat(_total, ")");\n            canvas.style.transform = "scaleX(-1) scale(".concat(_total, ")");\n            this.cameraZoom = _total;\n          } else {\n            img.style.transform = "scale(".concat(_total, ")");\n            canvas.style.transform = "scaleX(1) scale(".concat(_total, ")");\n            this.cameraZoom = _total;\n          }\n        } else {\n          disableSettingIcon("zoomOut");\n        }\n      }\n    }\n  }, {\n    key: "resetZoomChanges",\n    value: function resetZoomChanges() {\n      this.camera.zoom = 1;\n      this.cameraZoom = this.camera.zoom;\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: "updateCameraForImage",\n    value: function updateCameraForImage() {\n      if (!this.videoWidth || !this.videoHeight) return;\n      this.camera.aspect = this.videoWidth / this.videoHeight;\n\n      if (this.camera.type === "OrthographicCamera") {\n        this.camera.top = this.videoHeight / 2;\n        this.camera.bottom = -this.videoHeight / 2;\n        this.camera.left = -this.videoWidth / 2;\n        this.camera.right = this.videoWidth / 2;\n      } else {\n        this.camera.position.z = cameraDistance(this.videoHeight, this.fov);\n      } // this.camera.updateProjectionMatrix();\n\n    }\n  }, {\n    key: "animate",\n    value: function animate(isVideo) {\n      this.isVideo = isVideo;\n      if (!isVideo) this.updateCameraForImage();\n\n      if (this.scene && this.camera) {\n        this.renderer.render(this.scene, this.camera);\n      }\n\n      if (this.controls) {\n        this.controls.update();\n      }\n    }\n  }, {\n    key: "Clear",\n    value: function Clear() {\n      if (currentStyle) currentStyle.removeFaces();\n      currentStyle = null;\n      this.styles = [];\n    }\n  }, {\n    key: "forceUpdateCurrentStyle",\n    value: function forceUpdateCurrentStyle() {\n      if (currentStyle) currentStyle.update();\n    }\n  }, {\n    key: "createNewPlane",\n    value: function createNewPlane(video) {\n      this.videoBg.createNewPlane(video);\n      this.videoBg.update();\n    }\n  }, {\n    key: "updatePlaneWithImage",\n    value: function updatePlaneWithImage(texture) {\n      this.videoBg.updatePlaneWithImage(texture);\n      this.videoBg.updateDimensions(this.videoWidth, this.videoHeight);\n      if (this.scene && this.camera) this.camera.updateProjectionMatrix();\n      this.renderer.render(this.scene, this.camera);\n    }\n  }, {\n    key: "resize",\n    value: function resize(videoWidth, videoHeight) {\n      this.videoWidth = videoWidth;\n      this.videoHeight = videoHeight;\n    }\n  }, {\n    key: "onLandmarks",\n    value: function onLandmarks(image, landmarks, ogLandmarks, isvideo) {\n      var _this2 = this;\n\n      this.isVideo = isvideo;\n\n      if (landmarks) {\n        // this.videoBg.setImage(image, true, isvideo);\n        //this.videoBg.setImage(image, isvideo);\n        // this.videoBg.update();\n        this.lastLandmarks = landmarks;\n        this.lastOGFaceLandmarks = ogLandmarks;\n        this.styles.forEach(function (style) {\n          if (style === currentStyle) {\n            style.updateLandmarks(landmarks, ogLandmarks);\n            style.setVisibility(true);\n            if (isvideo) style.updateDimensions(_this2.calculatedWidth, _this2.calculatedHeight);else style.updateDimensions(_this2.videoWidth, _this2.videoHeight);\n            style.update();\n          }\n        });\n        hideAlignMessagePanel(); // this.postest.updateLandmarks(landmarks);\n      } else {\n        //if (image) this.videoBg.setImage(image, isvideo);\n        this.styles.forEach(function (style) {\n          if (style === currentStyle) {\n            style.setVisibility(false);\n          }\n        });\n\n        if (isvideo) {\n          updateAlignUI("face", globalVariables/* errorMessages */.Qj.invisbileLiveFace);\n          showAlignMessagePanel();\n          (0,utils_event/* emitError */.hd)(globalVariables/* errorMessages */.Qj.invisbileLiveFace);\n        } else {\n          updateAlignUI("face", globalVariables/* errorMessages */.Qj.invalidFaceUpload);\n          showAlignMessagePanel();\n          (0,utils_event/* emitError */.hd)(globalVariables/* errorMessages */.Qj.invalidFaceUpload);\n        }\n      }\n    }\n  }, {\n    key: "onImageFrame",\n    value: function onImageFrame(image, isvideo) {\n      if (image) {\n        // console.log("onImageFrame called");\n        if (currentStyle) currentStyle.removeFaces();\n        this.videoBg.setImage(image, isvideo);\n      }\n    }\n  }, {\n    key: "onMaskFrame",\n    value: function onMaskFrame(image, maskData, isvideo) {\n      if (maskData) {\n        // console.log("onMaskFrame called");\n        if (currentStyle) currentStyle.removeFaces(); // this.videoBg.setImage(image, isvideo);\n        // console.log("inside onMaskFrame ::",currentStyle);\n\n        this.styles.forEach(function (style) {\n          if (style === currentStyle) {\n            style.updateMask(image, maskData);\n            style.update();\n          }\n        });\n      }\n    }\n  }, {\n    key: "onHairSegment",\n    value: function onHairSegment(image, maskData, isvideo) {\n      var _this3 = this;\n\n      this.isVideo = isvideo;\n\n      if (maskData) {\n        // this.videoBg.setImage(image, true, isvideo);\n        if (maskData) {\n          this.lastHairMask = maskData;\n          this.lastImageFrame = image; // console.log("lasihbflhlshglahglhasldgha");\n\n          this.styles.forEach(function (style) {\n            if (style === currentStyle) {\n              style.updateMask(image, maskData, isvideo);\n              style.setVisibility(true);\n              if (isvideo) style.updateDimensions(_this3.calculatedWidth, _this3.calculatedHeight);else style.updateDimensions(_this3.videoWidth, _this3.videoHeight);\n              style.update();\n            }\n          });\n          hideAlignMessagePanel();\n        } else {\n          this.styles.forEach(function (style) {\n            if (style === currentStyle) {\n              style.setVisibility(false);\n            }\n          });\n\n          if (isvideo) {\n            updateAlignUI("face", globalVariables/* errorMessages */.Qj.invisbileLiveFace);\n            showAlignMessagePanel();\n            (0,utils_event/* emitError */.hd)(globalVariables/* errorMessages */.Qj.invisbileLiveFace);\n          } else {\n            updateAlignUI("face", globalVariables/* errorMessages */.Qj.invalidFaceUpload);\n            showAlignMessagePanel();\n            (0,utils_event/* emitError */.hd)(globalVariables/* errorMessages */.Qj.invalidFaceUpload);\n          }\n        }\n      }\n    }\n  }, {\n    key: "onHandsLandmarks",\n    value: function onHandsLandmarks(image, landmarks, isVideo, maskData, x_cord, y_cord, x2_cord, y2_cord, angle) {\n      var _this4 = this;\n\n      this.isVideo = isVideo;\n\n      if (landmarks && maskData) {\n        this.lastNailMask = maskData;\n        this.lastImageFrame = image;\n        hideAlignMessagePanel();\n        this.styles.forEach(function (style) {\n          if (style === currentStyle) {\n            //  console.log("inside onMaskFrame match angle 413::", angle);\n            style.updateMask(image, maskData, x_cord, y_cord, x2_cord, y2_cord, angle, _this4.isVideo);\n            if (isVideo) style.updateDimensions(_this4.calculatedWidth, _this4.calculatedHeight, _this4.calculatedOffset);else {\n              style.updateDimensions(_this4.videoWidth, _this4.videoHeight, 1);\n            }\n            style.update();\n          }\n        });\n      }\n    }\n  }, {\n    key: "downloadSnap",\n    value: function downloadSnap() {\n      if (currentStyle) {\n        // console.log("removeFaces called");\n        currentStyle.downloadSnap();\n      }\n    }\n  }, {\n    key: "resetHandLandmark",\n    value: function resetHandLandmark() {\n      if (currentStyle) {\n        // console.log("resetHandLandmark called");\n        currentStyle.removeFaces();\n      }\n    }\n  }, {\n    key: "resetNailData",\n    value: function resetNailData() {\n      try {\n        if (currentStyle && typeof currentStyle.clearNailData === "function") {\n          currentStyle.clearNailData();\n        }\n      } catch (error) {}\n    }\n  }, {\n    key: "setImageTryonSettings",\n    value: function setImageTryonSettings(width, height) {\n      this.videoWidth = width;\n      this.videoHeight = height;\n      this.calculatedWidth = width;\n      this.calculatedHeight = width;\n      this.styles.forEach(function (style) {\n        if (style === currentStyle) {\n          style.updateDimensions(width, height);\n        }\n      });\n      this.updateCameraForImage();\n      this.renderer.setSize(width, height);\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: "clearSceneCanvas",\n    value: function clearSceneCanvas() {\n      this.videoBg.removePlaneFromScene();\n    }\n  }, {\n    key: "setVideoTryonSettings",\n    value: function setVideoTryonSettings(width, height) {\n      var _this5 = this;\n\n      this.trueVideoWidth = width;\n      this.trueVideoHeight = height;\n      this.videoWidth = window.innerWidth;\n      this.videoHeight = window.innerHeight;\n      this.updateCamera();\n      this.calculatedVidoeDimensions();\n      this.styles.forEach(function (style) {\n        if (style === currentStyle) {\n          style.updateDimensions(_this5.calculatedWidth, _this5.calculatedHeight);\n        }\n      });\n      this.camera.updateProjectionMatrix();\n      this.videoBg.update(this.calculatedWidth, this.calculatedHeight);\n      this.renderer.setSize(window.innerWidth, window.innerHeight, true);\n    }\n  }, {\n    key: "changeFaceTexture",\n    value: function changeFaceTexture(textureName) {\n      this.faceMask.changeTexture(textureName);\n    }\n  }, {\n    key: "changeTextureColor",\n    value: function changeTextureColor(color) {\n      this.faceMask.changeTextureColor(color);\n    }\n  }, {\n    key: "resizeCamera",\n    value: function resizeCamera() {\n      var _this6 = this;\n\n      if (this.isVideo || this.video && response.sku.subCategory.toLowerCase() === CategoryFactories.nailcolor) {\n        this.videoWidth = window.innerWidth;\n        this.videoHeight = window.innerHeight;\n        this.updateCamera();\n        this.calculatedVidoeDimensions();\n        this.styles.forEach(function (style) {\n          if (style === currentStyle) {\n            style.updateDimensions(_this6.calculatedWidth, _this6.calculatedHeight, _this6.calculatedOffset);\n            style.updateTransforms();\n          }\n        });\n        this.camera.updateProjectionMatrix();\n        this.videoBg.update(this.calculatedWidth, this.calculatedHeight);\n        this.renderer.setSize(window.innerWidth, window.innerHeight, true);\n      }\n    }\n  }, {\n    key: "calculatedVidoeDimensions",\n    value: function calculatedVidoeDimensions() {\n      //let { log } = getHtmlElements();\n      //this.log = log;\n      var windowAspect;\n      var mql = window.matchMedia("(orientation: portrait)");\n      var cw = this.trueVideoWidth;\n      var ch = this.trueVideoHeight;\n      var videoAspect;\n\n      if (mql.matches && (0,globalVariables/* isMobileDevice */.s2)()) {\n        windowAspect = window.innerHeight / window.innerWidth;\n        videoAspect = ch / cw;\n      } else {\n        windowAspect = window.innerWidth / window.innerHeight;\n        videoAspect = cw / ch;\n      } // videoAspect = ch / cw;\n\n\n      var offset = 1;\n      var diff = 0;\n\n      if (mql.matches && (0,globalVariables/* isMobileDevice */.s2)()) {\n        offset = videoAspect;\n\n        if (videoAspect > windowAspect) {\n          offset = windowAspect;\n        }\n      } else {\n        if (windowAspect < videoAspect) {\n          diff = videoAspect - windowAspect;\n          offset = videoAspect - diff;\n          if (windowAspect < 1) offset = 1;\n        } else {\n          offset = videoAspect;\n        }\n      } // this.log.innerHTML = `v30+${windowAspect} + ${videoAspect} + ${offset}\n      // + ${this.trueVideoWidth}+ ${this.trueVideoHeight} +${window.innerWidth}+${\n      //   window.innerHeight\n      // }\n      // +${mql.matches}+${diff}+${isMobileDevice()}`;\n\n\n      this.calculatedWidth = cw / offset;\n      this.calculatedHeight = ch / offset;\n      this.calculatedOffset = offset;\n    }\n  }]);\n\n  return SceneManager;\n}();\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(9669);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n// EXTERNAL MODULE: ./src/constants/authConstants.js\nvar authConstants = __webpack_require__(4735);\n// EXTERNAL MODULE: ./src/apiService/interceptors/index.js\nvar interceptors = __webpack_require__(375);\n;// CONCATENATED MODULE: ./src/apiService/api.js\n\n\n\n\n\nvar API = axios_default().create({\n  baseURL: "".concat(env/* default */.Z.HIDAN_MAIN_URL),\n  headers: {\n    "Content-Type": "application/json" // Source: "web",\n\n  }\n});\nfunction updateAPIURL() {\n  API.defaults.baseURL = "".concat(env/* default */.Z.HIDAN_MAIN_URL);\n  setAuthorization();\n}\nAPI.interceptors.request.use((0,interceptors/* addSignatureFn */.p)({}));\nAPI.defaults.withCredentials = true;\nvar setAuthorization = function setAuthorization() {\n  if ((0,globalVariables/* getPlatformMode */.TM)() === "platform") {\n    //API.defaults.headers["Authorization"] = `Bearer ${getAPIKey()}`;\n    API.defaults.headers["Authorization"] = "Bearer ODkzZmU1ZGItZDg5ZS00Yzc3LTk2NjktYTM2OTZhZjRlNGVi";\n  } else {\n    API.defaults.headers["Authorization"] = "Bearer ".concat(btoa((0,authConstants/* getAPIKey */.w)()));\n  }\n}; // export const getModuleConfig = () => {\n//   return API.get("/makeup/modelconfig/");\n// };\n\nvar getModuleConfig = function getModuleConfig(modelType) {\n  return API.get("/makeup/modelconfig/".concat(modelType));\n};\nvar getModelsConfig = function getModelsConfig(categoryType, subCategoryType, platformType) {\n  return API.get("/models?category=".concat(categoryType, "&subCategory=").concat(subCategoryType, "&platform=").concat(platformType)).then(function (response) {\n    return response;\n  })["catch"](function (error) {\n    // console.error("Error fetching SKU data:", error);\n    throw error;\n  });\n}; // export const sendMeta = (requestId, tryOnType) => {\n//   return API.post("/meta", null, {\n//     headers: {\n//       "x-request-id": requestId,\n//       "x-try-on-type": tryOnType,\n//     },\n//   }).catch();\n// };\n\nvar getSKUData = function getSKUData(id, apiKey) {\n  setAuthorization();\n  return API.get("/skus/".concat(id)) // return API.get(`/makeup/sku/2`)\n  .then(function (response) {\n    return response;\n  })["catch"](function (error) {\n    // console.error("Error fetching SKU data:", error);\n    throw error;\n  });\n};\n;// CONCATENATED MODULE: ./src/js/utils/assetsCache.js\nvar globalCache = {};\nfunction assetsCache_addToGlobalCache(key, value) {\n  if (!globalCache[key]) {\n    globalCache[key] = value; //console.log(`Added to cache: ${key}`);\n  } else {//console.log(`Key ${key} already exists in the cache.`);\n  }\n}\nfunction assetsCache_hasGlobalAssetKey(key) {\n  return !!globalCache[key];\n}\nfunction assetsCache_getGlobalCacheAsset(key) {\n  if (assetsCache_hasGlobalAssetKey(key)) {\n    //console.log(`Retrieved value for key ${key}`);\n    return globalCache[key];\n  } else {\n    //console.log(`Key ${key} does not exist in the cache.`);\n    return null;\n  }\n}\n;// CONCATENATED MODULE: ./src/htmlService/modelService.js\nfunction modelService_slicedToArray(arr, i) { return modelService_arrayWithHoles(arr) || modelService_iterableToArrayLimit(arr, i) || modelService_unsupportedIterableToArray(arr, i) || modelService_nonIterableRest(); }\n\nfunction modelService_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction modelService_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction modelService_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction modelService_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = modelService_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction modelService_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return modelService_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return modelService_arrayLikeToArray(o, minLen); }\n\nfunction modelService_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar models;\nvar isPortrait = false;\nvar modelsContainerDiv = null;\nvar modelsElementsList = [];\nvar modelsElementsSelectedList = [];\nvar modelsElementsDiv = (/* unused pure expression or super */ null && ([]));\nvar initModelContainer = function initModelContainer(container) {\n  modelsContainerDiv = container;\n};\nvar createModels = function createModels(modelsList, handler) {\n  var mql = window.matchMedia("(orientation: portrait)");\n  isPortrait = mql.matches;\n  modelsContainerDiv.innerHTML = "";\n  models = modelsList;\n\n  var _iterator = modelService_createForOfIteratorHelper(modelsList.entries()),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var _step$value = modelService_slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          value = _step$value[1];\n\n      var modelIconDiv = document.createElement("div");\n\n      if (isPortrait) {\n        modelIconDiv.style.width = "50px";\n        modelIconDiv.style.height = "65.5px";\n      } else {\n        modelIconDiv.style.width = "70px";\n        modelIconDiv.style.height = "92px";\n      }\n\n      modelsContainerDiv.appendChild(modelIconDiv);\n      var imgElement = document.createElement("img");\n      imgElement.id = "model" + index.toString();\n      imgElement.style.width = "100%";\n      imgElement.style.height = "100%";\n\n      if (hasGlobalAssetKey(value.imageUrl)) {\n        var cachedImgsrc = getGlobalCacheAsset(value.imageUrl);\n        imgElement.src = cachedImgsrc;\n      } else {\n        imgElement.src = value.imageUrl;\n        addToGlobalCache(value.imageUrl, imgElement.src); // document.body.appendChild(imgElement);\n      }\n\n      modelIconDiv.appendChild(imgElement);\n      var imgEyeElement = document.createElement("img");\n      imgEyeElement.style.position = "relative";\n      imgEyeElement.style.top = "-75%";\n      imgEyeElement.style.left = "25%";\n      imgEyeElement.style.width = "50%";\n      imgEyeElement.style.height = "50%";\n      imgEyeElement.src = modelSelectionIcons.selected;\n      modelIconDiv.appendChild(imgEyeElement);\n      imgEyeElement.style.display = "none";\n      imgElement.addEventListener("click", function () {\n        handleClickEvent(value, index, handler); //handler(value);\n      });\n      modelsElementsDiv.push(modelIconDiv);\n      modelsElementsList.push(imgElement);\n      modelsElementsSelectedList.push(imgEyeElement);\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n\nvar handleClickEvent = function handleClickEvent(value, index, handler) {\n  toggleModelsSelectedImage(index);\n  handler(value);\n};\n\nvar toggleModelsSelectedImage = function toggleModelsSelectedImage(index) {\n  //  console.log("index" + index);\n  modelsElementsSelectedList[index].style.display = "block";\n  modelsElementsList[index].style.filter = "brightness(0.5)";\n  models.forEach(function (each, idx) {\n    if (index !== idx) {\n      modelsElementsSelectedList[idx].style.display = "none";\n      modelsElementsList[idx].style.filter = "none";\n    }\n  });\n};\nvar modelService_setVisibilityOfModels = function setVisibilityOfModels(modelsList, type) {\n  for (var i = 0; i < modelsList.length; i++) {\n    if (modelsList[i].subCategory === type) {\n      //let model = document.getElementById(`model${i}`);\n      var model = modelsElementsDiv[i];\n      if (model) model.style.display = "block";\n    } else {\n      var _model = modelsElementsDiv[i]; //let model = document.getElementById(`model${i}`);\n\n      if (_model) _model.style.display = "none";\n    }\n  }\n};\nvar imageTrackingWithDefaultModel = function imageTrackingWithDefaultModel(modelsList, type) {\n  if (modelsList.length > 0) {\n    for (var i = 0; i < modelsList.length; i++) {\n      if (modelsList[i].subCategory === type) {\n        toggleModelsSelectedImage(i);\n        return modelsList[i].imageUrl;\n      }\n    }\n  }\n};\nvar showModelContainer = function showModelContainer() {\n  if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) return;\n  if (modelsContainerDiv) modelsContainerDiv.style.display = "flex";\n};\nvar hideModelContainer = function hideModelContainer() {\n  if (modelsContainerDiv) modelsContainerDiv.style.display = "none";\n};\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js\nvar es6_typed_uint8_clamped_array = __webpack_require__(2152);\n;// CONCATENATED MODULE: ./src/MLModels/selfie_multiclass_256x256.tflite\n/* harmony default export */ const selfie_multiclass_256x256_tflite = (__webpack_require__.p + "00b25639625ceb0685c9f8c3ac88966e.tflite");\n;// CONCATENATED MODULE: ./src/MLModels/hair_segmenter.tflite\n/* harmony default export */ const hair_segmenter_tflite = (__webpack_require__.p + "95a449a41c10025e50e2f22bc64aefe8.tflite");\n;// CONCATENATED MODULE: ./src/js/facemesh/hair_segment_provider.js\n\n\n\n\n\n\n\nfunction hair_segment_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction hair_segment_provider_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { hair_segment_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { hair_segment_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction hair_segment_provider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction hair_segment_provider_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction hair_segment_provider_createClass(Constructor, protoProps, staticProps) { if (protoProps) hair_segment_provider_defineProperties(Constructor.prototype, protoProps); if (staticProps) hair_segment_provider_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction hair_segment_provider_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = __webpack_require__(1811),\n    ImageSegmenter = _require.ImageSegmenter,\n    SegmentationMask = _require.SegmentationMask,\n    FilesetResolver = _require.FilesetResolver;\n\n\n\n\nvar legendColors = [[0, 0, 0, 0], // Vivid Yellow\n[0, 255, 0, 255], // Strong Purple\n[0, 0, 0, 0], // Vivid Orange\n[0, 0, 0, 0], // Very Light Blue\n[0, 0, 0, 0], // Vivid Red\n[0, 0, 0, 0] // Grayish Yellow\n];\nvar HairSegmentProvider = /*#__PURE__*/function () {\n  function HairSegmentProvider(callback) {\n    hair_segment_provider_classCallCheck(this, HairSegmentProvider);\n\n    hair_segment_provider_defineProperty(this, "canvas", void 0);\n\n    hair_segment_provider_defineProperty(this, "maskCanvas", void 0);\n\n    hair_segment_provider_defineProperty(this, "canvasCtx", void 0);\n\n    hair_segment_provider_defineProperty(this, "maskcanvasCtx", void 0);\n\n    hair_segment_provider_defineProperty(this, "video", void 0);\n\n    hair_segment_provider_defineProperty(this, "callback", void 0);\n\n    hair_segment_provider_defineProperty(this, "imageSegmenter", void 0);\n\n    hair_segment_provider_defineProperty(this, "labels", void 0);\n\n    hair_segment_provider_defineProperty(this, "image", void 0);\n\n    hair_segment_provider_defineProperty(this, "runningMode", "VIDEO");\n\n    this.callback = callback;\n    this.canvas = document.createElement("canvas");\n    this.maskCanvas = document.createElement("canvas");\n    this.canvasCtx = this.canvas.getContext("2d", {\n      willReadFrequently: true\n    });\n    this.maskcanvasCtx = this.maskCanvas.getContext("2d", {\n      willReadFrequently: true\n    }); // Ensure that the required properties are available\n\n    if (!this.canvas || !this.maskCanvas || !this.canvasCtx || !this.maskcanvasCtx) {\n      throw new Error("Canvas or context creation failed.");\n    }\n  }\n\n  hair_segment_provider_createClass(HairSegmentProvider, [{\n    key: "callbackForVideo",\n    value: function () {\n      var _callbackForVideo = hair_segment_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(result) {\n        var imageData, uint8ArrayInput, dataNewInput, mask, j, i, maskVal, index, legendColor, uint8Array, dataNew;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  imageData = this.canvasCtx.getImageData(0, 0, this.video.videoWidth, this.video.videoHeight).data;\n                  uint8ArrayInput = new Uint8ClampedArray(imageData);\n                  dataNewInput = new ImageData(uint8ArrayInput, this.video.videoWidth, this.video.videoHeight);\n                  this.canvasCtx.putImageData(dataNewInput, 0, 0);\n                  mask = result.categoryMask.getAsFloat32Array();\n                  j = 0; //console.log("mask", mask);\n\n                  for (i = 0; i < mask.length; ++i) {\n                    maskVal = Math.round(mask[i] * 255.0);\n                    index = maskVal % legendColors.length;\n                    legendColor = legendColors[index];\n                    imageData[j] = legendColor[0];\n                    imageData[j + 1] = legendColor[1];\n                    imageData[j + 2] = legendColor[2];\n                    imageData[j + 3] = legendColor[3];\n                    j += 4;\n                  }\n\n                  uint8Array = new Uint8ClampedArray(imageData.buffer);\n                  dataNew = new ImageData(uint8Array, this.video.videoWidth, this.video.videoHeight);\n                  this.callback(this.canvas, dataNew, true);\n                } catch (error) {// console.error("Callback processing failed:", error);\n                }\n\n              case 1:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function callbackForVideo(_x) {\n        return _callbackForVideo.apply(this, arguments);\n      }\n\n      return callbackForVideo;\n    }()\n  }, {\n    key: "callbackForImage",\n    value: function () {\n      var _callbackForImage = hair_segment_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(result) {\n        var imageData, mask, j, i, maskVal, index, legendColor, uint8Array, dataNew;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                try {\n                  imageData = this.canvasCtx.getImageData(0, 0, this.video.width, this.video.height).data; // let uint8ArrayInput = new Uint8ClampedArray(imageData);\n                  // let dataNewInput = new ImageData(\n                  //   uint8ArrayInput,\n                  //   this.video.width,\n                  //   this.video.height\n                  // );\n                  // this.canvasCtx.putImageData(dataNewInput, 0, 0);\n\n                  mask = result.categoryMask.getAsFloat32Array();\n                  j = 0;\n\n                  for (i = 0; i < mask.length; ++i) {\n                    maskVal = Math.round(mask[i] * 255.0);\n                    index = maskVal % legendColors.length;\n                    legendColor = legendColors[index];\n                    imageData[j] = legendColor[0];\n                    imageData[j + 1] = legendColor[1];\n                    imageData[j + 2] = legendColor[2];\n                    imageData[j + 3] = legendColor[3];\n                    j += 4;\n                  }\n\n                  uint8Array = new Uint8ClampedArray(imageData.buffer);\n                  dataNew = new ImageData(uint8Array, this.video.width, this.video.height);\n                  this.callback(this.canvas, dataNew, false);\n                } catch (error) {// console.error("Callback processing failed:", error);\n                }\n\n              case 1:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function callbackForImage(_x2) {\n        return _callbackForImage.apply(this, arguments);\n      }\n\n      return callbackForImage;\n    }()\n  }, {\n    key: "send",\n    value: function () {\n      var _send = hair_segment_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(video, isVideo) {\n        var startTimeMs, imageData;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n\n                if (!video) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                if (!isVideo) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                this.video = video;\n\n                if (this.video) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error("Video element is not provided.");\n\n              case 6:\n                this.canvas.width = video.videoWidth;\n                this.canvas.height = video.videoHeight;\n                this.canvasCtx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n                startTimeMs = performance.now();\n                _context3.next = 12;\n                return this.imageSegmenter.segmentForVideo(video, startTimeMs, this.callbackForVideo.bind(this));\n\n              case 12:\n                _context3.next = 21;\n                break;\n\n              case 14:\n                this.video = video;\n                this.canvas.width = this.video.width;\n                this.canvas.height = this.video.height;\n                this.canvasCtx.drawImage(this.video, 0, 0, this.video.width, this.video.height); // Get ImageData from the canvas\n\n                imageData = this.canvasCtx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n                _context3.next = 21;\n                return this.imageSegmenter.segment(imageData, this.callbackForImage.bind(this));\n\n              case 21:\n                _context3.next = 25;\n                break;\n\n              case 23:\n                _context3.prev = 23;\n                _context3.t0 = _context3["catch"](0);\n\n              case 25:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 23]]);\n      }));\n\n      function send(_x3, _x4) {\n        return _send.apply(this, arguments);\n      }\n\n      return send;\n    }()\n  }, {\n    key: "createImageSegmenter",\n    value: function () {\n      var _createImageSegmenter = hair_segment_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var vision, details, regexp, isMobileDevice, hairModel;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return FilesetResolver.forVisionTasks("".concat(PUBLIC_PATH, "/mediapipe/task-vision/wasm"));\n\n              case 3:\n                vision = _context4.sent;\n                details = navigator.userAgent;\n                regexp = /android|iphone|kindle|ipad|webOS|iPod|BlackBerry|Windows Phone/i;\n                isMobileDevice = regexp.test(details);\n\n                if (isMobileDevice) {\n                  hairModel = hair_segmenter_tflite;\n                } else {\n                  hairModel = selfie_multiclass_256x256_tflite;\n                }\n\n                _context4.next = 10;\n                return ImageSegmenter.createFromOptions(vision, {\n                  baseOptions: {\n                    modelAssetPath: hairModel,\n                    delegate: "GPU"\n                  },\n                  outputCategoryMask: true,\n                  outputConfidenceMasks: false,\n                  runningMode: this.runningMode\n                });\n\n              case 10:\n                this.imageSegmenter = _context4.sent;\n                this.labels = this.imageSegmenter.getLabels();\n                _context4.next = 16;\n                break;\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4["catch"](0);\n\n              case 16:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 14]]);\n      }));\n\n      function createImageSegmenter() {\n        return _createImageSegmenter.apply(this, arguments);\n      }\n\n      return createImageSegmenter;\n    }()\n  }, {\n    key: "initialize",\n    value: function () {\n      var _initialize = hair_segment_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.createImageSegmenter();\n\n              case 2:\n                this.init = true;\n\n              case 3:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }, {\n    key: "IsInit",\n    value: function IsInit() {\n      return this.init;\n    }\n  }, {\n    key: "setSelfieMode",\n    value: function () {\n      var _setSelfieMode = hair_segment_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(state) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!this.imageSegmenter) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                if (!(this.getState() === state)) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt("return");\n\n              case 3:\n                if (state) this.runningMode = "VIDEO";else this.runningMode = "IMAGE";\n                _context6.next = 6;\n                return this.imageSegmenter.setOptions({\n                  runningMode: this.runningMode\n                });\n\n              case 6:\n              case "end":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function setSelfieMode(_x5) {\n        return _setSelfieMode.apply(this, arguments);\n      }\n\n      return setSelfieMode;\n    }()\n  }, {\n    key: "getState",\n    value: function getState() {\n      if (this.runningMode === "IMAGE") return false;else return true;\n    }\n  }, {\n    key: "isSelfieMode",\n    value: function isSelfieMode() {\n      if (this.runningMode === "IMAGE") return true;else return false;\n    }\n  }, {\n    key: "setMode",\n    value: function setMode(state) {\n      if (!state) this.runningMode = "IMAGE";else this.runningMode = "VIDEO";\n    }\n  }]);\n\n  return HairSegmentProvider;\n}();\n;// CONCATENATED MODULE: ./src/Tracking_Mode.js\n\n\nfunction Tracking_Mode_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Tracking_Mode_createClass(Constructor, protoProps, staticProps) { if (protoProps) Tracking_Mode_defineProperties(Constructor.prototype, protoProps); if (staticProps) Tracking_Mode_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction Tracking_Mode_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Tracking_Mode_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar TrackingMode = /*#__PURE__*/Tracking_Mode_createClass(function TrackingMode() {\n  Tracking_Mode_classCallCheck(this, TrackingMode);\n});\n\nTracking_Mode_defineProperty(TrackingMode, "None", "none");\n\nTracking_Mode_defineProperty(TrackingMode, "Face", "face");\n\nTracking_Mode_defineProperty(TrackingMode, "Hand", "hand");\n\nTracking_Mode_defineProperty(TrackingMode, "Hair", "hair");\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.split.js\nvar es6_regexp_split = __webpack_require__(1876);\n// EXTERNAL MODULE: ./node_modules/@mediapipe/hands/hands.js\nvar hands = __webpack_require__(7523);\n;// CONCATENATED MODULE: ./src/js/nail-style/hand_landmarks_helpers.js\nfunction hand_landmarks_helpers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction hand_landmarks_helpers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? hand_landmarks_helpers_ownKeys(Object(source), !0).forEach(function (key) { hand_landmarks_helpers_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : hand_landmarks_helpers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction hand_landmarks_helpers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n//import { FACE_MESH_INDEX_BUFFER, FACE_MESH_UV } from "./face_geom.js";\n\n/**\n * Mediapipe uses different convention for axis\n * than three js. This function adapts mediapipe\n * landmarks for three js.\n * @param {*} landmarks\n */\nvar hand_landmarks_helpers_transformLandmarks = function transformLandmarks(landmarks) {\n  // console.log(landmarks);\n  if (!landmarks) {\n    return landmarks;\n  }\n\n  var hasVisiblity = !!landmarks.find(function (l) {\n    return l.visibility;\n  });\n  var minZ = 1e-4; //console.log(hasVisiblity);\n  // currently mediapipe facemesh js\n  // has visibility set to undefined\n  // so we use a heuristic to set z position of facemesh\n\n  if (hasVisiblity) {\n    landmarks.forEach(function (landmark) {\n      var z = landmark.z,\n          visibility = landmark.visibility;\n      z = -z;\n\n      if (z < minZ && visibility) {\n        minZ = z;\n      }\n    });\n  } else {\n    if (landmarks && landmarks[5] !== undefined && landmarks[5].z !== undefined) minZ = Math.max(-landmarks[5].z, -landmarks[17].z);\n  }\n\n  return landmarks.map(function (landmark) {\n    var x = landmark.x,\n        y = landmark.y,\n        z = landmark.z;\n    return {\n      x: -0.5 + x,\n      y: 0.5 - y,\n      z: -z - minZ,\n      visibility: landmark.visibility\n    };\n  });\n};\n/**\n * Scales landmark by width and height\n * @param {*} landmark\n * @param {*} width\n * @param {*} height\n */\n\nvar hand_landmarks_helpers_scaleLandmark = function scaleLandmark(landmark, width, height) {\n  if (landmark) {\n    var x = landmark.x,\n        y = landmark.y,\n        z = landmark.z;\n    return hand_landmarks_helpers_objectSpread(hand_landmarks_helpers_objectSpread({}, landmark), {}, {\n      x: x * width,\n      y: y * height,\n      z: z * width\n    });\n  } else {\n    // Handle the case where \'landmark\' is undefined by returning default values\n    return {\n      x: 0,\n      y: 0,\n      z: 0\n    }; // Adjust default values as needed\n  }\n};\n/**\n * makes buffer geometry from facemesh landmarks\n * @param {*} landmarks\n */\n\nvar hand_landmarks_helpers_makeGeometry = function makeGeometry(landmarks) {// const { x, y, z } = landmarks; // Extract the X, Y, Z coordinates of the pose landmark\n  // // Create a Three.js object to represent the pose landmark (e.g., a sphere)\n  // const geometry = new THREE.SphereGeometry(0.05); // Adjust the size of the sphere as needed\n  // const material = new THREE.MeshBasicMaterial({ color: 0xff0000 }); // Adjust the color as needed\n  // const sphere = new THREE.Mesh(geometry, material);\n  // // Set the position of the sphere based on the pose landmark coordinates\n  // sphere.position.set(x, y, z);\n  // // Add the sphere to the Three.js scene\n  // scene.add(sphere);\n  //return geometry;\n};\n;// CONCATENATED MODULE: ./src/apiService/api-nail.js\n\n\n\nvar APINail = axios_default().create({\n  baseURL: env/* default */.Z.GOKU_URL,\n  //baseURL: `https://8c81-125-22-237-50.ngrok-free.app`,\n  headers: {}\n});\nvar api_nail_setAuthorization = function setAuthorization() {\n  APINail.defaults.headers["Authorization"] = getAPIKey();\n};\nvar getNailSegmentation = function getNailSegmentation(imageFile, stringAngle, stringX, stringY) {\n  var formData = new FormData();\n  formData.append("image", imageFile);\n  var headers = {\n    "Content-Type": "multipart/form-data"\n  };\n  return APINail.post("/api/v1/predict/allImage", formData, {\n    headers: headers\n  }).then(function (response) {\n    return response;\n  })["catch"](function (error) {\n    throw error;\n  });\n};\nvar checkHelth = function checkHelth() {\n  return APINail.get("/_healthz").then(function (response) {\n    return response;\n  })["catch"](function (error) {\n    throw error;\n  });\n};\nvar sendMeta = function sendMeta(requestId, tryOnType) {\n  return APINail.post("/meta", null, {\n    headers: {\n      "x-request-id": requestId,\n      "x-try-on-type": tryOnType\n    }\n  })["catch"]();\n};\nvar api_nail_getSKUData = function getSKUData(id, apiKey) {\n  return APINail.get("/sku?id=".concat(id)).then(function (response) {\n    return response;\n  })["catch"](function (error) {\n    throw error;\n  });\n};\n;// CONCATENATED MODULE: ./src/MLModels/hand_landmarker.task\n/* harmony default export */ const hand_landmarker = (__webpack_require__.p + "f37688b46bf8ca58fde8d0ff89a96176.task");\n;// CONCATENATED MODULE: ./src/js/facemesh/Hands_landmarks_provider.js\n\n\n\n\n\n\n\n\n\n\nfunction Hands_landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction Hands_landmarks_provider_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { Hands_landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { Hands_landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction Hands_landmarks_provider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Hands_landmarks_provider_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Hands_landmarks_provider_createClass(Constructor, protoProps, staticProps) { if (protoProps) Hands_landmarks_provider_defineProperties(Constructor.prototype, protoProps); if (staticProps) Hands_landmarks_provider_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction Hands_landmarks_provider_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar HandsLandmarkProvider = /*#__PURE__*/function () {\n  function HandsLandmarkProvider(callback) {\n    var _this = this;\n\n    Hands_landmarks_provider_classCallCheck(this, HandsLandmarkProvider);\n\n    Hands_landmarks_provider_defineProperty(this, "canvas", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "maskCanvas", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "canvasCtx", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "maskcanvasCtx", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "video", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "canvasData", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "base64OrignalImageData", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "isOnce", false);\n\n    Hands_landmarks_provider_defineProperty(this, "image", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "landmarks", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "segmentationmask", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "handedness", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "originalWidth", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "originalHeight", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "offsetX", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "offsetY", void 0);\n\n    Hands_landmarks_provider_defineProperty(this, "clicked", false);\n\n    Hands_landmarks_provider_defineProperty(this, "fetchNailImage2", /*#__PURE__*/function () {\n      var _ref = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(base64ImageCropped) {\n        var canvasPngData, decodedData, binaryData, view, i, imageBlob;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                canvasPngData = base64ImageCropped; // Encodes as PNG\n\n                decodedData = atob(canvasPngData.split(",")[1]);\n                binaryData = new ArrayBuffer(decodedData.length);\n                view = new Uint8Array(binaryData);\n\n                for (i = 0; i < decodedData.length; i++) {\n                  view[i] = decodedData.charCodeAt(i);\n                }\n\n                imageBlob = new Blob([binaryData], {\n                  type: "image/png"\n                }); // let stringAngle = this.getAllAngles();\n                // let cordinate = this.getMiddleCordinate();\n\n                console.log("nail api hit");\n                _context.next = 9;\n                return getNailSegmentation(imageBlob, null, null, null).then(function (data) {\n                  try {\n                    var base64ImageData;\n\n                    (function () {\n                      if (data.data.image === null && data.data.statusCode === 81) {\n                        throw new Error(data.data.statusMessage);\n                      }\n\n                      if (data.data.isFar) {\n                        throw new Error("hand is too far");\n                      }\n\n                      (0,utils_event/* emitNailColorEvent */.C0)("result", data.data); // console.log(data.data);\n\n                      // console.log(data.data);\n                      var repositionAngle = data.data.angle;\n                      var maskDataArray = [];\n\n                      var _loop = function _loop(_i) {\n                        var nailPaint = data.data.mask[_i];\n                        base64ImageData = "data:image/png;base64," + nailPaint;\n                        var img = new Image();\n\n                        img.onload = function () {\n                          //   let alldata =data.data.mask_b64;\n                          _this.maskcanvasCtx.drawImage(img, 0, 0, _this.width, _this.height);\n\n                          var dilatedMaskCanvas = _this.dilateMask(_this.maskCanvas, 30, 70); // Adjust dilation radius as needed\n                          //Get the image data of the dilated mask canvas\n\n\n                          // Adjust dilation radius as needed\n                          //Get the image data of the dilated mask canvas\n                          var imageData = dilatedMaskCanvas.getContext("2d", {\n                            willReadFrequently: true\n                          }).getImageData(0, 0, _this.width, _this.height).data; // let imageData = this.maskcanvasCtx.getImageData(\n                          //   0,\n                          //   0,\n                          //   this.width,\n                          //   this.height\n                          // ).data;\n\n                          // let imageData = this.maskcanvasCtx.getImageData(\n                          //   0,\n                          //   0,\n                          //   this.width,\n                          //   this.height\n                          // ).data;\n                          var uint8Array = new Uint8ClampedArray(imageData.buffer);\n                          var maskData = new ImageData(uint8Array, _this.width, _this.height); // console.log(maskData.width);\n\n                          // console.log(maskData.width);\n                          var maskTexture = new three_module/* DataTexture */.IEO(_this.flipImageData(maskData.data, maskData.width, maskData.height), maskData.width, maskData.height, three_module/* RGBAFormat */.wk1);\n                          maskDataArray.push(maskTexture);\n\n                          if (maskDataArray.length == data.data.mask.length) {\n                            _this.callback(_this.image, _this.landmarks, _this.segmentationmask, _this.handedness, maskDataArray, data.data.x_cord, data.data.y_cord, data.data.x2_cord, data.data.y2_cord, repositionAngle);\n                          }\n                        };\n\n                        img.src = base64ImageData;\n                      };\n\n                      for (var _i = 0; _i < data.data.mask.length; _i++) {\n                        _loop(_i);\n                      }\n                    })();\n                  } catch (error) {\n                    (0,utils_event/* emitNailColorEvent */.C0)("error", globalVariables/* errorMessages */.Qj.nailDetectionIssue); // showSnackbar(errorMessages.nailDetectionIssue).then(() => {\n                    //   setTimeout(() => {\n                    //     //emitModuleClosed();\n                    //     hideSnackbar();\n                    //   }, 2000);\n                    // });\n\n                    // showSnackbar(errorMessages.nailDetectionIssue).then(() => {\n                    //   setTimeout(() => {\n                    //     //emitModuleClosed();\n                    //     hideSnackbar();\n                    //   }, 2000);\n                    // });\n                    showErrorPermissionPanel(globalVariables/* errorMessages */.Qj.nailDetectionIssue);\n                  }\n                })["catch"](function (error) {\n                  (0,utils_event/* emitNailColorEvent */.C0)("error", globalVariables/* errorMessages */.Qj.nailDetectionIssue); // showSnackbar(errorMessages.nailDetectionIssue).then(() => {\n                  //   setTimeout(() => {\n                  //     //emitModuleClosed();\n                  //     hideSnackbar();\n                  //   }, 2000);\n                  // });\n\n                  // showSnackbar(errorMessages.nailDetectionIssue).then(() => {\n                  //   setTimeout(() => {\n                  //     //emitModuleClosed();\n                  //     hideSnackbar();\n                  //   }, 2000);\n                  // });\n                  showErrorPermissionPanel(globalVariables/* errorMessages */.Qj.nailDetectionIssue);\n                });\n\n              case 9:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    Hands_landmarks_provider_defineProperty(this, "dilateMask", function (maskCanvas, blurRadius, threshold) {\n      if (!maskCanvas || !maskCanvas.width || !maskCanvas.height) {\n        throw new Error("Invalid mask canvas");\n      }\n\n      var dilatedMaskCanvas = document.createElement("canvas");\n      var dilatedMaskCtx = dilatedMaskCanvas.getContext("2d", {\n        willReadFrequently: true\n      });\n      dilatedMaskCanvas.width = maskCanvas.width;\n      dilatedMaskCanvas.height = maskCanvas.height; // Draw the original mask onto the dilated mask canvas\n\n      dilatedMaskCtx.drawImage(maskCanvas, 0, 0); // Apply Gaussian blur to smooth the mask edges\n\n      dilatedMaskCtx.filter = "blur(".concat(blurRadius, "px)");\n      dilatedMaskCtx.drawImage(maskCanvas, 0, 0); // Apply threshold to enhance mask edges\n\n      var imageData = dilatedMaskCtx.getImageData(0, 0, maskCanvas.width, maskCanvas.height);\n      var pixels = imageData.data;\n\n      for (var i = 0; i < pixels.length; i += 4) {\n        var gray = (pixels[i] + pixels[i + 1] + pixels[i + 2]) / 3; // Convert to grayscale\n\n        pixels[i] = pixels[i + 1] = pixels[i + 2] = gray > threshold ? 255 : 0; // Apply threshold\n      }\n\n      dilatedMaskCtx.putImageData(imageData, 0, 0); // Clear filter for future operations\n\n      dilatedMaskCtx.filter = "none";\n      return dilatedMaskCanvas;\n    });\n\n    this.isold = false;\n    this.callback = callback;\n    this.hands = null;\n    this.init = false;\n    this.isBeingLoaded = false;\n    this.selfieMode = false;\n    this.distanceState = -1;\n    this.prevdistanceState = -1;\n    this.positionState = -1;\n    this.prevPositionState = -1;\n    this.prevHandDetection = -1;\n    this.handDetection = -1;\n    this.isVideo = true;\n    this.runningMode = "VIDEO";\n    this.result;\n    this.lastVideoTime = -1;\n    this.canvas = document.createElement("canvas");\n    this.maskCanvas = document.createElement("canvas");\n    var contextAttributes = {\n      willReadFrequently: true\n    };\n    this.canvasCtx = this.canvas.getContext("2d", contextAttributes);\n    this.maskcanvasCtx = this.maskCanvas.getContext("2d", contextAttributes);\n  }\n\n  Hands_landmarks_provider_createClass(HandsLandmarkProvider, [{\n    key: "send",\n    value: function send(image, clicked, isVideo) {\n      this.clicked = clicked;\n      this.video = image;\n      this.isVideo = isVideo;\n\n      if (isVideo) {\n        this.width = this.video.videoWidth;\n        this.height = this.video.videoHeight;\n        this.originalWidth = this.video.videoWidth;\n        this.originalHeight = this.video.videoHeight;\n        var x = this.width; //360;\n\n        var y = this.height; //640;\n\n        this.offsetX = this.width; //;(this.width - x) / 2;\n\n        this.offsetY = this.height; //;(this.height - y) / 2;\n        // this.width = x;\n        // this.height = y;\n\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n\n        if (!this.isOnce) {\n          this.canvasCtx.drawImage(image, 0, 0, this.width, this.height);\n          this.canvasData = this.canvasCtx.getImageData(0, 0, this.width, this.height);\n        }\n\n        if (!this.isold) {\n          if (this.lastVideoTime !== image.currentTime) {\n            this.lastVideoTime = image.currentTime;\n            this.result = this.handLandmarker.detectForVideo(image, performance.now());\n          }\n        }\n      } else {\n        // console.log(this.video.width, this.video.height);\n        this.width = this.video.width;\n        this.height = this.video.height;\n        this.originalWidth = this.video.width;\n        this.originalHeight = this.video.height;\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n\n        if (!this.isOnce) {\n          this.canvasCtx.drawImage(image, 0, 0, this.width, this.height);\n          this.canvasData = this.canvasCtx.getImageData(0, 0, this.width, this.height);\n        }\n\n        if (!this.isold) this.result = this.handLandmarker.detect(image);\n      }\n\n      this.maskCanvas.width = this.width;\n      this.maskCanvas.height = this.height;\n      if (this.isold) return this.hands.send({\n        image: image\n      });else {\n        var multiHandLandmarks = this.result.landmarks;\n        this.onResults({\n          image: image,\n          multiHandLandmarks: multiHandLandmarks\n        }); // let multiHandLandmarks = transformLandmarks(this.result.landmarks[0]);\n        // this.callback({\n        //   image: image,\n        //   landmarks: multiHandLandmarks,\n        //   multiHandWorldLandmarks: this.result.worldLandmarks,\n        //   handedness: this.result.handedness,\n        //   isVideo,\n        // });\n      }\n    }\n  }, {\n    key: "flipImageData",\n    value: function flipImageData(data, width, height) {\n      var flippedData = new Uint8Array(data.length);\n      var rowSize = width * 4; // Assuming 4 channels (RGBA)\n\n      for (var row = 0; row < height; row++) {\n        var srcOffset = row * rowSize;\n        var destOffset = (height - row - 1) * rowSize;\n        flippedData.set(data.subarray(srcOffset, srcOffset + rowSize), destOffset);\n      }\n\n      return flippedData;\n    }\n  }, {\n    key: "downloadScreenshotImage",\n    value: function downloadScreenshotImage(src) {\n      var downloadLink = document.createElement("a");\n      downloadLink.href = src;\n      downloadLink.download = "screenshot.png"; // Specify the desired filename\n\n      downloadLink.style.display = "none"; // Hide the link\n\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    }\n  }, {\n    key: "SnapNailImage",\n    value: function () {\n      var _SnapNailImage = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var base64ImageOrignalData;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // try {\n                base64ImageOrignalData = this.canvas.toDataURL("image/png"); // this.downloadScreenshotImage(base64ImageOrignalData);\n\n                _context2.next = 3;\n                return this.fetchNailImage2(base64ImageOrignalData);\n\n              case 3:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function SnapNailImage() {\n        return _SnapNailImage.apply(this, arguments);\n      }\n\n      return SnapNailImage;\n    }()\n  }, {\n    key: "onResults",\n    value: function onResults(_ref2) {\n      var image = _ref2.image,\n          multiHandLandmarks = _ref2.multiHandLandmarks,\n          multiHandWorldLandmarks = _ref2.multiHandWorldLandmarks,\n          multiHandedness = _ref2.multiHandedness;\n      var detectmessage;\n\n      if (image != null && (!multiHandLandmarks || multiHandLandmarks && !multiHandLandmarks[0])) {\n        this.handDetection = 1;\n        detectmessage = "OUT";\n      } else {\n        this.handDetection = 0;\n        detectmessage = "PERFECT";\n      }\n\n      if (this.prevHandDetection != this.handDetection) {\n        var json = {\n          state: this.handDetection,\n          message: detectmessage\n        };\n        (0,utils_event/* emitNailColorEvent */.C0)("handDetection", json);\n        this.prevHandDetection = this.handDetection;\n      }\n\n      if (image != null && multiHandLandmarks != null) {\n        // multiHandLandmarks = transformLandmarks(multiHandLandmarks[0]);\n        multiHandedness = multiHandedness;\n        this.image = image;\n        this.landmarks = multiHandLandmarks[0];\n        this.segmentationmask = multiHandWorldLandmarks;\n        this.handedness = multiHandedness;\n        this.callback(image, multiHandLandmarks[0], multiHandWorldLandmarks, multiHandedness, null, null);\n\n        if (this.landmarks && this.isVideo) {\n          this.calculateDistance(this.landmarks[5].x, this.landmarks[17].x, this.landmarks[5].y, this.landmarks[17].y);\n          this.categorizePosition(this.landmarks[9].x, this.landmarks[9].y); //console.log(this.landmarks[9].x, this.landmarks[9].y);\n        } else {\n          this.positionState = 1;\n          var _json = {\n            state: this.positionState,\n            message: "out"\n          };\n\n          if (this.prevPositionState != this.positionState) {\n            (0,utils_event/* emitNailColorEvent */.C0)("position", _json);\n            this.prevPositionState = this.positionState;\n          }\n\n          this.distanceState = 2;\n          var json1 = {\n            state: this.distanceState,\n            message: "TOO_FAR"\n          };\n\n          if (this.prevdistanceState != this.distanceState) {\n            (0,utils_event/* emitNailColorEvent */.C0)("distance", json1);\n            this.prevdistanceState = this.distanceState;\n          }\n        } // this.callback({\n        //   image: image,\n        //   landmarks: multiHandLandmarks[0],\n        //   segmentationmask: multiHandWorldLandmarks,\n        //   handedness: multiHandedness,\n        //   maskData:null,\n        //   angle: null,\n        //   combineCall :false\n        // });\n\n      }\n    }\n  }, {\n    key: "focalLength",\n    value: function focalLength(depthToFace, eyeToEye, eyeToEyeInPixel) {\n      return eyeToEyeInPixel * depthToFace / eyeToEye;\n    } // Function to find distance based on focal length, eye-to-eye in pixels, and width calculated\n\n  }, {\n    key: "distanceFinder",\n    value: function distanceFinder(focalLength, eyeToEyeInPixel, widthCalculated) {\n      var distance = eyeToEyeInPixel * focalLength / widthCalculated;\n      return distance - 6;\n    } // Function to categorize depth based on distance\n\n  }, {\n    key: "categorizeDepth",\n    value: function categorizeDepth(distance) {\n      var smallThreshold;\n      var mediumThreshold;\n      smallThreshold = 80000;\n      mediumThreshold = 160000;\n\n      if ((0,globalVariables/* isMobileDevice */.s2)()) {\n        smallThreshold = 50000;\n        mediumThreshold = 100000;\n      }\n\n      var msg = null; //console.log("distance", distance);\n\n      if (distance < smallThreshold) {\n        this.distanceState = 1; //emitRecognizationDistanceAlert("TOO_CLOSE");\n\n        msg = "TOO_CLOSE"; // showDistanceMessagePanel();\n        // setDistanceMsg("Too Close");\n      } else if (distance > mediumThreshold) {\n        this.distanceState = 2; //emitRecognizationDistanceAlert("TOO_FAR");\n\n        msg = "TOO_FAR"; // showDistanceMessagePanel();\n        // setDistanceMsg("Too far");\n      } else {\n        this.distanceState = 0; //emitRecognizationDistanceAlert("PERFECT");\n\n        msg = "PERFECT"; //hideDistanceMessagePanel();\n      }\n\n      if (this.distanceState !== this.prevdistanceState) {\n        if (msg) {\n          var json = {\n            state: this.distanceState,\n            message: msg\n          };\n          (0,utils_event/* emitNailColorEvent */.C0)("distance", json); //emitRecognizationDistanceAlert(msg);\n        }\n\n        this.prevdistanceState = this.distanceState;\n      }\n\n      return distance > smallThreshold && distance < mediumThreshold ? false : true;\n    }\n  }, {\n    key: "categorizePosition",\n    value: function categorizePosition(xdist, ydist) {\n      var xMinThresold = 0.35;\n      var xMaxThresold = 0.65;\n      var yMinThresold = 0.35;\n      var yMaxThresold = 0.9;\n      var msg = null; //console.log("distance", distance);\n\n      if (xdist > xMinThresold && xdist < xMaxThresold && ydist > yMinThresold && ydist < yMaxThresold) {\n        this.positionState = 0;\n        msg = "PERFECT";\n      } else {\n        this.positionState = 1;\n        msg = "Out";\n      }\n\n      if (this.positionState !== this.prevPositionState) {\n        if (msg) {\n          var json = {\n            state: this.positionState,\n            message: msg\n          };\n          (0,utils_event/* emitNailColorEvent */.C0)("position", json);\n        }\n\n        this.prevPositionState = this.positionState;\n      }\n    }\n  }, {\n    key: "calculateDistance",\n    value: function calculateDistance(lefteye, righteyes, lefteyeY, righteyesY) {\n      var eyeToEye = 13.0;\n      var depthToFace = 48.0;\n      var eyeToEyeInPixel = 384.5; // Calculate focal length\n\n      var calculatedFocalLength = this.focalLength(depthToFace, eyeToEye, eyeToEyeInPixel); // Calculate eye measurement (assuming x_300 and x_70 are defined)\n\n      var x_300 = lefteye;\n      var x_70 = righteyes;\n      var y_300 = lefteyeY;\n      var y_70 = righteyesY;\n      var distance;\n\n      if (Math.abs(x_300 - x_70) > Math.abs(y_300 - y_70)) {\n        distance = Math.abs(x_300 - x_70);\n      } else {\n        distance = Math.abs(y_300 - y_70);\n      }\n\n      var eyeMeasurement = distance; //Math.abs(x_300 - x_70);\n      // Calculate distance\n\n      var calculatedDistance = this.distanceFinder(calculatedFocalLength, eyeToEye, eyeMeasurement); // Categorize depth based on distance\n\n      var categorizedDepth = this.categorizeDepth(calculatedDistance);\n    }\n  }, {\n    key: "createHandLandmark",\n    value: function () {\n      var _createHandLandmark = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var vision;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return vision_bundle/* FilesetResolver */.n.forVisionTasks("".concat(PUBLIC_PATH, "/mediapipe/task-vision/wasm"));\n\n              case 3:\n                vision = _context3.sent;\n                _context3.next = 6;\n                return vision_bundle/* HandLandmarker */.uq.createFromOptions(vision, {\n                  baseOptions: {\n                    modelAssetPath: hand_landmarker,\n                    delegate: "GPU"\n                  },\n                  runningMode: this.runningMode,\n                  numHands: 1\n                });\n\n              case 6:\n                this.handLandmarker = _context3.sent;\n                _context3.next = 11;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3["catch"](0);\n\n              case 11:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n\n      function createHandLandmark() {\n        return _createHandLandmark.apply(this, arguments);\n      }\n\n      return createHandLandmark;\n    }()\n  }, {\n    key: "initialize",\n    value: function () {\n      var _initialize = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.isold) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.initializeOld();\n\n              case 3:\n                _context4.next = 8;\n                break;\n\n              case 5:\n                _context4.next = 7;\n                return this.createHandLandmark();\n\n              case 7:\n                this.init = true;\n\n              case 8:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }, {\n    key: "initializeOld",\n    value: function () {\n      var _initializeOld = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var onResults;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.isBeingLoaded = true;\n                onResults = this.onResults.bind(this);\n                this.hands = new hands.Hands({\n                  locateFile: function locateFile(file) {\n                    // console.log(file);\n                    var url = "".concat(PUBLIC_PATH, "/mediapipe/hands/").concat(file);\n                    return url;\n                  }\n                });\n                this.hands.setOptions({\n                  selfieMode: true,\n                  maxNumHands: 1,\n                  modelComplexity: 1,\n                  minDetectionConfidence: 0.5,\n                  minTrackingConfidence: 0.5\n                });\n                this.selfieMode = true;\n                this.hands.onResults(onResults);\n                _context5.next = 8;\n                return this.hands.initialize();\n\n              case 8:\n                this.init = true;\n                this.isBeingLoaded = false;\n\n              case 10:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function initializeOld() {\n        return _initializeOld.apply(this, arguments);\n      }\n\n      return initializeOld;\n    }()\n  }, {\n    key: "IsBeingLoaded",\n    value: function IsBeingLoaded() {\n      return this.isBeingLoaded;\n    }\n  }, {\n    key: "IsInit",\n    value: function IsInit() {\n      return this.init;\n    }\n  }, {\n    key: "setInit",\n    value: function setInit(state) {\n      this.init = state;\n    }\n  }, {\n    key: "setSelfieMode",\n    value: function () {\n      var _setSelfieMode = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(state) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!this.isold) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                this.hands.setOptions({\n                  selfieMode: state\n                });\n                _context6.next = 9;\n                break;\n\n              case 4:\n                if (!(this.getState() === state)) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                return _context6.abrupt("return");\n\n              case 6:\n                if (state) this.runningMode = "VIDEO";else this.runningMode = "IMAGE"; // console.error(this.runningMode);\n\n                _context6.next = 9;\n                return this.handLandmarker.setOptions({\n                  runningMode: this.runningMode\n                });\n\n              case 9:\n              case "end":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function setSelfieMode(_x2) {\n        return _setSelfieMode.apply(this, arguments);\n      }\n\n      return setSelfieMode;\n    }()\n  }, {\n    key: "getState",\n    value: function getState() {\n      if (this.runningMode === "IMAGE") return false;else return true;\n    }\n  }, {\n    key: "reset",\n    value: function reset() {\n      this.hands.reset();\n    }\n  }, {\n    key: "close",\n    value: function () {\n      var _close = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.hands.close();\n\n              case 2:\n              case "end":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }]);\n\n  return HandsLandmarkProvider;\n}();\n;// CONCATENATED MODULE: ./src/js/facemesh/nailmask_provider.js\n\n\nfunction nailmask_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction nailmask_provider_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { nailmask_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { nailmask_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\nfunction nailmask_provider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction nailmask_provider_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction nailmask_provider_createClass(Constructor, protoProps, staticProps) { if (protoProps) nailmask_provider_defineProperties(Constructor.prototype, protoProps); if (staticProps) nailmask_provider_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction nailmask_provider_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n // import cv from \'@techstark/opencv-js\';\n\n\n\n\nvar NailMaskProvider = /*#__PURE__*/function () {\n  function NailMaskProvider(callback) {\n    var _this = this;\n\n    nailmask_provider_classCallCheck(this, NailMaskProvider);\n\n    nailmask_provider_defineProperty(this, "canvas", void 0);\n\n    nailmask_provider_defineProperty(this, "maskCanvas", void 0);\n\n    nailmask_provider_defineProperty(this, "canvasCtx", void 0);\n\n    nailmask_provider_defineProperty(this, "maskcanvasCtx", void 0);\n\n    nailmask_provider_defineProperty(this, "video", void 0);\n\n    nailmask_provider_defineProperty(this, "canvasData", void 0);\n\n    nailmask_provider_defineProperty(this, "base64OrignalImageData", void 0);\n\n    nailmask_provider_defineProperty(this, "isOnce", false);\n\n    nailmask_provider_defineProperty(this, "imageSegmenter", void 0);\n\n    nailmask_provider_defineProperty(this, "labels", void 0);\n\n    nailmask_provider_defineProperty(this, "image", void 0);\n\n    nailmask_provider_defineProperty(this, "runningMode", "VIDEO");\n\n    nailmask_provider_defineProperty(this, "fetchHealth", function () {\n      checkHelth().then(function (data) {//  console.log("done", data.data);\n      })["catch"](function (error) {\n        // showSnackbar(error).then(() => {\n        //   setTimeout(() => {\n        //     // emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel(error === null || error === void 0 ? void 0 : error.msg);\n      });\n    });\n\n    nailmask_provider_defineProperty(this, "fetchNailImage2", function () {\n      var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "b76e79";\n\n      var base64ImageOrignalData = _this.canvas.toDataURL("image/jpeg");\n\n      var imageBlob = new Blob([base64ImageOrignalData.replace(/^data:image\\/jpeg;base64,/, "")], {\n        type: "image/jpeg"\n      });\n      getNailSegmentation(imageBlob, color).then(function (data) {\n        try {\n          // let nailPaint = data.data.mask[0] ;\n          var nailPaint = data.data.mask_b64;\n          var base64ImageData = "data:image/png;base64," + nailPaint;\n          var img = new Image();\n\n          img.onload = function () {\n            _this.maskcanvasCtx.drawImage(img, 0, 0, _this.video.videoWidth, _this.video.videoHeight); // let imageData = this.maskcanvasCtx.getImageData(\n            //   0,\n            //   0,\n            //   this.video.videoWidth,\n            //   this.video.videoHeight\n            // ).data;\n            // let uint8Array = new Uint8ClampedArray(imageData.buffer);\n            // let maskData = new ImageData(\n            //   uint8Array,\n            //   this.video.videoWidth,\n            //   this.video.videoHeight\n            // );\n            // this.canvasCtx.drawImage(img, 0, 0);\n            // console.log("fetch mask result");\n\n\n            _this.callback({\n              image: _this.canvas,\n              isMask: 1,\n              maskData: _this.maskCanvas\n            });\n          };\n\n          img.src = base64ImageData; // base64ImageData;//base64ImageOrignalData\n          // console.log("fetch mask called");\n        } catch (error) {\n          // console.error("Invalid API response data. Please enter valid JSON.");\n          return;\n        }\n      })["catch"](function (error) {\n        // showSnackbar(error).then(() => {\n        //   setTimeout(() => {\n        //     //emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel(error === null || error === void 0 ? void 0 : error.msg);\n      });\n    });\n\n    this.callback = callback;\n    this.canvas = document.createElement("canvas");\n    this.maskCanvas = document.createElement("canvas");\n    var contextAttributes = {\n      willReadFrequently: true\n    };\n    this.canvasCtx = this.canvas.getContext("2d", contextAttributes);\n    this.maskcanvasCtx = this.maskCanvas.getContext("2d", contextAttributes);\n  }\n\n  nailmask_provider_createClass(NailMaskProvider, [{\n    key: "callbackForVideo",\n    value: function () {\n      var _callbackForVideo = nailmask_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.callback({\n                  image: this.canvas\n                });\n\n              case 1:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function callbackForVideo() {\n        return _callbackForVideo.apply(this, arguments);\n      }\n\n      return callbackForVideo;\n    }()\n  }, {\n    key: "send",\n    value: function () {\n      var _send = nailmask_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(video) {\n        var startTimeMs;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.video = video;\n                this.canvas.width = video.videoWidth;\n                this.canvas.height = video.videoHeight;\n                this.maskCanvas.width = video.videoWidth;\n                this.maskCanvas.height = video.videoHeight; // console.log("width",video.videoWidth,video.videoHeight)\n\n                if (!this.isOnce) {\n                  this.canvasCtx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n                  this.canvasData = this.canvasCtx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n                  startTimeMs = performance.now();\n                } // this.callback({\n                //     image: this.canvas,isMask: 0\n                //   });\n\n\n              case 6:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function send(_x) {\n        return _send.apply(this, arguments);\n      }\n\n      return send;\n    }()\n  }, {\n    key: "createImageSegmenter",\n    value: function () {\n      var _createImageSegmenter = nailmask_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function createImageSegmenter() {\n        return _createImageSegmenter.apply(this, arguments);\n      }\n\n      return createImageSegmenter;\n    }()\n  }, {\n    key: "downloadSnap",\n    value: function () {\n      var _downloadSnap = nailmask_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var link;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // Down load image\n                // console.log("Download image");\n                link = document.createElement("a");\n                link.href = this.canvas.toDataURL();\n                link.download = "nailSnap.jpg";\n                link.click();\n\n              case 4:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function downloadSnap() {\n        return _downloadSnap.apply(this, arguments);\n      }\n\n      return downloadSnap;\n    }()\n  }, {\n    key: "dataURLtoBlob",\n    value: function dataURLtoBlob(dataURL) {\n      // Split the data URL to get the MIME type and data\n      var parts = dataURL.split(";base64,");\n      var contentType = parts[0].split(":")[1];\n      var base64Data = parts[1]; // Convert the base64 data to a Uint8Array\n\n      var arrayBuffer = Uint8Array.from(atob(base64Data), function (c) {\n        return c.charCodeAt(0);\n      }); // Create a Blob from the Uint8Array with the specified content type\n\n      return new Blob([arrayBuffer], {\n        type: contentType\n      });\n    }\n  }, {\n    key: "initialize",\n    value: function () {\n      var _initialize = nailmask_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.createImageSegmenter();\n\n              case 2:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }]);\n\n  return NailMaskProvider;\n}();\n;// CONCATENATED MODULE: ./src/apiService/api-faceAnalysis.js\n\n\n\n\n\n\n\nvar api_faceAnalysis_APINail = axios_default().create({\n  // baseURL: `${environment.SNELLO_URL}/api/v1/core/sdk/`,\n  baseURL: "https://skin.glamarz0.de/",\n  headers: {// \'Content-Type\': \'application/json\',\n    //Source: "web",\n    // "ngrok-skip-browser-warning": "your-custom-value", // for skiping the  ngrok in between page\n  }\n});\nvar api_faceAnalysis_setAuthorization = function setAuthorization() {\n  api_faceAnalysis_APINail.defaults.headers["Authorization"] = getAPIKey();\n};\nvar sendPoreSegmentation = function sendPoreSegmentation(imageFile) {\n  var formData = new FormData();\n  formData.append("image", imageFile);\n  var headers = {\n    "Content-Type": "multipart/form-data"\n  };\n  return api_faceAnalysis_APINail.post("/pore", formData, {\n    headers: headers\n  }).then(function (response) {\n    return response;\n  })["catch"](function (error) {\n    //console.error("Error fetching helth data:", error);\n    throw error;\n  });\n};\nvar sendAcneSegmentation = function sendAcneSegmentation(imageFile) {\n  var formData = new FormData();\n  formData.append("image", imageFile);\n  var headers = {\n    "Content-Type": "multipart/form-data"\n  };\n  return api_faceAnalysis_APINail.post("/acne", formData, {\n    headers: headers\n  }).then(function (response) {\n    return response;\n  })["catch"](function (error) {\n    //console.error("Error fetching helth data:", error);\n    throw error;\n  });\n}; // export const sendFaceAnalysisSegmentation = (imageFile, endpoint) => {\n//   console.log("hitting api", endpoint);\n//   const formData = new FormData();\n//   formData.append("image", imageFile);\n//   console.log("hitting api with form data", formData);\n//   const headers = {\n//     "Content-Type": "multipart/form-data",\n//   };\n//   return APINail.post("/" + endpoint, formData, { headers: headers })\n//     .then((response) => {\n//       console.log("api success", response);\n//       return response;\n//     })\n//     .catch((error) => {\n//       console.error("Error fetching api data:", error);\n//       return error;\n//     });\n// };\n\nvar sendFaceAnalysisSegmentation = function sendFaceAnalysisSegmentation(imageFile, endpoint) {\n  console.log("hitting api", endpoint); // console.log("hitting api with file image", imageFile);\n\n  var formData = new FormData();\n  formData.append("image", imageFile); //console.log("hitting api with form data", formData);\n\n  var headers = {\n    "Content-Type": "multipart/form-data"\n  };\n  var timeout = 120000; // 120 seconds timeout (adjust as needed)\n\n  return api_faceAnalysis_APINail.post("/" + endpoint, formData, {\n    headers: headers,\n    timeout: timeout\n  }).then(function (response) {\n    // console.log("api success", response);\n    return response;\n  })["catch"](function (error) {\n    // Handle timeout or other errors here\n    if (axios_default().isCancel(error)) {// console.error("Request timed out:", error);\n    } else {// console.error("Error sending request:", error);\n    } // showSnackbar(errorMessages.faceAnalysisIssue).then(() => {\n    //   setTimeout(() => {\n    //     //emitModuleClosed();\n    //     hideSnackbar();\n    //   }, 2000);\n    // });\n\n\n    showErrorPermissionPanel(globalVariables/* errorMessages */.Qj.faceAnalysisIssue);\n    (0,utils_event/* emitFaceAnalysisEvent */.i1)("error", globalVariables/* errorMessages */.Qj.faceAnalysisIssue);\n    throw error; // Rethrow the error to propagate it further if needed\n  });\n};\nvar api_faceAnalysis_checkHelth = function checkHelth() {\n  return api_faceAnalysis_APINail.get("/_healthz").then(function (response) {\n    return response;\n  })["catch"](function (error) {\n    //console.error("Error fetching helth data:", error);\n    throw error;\n  });\n};\n;// CONCATENATED MODULE: ./src/js/utils/billingPanel.js\n\n\n\nvar billingPanel_Panel = null;\nvar billingPanel_msg = null;\nvar billingPanel_img = null;\nvar billingPanel_btn = null;\nfunction hideBillingPanel() {\n  billingPanel_Panel.style.display = "none";\n}\nfunction showBillingPanel() {\n  var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : globalVariables/* errorMessages */.Qj.billingIssue;\n  billingPanel_Panel.style.display = "flex";\n  billingPanel_msg.innerHTML = message;\n}\nfunction setBillingElement(handler) {\n  billingPanel_Panel = document.querySelector(".billing-panel");\n  billingPanel_msg = document.querySelector(".billing-message");\n  billingPanel_img = document.getElementById("billing-icon");\n  billingPanel_btn = document.getElementById("billing-btn");\n  billingPanel_img.src = svg_Error;\n  billingPanel_msg.innerHTML = globalVariables/* errorMessages */.Qj.cameraPermissionNotGranted;\n  billingPanel_btn.addEventListener("click", function () {\n    handleBillingClickEvent(handler);\n  });\n  hideBillingPanel();\n}\n\nvar handleBillingClickEvent = function handleBillingClickEvent(handler) {\n  handler();\n};\n;// CONCATENATED MODULE: ./src/assets/svg/compare_icon1.svg\n/* harmony default export */ const compare_icon1 = (__webpack_require__.p + "assets/models/59db29bfd52927d56b55983b9e7bad65.svg");\n;// CONCATENATED MODULE: ./src/htmlService/comparisonSlider.js\n // import comparisonIcon from "../assets/svg/compare_icon.svg";\n\n\nvar isDragging = false;\nvar comparisonSlider_dragContainer = null;\nvar comparisonSlider_dragLineSpan = null;\nvar comparisonSlider_video_Container = null;\nvar dragBtnIcon = null;\nvar isSliderVisible = false;\nfunction addComparisonSliderEvents(video_container) {\n  comparisonSlider_dragContainer = document.querySelector(".drag-container");\n  comparisonSlider_dragLineSpan = document.querySelector(".drag-line-container");\n  dragBtnIcon = document.querySelector(".drag-btn-icon");\n  dragBtnIcon.style.backgroundImage = "url(".concat(compare_icon1, ")");\n  comparisonSlider_video_Container = video_container;\n  comparisonSlider_dragLineSpan.addEventListener("mousedown", function (e) {\n    isDragging = true;\n  });\n  comparisonSlider_dragLineSpan.addEventListener("touchstart", function (e) {\n    isDragging = true;\n  });\n  comparisonSlider_dragContainer.addEventListener("mousemove", function (e) {\n    if (isDragging) {\n      if (getIsVideo()) {\n        var _dragContainer2;\n\n        if ((e === null || e === void 0 ? void 0 : e.clientX) <= 64) {\n          var _dragContainer;\n\n          //restricting dragging in left\n          comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(((_dragContainer = comparisonSlider_dragContainer) === null || _dragContainer === void 0 ? void 0 : _dragContainer.clientWidth) - 64, "px)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(64, "px");\n        } else if ((e === null || e === void 0 ? void 0 : e.clientX) >= ((_dragContainer2 = comparisonSlider_dragContainer) === null || _dragContainer2 === void 0 ? void 0 : _dragContainer2.clientWidth) - 78) {\n          var _dragContainer3;\n\n          //restricting dragging in right\n          comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(78, "px)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(((_dragContainer3 = comparisonSlider_dragContainer) === null || _dragContainer3 === void 0 ? void 0 : _dragContainer3.clientWidth) - 78, "px");\n        } else {\n          var _dragContainer4;\n\n          comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(((_dragContainer4 = comparisonSlider_dragContainer) === null || _dragContainer4 === void 0 ? void 0 : _dragContainer4.clientWidth) - (e === null || e === void 0 ? void 0 : e.clientX), "px)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(e === null || e === void 0 ? void 0 : e.clientX, "px");\n        }\n      } else {\n        var _dragContainer6;\n\n        if ((e === null || e === void 0 ? void 0 : e.clientX) <= 64) {\n          var _dragContainer5;\n\n          //restricting dragging in left\n          comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(((_dragContainer5 = comparisonSlider_dragContainer) === null || _dragContainer5 === void 0 ? void 0 : _dragContainer5.clientWidth) - 64, "px 0 0)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(64, "px");\n        } else if ((e === null || e === void 0 ? void 0 : e.clientX) >= ((_dragContainer6 = comparisonSlider_dragContainer) === null || _dragContainer6 === void 0 ? void 0 : _dragContainer6.clientWidth) - 78) {\n          var _dragContainer7;\n\n          //restricting dragging in right\n          comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(78, "px 0 0)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(((_dragContainer7 = comparisonSlider_dragContainer) === null || _dragContainer7 === void 0 ? void 0 : _dragContainer7.clientWidth) - 78, "px");\n        } else {\n          var _dragContainer8;\n\n          comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(((_dragContainer8 = comparisonSlider_dragContainer) === null || _dragContainer8 === void 0 ? void 0 : _dragContainer8.clientWidth) - (e === null || e === void 0 ? void 0 : e.clientX), "px 0 0)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(e === null || e === void 0 ? void 0 : e.clientX, "px");\n        }\n      }\n    }\n  });\n  comparisonSlider_dragContainer.addEventListener("touchmove", function (e) {\n    if (isDragging) {\n      if (e.touches && e.touches.length) {\n        if (getIsVideo()) {\n          var _dragContainer9, _e$touches$, _e$touches$2;\n\n          comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(((_dragContainer9 = comparisonSlider_dragContainer) === null || _dragContainer9 === void 0 ? void 0 : _dragContainer9.clientWidth) - (e === null || e === void 0 ? void 0 : (_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX), "px)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(e === null || e === void 0 ? void 0 : (_e$touches$2 = e.touches[0]) === null || _e$touches$2 === void 0 ? void 0 : _e$touches$2.clientX, "px");\n        } else {\n          var _dragContainer10, _e$touches$3, _e$touches$4;\n\n          comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(((_dragContainer10 = comparisonSlider_dragContainer) === null || _dragContainer10 === void 0 ? void 0 : _dragContainer10.clientWidth) - (e === null || e === void 0 ? void 0 : (_e$touches$3 = e.touches[0]) === null || _e$touches$3 === void 0 ? void 0 : _e$touches$3.clientX), "px 0 0)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(e === null || e === void 0 ? void 0 : (_e$touches$4 = e.touches[0]) === null || _e$touches$4 === void 0 ? void 0 : _e$touches$4.clientX, "px");\n        }\n      }\n    }\n  });\n  comparisonSlider_dragContainer.addEventListener("mouseup", function (e) {\n    isDragging = false;\n  });\n  comparisonSlider_dragContainer.addEventListener("mouseleave", function (e) {\n    isDragging = false;\n  });\n  comparisonSlider_dragContainer.addEventListener("touchend", function (e) {\n    isDragging = false;\n  });\n  comparisonSlider_dragContainer.addEventListener("touchcancel", function (e) {\n    isDragging = false;\n  });\n}\nfunction showComparisonSlider() {\n  var initialSliderPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "50%";\n  var showDrag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "block";\n  isSliderVisible = true;\n  comparisonSlider_dragContainer.style.display = showDrag;\n  comparisonSlider_video_Container.style.visibility = "visible";\n  resetComparisonSlider();\n}\nfunction resetComparisonSlider() {\n  var initialSliderPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "50%";\n  var comparisonState = arguments.length > 1 ? arguments[1] : undefined;\n  var isvideo = arguments.length > 2 ? arguments[2] : undefined;\n  //console.error("resetComparisonSlider");\n  if (comparisonState === 1) initialSliderPos = "0%";\n\n  if (getIsVideo()) {\n    comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(initialSliderPos, ")");\n    comparisonSlider_dragLineSpan.style.left = "".concat(initialSliderPos);\n    comparisonSlider_video_Container.style.transform = "scaleX(-1)";\n  } else {\n    comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(initialSliderPos, " 0 0)");\n    comparisonSlider_dragLineSpan.style.left = "".concat(initialSliderPos);\n    comparisonSlider_video_Container.style.transform = "scaleX(1)";\n  }\n}\nfunction toggleComparisonSlider() {\n  if (isSliderVisible) {\n    hideComparisonSlider();\n    isSliderVisible = false;\n  } else {\n    showComparisonSlider();\n    isSliderVisible = true;\n  }\n}\nfunction hideComparisonSlider() {\n  isSliderVisible = false;\n  resetComparisonSlider();\n  comparisonSlider_dragContainer.style.display = "none";\n  comparisonSlider_video_Container.style.visibility = "hidden";\n}\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.some.js\nvar es6_array_some = __webpack_require__(6773);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/chooseTryOn.css\nvar chooseTryOn = __webpack_require__(1691);\n;// CONCATENATED MODULE: ./src/htmlService/styles/chooseTryOn.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar chooseTryOn_options = {};\n\nchooseTryOn_options.styleTagTransform = (styleTagTransform_default());\nchooseTryOn_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      chooseTryOn_options.insert = insertBySelector_default().bind(null, "head");\n    \nchooseTryOn_options.domAPI = (styleDomAPI_default());\nchooseTryOn_options.insertStyleElement = (insertStyleElement_default());\n\nvar chooseTryOn_update = injectStylesIntoStyleTag_default()(chooseTryOn/* default */.Z, chooseTryOn_options);\n\n\n\n\n       /* harmony default export */ const styles_chooseTryOn = (chooseTryOn/* default */.Z && chooseTryOn/* default */.Z.locals ? chooseTryOn/* default */.Z.locals : undefined);\n\n// EXTERNAL MODULE: ./src/assets/svg/powered_by.svg\nvar powered_by = __webpack_require__(9814);\n;// CONCATENATED MODULE: ./src/htmlService/ChooseTryOn.js\n\n\n\n\n\nvar chooseTryOnConfig = {\n  tryOnScreen: {\n    hideTryOnScreen: false,\n    mode: "light",\n    tryOnTypeConfig: {\n      hideLiveCamera: false,\n      hideModelTryOn: false,\n      hideUploadMode: false\n    }\n  }\n};\nfunction overrideChooseTryOnConfig(config) {\n  chooseTryOnConfig = config;\n}\nfunction getChooseTryOnConfig() {\n  return chooseTryOnConfig;\n}\nvar ModelsList = [{\n  imageUrl: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/6Dzoxo/original/cxr_assets/models/nail/02.jpg",\n  isActive: true\n}, {\n  imageUrl: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/6Dzoxo/original/cxr_assets/models/nail/01.jpg",\n  isActive: true\n}, {\n  imageUrl: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/6Dzoxo/original/cxr_assets/models/nail/03.jpg",\n  isActive: true\n}, {\n  imageUrl: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/6Dzoxo/original/cxr_assets/models/nail/04.jpg",\n  isActive: true\n}, {\n  imageUrl: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/6Dzoxo/original/cxr_assets/models/nail/05.jpg",\n  isActive: true\n}];\nvar modeMap = {\n  dark: "dark",\n  light: "light"\n};\nvar themeStyles = {\n  dark: {\n    heading_text: "#fff",\n    heading_subtext: "#DBDBDB",\n    live_tryon: "#404141",\n    live_tryon_left_text: "#DBDBDB",\n    arrow_right: "white",\n    choose_model_heading: "#fff",\n    model_tryon_upload: "#343536",\n    model_tryon_upload_icon: "#E7E7E7",\n    model_tryon_text: "#B7B8B8",\n    model_tryon_upload_border: "0.6px dashed #707071",\n    upload_image: "#404141",\n    upload_image_left_text: "#DBDBDB"\n  },\n  light: {\n    heading_text: "#101112",\n    heading_subtext: "#888889",\n    live_tryon: "#F1F1F1",\n    live_tryon_left_text: "#4C4D4D",\n    arrow_right: "#4C4D4D",\n    choose_model_heading: "#101112",\n    model_tryon_upload: "#E7E7E7",\n    model_tryon_upload_icon: "#4C4D4D",\n    model_tryon_text: "#888889",\n    model_tryon_upload_border: "1px dashed #9FA0A0",\n    upload_image: "#F1F1F1",\n    upload_image_left_text: "#4C4D4D"\n  },\n  "default": {\n    heading_text: "#101112",\n    heading_subtext: "#888889",\n    live_tryon: "#F1F1F1",\n    live_tryon_left_text: "#4C4D4D",\n    arrow_right: "#4C4D4D",\n    choose_model_heading: "#101112",\n    model_tryon_upload: "#E7E7E7",\n    model_tryon_upload_icon: "#4C4D4D",\n    model_tryon_text: "#888889",\n    model_tryon_upload_border: "1px dashed #9FA0A0",\n    upload_image: "#F1F1F1",\n    upload_image_left_text: "#4C4D4D"\n  }\n};\n\nfunction getLiveTryOnHtml(mode) {\n  var _themeStyles, _themeStyles2, _themeStyles3;\n\n  return "<div style=\\"background:".concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles = themeStyles[mode || "default"]) === null || _themeStyles === void 0 ? void 0 : _themeStyles.live_tryon, ";\\" class=\\"tryon_container_live_tryon\\">\\n            <div class=\\"tryon_container_live_tryon_left\\">\\n                <div class=\\"tryon_container_live_tryon_left_camera\\">\\n                    <svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"24\\" height=\\"25\\" viewBox=\\"0 0 24 25\\" fill=\\"none\\">\\n                        <path d=\\"M19 6.99994H17.72L17.4 5.99994C17.1926 5.41317 16.8077 4.90544 16.2989 4.5471C15.7901 4.18876 15.1824 3.99754 14.56 3.99994H9.44C8.81155 4.00111 8.19933 4.19962 7.68977 4.56744C7.1802 4.93527 6.79901 5.45383 6.6 6.04994L6.28 7.04994H5C4.20435 7.04994 3.44129 7.36601 2.87868 7.92862C2.31607 8.49123 2 9.25429 2 10.0499V18.0499C2 18.8456 2.31607 19.6087 2.87868 20.1713C3.44129 20.7339 4.20435 21.0499 5 21.0499H19C19.7956 21.0499 20.5587 20.7339 21.1213 20.1713C21.6839 19.6087 22 18.8456 22 18.0499V10.0499C22.0066 9.65179 21.9339 9.2563 21.7862 8.88653C21.6384 8.51676 21.4184 8.18011 21.1392 7.89622C20.86 7.61233 20.527 7.38687 20.1597 7.23299C19.7924 7.07911 19.3982 6.99988 19 6.99994ZM20 17.9999C20 18.2652 19.8946 18.5195 19.7071 18.707C19.5196 18.8946 19.2652 18.9999 19 18.9999H5C4.73478 18.9999 4.48043 18.8946 4.29289 18.707C4.10536 18.5195 4 18.2652 4 17.9999V9.99994C4 9.73472 4.10536 9.48037 4.29289 9.29283C4.48043 9.1053 4.73478 8.99994 5 8.99994H7C7.21807 9.01132 7.43386 8.95101 7.61443 8.82822C7.795 8.70544 7.93042 8.52692 8 8.31994L8.54 6.67994C8.60709 6.48132 8.7349 6.3088 8.90537 6.18678C9.07584 6.06476 9.28036 5.9994 9.49 5.99994H14.61C14.8196 5.9994 15.0242 6.06476 15.1946 6.18678C15.3651 6.3088 15.4929 6.48132 15.56 6.67994L16.1 8.31994C16.1642 8.51068 16.2844 8.67763 16.445 8.79895C16.6055 8.92027 16.799 8.99032 17 8.99994H19C19.2652 8.99994 19.5196 9.1053 19.7071 9.29283C19.8946 9.48037 20 9.73472 20 9.99994V17.9999ZM12 8.99994C11.2089 8.99994 10.4355 9.23453 9.77772 9.67406C9.11992 10.1136 8.60723 10.7383 8.30448 11.4692C8.00173 12.2001 7.92252 13.0044 8.07686 13.7803C8.2312 14.5562 8.61216 15.269 9.17157 15.8284C9.73098 16.3878 10.4437 16.7687 11.2196 16.9231C11.9956 17.0774 12.7998 16.9982 13.5307 16.6955C14.2616 16.3927 14.8864 15.88 15.3259 15.2222C15.7654 14.5644 16 13.7911 16 12.9999C16 11.9391 15.5786 10.9217 14.8284 10.1715C14.0783 9.42137 13.0609 8.99994 12 8.99994ZM12 14.9999C11.6044 14.9999 11.2178 14.8826 10.8889 14.6629C10.56 14.4431 10.3036 14.1308 10.1522 13.7653C10.0009 13.3999 9.96126 12.9977 10.0384 12.6098C10.1156 12.2218 10.3061 11.8654 10.5858 11.5857C10.8655 11.306 11.2219 11.1155 11.6098 11.0384C11.9978 10.9612 12.3999 11.0008 12.7654 11.1522C13.1308 11.3036 13.4432 11.5599 13.6629 11.8888C13.8827 12.2177 14 12.6044 14 12.9999C14 13.5304 13.7893 14.0391 13.4142 14.4142C13.0391 14.7892 12.5304 14.9999 12 14.9999Z\\" fill=\\"#DA0E64\\"/>\\n                    </svg>\\n                </div>\\n                <div style=\\"color:").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles2 = themeStyles[mode || "default"]) === null || _themeStyles2 === void 0 ? void 0 : _themeStyles2.live_tryon_left_text, ";\\" class=\\"tryon_container_live_tryon_left_text\\">\\n                     Live Camera\\n                </div>\\n            </div>\\n            <div class=\\"tryon_container_live_tryon_right\\">\\n                <svg width=\\"24\\" height=\\"25\\" viewBox=\\"0 0 24 25\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n                    <g clip-path=\\"url(#clip0_10465_112862)\\">\\n                    <path fill-rule=\\"evenodd\\" clip-rule=\\"evenodd\\" d=\\"M14.7071 13.207C15.0976 12.8165 15.0976 12.1833 14.7071 11.7928L9.70711 6.79278C9.31658 6.40225 8.68342 6.40225 8.29289 6.79278C7.90237 7.1833 7.90237 7.81647 8.29289 8.20699L12.5858 12.4999L8.29289 16.7928C7.90237 17.1833 7.90237 17.8165 8.29289 18.207C8.68342 18.5975 9.31658 18.5975 9.70711 18.207L14.7071 13.207Z\\" fill=").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles3 = themeStyles[mode || "default"]) === null || _themeStyles3 === void 0 ? void 0 : _themeStyles3.arrow_right, " />\\n                    </g>\\n                    <defs>\\n                    <clipPath id=\\"clip0_10465_112862\\">\\n                    <rect width=\\"24\\" height=\\"24\\" fill=\\"white\\" transform=\\"translate(0 0.499939)\\"/>\\n                    </clipPath>\\n                    </defs>\\n                </svg>\\n            </div>\\n          </div>");\n}\n\nfunction getModelTryOnHtml(models, hideUploadTryOn, mode) {\n  var _themeStyles4, _themeStyles5, _themeStyles6, _themeStyles7, _themeStyles8;\n\n  var ModelsHtml = "<div>\\n            <div style=\\"color:".concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles4 = themeStyles[mode || "default"]) === null || _themeStyles4 === void 0 ? void 0 : _themeStyles4.choose_model_heading, ";\\" class=\\"tryon_container_choose_model_heading\\">\\n                Choose A Model\\n            </div>\\n            <div class=\\"tryon_container_model_tryon\\">\\n                        ").concat(models === null || models === void 0 ? void 0 : models.map(function (eachModel, index) {\n    return "\\n                                    ".concat(eachModel !== null && eachModel !== void 0 && eachModel.isActive ? "<div class=\\"tryon_container_model_tryon_container\\" \\">\\n                                                <img class=\\"tryon_container_model_tryon_image\\" id=\\"".concat(index, "\\" src=\\"").concat(eachModel === null || eachModel === void 0 ? void 0 : eachModel.imageUrl, "\\" />\\n                                           </div>") : null, "\\n                                ");\n  }).filter(function (eachModel) {\n    return Boolean(eachModel);\n  }).join(""), "\\n                        ").concat(!hideUploadTryOn ? "\\n                                <div style=\\"\\n                                    background:".concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles5 = themeStyles[mode || "default"]) === null || _themeStyles5 === void 0 ? void 0 : _themeStyles5.model_tryon_upload, ";\\n                                    border:").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles6 = themeStyles[mode || "default"]) === null || _themeStyles6 === void 0 ? void 0 : _themeStyles6.model_tryon_upload_border, ";\\" id=\\"tryon_container_model_tryon_upload\\" class=\\"tryon_container_model_tryon_upload\\">\\n                                    <div>\\n                                        <svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"24\\" height=\\"24\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\">\\n                                        <path d=\\"M8.71 7.71L11 5.41V15C11 15.2652 11.1054 15.5196 11.2929 15.7071C11.4804 15.8946 11.7348 16 12 16C12.2652 16 12.5196 15.8946 12.7071 15.7071C12.8946 15.5196 13 15.2652 13 15V5.41L15.29 7.71C15.383 7.80372 15.4936 7.87812 15.6154 7.92889C15.7373 7.97966 15.868 8.00579 16 8.00579C16.132 8.00579 16.2627 7.97966 16.3846 7.92889C16.5064 7.87812 16.617 7.80372 16.71 7.71C16.8037 7.61703 16.8781 7.50643 16.9289 7.38457C16.9797 7.26271 17.0058 7.13201 17.0058 7C17.0058 6.86798 16.9797 6.73728 16.9289 6.61542C16.8781 6.49356 16.8037 6.38296 16.71 6.29L12.71 2.29C12.6149 2.19895 12.5028 2.12759 12.38 2.08C12.1365 1.97998 11.8635 1.97998 11.62 2.08C11.4972 2.12759 11.3851 2.19895 11.29 2.29L7.29 6.29C7.19676 6.38323 7.1228 6.49392 7.07234 6.61575C7.02188 6.73757 6.99591 6.86814 6.99591 7C6.99591 7.13186 7.02188 7.26242 7.07234 7.38424C7.1228 7.50607 7.19676 7.61676 7.29 7.71C7.38324 7.80323 7.49393 7.87719 7.61575 7.92766C7.73757 7.97812 7.86814 8.00409 8 8.00409C8.13186 8.00409 8.26243 7.97812 8.38425 7.92766C8.50607 7.87719 8.61676 7.80323 8.71 7.71ZM21 14C20.7348 14 20.4804 14.1054 20.2929 14.2929C20.1054 14.4804 20 14.7348 20 15V19C20 19.2652 19.8946 19.5196 19.7071 19.7071C19.5196 19.8946 19.2652 20 19 20H5C4.73478 20 4.48043 19.8946 4.29289 19.7071C4.10536 19.5196 4 19.2652 4 19V15C4 14.7348 3.89464 14.4804 3.70711 14.2929C3.51957 14.1054 3.26522 14 3 14C2.73478 14 2.48043 14.1054 2.29289 14.2929C2.10536 14.4804 2 14.7348 2 15V19C2 19.7956 2.31607 20.5587 2.87868 21.1213C3.44129 21.6839 4.20435 22 5 22H19C19.7957 22 20.5587 21.6839 21.1213 21.1213C21.6839 20.5587 22 19.7956 22 19V15C22 14.7348 21.8946 14.4804 21.7071 14.2929C21.5196 14.1054 21.2652 14 21 14Z\\" fill=").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles7 = themeStyles[mode || "default"]) === null || _themeStyles7 === void 0 ? void 0 : _themeStyles7.model_tryon_upload_icon, " />\\n                                        </svg>\\n                                        </div>\\n                                    <div style=\\"color:").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles8 = themeStyles[mode || "default"]) === null || _themeStyles8 === void 0 ? void 0 : _themeStyles8.model_tryon_text, ";\\">\\n                                        Upload Image\\n                                    </div>\\n                                </div>\\n                            ") : "", "\\n            </div>\\n        </div>\\n        ");\n  return ModelsHtml;\n}\n\nfunction getUploadTryOnHtml(mode) {\n  var _themeStyles9, _themeStyles10, _themeStyles11;\n\n  return "<div style=\\"background:".concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles9 = themeStyles[mode || "default"]) === null || _themeStyles9 === void 0 ? void 0 : _themeStyles9.upload_image, ";\\" class=\\"tryon_container_upload_tryon\\">\\n            <div class=\\"tryon_container_upload_tryon_left\\">\\n                <div class=\\"tryon_container_upload_tryon_left_camera\\">\\n                    <svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"24\\" height=\\"25\\" viewBox=\\"0 0 24 25\\" fill=\\"none\\">\\n                        <path d=\\"M19 6.99994H17.72L17.4 5.99994C17.1926 5.41317 16.8077 4.90544 16.2989 4.5471C15.7901 4.18876 15.1824 3.99754 14.56 3.99994H9.44C8.81155 4.00111 8.19933 4.19962 7.68977 4.56744C7.1802 4.93527 6.79901 5.45383 6.6 6.04994L6.28 7.04994H5C4.20435 7.04994 3.44129 7.36601 2.87868 7.92862C2.31607 8.49123 2 9.25429 2 10.0499V18.0499C2 18.8456 2.31607 19.6087 2.87868 20.1713C3.44129 20.7339 4.20435 21.0499 5 21.0499H19C19.7956 21.0499 20.5587 20.7339 21.1213 20.1713C21.6839 19.6087 22 18.8456 22 18.0499V10.0499C22.0066 9.65179 21.9339 9.2563 21.7862 8.88653C21.6384 8.51676 21.4184 8.18011 21.1392 7.89622C20.86 7.61233 20.527 7.38687 20.1597 7.23299C19.7924 7.07911 19.3982 6.99988 19 6.99994ZM20 17.9999C20 18.2652 19.8946 18.5195 19.7071 18.707C19.5196 18.8946 19.2652 18.9999 19 18.9999H5C4.73478 18.9999 4.48043 18.8946 4.29289 18.707C4.10536 18.5195 4 18.2652 4 17.9999V9.99994C4 9.73472 4.10536 9.48037 4.29289 9.29283C4.48043 9.1053 4.73478 8.99994 5 8.99994H7C7.21807 9.01132 7.43386 8.95101 7.61443 8.82822C7.795 8.70544 7.93042 8.52692 8 8.31994L8.54 6.67994C8.60709 6.48132 8.7349 6.3088 8.90537 6.18678C9.07584 6.06476 9.28036 5.9994 9.49 5.99994H14.61C14.8196 5.9994 15.0242 6.06476 15.1946 6.18678C15.3651 6.3088 15.4929 6.48132 15.56 6.67994L16.1 8.31994C16.1642 8.51068 16.2844 8.67763 16.445 8.79895C16.6055 8.92027 16.799 8.99032 17 8.99994H19C19.2652 8.99994 19.5196 9.1053 19.7071 9.29283C19.8946 9.48037 20 9.73472 20 9.99994V17.9999ZM12 8.99994C11.2089 8.99994 10.4355 9.23453 9.77772 9.67406C9.11992 10.1136 8.60723 10.7383 8.30448 11.4692C8.00173 12.2001 7.92252 13.0044 8.07686 13.7803C8.2312 14.5562 8.61216 15.269 9.17157 15.8284C9.73098 16.3878 10.4437 16.7687 11.2196 16.9231C11.9956 17.0774 12.7998 16.9982 13.5307 16.6955C14.2616 16.3927 14.8864 15.88 15.3259 15.2222C15.7654 14.5644 16 13.7911 16 12.9999C16 11.9391 15.5786 10.9217 14.8284 10.1715C14.0783 9.42137 13.0609 8.99994 12 8.99994ZM12 14.9999C11.6044 14.9999 11.2178 14.8826 10.8889 14.6629C10.56 14.4431 10.3036 14.1308 10.1522 13.7653C10.0009 13.3999 9.96126 12.9977 10.0384 12.6098C10.1156 12.2218 10.3061 11.8654 10.5858 11.5857C10.8655 11.306 11.2219 11.1155 11.6098 11.0384C11.9978 10.9612 12.3999 11.0008 12.7654 11.1522C13.1308 11.3036 13.4432 11.5599 13.6629 11.8888C13.8827 12.2177 14 12.6044 14 12.9999C14 13.5304 13.7893 14.0391 13.4142 14.4142C13.0391 14.7892 12.5304 14.9999 12 14.9999Z\\" fill=\\"#DA0E64\\"/>\\n                    </svg>\\n                </div>\\n                <div style=\\"color:").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles10 = themeStyles[mode || "default"]) === null || _themeStyles10 === void 0 ? void 0 : _themeStyles10.upload_image_left_text, ";\\" class=\\"tryon_container_upload_tryon_left_text\\">\\n                     Upload Image\\n                </div>\\n            </div>\\n            <div class=\\"tryon_container_upload_tryon_right\\">\\n                <svg width=\\"24\\" height=\\"25\\" viewBox=\\"0 0 24 25\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n                    <g clip-path=\\"url(#clip0_10465_112862)\\">\\n                    <path fill-rule=\\"evenodd\\" clip-rule=\\"evenodd\\" d=\\"M14.7071 13.207C15.0976 12.8165 15.0976 12.1833 14.7071 11.7928L9.70711 6.79278C9.31658 6.40225 8.68342 6.40225 8.29289 6.79278C7.90237 7.1833 7.90237 7.81647 8.29289 8.20699L12.5858 12.4999L8.29289 16.7928C7.90237 17.1833 7.90237 17.8165 8.29289 18.207C8.68342 18.5975 9.31658 18.5975 9.70711 18.207L14.7071 13.207Z\\" fill=").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles11 = themeStyles[mode || "default"]) === null || _themeStyles11 === void 0 ? void 0 : _themeStyles11.arrow_right, " />\\n                    </g>\\n                    <defs>\\n                    <clipPath id=\\"clip0_10465_112862\\">\\n                    <rect width=\\"24\\" height=\\"24\\" fill=\\"white\\" transform=\\"translate(0 0.499939)\\"/>\\n                    </clipPath>\\n                    </defs>\\n                </svg>\\n            </div>\\n          </div>");\n}\n\nfunction buildTryOnScreen(handler) {\n  var _getHtmlElements = getHtmlElemets_getHtmlElements(),\n      tryOnScreen = _getHtmlElements.tryOnScreen;\n\n  var hideTryOnScreen = chooseTryOnConfig.tryOnScreen.hideTryOnScreen;\n  var hideLiveTryOn = chooseTryOnConfig.tryOnScreen.tryOnTypeConfig.hideLiveCamera;\n  var hideModelTryOn = chooseTryOnConfig.tryOnScreen.tryOnTypeConfig.hideModelTryOn;\n  var hideUploadTryOn = chooseTryOnConfig.tryOnScreen.tryOnTypeConfig.hideUploadMode;\n  var mode = chooseTryOnConfig.tryOnScreen.mode === "dark" ? "dark" : "light";\n  var TryOnHtml = "";\n  tryOnScreen.classList.add("tryon_screen_".concat(modeMap[mode || "light"]));\n\n  if (!hideTryOnScreen) {\n    var _themeStyles12, _themeStyles13;\n\n    TryOnHtml = "\\n            <div class=\\"tryon_container\\">\\n                <div class=\\"tryon_container_heading\\">\\n                    <div style=\\"color:".concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles12 = themeStyles[mode || "default"]) === null || _themeStyles12 === void 0 ? void 0 : _themeStyles12.heading_text, ";\\" class=\\"tryon_container_heading_text\\">\\n                        Choose a Try-on Mode\\n                    </div>\\n                    <div style=\\"color:").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles13 = themeStyles[mode || "default"]) === null || _themeStyles13 === void 0 ? void 0 : _themeStyles13.heading_subtext, ";\\" class=\\"tryon_container_heading_subtext\\">\\n                        Select and immerse yourself in personalized try-on experiences with ease.\\n                    </div>\\n                </div>\\n                ").concat(!hideLiveTryOn ? getLiveTryOnHtml(mode) : "", "\\n                ").concat(!hideModelTryOn ? getModelTryOnHtml(ModelsList, hideUploadTryOn, mode) : "", " \\n                ").concat(hideModelTryOn ? !hideUploadTryOn ? getUploadTryOnHtml(mode) : "" : "", "\\n\\n            </div>\\n        ");\n  } // add html to div\n\n\n  tryOnScreen.innerHTML += TryOnHtml; // attach eventhandlers\n\n  var liveTryOnContainer = document.querySelector(".tryon_container_live_tryon");\n  liveTryOnContainer === null || liveTryOnContainer === void 0 ? void 0 : liveTryOnContainer.addEventListener("click", function () {\n    handler("live");\n  });\n  var modelTryOnContainer = document.querySelector(".tryon_container_model_tryon");\n  modelTryOnContainer === null || modelTryOnContainer === void 0 ? void 0 : modelTryOnContainer.addEventListener("click", function (e) {\n    var _e$target;\n\n    var ModelId = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.id;\n    if (!ModelId) return;\n    if (ModelId !== "tryon_container_model_tryon_upload") handler("modelTryOn", ModelId, ModelsList[ModelId].imageUrl);\n  });\n  var uploadTryOnContainer = document.querySelector(".tryon_container_model_tryon_upload");\n  uploadTryOnContainer === null || uploadTryOnContainer === void 0 ? void 0 : uploadTryOnContainer.addEventListener("click", function () {\n    handler("upload");\n  });\n  var uploadTryOnContainerSeparate = document.querySelector(".tryon_container_upload_tryon");\n  uploadTryOnContainerSeparate === null || uploadTryOnContainerSeparate === void 0 ? void 0 : uploadTryOnContainerSeparate.addEventListener("click", function () {\n    handler("upload");\n  });\n}\nfunction showTryOnScreen() {\n  var _getHtmlElements2 = getHtmlElemets_getHtmlElements(),\n      tryOnScreen = _getHtmlElements2.tryOnScreen;\n\n  tryOnScreen.style.display = "flex";\n}\nfunction hideTryOnScreen() {\n  var _getHtmlElements3 = getHtmlElemets_getHtmlElements(),\n      tryOnScreen = _getHtmlElements3.tryOnScreen;\n\n  tryOnScreen.style.display = "none";\n}\n;// CONCATENATED MODULE: ./src/moduleConfig/moduleConfig.js\n\n\n\n\n\n\n\n\n\n\nfunction moduleConfig_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction moduleConfig_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { moduleConfig_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { moduleConfig_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\nvar fetchModuleConfig = /*#__PURE__*/function () {\n  var _ref = moduleConfig_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(sceneManager) {\n    var modelsname, errorOccurred, subscriptionIssueOccurred, currentmessage, modelApiArray, res, _res$find, _res$find2, _res$find2$data, errorMessage, modelsdata;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            modelsname = [// CategoryFactories.hair,\n            CategoryFactories.lips // CategoryFactories.blush,\n            // "eyeLiner",\n            // "eyeShadow",\n            // "nailColor",\n            ];\n            errorOccurred = false;\n            subscriptionIssueOccurred = false;\n            modelApiArray = CategoriesTypes === null || CategoriesTypes === void 0 ? void 0 : CategoriesTypes.map(function (eachModelCategory) {\n              return getModelsConfig("beauty", eachModelCategory.apiPayload, "desktop")["catch"](function (error) {\n                if (error.response && error.response.status && error.response.status === 403) {\n                  (0,utils_event/* emitSubscriptionIssue */.RG)(error.response.data);\n                  subscriptionIssueOccurred = true;\n                } else {\n                  if (error.response && error.response.data && error.response.data.error) currentmessage = error.response.data.error;else currentmessage = error.message;\n                } // emitSubscriptionIssue(error.response.data); // Emitting issue r\n                // showSnackbar(currentmessage).then(() => {\n                //   setTimeout(() => {\n                //     //CloseModule();\n                //     hideSnackbar();\n                //   }, 2000);\n                // });\n\n\n                errorOccurred = true; // Set flag to true indicating an error occurred\n              });\n            });\n            _context.next = 6;\n            return Promise.all(modelApiArray);\n\n          case 6:\n            res = _context.sent;\n\n            if (!errorOccurred) {\n              _context.next = 10;\n              break;\n            }\n\n            if (subscriptionIssueOccurred) showBillingPanel(errorMessages.billingIssue); // showSnackbar(currentmessage).then(() => {\n            //   setTimeout(() => {\n            //     hideSnackbar();\n            //   }, 2000);\n            // });\n            else showErrorPermissionPanel(currentmessage);\n            return _context.abrupt("return");\n\n          case 10:\n            if (res !== null && res !== void 0 && res.some(function (response) {\n              var _response$data;\n\n              return (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.status) === "403";\n            })) {\n              // If any response has status code 403\n              (0,utils_event/* emitInitComplete */.eT)();\n              (0,utils_event/* emitSubscriptionIssue */.RG)((_res$find = res.find(function (response) {\n                var _response$data2;\n\n                return (response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.status) === "403";\n              })) === null || _res$find === void 0 ? void 0 : _res$find.data); // Emitting issue related to first occurrence of 403 status\n\n              errorMessage = ((_res$find2 = res.find(function (response) {\n                var _response$data3;\n\n                return (response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.status) === "403";\n              })) === null || _res$find2 === void 0 ? void 0 : (_res$find2$data = _res$find2.data) === null || _res$find2$data === void 0 ? void 0 : _res$find2$data.message) || "SKU configuration failed due to an error.";\n              showBillingPanel(errorMessages.billingIssue); // showSnackbar(errorMessage).then(() => {\n              //   setTimeout(() => {\n              //     //CloseModule();\n              //     hideSnackbar();\n              //   }, 2000);\n              // });\n              // You can return here or perform any other necessary actions\n            } else {\n              modelsdata = res === null || res === void 0 ? void 0 : res.map(function (eachResponse) {\n                return eachResponse === null || eachResponse === void 0 ? void 0 : eachResponse.data;\n              });\n              sceneManager.setModelAPIResponse(modelsdata); // buildTryOnScreen(sceneManager.getModelData(), tryOnEventHandler);\n              //createModels(sceneManager.getModelData(), modelsEventHandler);\n\n              (0,utils_event/* emitInitComplete */.eT)();\n            }\n\n          case 11:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchModuleConfig(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n;// CONCATENATED MODULE: ./src/js/face-analysis/faceAnalysis.js\n\n\n\n\n\nfunction faceAnalysis_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction faceAnalysis_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { faceAnalysis_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { faceAnalysis_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\n // export async function faceAnalysisSnapShot() {\n//   if (getSceneManagerInstance()) {\n//     const ss = getSceneManagerInstance().takeScreenShot();\n//     //console.log("screenshot successfull");\n//     const imageBlob = new Blob([ss.replace(/^data:image\\/jpeg;base64,/, "")], {\n//       type: "image/jpeg",\n//     });\n//     //console.log("image capture success for face analysis");\n//     let errorOccurred;\n//     let ApiName = [\n//       "skinreport",\n//       // "pore",\n//       // "acne",\n//       // "wrinkles",\n//       // "eyebag",\n//       // "darkcircles",\n//     ];\n//     try {\n//       let modelApiArray = ApiName?.map((eachapi) => {\n//         return sendFaceAnalysisSegmentation(imageBlob, eachapi).catch(\n//           (error) => {\n//             // errorOccurred = true;\n//             // console.error("Error occurred for API:", eachapi, error);\n//           }\n//         );\n//       });\n//       setClicked(true);\n//       if (errorOccurred) {\n//         showSnackbar(currentmessage).then(() => {\n//           setTimeout(() => {\n//             //CloseModule();\n//             hideSnackbar();\n//           }, 2000);\n//         });\n//         return;\n//       }\n//       Promise.all(modelApiArray)\n//         .then((res) => {\n//           const faceAnalysisData = res?.map(\n//             (eachResponse) => eachResponse?.data\n//           );\n//           emitFaceAnalysisEvent("result", faceAnalysisData);\n//         })\n//         .catch((error) => {});\n//     } catch (error) {}\n//   }\n// }\n\nfunction faceAnalysisSnapShot() {\n  return _faceAnalysisSnapShot.apply(this, arguments);\n}\n\nfunction _faceAnalysisSnapShot() {\n  _faceAnalysisSnapShot = faceAnalysis_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var ss, imageBlob, errorOccurred, ApiName, res;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!getSceneManagerInstance()) {\n              _context.next = 15;\n              break;\n            }\n\n            ss = getSceneManagerInstance().takeScreenShot(); //console.log("screenshot successfull");\n\n            imageBlob = new Blob([ss.replace(/^data:image\\/jpeg;base64,/, "")], {\n              type: "image/jpeg"\n            }); //console.log("image capture success for face analysis");\n\n            ApiName = ["skinreport" // "pore",\n            // "acne",\n            // "wrinkles",\n            // "eyebag",\n            // "darkcircles",\n            ];\n            _context.prev = 4;\n            setClicked(true);\n            _context.next = 8;\n            return sendFaceAnalysisSegmentation(imageBlob, "skinreport");\n\n          case 8:\n            res = _context.sent;\n            // if any error occurs that want to catch it. other wise\n            // want to take the response from above api and add it to\n            (0,utils_event/* emitFaceAnalysisEvent */.i1)("result", res.data);\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context["catch"](4);\n            console.log(_context.t0);\n\n          case 15:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 12]]);\n  }));\n  return _faceAnalysisSnapShot.apply(this, arguments);\n}\n\nfunction openFaceAnalysis() {\n  return _openFaceAnalysis.apply(this, arguments);\n}\n\nfunction _openFaceAnalysis() {\n  _openFaceAnalysis = faceAnalysis_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var _getHtmlElements, canvas, faceanalysisapiResponse;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _getHtmlElements = getHtmlElemets_getHtmlElements(), canvas = _getHtmlElements.canvas;\n            setTrackingMode(TrackingMode.Face);\n\n            if (!(getTrackingMode() === TrackingMode.Face)) {\n              _context2.next = 10;\n              break;\n            }\n\n            if (getProviders().facemeshLandmarksProvider) {\n              _context2.next = 9;\n              break;\n            }\n\n            setProvider("face", new FacemeshLandmarksProvider(onLandmarks, canvas));\n            _context2.next = 7;\n            return getProviders().facemeshLandmarksProvider.initialize();\n\n          case 7:\n            _context2.next = 10;\n            break;\n\n          case 9:\n            getProviders().facemeshLandmarksProvider.setSelfieMode(getIsVideo);\n\n          case 10:\n            onClearClick();\n            hideModelContainer(); // hideOptionsContainer();\n            // if (isConfigContainerActive()) toggleOptionsButton(3);\n\n            hideConfigContainer();\n            optionsEventHandler("liveTryOn");\n            faceanalysisapiResponse = globalVariables/* faceAnalysisSkuConfig */.km;\n            setCurrentTryon(faceanalysisapiResponse.sku.subCategory.toLowerCase()); // console.log(faceanalysisapiResponse);\n\n            if (getSceneManagerInstance()) {\n              getSceneManagerInstance().setAPIResponse(faceanalysisapiResponse);\n            }\n\n          case 17:\n          case "end":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _openFaceAnalysis.apply(this, arguments);\n}\n\nfunction closeFaceAnalysis() {\n  return _closeFaceAnalysis.apply(this, arguments);\n}\n\nfunction _closeFaceAnalysis() {\n  _closeFaceAnalysis = faceAnalysis_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            onClearClick();\n\n            if (!(0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n              // showOptionsContainer();\n              showModelContainer();\n            }\n\n          case 2:\n          case "end":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _closeFaceAnalysis.apply(this, arguments);\n}\n\nfunction resetFaceAnalysis() {\n  return _resetFaceAnalysis.apply(this, arguments);\n}\n\nfunction _resetFaceAnalysis() {\n  _resetFaceAnalysis = faceAnalysis_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            onClearClick();\n\n          case 1:\n          case "end":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _resetFaceAnalysis.apply(this, arguments);\n}\n;// CONCATENATED MODULE: ./src/assets/svg/arrowLeft.svg\n/* harmony default export */ const arrowLeft = (__webpack_require__.p + "assets/models/562342f60ba957bdcac81cfb2d5cbfe6.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/crossIcon.svg\n/* harmony default export */ const crossIcon = (__webpack_require__.p + "assets/models/822b593c724537ebabf647445d7dca7f.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/crossIconBlack.svg\n/* harmony default export */ const crossIconBlack = (__webpack_require__.p + "assets/models/f7712a1ca0047a40e343c21e52aaf6af.svg");\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/navigationButtons.css\nvar navigationButtons = __webpack_require__(6029);\n;// CONCATENATED MODULE: ./src/htmlService/styles/navigationButtons.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar navigationButtons_options = {};\n\nnavigationButtons_options.styleTagTransform = (styleTagTransform_default());\nnavigationButtons_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      navigationButtons_options.insert = insertBySelector_default().bind(null, "head");\n    \nnavigationButtons_options.domAPI = (styleDomAPI_default());\nnavigationButtons_options.insertStyleElement = (insertStyleElement_default());\n\nvar navigationButtons_update = injectStylesIntoStyleTag_default()(navigationButtons/* default */.Z, navigationButtons_options);\n\n\n\n\n       /* harmony default export */ const styles_navigationButtons = (navigationButtons/* default */.Z && navigationButtons/* default */.Z.locals ? navigationButtons/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/htmlService/navigationButtons.js\n\n\n\n\n\n\nvar LeftIconContainer = null;\nvar CrossIconContainer = null;\nvar LeftIcon = null;\nvar CrossIcon = null;\nvar disableLeftIcon = false;\nvar disableCrossIcon = false;\nfunction setPrevIconState(state) {\n  disableLeftIcon = state;\n}\nfunction setCrossIconState(state) {\n  disableCrossIcon = state;\n}\nfunction createNavigationButtons(onPrevIconClick, onCrossIconClick) {\n  var _getHtmlElements = getHtmlElemets_getHtmlElements(),\n      videoContainer = _getHtmlElements.videoContainer;\n\n  LeftIconContainer = document.createElement("div");\n  CrossIconContainer = document.createElement("div");\n  LeftIcon = document.createElement("img");\n  CrossIcon = document.createElement("img");\n  LeftIcon.src = arrowLeft;\n  CrossIcon.src = crossIcon;\n  LeftIconContainer.appendChild(LeftIcon);\n  CrossIconContainer.appendChild(CrossIcon);\n  LeftIconContainer.addEventListener("click", onPrevIconClick);\n  CrossIconContainer.addEventListener("click", onCrossIconClick); // using fragment for performance gain\n\n  var iconContainerFragment = document.createDocumentFragment();\n  LeftIconContainer.classList.add("left-nav-icon", "icon-blur-bg");\n  CrossIconContainer.classList.add("cross-nav-icon", "icon-blur-bg");\n  iconContainerFragment.appendChild(LeftIconContainer);\n  iconContainerFragment.appendChild(CrossIconContainer);\n  videoContainer.appendChild(iconContainerFragment);\n}\nfunction showPrevIcon() {\n  if (LeftIconContainer && !disableLeftIcon) {\n    LeftIconContainer.style.display = "flex";\n  }\n}\nfunction showCrossIcon(_ref) {\n  var _ref$blurredBg = _ref.blurredBg,\n      blurredBg = _ref$blurredBg === void 0 ? false : _ref$blurredBg,\n      _ref$blackIcon = _ref.blackIcon,\n      blackIcon = _ref$blackIcon === void 0 ? false : _ref$blackIcon;\n\n  if (CrossIconContainer && !disableCrossIcon) {\n    CrossIconContainer.style.display = "flex";\n\n    if (!blurredBg) {\n      CrossIconContainer.classList.remove("icon-blur-bg");\n    } else {\n      CrossIconContainer.classList.add("icon-blur-bg");\n    }\n\n    if (blackIcon) {\n      CrossIcon.src = crossIconBlack;\n    } else {\n      CrossIcon.src = crossIcon;\n    }\n  }\n}\nfunction hidePrevIcon() {\n  if (LeftIconContainer) {\n    LeftIconContainer.style.display = "none";\n  }\n}\nfunction hideCrossIcon() {\n  if (CrossIconContainer) {\n    CrossIconContainer.style.display = "none";\n  }\n}\n;// CONCATENATED MODULE: ./src/messageEvents.js\n\n\n\n\nfunction messageEvents_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction messageEvents_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { messageEvents_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { messageEvents_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar isClosed = true;\nvar isFirstInitialize = false;\nfunction setIsClosed(value) {\n  isClosed = value;\n}\nfunction CaptureSnapShot() {\n  var _getHtmlElements = getHtmlElemets_getHtmlElements(),\n      screenShotTag = _getHtmlElements.screenShotTag;\n\n  if (getSceneManagerInstance()) {\n    try {\n      var ss = getSceneManagerInstance().takeScreenShot();\n\n      var _base64Data = btoa(ss);\n\n      screenShotTag.href = "".concat(atob(_base64Data));\n      screenShotTag.download = "NewScreenshot.jpeg";\n      screenShotTag.click(); // Create a Blob object using the base64 encoded data\n      // const imageBlob = new Blob([base64Data], { type: "image/jpeg" });\n\n      (0,utils_event/* emitPhotoLoaded */.Az)(_base64Data);\n    } catch (_unused) {\n      (0,utils_event/* emitPhotoLoadedFailed */.ts)(base64Data);\n    }\n  }\n}\nvar methods = {\n  applyMakeupBySDK: function () {\n    var _applyMakeupBySDK = messageEvents_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(skuId) {\n      var skuConfig, errorMessage;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getSKUData(skuId, authConstants/* getAPIKey */.w);\n\n            case 3:\n              skuConfig = _context.sent;\n\n              if (skuConfig.data.status && skuConfig.data.status === "403") {\n                (0,utils_event/* emitSKUFailed */.js)();\n                (0,utils_event/* emitSubscriptionIssue */.RG)(skuConfig.data);\n                showBillingPanel(errorMessages.billingIssue);\n              } else {\n                handleApiResponse(skuConfig.data);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context["catch"](0);\n              (0,utils_event/* emitSKUFailed */.js)();\n\n              if (_context.t0.response && _context.t0.response.status && _context.t0.response.status === 403) {\n                showBillingPanel(errorMessages.billingIssue);\n                (0,utils_event/* emitSubscriptionIssue */.RG)(_context.t0.response.data);\n              } else {\n                if (_context.t0.response && _context.t0.response.data && _context.t0.response.data.error) errorMessage = _context.t0.response.data.error;else errorMessage = _context.t0.message; // showSnackbar(errorMessage).then(() => {\n                //   setTimeout(() => {\n                //     hideSnackbar();\n                //   }, 2000);\n                // });\n\n                showErrorPermissionPanel(errorMessage);\n              }\n\n            case 11:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    function applyMakeupBySDK(_x) {\n      return _applyMakeupBySDK.apply(this, arguments);\n    }\n\n    return applyMakeupBySDK;\n  }(),\n  applyMakeupByConfig: function applyMakeupByConfig(skuConfig) {\n    if (!skuConfig) {\n      (0,utils_event/* emitSKUFailed */.js)();\n      return;\n    }\n\n    handleApiResponse(skuConfig);\n  },\n  clearSku: function clearSku() {\n    if (getSceneManagerInstance()) {\n      getSceneManagerInstance().Clear();\n      (0,utils_event/* emitReset */.eQ)();\n    }\n  },\n  snapshot: function snapshot() {\n    CaptureSnapShot();\n  },\n  closePreview: function closePreview() {\n    if (getIsInitialized()) CloseModule(); // route("/");\n  },\n  resumePreview: function resumePreview(payload) {\n    setIsPause(false);\n\n    if (payload && payload.mode === "liveTryOn") {\n      optionsEventHandler("liveTryOn");\n    }\n\n    (0,utils_event/* emitModuleResume */.DZ)();\n  },\n  pausePreview: function pausePreview() {\n    setIsPause(true);\n    (0,utils_event/* emitModulePause */.rk)();\n  },\n  openLivePreview: function openLivePreview(payload) {\n    //console.log("openLivePreview", payload);\n    setIsPause(false);\n\n    if (isClosed) {\n      (0,utils_event/* emitModuleOpened */.Zm)();\n      isClosed = false;\n    }\n\n    if (payload && payload.mode === "modelTryOn") {\n      if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n        if (payload.imgURL) {\n          hideCameraPermissionPanel();\n          optionsEventHandler("modelTryOn", payload.imgURL);\n        } else {\n          // showSnackbar("Invalid Image URL").then(() => {\n          //   setTimeout(() => {\n          //     hideSnackbar();\n          //   }, 2000);\n          // });\n          showErrorPermissionPanel("Invalid Image URL");\n        }\n      } else {\n        tryOnEventHandler("modelTryOn", null, payload.imgURL);\n      }\n    } else if (payload && payload.mode === "imgTryOn") {\n      if (payload.imgURL) {\n        hideCameraPermissionPanel();\n        tryOnEventHandler("modelTryOn", null, payload.imgURL);\n        (0,utils_event/* emitUploadStarted */.Zi)();\n      } else {\n        // showSnackbar("Invalid Image URL").then(() => {\n        //   setTimeout(() => {\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel("Invalid Image URL");\n      }\n    } else {\n      // optionsEventHandler("liveTryOn");\n      tryOnEventHandler("live");\n    }\n  },\n  disableInternalUI: function disableInternalUI() {// setShouldHideInternalUI(true);\n    // // hideOptionsContainer();\n    // hideModelContainer();\n    // hideConfigContainer();\n    // setVisibilityStateOfUploadInput("none");\n  },\n  onConfigChange: function onConfigChange(payload) {\n    if (payload) {\n      if (payload.options) configSliderHandler(payload.value, payload.options);\n    }\n  },\n  initializeSDK: function initializeSDK(payload) {\n    console.log("initializeSDK", payload);\n\n    if (payload) {\n      if (isFirstInitialize) return;\n\n      if (payload.platform) {\n        (0,utils_event/* setWrapperType */.lD)(payload.platform);\n      }\n\n      if (payload.apiKey) (0,authConstants/* setAPIKey */.u)(payload.apiKey);\n      if (payload.chooseTryOnConfig) overrideChooseTryOnConfig(payload.chooseTryOnConfig);\n\n      if (payload.mode) {\n        if (payload.mode === "platform") {\n          (0,globalVariables/* setPlatformMode */.G7)("platform");\n        }\n\n        if (payload.mode === "console") {\n          (0,globalVariables/* setPlatformMode */.G7)("panel");\n        }\n\n        if (payload.mode === "private") {\n          (0,globalVariables/* setPlatformMode */.G7)("private");\n        }\n      } else {\n        (0,globalVariables/* setPlatformMode */.G7)("platform");\n      }\n\n      if (payload.category) {\n        (0,globalVariables/* setCategory */.PR)(payload.category);\n      }\n\n      if (payload.openLiveOnInit) {\n        (0,globalVariables/* setOpenLiveOnInit */.Hf)(true);\n      }\n\n      if (payload.disableCrossIcon) {\n        setCrossIconState(true);\n        hideCrossIcon();\n      }\n\n      if (payload.disablePrevIcon) {\n        setPrevIconState(true);\n        hidePrevIcon();\n      }\n\n      (0,env/* updateEnvironmentURL */.W)();\n      updateAPIURL();\n\n      if (!(0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n        fetchModuleConfig(getSceneManagerInstance());\n      } else (0,utils_event/* emitInitComplete */.eT)();\n\n      loadML();\n      isFirstInitialize = true;\n    }\n  },\n  onNailColorEvents: function onNailColorEvents(payload) {\n    if (payload) {\n      if (payload.options == "clickSnapShot") onImageClick();\n\n      if (payload.options == "resetSnapShot") {\n        onClearClick();\n\n        if (getSceneManagerInstance()) {\n          getSceneManagerInstance().resetNailData();\n        }\n      }\n    }\n  },\n  onFaceAnalysisEvents: function onFaceAnalysisEvents(payload) {\n    if (payload) {\n      if (payload.options == "opened") openFaceAnalysis();\n      if (payload.options == "closed") closeFaceAnalysis();\n      if (payload.options == "resetSnapShot") resetFaceAnalysis();\n      if (payload.options == "clickSnapShot") faceAnalysisSnapShot();\n    }\n  },\n  onComparisonEvents: function onComparisonEvents(payload) {\n    if (payload) {\n      if (payload.options == "sliderUI") {\n        setComparisonState(0);\n\n        if (payload.value == "show") {\n          showComparisonSlider();\n        } else {\n          hideComparisonSlider();\n        }\n      } else if (payload.options == "touch") {\n        setComparisonState(1);\n\n        if (payload.value == "show") {\n          showComparisonSlider("0%", "none");\n        } else {\n          hideComparisonSlider();\n        }\n      }\n    }\n  },\n  webDemoSettings: function webDemoSettings(payload) {\n    //onVideoMode();\n    var _getHtmlElements2 = getHtmlElemets_getHtmlElements(),\n        configurationContainer = _getHtmlElements2.configurationContainer;\n\n    if (payload && payload) {\n      configurationContainer.style.bottom = "".concat(payload, "px");\n    } else {\n      configurationContainer.style.bottom = "187.5px";\n    }\n  }\n};\nfunction addMessageEventListener() {\n  window.addEventListener("message", function (e) {\n    var _e$data = e.data,\n        type = _e$data.type,\n        payload = _e$data.payload;\n\n    switch (type) {\n      case "initialize":\n        methods.initializeSDK(payload);\n        return;\n\n      case "applyMakeupBySku":\n        methods.applyMakeupBySDK(payload.skuId); //, payload.styleId);\n\n        return;\n\n      case "applyMakeupByConfig":\n        methods.applyMakeupByConfig(payload);\n        return;\n\n      case "clearSku":\n        methods.clearSku();\n        return;\n\n      case "snapshot":\n        methods.snapshot();\n        return;\n\n      case "closePreview":\n        methods.closePreview();\n        return;\n\n      case "openLivePreview":\n        methods.openLivePreview(payload);\n        return;\n\n      case "webDemo":\n        methods.webDemoSettings(payload);\n        return;\n\n      case "pausePreview":\n        methods.pausePreview();\n        return;\n\n      case "resumePreview":\n        methods.resumePreview(payload);\n        return;\n\n      case "disableInternalUI":\n        methods.disableInternalUI();\n        return;\n\n      case "configChange":\n        methods.onConfigChange(payload);\n        return;\n\n      case "nailColor":\n        methods.onNailColorEvents(payload);\n        return;\n\n      case "faceAnalysis":\n        methods.onFaceAnalysisEvents(payload);\n        return;\n\n      case "comparison":\n        methods.onComparisonEvents(payload);\n        return;\n\n      default:\n        return;\n    }\n  }, false);\n}\n;// CONCATENATED MODULE: ./src/assets/lottie/loader.json\nconst loader_namespaceObject = JSON.parse(\'{"v":"4.8.0","meta":{"g":"LottieFiles AE 3.5.7","a":"","k":"","d":"","tc":""},"fr":24,"ip":0,"op":60,"w":300,"h":300,"nm":"Glam AR Loader","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"four","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":22.9,"s":[20]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":40,"s":[30]},{"t":57,"s":[20]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,152,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[120,120,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-1.283,0],[0,0],[-0.682,-1.366],[0,0],[0,0],[1.213,-1.402],[0,0],[0,0],[1.444,1.67],[0,0],[-0.871,1.745],[0,0]],"o":[[0,0],[0.682,-1.366],[0,0],[1.283,0],[0,0],[0,0],[0.871,1.743],[0,0],[0,0],[-1.444,1.67],[0,0],[-1.212,-1.402],[0,0],[0,0]],"v":[[-61.403,-91.778],[-61.403,-91.778],[-58.206,-93.938],[58.648,-93.938],[61.845,-91.778],[96.924,-21.497],[96.924,-21.497],[96.322,-16.152],[96.322,-16.152],[2.221,92.685],[-2.971,92.685],[-96.323,-15.28],[-96.924,-20.627],[-96.924,-20.627]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":1.125,"ix":10},"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":8}},"s":{"a":0,"k":[-34.75,-85.873],"ix":4},"e":{"a":0,"k":[46.156,40.537],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"three","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":16,"s":[30]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":33.9,"s":[60]},{"t":51,"s":[30]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-1.283,0],[0,0],[-0.682,-1.366],[0,0],[0,0],[1.213,-1.402],[0,0],[0,0],[1.444,1.67],[0,0],[-0.871,1.745],[0,0]],"o":[[0,0],[0.682,-1.366],[0,0],[1.283,0],[0,0],[0,0],[0.871,1.743],[0,0],[0,0],[-1.444,1.67],[0,0],[-1.212,-1.402],[0,0],[0,0]],"v":[[-61.403,-91.778],[-61.403,-91.778],[-58.206,-93.938],[58.648,-93.938],[61.845,-91.778],[96.924,-21.497],[96.924,-21.497],[96.322,-16.152],[96.322,-16.152],[2.221,92.685],[-2.971,92.685],[-96.323,-15.28],[-96.924,-20.627],[-96.924,-20.627]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":1.125,"ix":10},"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":8}},"s":{"a":0,"k":[-34.75,-85.873],"ix":4},"e":{"a":0,"k":[46.156,40.537],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"two","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":9,"s":[40]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":26.601,"s":[80]},{"t":44,"s":[40]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-0.964,0],[0,0],[-0.521,-1.041],[0,0],[0,0],[0.926,-1.066],[0,0],[0,0],[1.094,1.262],[0,0],[-0.667,1.333],[0,0]],"o":[[0,0],[0.521,-1.041],[0,0],[0.964,0],[0,0],[0,0],[0.668,1.331],[0,0],[0,0],[-1.094,1.262],[0,0],[-0.924,-1.066],[0,0],[0,0]],"v":[[-48.477,-76.427],[-48.477,-76.427],[-46.055,-78.062],[46.28,-78.062],[48.701,-76.427],[76.419,-21.067],[76.419,-21.067],[75.96,-16.989],[75.96,-16.989],[1.604,68.741],[-2.321,68.741],[-76.086,-16.302],[-76.544,-20.381],[-76.544,-20.381]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":1.125,"ix":10},"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":8}},"s":{"a":0,"k":[-34.75,-85.873],"ix":4},"e":{"a":0,"k":[46.156,40.537],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"one","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":2,"s":[50]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":15.828,"s":[100]},{"t":30,"s":[50]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-0.678,0],[0,0],[-0.379,-0.756],[0,0],[0,0],[0.669,-0.771],[0,0],[0,0],[0.781,0.902],[0,0],[0,0],[0,0],[-0.486,0.971],[0,0]],"o":[[0,0],[0.378,-0.756],[0,0],[0.678,0],[0,0],[0,0],[0.486,0.97],[0,0],[0,0],[-0.781,0.902],[0,0],[0,0],[0,0],[-0.668,-0.771],[0,0],[0,0]],"v":[[-36.869,-61.888],[-36.869,-61.888],[-35.142,-63.062],[35.283,-63.062],[37.011,-61.888],[58.152,-19.636],[58.152,-19.636],[57.82,-16.67],[57.82,-16.67],[1.108,48.761],[-1.684,48.761],[-2.109,49.13],[-1.684,48.761],[-57.946,-16.146],[-58.277,-19.113],[-58.277,-19.113]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":1.125,"ix":10},"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":8}},"s":{"a":0,"k":[-34.75,-85.873],"ix":4},"e":{"a":0,"k":[46.156,40.537],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"logo center","parent":6,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[0,0,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0.328,-0.572],[0,0],[-0.591,-0.591],[0,0],[0,0],[-0.725,0.72],[0,0],[0.415,0.725],[0,0],[0.656,0]],"o":[[0,0],[-0.66,0],[0,0],[-0.42,0.725],[0,0],[0,0],[0.72,0.72],[0,0],[0.591,-0.591],[0,0],[-0.327,-0.572],[0,0]],"v":[[6.529,-12.24],[-4.332,-12.24],[-5.93,-11.317],[-8.03,-7.68],[-7.734,-5.45],[-4.559,-2.275],[-0.206,2.078],[2.407,2.078],[9.935,-5.45],[10.231,-7.68],[8.13,-11.317],[6.533,-12.24]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10},"r":1,"bm":0,"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":9}},"s":{"a":0,"k":[-42.176,-66.036],"ix":5},"e":{"a":0,"k":[22.915,21.512],"ix":6},"t":1,"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"logo","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.113,0.113,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":0,"s":[100,100,100]},{"i":{"x":[0.184,0.184,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":30,"s":[104,104,100]},{"t":60,"s":[100,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0.66,0],[0,0],[0.328,-0.572],[0,0],[-0.591,-0.591],[0,0],[-0.605,1.052],[0,0],[-0.66,0],[0,0],[-0.328,-0.572],[0,0],[0,0],[1.421,0],[0,0],[0.332,0.572],[0,0],[0,0],[0.66,0],[0,0],[0.328,-0.572],[0,0],[-0.591,-0.591],[0,0],[-0.724,0.72],[0,0],[1.648,0],[0,0],[0.346,-0.346],[0,0],[0.725,0.72],[0,0],[-0.415,0.725],[0,0],[-0.655,0],[0,0],[-0.328,-0.572],[0,0],[-0.66,0],[0,0],[-0.346,0.346],[0,0],[0.416,0.725]],"o":[[0,0],[-0.328,-0.572],[0,0],[-0.66,0],[0,0],[-0.42,0.725],[0,0],[0.859,0.859],[0,0],[0.328,-0.572],[0,0],[0.66,0],[0,0],[0,0],[0.711,1.232],[0,0],[-0.66,0],[0,0],[0,0],[-0.327,-0.572],[0,0],[-0.66,0],[0,0],[-0.42,0.725],[0,0],[0.72,0.72],[0,0],[1.163,-1.163],[0,0],[-0.489,0],[0,0],[-0.72,0.72],[0,0],[-0.591,-0.591],[0,0],[0.328,-0.572],[0,0],[0.66,0],[0,0],[0.328,0.572],[0,0],[0.489,0],[0,0],[0.591,-0.591],[0,0]],"v":[[45.546,-18.712],[29.188,-47.04],[27.591,-47.963],[-25.39,-47.963],[-26.988,-47.04],[-43.346,-18.712],[-43.051,-16.483],[-39.169,-12.601],[-36.265,-12.984],[-21.813,-38.016],[-20.216,-38.939],[22.407,-38.939],[24.004,-38.02],[34.879,-19.178],[35.174,-18.666],[33.573,-15.896],[27.498,-15.896],[25.897,-16.82],[24.535,-19.178],[18.82,-29.07],[17.223,-29.993],[-15.046,-29.993],[-16.643,-29.07],[-30.209,-5.575],[-29.914,-3.346],[-0.206,26.362],[2.406,26.362],[26.769,1.999],[25.463,-1.153],[17.92,-1.153],[16.614,-0.613],[2.402,13.594],[-0.211,13.594],[-18.665,-4.86],[-18.96,-7.089],[-11.483,-20.046],[-9.886,-20.969],[12.067,-20.969],[13.665,-20.046],[18.871,-11.027],[20.468,-10.104],[38.092,-10.104],[39.398,-10.644],[45.242,-16.487],[45.537,-18.717]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10},"r":1,"bm":0,"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":9}},"s":{"a":0,"k":[-42.176,-66.036],"ix":5},"e":{"a":0,"k":[22.915,21.512],"ix":6},"t":1,"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0}],"markers":[]}\');\n;// CONCATENATED MODULE: ./src/htmlService/lottieLoader.js\n\n\nvar animation = null;\nfunction showLottieLoader() {\n  var _getHtmlElements = getHtmlElemets_getHtmlElements(),\n      lottieLoader = _getHtmlElements.lottieLoader;\n\n  if (!animation) {\n    initLottieLoader();\n  }\n\n  lottieLoader.style.display = "flex";\n}\nfunction hideLottieLoader() {\n  var _getHtmlElements2 = getHtmlElemets_getHtmlElements(),\n      lottieLoader = _getHtmlElements2.lottieLoader;\n\n  if (animation) animation.destroy();\n  animation = null;\n  lottieLoader.style.display = "none";\n}\nfunction initLottieLoader() {\n  if (!animation) {\n    animation = lottie.loadAnimation({\n      container: document.getElementById("lottie"),\n      // the DOM element\n      renderer: "svg",\n      loop: true,\n      autoplay: true,\n      animationData: loader_namespaceObject // the path to the animation json\n\n    });\n  }\n}\n;// CONCATENATED MODULE: ./src/sdkService/tryOnModes.js\n\n\n\n\n\nfunction tryOnModes_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction tryOnModes_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { tryOnModes_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { tryOnModes_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar texture;\nvar loadImage = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {\n  var _ref = tryOnModes_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(src) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt("return", new Promise(function (resolve, reject) {\n              var img = getInputImage();\n\n              if (img.complete) {\n                texture = new THREE.Texture(img);\n                texture.needsUpdate = true;\n                resolve(texture);\n              } else {\n                img.onload = function () {\n                  texture = new THREE.Texture(img);\n                  texture.needsUpdate = true;\n                  resolve(texture);\n                };\n\n                img.onerror = function (err) {\n                  return reject(err);\n                };\n              }\n            }));\n\n          case 1:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadImage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}()));\n\nfunction loadImageTag(src) {\n  return new Promise(function (resolve, reject) {\n    var img = document.createElement("img");\n    img.alt = "boy in a jacket";\n    img.classList.add("input_Image"); // Add the class "input_Image"\n\n    img.crossOrigin = "Anonymous";\n    img.src = src;\n\n    img.onload = function () {\n      resolve(img);\n    };\n\n    img.onerror = function (err) {\n      reject(err);\n    };\n  });\n}\n\nvar onImageMode = /*#__PURE__*/function () {\n  var _ref2 = tryOnModes_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(URL) {\n    var trackingMode, _getHtmlElements, video_Container, canavas_container, canvas, tracks, img, inputImage, inputImageRes, windowRes, Difference, percentageDifference, div, vw, vh, imgWidth, imgHeight, aspectRatio;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setSdkState(3);\n            trackingMode = getTrackingMode();\n            hideCameraPermissionPanel();\n            setInputImageTexture(null);\n            _getHtmlElements = getHtmlElemets_getHtmlElements(), video_Container = _getHtmlElements.video_Container, canavas_container = _getHtmlElements.canavas_container;\n            video_Container.style.transform = "scaleX(1)"; // loaderContainer.style.display = "flex";\n\n            showLottieLoader();\n            canavas_container.style.display = "flex";\n            canavas_container.style.justifyContent = "center"; //modelsContainer.style.display = "none";\n\n            canvas = document.querySelector(".output_canvas");\n            canvas.style.display = "block";\n            canvas.style.transform = "scaleX(1)";\n            cancelAnimationFrame(getAnimationFrameId());\n\n            if (getCurrentStream()) {\n              tracks = getCurrentStream().getTracks();\n              tracks.forEach(function (track) {\n                return track.stop();\n              }); // Stop all tracks\n            }\n\n            if (getVideo()) {\n              getVideo().pause();\n              getVideo().srcObject = null; // Disconnect the video source\n\n              video_Container.removeChild(getVideo()); // Remove the video element from DOM\n\n              setVideo(null);\n            }\n\n            if (sdkEngine_getInputImage()) {\n              video_Container.removeChild(sdkEngine_getInputImage());\n              setInputImage(null);\n            }\n\n            if (!(trackingMode === TrackingMode.Face)) {\n              _context2.next = 23;\n              break;\n            }\n\n            if (getProviders().facemeshLandmarksProvider) {\n              _context2.next = 21;\n              break;\n            }\n\n            setProvider("face", new FacemeshLandmarksProvider(onLandmarks, canvas));\n            _context2.next = 21;\n            return getProviders().facemeshLandmarksProvider.initialize();\n\n          case 21:\n            _context2.next = 39;\n            break;\n\n          case 23:\n            if (!(trackingMode === TrackingMode.Hair)) {\n              _context2.next = 30;\n              break;\n            }\n\n            if (getProviders().hairSegmentProvider) {\n              _context2.next = 28;\n              break;\n            }\n\n            setProvider("hair", new HairSegmentProvider(onHairSegment));\n            _context2.next = 28;\n            return getProviders().hairSegmentProvider.initialize();\n\n          case 28:\n            _context2.next = 39;\n            break;\n\n          case 30:\n            if (!(trackingMode === TrackingMode.Hand)) {\n              _context2.next = 39;\n              break;\n            }\n\n            if (getProviders().handsLandmarkProvider) {\n              _context2.next = 35;\n              break;\n            }\n\n            setProvider("hand", new HandsLandmarkProvider(onHandLandsmarks));\n            _context2.next = 35;\n            return getProviders().handsLandmarkProvider.initialize();\n\n          case 35:\n            if (getProviders().nailmaskProvider) {\n              _context2.next = 39;\n              break;\n            }\n\n            setProvider("nail", new NailMaskProvider(onCameraFrame));\n            _context2.next = 39;\n            return getProviders().nailmaskProvider.initialize();\n\n          case 39:\n            _context2.next = 41;\n            return loadImageTag(URL);\n\n          case 41:\n            img = _context2.sent;\n            setInputImage(img);\n            video_Container.appendChild(sdkEngine_getInputImage());\n            assetsCache_addToGlobalCache(URL, sdkEngine_getInputImage().src);\n            texture = new three_module/* Texture */.xEZ(img);\n            texture.needsUpdate = true;\n            inputImage = img;\n            canvas.width = inputImage.width;\n            canvas.height = inputImage.height;\n            canvas.style.margin = "auto";\n            video_Container.style.width = "100%";\n            video_Container.style.height = "100%";\n            setIsVideo(false);\n            resetComparisonSlider("50%", getComparisonState(), getIsVideo()); //await loadTexture();\n            // Load the static image\n\n            if (!getSceneManagerInstance()) {\n              setSceneManager(new SceneManager(canvas, getDebug(), getuseOrtho()));\n            }\n\n            setVideoEl(inputImage);\n            inputImageRes = inputImage.width > inputImage.height ? inputImage.width : inputImage.height;\n            windowRes = inputImage.width > inputImage.height ? window.innerWidth : window.innerHeight;\n            Difference = windowRes - inputImageRes;\n            if (windowRes > inputImageRes) percentageDifference = Difference / windowRes;else percentageDifference = Difference / inputImageRes;\n            div = 4;\n            if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) div = 1; // if (trackingMode === TrackingMode.Hand) {\n            //   getSceneManagerInstance().setImageTryonSettings(\n            //     inputImage.width,\n            //     inputImage.height\n            //   );\n            //   getSceneManagerInstance().updatePlaneWithImage(texture);\n            //   onClearClick();\n            //   if (getCurrentTryon() === CategoryFactories.nailcolor) {\n            //     if (getSceneManagerInstance()) {\n            //       getSceneManagerInstance().resetNailData();\n            //     }\n            //   }\n            //   await onImageClick(true);\n            // } else {\n            // if (trackingMode !== TrackingMode.Hand) {\n\n            vw = window.innerWidth;\n            vh = window.innerHeight;\n            imgWidth = inputImage.width;\n            imgHeight = inputImage.height;\n            aspectRatio = imgWidth / imgHeight; // console.log(inputImage.width, inputImage.height, aspectRatio);\n\n            if (vw / vh > aspectRatio) {\n              inputImage.style.width = vw + "px";\n              inputImage.style.height = vw / aspectRatio + "px"; // If the height is still larger than the viewport height, adjust width and height\n\n              if (parseInt(inputImage.style.height) > vh) {\n                inputImage.style.height = vh + "px";\n                inputImage.style.width = vh * aspectRatio + "px";\n              }\n            } else {\n              inputImage.style.height = vh + "px";\n              inputImage.style.width = vh * aspectRatio + "px"; // If the width is still larger than the viewport width, adjust width and height\n\n              if (parseInt(inputImage.style.width) > vw) {\n                inputImage.style.width = vw + "px";\n                inputImage.style.height = vw / aspectRatio + "px";\n              }\n            } // }\n            // console.log(inputImage.width, inputImage.height);\n\n\n            getSceneManagerInstance().setImageTryonSettings(inputImage.width, inputImage.height); // await new Promise((resolve) => setTimeout(resolve, 500));\n\n            getSceneManagerInstance().updatePlaneWithImage(texture);\n\n            if (!(trackingMode === TrackingMode.Face)) {\n              _context2.next = 77;\n              break;\n            }\n\n            getProviders().facemeshLandmarksProvider.setSelfieMode(getIsVideo());\n            _context2.next = 75;\n            return getProviders().facemeshLandmarksProvider.send(inputImage, false, false);\n\n          case 75:\n            _context2.next = 91;\n            break;\n\n          case 77:\n            if (!(trackingMode === TrackingMode.Hair)) {\n              _context2.next = 83;\n              break;\n            }\n\n            getProviders().hairSegmentProvider.setSelfieMode(getIsVideo());\n            _context2.next = 81;\n            return getProviders().hairSegmentProvider.send(inputImage, getIsVideo());\n\n          case 81:\n            _context2.next = 91;\n            break;\n\n          case 83:\n            if (!(trackingMode === TrackingMode.Hand)) {\n              _context2.next = 91;\n              break;\n            }\n\n            getProviders().handsLandmarkProvider.setSelfieMode(getIsVideo());\n            _context2.next = 87;\n            return getProviders().handsLandmarkProvider.send(inputImage, true, getIsVideo());\n\n          case 87:\n            //////\n            onClearClick();\n\n            if (getCurrentTryon() === CategoryFactories.nailcolor) {\n              if (getSceneManagerInstance()) {\n                getSceneManagerInstance().resetNailData();\n              }\n            } // await new Promise((resolve) => setTimeout(resolve, 200));\n\n\n            _context2.next = 91;\n            return onImageClick(true);\n\n          case 91:\n            _context2.next = 93;\n            return initialize(0);\n\n          case 93:\n            hideAlignMessagePanel(); //emitModuleOpened();\n\n          case 94:\n          case "end":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function onImageMode(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar onVideoMode = /*#__PURE__*/function () {\n  var _ref3 = tryOnModes_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var _getHtmlElements2, video_Container, canavas_container, isvideo, canvas, inputImage, video, trackingMode;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (getIsVideo()) {\n              _context3.next = 70;\n              break;\n            }\n\n            setSdkState(2);\n            _getHtmlElements2 = getHtmlElemets_getHtmlElements(), video_Container = _getHtmlElements2.video_Container, canavas_container = _getHtmlElements2.canavas_container; // loaderContainer.style.display = "flex";\n\n            showLottieLoader();\n            setTempWidth(-1);\n            setImageSource(null);\n            isvideo = getIsVideo();\n            hideModelContainer();\n            canavas_container.style.display = "flex";\n            canavas_container.style.justifyContent = "center";\n            canvas = document.querySelector(".output_canvas");\n            canvas.style.margin = "unset";\n            canvas.style.transform = "scaleX(-1)";\n            cancelAnimationFrame(getAnimationFrameId());\n            inputImage = sdkEngine_getInputImage();\n\n            if (inputImage) {\n              video_Container.removeChild(inputImage);\n              setInputImage(null);\n            }\n\n            video = document.createElement("video");\n            setVideo(video);\n            video.controls = true; // Show video controls\n\n            video.setAttribute("muted", "");\n            video.defaultMuted = true;\n            video.autoplay = false;\n            video.playsInline = true; // Play inline (important for mobile)\n\n            video.style.width = "100%";\n            video.style.height = "100%";\n            video.style.objectFit = "cover";\n            video_Container.appendChild(video);\n            setIsVideo(true);\n            resetComparisonSlider("50%", getComparisonState(), getIsVideo());\n            trackingMode = getTrackingMode();\n\n            if (!(trackingMode === TrackingMode.Face)) {\n              _context3.next = 40;\n              break;\n            }\n\n            if (getProviders().facemeshLandmarksProvider) {\n              _context3.next = 37;\n              break;\n            }\n\n            setProvider("face", new FacemeshLandmarksProvider(onLandmarks, canvas));\n            _context3.next = 35;\n            return getProviders().facemeshLandmarksProvider.initialize();\n\n          case 35:\n            _context3.next = 38;\n            break;\n\n          case 37:\n            getProviders().facemeshLandmarksProvider.setSelfieMode(getIsVideo());\n\n          case 38:\n            _context3.next = 64;\n            break;\n\n          case 40:\n            if (!(trackingMode === TrackingMode.Hair)) {\n              _context3.next = 50;\n              break;\n            }\n\n            if (getProviders().hairSegmentProvider) {\n              _context3.next = 47;\n              break;\n            }\n\n            setProvider("hair", new HairSegmentProvider(onHairSegment));\n            _context3.next = 45;\n            return getProviders().hairSegmentProvider.initialize();\n\n          case 45:\n            _context3.next = 48;\n            break;\n\n          case 47:\n            getProviders().hairSegmentProvider.setSelfieMode(getIsVideo());\n\n          case 48:\n            _context3.next = 64;\n            break;\n\n          case 50:\n            if (!(trackingMode === TrackingMode.Hand)) {\n              _context3.next = 64;\n              break;\n            }\n\n            if (getProviders().handsLandmarkProvider) {\n              _context3.next = 57;\n              break;\n            }\n\n            setProvider("hand", new HandsLandmarkProvider(onHandLandsmarks));\n            _context3.next = 55;\n            return getProviders().handsLandmarkProvider.initialize();\n\n          case 55:\n            _context3.next = 58;\n            break;\n\n          case 57:\n            getProviders().handsLandmarkProvider.setSelfieMode(getIsVideo());\n\n          case 58:\n            if (getProviders().nailmaskProvider) {\n              _context3.next = 62;\n              break;\n            }\n\n            setProvider("nail", new NailMaskProvider(onCameraFrame));\n            _context3.next = 62;\n            return getProviders().nailmaskProvider.initialize();\n\n          case 62:\n            onClearClick();\n\n            if (getCurrentTryon() === CategoryFactories.nailcolor) {\n              if (getSceneManagerInstance()) {\n                getSceneManagerInstance().resetNailData();\n              }\n            }\n\n          case 64:\n            if (!getSceneManagerInstance()) {\n              setSceneManager(new SceneManager(canvas, getDebug(), getuseOrtho()));\n            }\n\n            _context3.next = 67;\n            return initialize();\n\n          case 67:\n            getSceneManagerInstance().setVideoTryonSettings(video.videoWidth, video.videoHeight);\n\n            if (getCurrentTryon() === CategoryFactories.nailcolor) {\n              onClearClick();\n\n              if (getSceneManagerInstance()) {\n                getSceneManagerInstance().resetNailData();\n              }\n            } // videoEl = video;\n\n\n            setVideoEl(video);\n\n          case 70:\n          case "end":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function onVideoMode() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/statusPill.css\nvar styles_statusPill = __webpack_require__(1786);\n;// CONCATENATED MODULE: ./src/htmlService/styles/statusPill.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar statusPill_options = {};\n\nstatusPill_options.styleTagTransform = (styleTagTransform_default());\nstatusPill_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      statusPill_options.insert = insertBySelector_default().bind(null, "head");\n    \nstatusPill_options.domAPI = (styleDomAPI_default());\nstatusPill_options.insertStyleElement = (insertStyleElement_default());\n\nvar statusPill_update = injectStylesIntoStyleTag_default()(styles_statusPill/* default */.Z, statusPill_options);\n\n\n\n\n       /* harmony default export */ const htmlService_styles_statusPill = (styles_statusPill/* default */.Z && styles_statusPill/* default */.Z.locals ? styles_statusPill/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/htmlService/statusPill.js\n\n\n\nvar StatusPills = {\n  pillTypes: [{\n    type: "lighting",\n    index: 0,\n    text: "Lighting"\n  }, {\n    type: "position",\n    index: 1,\n    text: "Face Position"\n  }, {\n    type: "look",\n    index: 2,\n    text: "Look Straight"\n  }],\n  statusTypes: {\n    good: {\n      tag: "good",\n      color: "#06F93B"\n    },\n    notGood: {\n      tag: "notGood",\n      color: "#FFC122"\n    },\n    bad: {\n      tag: "good",\n      color: "#FF1A1A"\n    }\n  }\n};\nvar statusPill_ElementsList = [];\nfunction createStatusPill() {\n  var _getHtmlElements = getHtmlElemets_getHtmlElements(),\n      statusPill = _getHtmlElements.statusPill;\n\n  StatusPills.pillTypes.forEach(function (statusPillType) {\n    var ContainerDiv = document.createElement("div");\n    ContainerDiv.style.display = "none";\n    ContainerDiv.classList.add("pill-container");\n    var PillTextDiv = document.createElement("div");\n    PillTextDiv.classList.add("pill-text");\n    var PillStatusTextDiv = document.createElement("div");\n    PillStatusTextDiv.classList.add("pill-status-text");\n    ContainerDiv.appendChild(PillTextDiv);\n    ContainerDiv.appendChild(PillStatusTextDiv);\n    statusPill_ElementsList.push({\n      container: ContainerDiv,\n      pillText: PillTextDiv,\n      statusText: PillStatusTextDiv\n    });\n    statusPill.appendChild(ContainerDiv);\n  });\n}\nfunction showPills(pills) {\n  pills === null || pills === void 0 ? void 0 : pills.forEach(function (_ref) {\n    var pillId = _ref.pillId,\n        pillText = _ref.pillText,\n        pillStatus = _ref.pillStatus,\n        statusText = _ref.statusText;\n    statusPill_ElementsList[pillId].container.style.display = "flex";\n    statusPill_ElementsList[pillId].pillText.innerText = pillText;\n    statusPill_ElementsList[pillId].statusText.innerText = statusText;\n    statusPill_ElementsList[pillId].container.style.border = "1px solid ".concat(StatusPills.statusTypes[pillStatus].color);\n    statusPill_ElementsList[pillId].statusText.style.color = "".concat(StatusPills.statusTypes[pillStatus].color);\n  });\n}\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/popupModal.css\nvar styles_popupModal = __webpack_require__(5974);\n;// CONCATENATED MODULE: ./src/htmlService/styles/popupModal.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar popupModal_options = {};\n\npopupModal_options.styleTagTransform = (styleTagTransform_default());\npopupModal_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      popupModal_options.insert = insertBySelector_default().bind(null, "head");\n    \npopupModal_options.domAPI = (styleDomAPI_default());\npopupModal_options.insertStyleElement = (insertStyleElement_default());\n\nvar popupModal_update = injectStylesIntoStyleTag_default()(styles_popupModal/* default */.Z, popupModal_options);\n\n\n\n\n       /* harmony default export */ const htmlService_styles_popupModal = (styles_popupModal/* default */.Z && styles_popupModal/* default */.Z.locals ? styles_popupModal/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/htmlService/popupModal.js\n\n\nfunction createPopupModal(positiveHandler, negativeHandler) {\n  var _getHtmlElements = getHtmlElemets_getHtmlElements(),\n      popupModal = _getHtmlElements.popupModal;\n\n  var modalContainerDiv = document.createElement("div");\n  modalContainerDiv.classList.add("modal-container");\n  var modalHeading = document.createElement("div");\n  modalHeading.classList.add("modal-heading");\n  modalHeading.innerText = "Are you sure you want to stop using Virtual Try-on?";\n  var separatorDiv = document.createElement("div");\n  separatorDiv.classList.add("modal-separator");\n  var actionsContainer = document.createElement("div");\n  actionsContainer.classList.add("modal-actions-container");\n\n  var _getActionButtons = getActionButtons(positiveHandler, negativeHandler),\n      NegativeActionButton = _getActionButtons.NegativeActionButton,\n      PositiveActionButton = _getActionButtons.PositiveActionButton;\n\n  actionsContainer.appendChild(NegativeActionButton);\n  actionsContainer.appendChild(PositiveActionButton);\n  modalContainerDiv.appendChild(modalHeading);\n  modalContainerDiv.appendChild(separatorDiv);\n  modalContainerDiv.appendChild(actionsContainer);\n  popupModal.appendChild(modalContainerDiv);\n}\n\nfunction getActionButtons(positiveHandler, negativeHandler) {\n  var PositiveActionButton = document.createElement("button");\n  var NegativeActionButton = document.createElement("button");\n  PositiveActionButton.classList.add("modal-positive-action");\n  NegativeActionButton.classList.add("modal-negative-action");\n  PositiveActionButton.addEventListener("click", function () {\n    positiveHandler();\n  });\n  NegativeActionButton.addEventListener("click", function () {\n    negativeHandler();\n  });\n  NegativeActionButton.innerText = "Close";\n  PositiveActionButton.innerText = "Confirm";\n  return {\n    PositiveActionButton: PositiveActionButton,\n    NegativeActionButton: NegativeActionButton\n  };\n}\n\nfunction showPopupModal() {\n  var _getHtmlElements2 = getHtmlElements(),\n      popupModal = _getHtmlElements2.popupModal;\n\n  popupModal.style.display = "flex";\n}\nfunction hidePopupModal() {\n  var _getHtmlElements3 = getHtmlElemets_getHtmlElements(),\n      popupModal = _getHtmlElements3.popupModal;\n\n  popupModal.style.display = "none";\n}\n;// CONCATENATED MODULE: ./src/sdkService/sdkEngine.js\n\n\n\n\n\n\nfunction sdkEngine_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction sdkEngine_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { sdkEngine_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { sdkEngine_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // import { setErrorMessageElement } from "../js/utils/errorPanel";\n\nvar videoEl;\nvar isPause = false;\nvar SDKState = 0;\nvar comparisonState = 0;\nvar currentTryon = "";\nvar fps = 0;\nvar isInitialized = false;\nvar isvideo = false;\nvar UserUploadMode = false;\nvar UserUploadSrc = null;\nvar video = null;\nvar inputImage = null;\nvar imageSource = null;\nvar inputImageTexture = null;\nvar mlCategory = MLCategory.face;\nvar trackingMode = TrackingMode.Face;\nvar currentStream = null;\nvar clicked = false; // imageSource = upimg;\n\nvar sceneManager;\nvar facemeshLandmarksProvider;\nvar hairSegmentProvider;\nvar nailmaskProvider;\nvar handsLandmarkProvider;\nvar videoFrameProvider;\nvar isHandVisible = false;\nvar useOrtho = true;\nvar debug = false;\nvar onFrame = null;\nvar animationFrameId;\nvar tempWidth = -1;\nsetHtmlElements();\n\nvar _getHtmlElements = getHtmlElemets_getHtmlElements(),\n    sdkEngine_loaderContainer = _getHtmlElements.loaderContainer,\n    sdkEngine_videoContainer = _getHtmlElements.videoContainer,\n    sdkEngine_video_Container = _getHtmlElements.video_Container,\n    sdkEngine_optionsContainer = _getHtmlElements.optionsContainer,\n    sdkEngine_canavas_container = _getHtmlElements.canavas_container,\n    sdkEngine_imageInput = _getHtmlElements.imageInput,\n    sdkEngine_modelsContainer = _getHtmlElements.modelsContainer,\n    sdkEngine_canvas = _getHtmlElements.canvas,\n    sdkEngine_configurationContainer = _getHtmlElements.configurationContainer,\n    sdkEngine_configurationSubContainer = _getHtmlElements.configurationSubContainer,\n    sdkEngine_toastElement = _getHtmlElements.toastElement; // initial initialization of dom elemets\n// loaderContainer.style.display = "flex";\n\n\nshowLottieLoader();\nsdkEngine_canvas.style.display = "none";\nsdkEngine_canavas_container.style.display = "none";\nfunction SdkEngine() {\n  addMessageEventListener();\n  (0,utils_event/* emitModuleLoading */.MM)();\n  addComparisonSliderEvents(sdkEngine_video_Container);\n  setSnackbarElement();\n  initModelContainer(sdkEngine_modelsContainer);\n  hideModelContainer();\n  setCameraPermissionElement(cameraPermissionHandler);\n  setBillingElement(billingHandler);\n  hideCameraPermissionPanel();\n  hideBillingPanel();\n  SetAPIKey(); // initOptions(optionsContainer);\n  // createOptions(optionsEventHandler);\n\n  initConfigContainer(sdkEngine_configurationContainer); // createSlider(configurationSubContainer, configSliderHandler);\n\n  hideConfigContainer();\n  setApplyButton(applyEventHandler);\n  setResetButton(resetEventHandler);\n  setAlignMessageElement();\n  setErrorElement(errorBtnHandler);\n  setAlignMsg(globalVariables/* errorMessages */.Qj.invisbileLiveFace);\n  hideAlignMessagePanel();\n  buildTryOnScreen(tryOnEventHandler);\n  createConfigBottomSheet(configSliderHandler);\n  showTryOnScreen();\n  buildSettingOptions(settingsEventHandler);\n  createNavigationButtons(onPrevIconClick, onCrossIconClick);\n  showCrossIcon({\n    blurredBg: false,\n    blackIcon: true\n  });\n  createPopupModal(onConfirmClick, onCloseClick);\n  createStatusPill();\n  initLottieLoader();\n\n  if (isvideo) {\n    videoEl = video;\n  } else {\n    videoEl = inputImage;\n  }\n\n  if (!sceneManager) {\n    sceneManager = new SceneManager(sdkEngine_canvas, debug, useOrtho);\n  }\n\n  fakeInit();\n}\nfunction getSceneManagerInstance() {\n  return sceneManager;\n}\nfunction getIsInitialized() {\n  return isInitialized;\n}\nfunction getAnimationFrameId() {\n  return animationFrameId;\n}\nfunction sdkEngine_getInputImage() {\n  return inputImage;\n}\nfunction getCurrentStream() {\n  return currentStream;\n}\nfunction getVideo() {\n  return video;\n}\nfunction getVideoEl() {\n  return videoEl;\n}\nfunction getIsVideo() {\n  return isvideo;\n}\nfunction getTrackingMode() {\n  return trackingMode;\n}\nfunction getProviders() {\n  return {\n    facemeshLandmarksProvider: facemeshLandmarksProvider,\n    handsLandmarkProvider: handsLandmarkProvider,\n    hairSegmentProvider: hairSegmentProvider,\n    nailmaskProvider: nailmaskProvider\n  };\n}\nfunction getuseOrtho() {\n  return useOrtho;\n}\nfunction getDebug() {\n  return debug;\n}\nfunction getComparisonState() {\n  return comparisonState;\n}\nfunction getCurrentTryon() {\n  return currentTryon;\n}\nfunction setProvider(type, value) {\n  // console.log(type, value);\n  switch (type) {\n    case "face":\n      facemeshLandmarksProvider = value;\n      break;\n\n    case "hand":\n      handsLandmarkProvider = value;\n      break;\n\n    case "hair":\n      hairSegmentProvider = value;\n      break;\n\n    case "nail":\n      nailmaskProvider = value;\n      break;\n  }\n}\nfunction setVideo(value) {\n  return video = value;\n}\nfunction setIsVideo(value) {\n  return isvideo = value;\n}\nfunction setInputImage(value) {\n  inputImage = value;\n}\nfunction setIsPause(value) {\n  isPause = value;\n}\nfunction setComparisonState(value) {\n  comparisonState = value;\n}\nfunction setSdkState(value) {\n  SDKState = value;\n}\nfunction setInputImageTexture(value) {\n  inputImageTexture = value;\n}\nfunction setSceneManager(value) {\n  sceneManager = value;\n}\nfunction setVideoEl(value) {\n  videoEl = value;\n}\nfunction setClicked(value) {\n  var _video, _video2;\n\n  clicked = value;\n  if (clicked) (_video = video) === null || _video === void 0 ? void 0 : _video.pause();else (_video2 = video) === null || _video2 === void 0 ? void 0 : _video2.play();\n}\nfunction setTrackingMode(value) {\n  trackingMode = value;\n}\nfunction setCurrentTryon(value) {\n  currentTryon = value;\n}\nfunction setTempWidth(value) {\n  tempWidth = value;\n}\nfunction setImageSource(value) {\n  imageSource = value;\n}\nfunction setVisibilityStateOfUploadInput(state) {\n  if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n    sdkEngine_imageInput.style.display = "none";\n    return;\n  }\n\n  sdkEngine_imageInput.style.display = state;\n}\nvar onLandmarks = function onLandmarks(_ref) {\n  var image = _ref.image,\n      landmarks = _ref.landmarks,\n      ogLandmarks = _ref.ogLandmarks;\n  fps++;\n  if (isvideo) sceneManager.onLandmarks(image, landmarks, ogLandmarks, isvideo);else sceneManager.onLandmarks(inputImageTexture, landmarks, ogLandmarks, isvideo);\n};\nvar onHairSegment = function onHairSegment(image, maskData, isvideo) {\n  sceneManager.onHairSegment(image, maskData, isvideo);\n};\nvar onHandLandsmarks = function onHandLandsmarks(image, landmarks, worldlandmarks, handedness, maskData, x_cord, y_cord, x2_cord, y2_cord, angle) {\n  if (landmarks) {\n    isHandVisible = true;\n  } else {\n    isHandVisible = false;\n  }\n\n  if (isvideo) {\n    sceneManager.onHandsLandmarks(image, landmarks, isvideo, maskData, x_cord, y_cord, x2_cord, y2_cord, angle);\n  } else {\n    sceneManager.onHandsLandmarks(inputImageTexture, landmarks, isvideo, maskData, x_cord, y_cord, x2_cord, y2_cord, angle);\n  }\n};\nvar onCameraFrame = function onCameraFrame(_ref2) {\n  var image = _ref2.image,\n      isMask = _ref2.isMask,\n      maskData = _ref2.maskData;\n  // console.log("onCameraFrame mask called",maskData);\n  // sceneManager.onImageFrame(image, true);\n  fps++;\n\n  if (isMask == 0) {\n    // console.log("mask frame isMask");\n    sceneManager.onImageFrame(image, true);\n  } else {\n    //console.log("mask frame isMask else");\n    sceneManager.onMaskFrame(image, maskData, true);\n  }\n};\n\nonFrame = /*#__PURE__*/function () {\n  var _ref3 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(video) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(trackingMode === TrackingMode.Face)) {\n              _context.next = 12;\n              break;\n            }\n\n            if (!(facemeshLandmarksProvider && facemeshLandmarksProvider.IsInit() && !isPause && !clicked)) {\n              _context.next = 10;\n              break;\n            }\n\n            if (!(currentTryon === CategoryFactories.faceanalysis)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 6;\n            return facemeshLandmarksProvider.send(video, true);\n\n          case 6:\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return facemeshLandmarksProvider.send(video);\n\n          case 10:\n            _context.next = 22;\n            break;\n\n          case 12:\n            if (!(trackingMode === TrackingMode.Hair)) {\n              _context.next = 18;\n              break;\n            }\n\n            if (!(hairSegmentProvider && hairSegmentProvider.IsInit() && !isPause)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 16;\n            return hairSegmentProvider.send(video, isvideo);\n\n          case 16:\n            _context.next = 22;\n            break;\n\n          case 18:\n            if (!(trackingMode === TrackingMode.Hand)) {\n              _context.next = 22;\n              break;\n            }\n\n            if (!(handsLandmarkProvider && handsLandmarkProvider.IsInit() && !isPause && !clicked)) {\n              _context.next = 22;\n              break;\n            }\n\n            _context.next = 22;\n            return handsLandmarkProvider.send(video, clicked, isvideo);\n\n          case 22:\n            _context.next = 26;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context["catch"](0);\n\n          case 26:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 24]]);\n  }));\n\n  return function onFrame(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction setVisibalityOfModels() {\n  for (var i = 0; i < sceneManager.getModelData().length; i++) {\n    if (sceneManager.getModelData()[i].subCategory === getRelevantModels()) {\n      var model = document.getElementById("model".concat(i));\n      if (model) model.style.display = "block";\n    } else {\n      var _model = document.getElementById("model".concat(i));\n\n      if (_model) _model.style.display = "none";\n    }\n  }\n\n  setVisibilityOfModels(sceneManager.getModelData(), getRelevantModels());\n}\n\nfunction getRelevantModels() {\n  return currentTryon;\n}\n\nvar animate = function animate() {\n  animationFrameId = requestAnimationFrame(animate);\n\n  if (!isPause) {\n    if (isvideo && video && (trackingMode === TrackingMode.Face && facemeshLandmarksProvider && facemeshLandmarksProvider.IsInit() || trackingMode === TrackingMode.Hair && hairSegmentProvider && hairSegmentProvider.IsInit() && !hairSegmentProvider.isSelfieMode() || trackingMode === TrackingMode.Hand && handsLandmarkProvider && handsLandmarkProvider.IsInit())) {\n      if (video.readyState >= HTMLMediaElement.HAVE_METADATA) {\n        if (trackingMode === TrackingMode.Face) {\n          if (currentTryon === CategoryFactories.faceanalysis) {\n            if (!clicked) {\n              facemeshLandmarksProvider.send(video, true, isvideo);\n            }\n          } else {\n            facemeshLandmarksProvider.send(video);\n          }\n        } else if (trackingMode === TrackingMode.Hair) hairSegmentProvider.send(video, isvideo);else if (trackingMode === TrackingMode.Hand) {\n          handsLandmarkProvider.send(video, clicked, isvideo);\n        } // if (videoFrameProvider) videoFrameProvider.handleWindowResize();\n        // sceneManager.resize(window.innerWidth, window.innerHeight);\n\n\n        if (tempWidth !== video.videoWidth) {\n          sceneManager.setVideoTryonSettings(video.videoWidth, video.videoHeight);\n          tempWidth = video.videoWidth;\n        }\n\n        sceneManager.animate(isvideo);\n      }\n    } else if (!isvideo) {\n      if (inputImage.complete) {\n        // sceneManager.resize(inputImage.width, inputImage.height);\n        sceneManager.animate(isvideo); // facemeshLandmarksProvider.setSelfieMode(isvideo);\n        // facemeshLandmarksProvider.send(inputImage, false, false);\n        // console.log("hand image", handsLandmarkProvider.isSelfieMode());\n        //sceneManager.resize(inputImage.width, inputImage.height);\n        // if (\n        //   trackingMode === TrackingMode.Face &&\n        //   facemeshLandmarksProvider &&\n        //   facemeshLandmarksProvider.IsInit()\n        // ) {\n        //   sceneManager.animate(isvideo);\n        //   facemeshLandmarksProvider\n        //     .send(inputImage)\n        //     .then(() => {})\n        //     .catch((error) => {});\n        // } else if (\n        //   trackingMode === TrackingMode.Hair &&\n        //   hairSegmentProvider &&\n        //   hairSegmentProvider.IsInit() &&\n        //   hairSegmentProvider.isSelfieMode()\n        // ) {\n        //   sceneManager.animate(isvideo);\n        //   hairSegmentProvider\n        //     .send(inputImage, isvideo)\n        //     .then(() => {})\n        //     .catch((error) => {});\n        // } else if (\n        //   trackingMode === TrackingMode.Hand &&\n        //   handsLandmarkProvider &&\n        //   handsLandmarkProvider.IsInit() // &&\n        //   // handsLandmarkProvider.isSelfieMode()\n        // ) {\n        //   sceneManager.animate(isvideo);\n        //   handsLandmarkProvider\n        //     .send(inputImage, clicked, isvideo)\n        //     .then(() => {})\n        //     .catch((error) => {});\n        // }\n      }\n    }\n  }\n}; //Map event data for SDK\n\n\nfunction SetAPIKey() {// const urlParams = new URLSearchParams(window.location.search);\n  // const apiKey = urlParams.get("API_KEY");\n  // const width = urlParams.get("WIDTH");\n  // setAPIKey(apiKey);\n  // //setWidthKey(parseInt(width));\n  // setAuthorization(apiKey);\n} // Handles API response\n\n\nfunction handleApiResponse(_x2) {\n  return _handleApiResponse.apply(this, arguments);\n}\n\nfunction _handleApiResponse() {\n  _handleApiResponse = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(event) {\n    var jsonData, apiResponse, PrevTryon;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            // if (sceneManager) {\n            //   sceneManager.setAPIResponse(apiResponse);\n            // }\n            // return;\n            jsonData = mapToJSONData(event);\n            apiResponse = jsonData;\n\n            if (apiResponse) {\n              _context8.next = 5;\n              break;\n            }\n\n            // showSnackbar("Invalid SKU Data").then(() => {\n            //   setTimeout(() => {\n            //     //CloseModule();\n            //     hideSnackbar();\n            //   }, 2000);\n            // });\n            showErrorPermissionPanel("Invalid SKU Data");\n            return _context8.abrupt("return");\n\n          case 5:\n            // let block = false;\n            // if (\n            //   apiResponse.sku._id &&\n            //   apiResponse.sku.attributes &&\n            //   apiResponse.sku.attributes.length > 0 &&\n            //   apiResponse.sku.attributes[0].name &&\n            //   apiResponse.sku.attributes[0].colors &&\n            //   apiResponse.sku.attributes[0].colors.length > 0\n            // ) {\n            //   for (let i = 0; i < apiResponse.sku.attributes[0].colors.length; i++) {\n            //     if (!apiResponse.sku.attributes[0].colors[i]) {\n            //       block = true;\n            //       break;\n            //     }\n            //   }\n            // } else {\n            //   block = true;\n            // }\n            // if (block) {\n            //   showSnackbar("Invalid input. Please retry.").then(() => {\n            //     setTimeout(() => {\n            //       emitModuleClosed();\n            //       hideSnackbar();\n            //     }, 2000);\n            //   });\n            //   return;\n            // }\n            if (apiResponse.sku.subCategory.toLowerCase() === "hair") {\n              trackingMode = TrackingMode.Hair;\n            } else if (apiResponse.sku.subCategory.toLowerCase() === CategoryFactories.nailcolor) {\n              trackingMode = TrackingMode.Hand;\n            } else {\n              trackingMode = TrackingMode.Face;\n            }\n\n            PrevTryon = currentTryon;\n            currentTryon = apiResponse.sku.subCategory.toLowerCase(); //setVisibalityOfModels();\n\n            if (!(trackingMode === TrackingMode.Face)) {\n              _context8.next = 18;\n              break;\n            }\n\n            if (facemeshLandmarksProvider) {\n              _context8.next = 15;\n              break;\n            }\n\n            facemeshLandmarksProvider = new FacemeshLandmarksProvider(onLandmarks, sdkEngine_canvas);\n            _context8.next = 13;\n            return facemeshLandmarksProvider.initialize();\n\n          case 13:\n            _context8.next = 16;\n            break;\n\n          case 15:\n            facemeshLandmarksProvider.setSelfieMode(isvideo);\n\n          case 16:\n            _context8.next = 40;\n            break;\n\n          case 18:\n            if (!(trackingMode === TrackingMode.Hair)) {\n              _context8.next = 28;\n              break;\n            }\n\n            if (hairSegmentProvider) {\n              _context8.next = 25;\n              break;\n            }\n\n            hairSegmentProvider = new HairSegmentProvider(onHairSegment);\n            _context8.next = 23;\n            return hairSegmentProvider.initialize();\n\n          case 23:\n            _context8.next = 26;\n            break;\n\n          case 25:\n            hairSegmentProvider.setSelfieMode(isvideo);\n\n          case 26:\n            _context8.next = 40;\n            break;\n\n          case 28:\n            if (!(trackingMode === TrackingMode.Hand)) {\n              _context8.next = 40;\n              break;\n            }\n\n            if (handsLandmarkProvider) {\n              _context8.next = 35;\n              break;\n            }\n\n            handsLandmarkProvider = new HandsLandmarkProvider(onHandLandsmarks);\n            _context8.next = 33;\n            return handsLandmarkProvider.initialize();\n\n          case 33:\n            _context8.next = 36;\n            break;\n\n          case 35:\n            handsLandmarkProvider.setSelfieMode(isvideo);\n\n          case 36:\n            if (nailmaskProvider) {\n              _context8.next = 40;\n              break;\n            }\n\n            nailmaskProvider = new NailMaskProvider(onCameraFrame);\n            _context8.next = 40;\n            return nailmaskProvider.initialize();\n\n          case 40:\n            if (PrevTryon !== currentTryon) {\n              // setVisibilityOfOptionIcon(0, "block");\n              setVisibilityStateOfUploadInput("block");\n              onClearClick();\n\n              if (PrevTryon === CategoryFactories.nailcolor) {\n                if (sceneManager) {\n                  sceneManager.resetNailData();\n                }\n              }\n\n              if (PrevTryon === CategoryFactories.faceanalysis) {// showOptionsContainer();\n              }\n\n              if (currentTryon === CategoryFactories.nailcolor) {// setVisibilityOfOptionIcon(0, "none");\n                // setVisibilityStateOfUploadInput("none");\n              }\n            } // setVisibalityOfModels();\n            // if (isShouldHideInternalUI()) {\n            //   if (SDKState === 3 && PrevTryon !== currentTryon && !UserUploadMode) {\n            //   }\n            // } else {\n            //   if (PrevTryon !== currentTryon) {\n            //     optionsEventHandler("liveTryOn");\n            //   } else {\n            //     if (SDKState === 3 && PrevTryon === currentTryon && !UserUploadMode) {\n            //       // showOptionsContainer();\n            //       // showModelContainer();\n            //       //  toggleOptionsSelectedImage(2);\n            //     } else if (PrevTryon === currentTryon && !UserUploadMode) {\n            //       optionsEventHandler("liveTryOn");\n            //     }\n            //   }\n            // }\n            // optionsEventHandler("liveTryOn");\n\n\n            if (sceneManager) {\n              sceneManager.setAPIResponse(apiResponse);\n            }\n\n          case 42:\n          case "end":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _handleApiResponse.apply(this, arguments);\n}\n\nvar stopTracking = /*#__PURE__*/function () {\n  var _ref4 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var tracks;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            tempWidth = -1;\n            SDKState = 0;\n            isvideo = false;\n            resetComparisonSlider("50%", comparisonState, isvideo); // video_Container.style.width = "initial";\n            // video_Container.style.height = "initial";\n\n            imageSource = null;\n            UserUploadMode = false;\n            sdkEngine_canavas_container.style.display = "none";\n            cancelAnimationFrame(animationFrameId);\n            onClearClick();\n\n            if (inputImage) {\n              sdkEngine_video_Container.removeChild(inputImage);\n              inputImage = null;\n            }\n\n            if (getCurrentStream()) {\n              tracks = getCurrentStream().getTracks();\n              tracks.forEach(function (track) {\n                return track.stop();\n              }); // Stop all tracks\n            }\n\n            if (getVideo()) {\n              getVideo().pause();\n              getVideo().srcObject = null; // Disconnect the video source\n\n              sdkEngine_video_Container.removeChild(getVideo()); // Remove the video element from DOM\n\n              setVideo(null);\n            }\n\n            tempWidth = -1;\n\n          case 13:\n          case "end":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function stopTracking() {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nfunction CloseModule() {\n  stopTracking();\n  (0,utils_event/* emitModuleClosed */.KQ)();\n  setIsClosed(true);\n}\nfunction modelsEventHandler(modelObj) {\n  UserUploadMode = false;\n  onImageMode(modelObj.imageUrl);\n}\nvar initialize = /*#__PURE__*/function () {\n  var _ref5 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var loaderTime,\n        idealRes,\n        constraints,\n        _args3 = arguments;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            loaderTime = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : 2000;\n\n            if (!isvideo) {\n              _context3.next = 14;\n              break;\n            }\n\n            video.pause();\n\n            if (video.querySelector("source")) {\n              video.querySelector("source").remove();\n            }\n\n            video.removeAttribute("src");\n            video.load();\n\n            if (!videoFrameProvider) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 9;\n            return videoFrameProvider.stop();\n\n          case 9:\n            videoFrameProvider = null;\n\n          case 10:\n            if (trackingMode === TrackingMode.Hair) {\n              idealRes = 640;\n            } else {\n              idealRes = 1920;\n            }\n\n            console.log(idealRes);\n\n            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n              constraints = {\n                video: {\n                  facingMode: {\n                    ideal: "user"\n                  },\n                  width: {\n                    ideal: idealRes\n                  },\n                  advanced: [// { frameRate: { min: 60 } },\n                  {\n                    facingMode: {\n                      exact: "user"\n                    }\n                  }, {\n                    width: {\n                      max: 2560\n                    }\n                  }, {\n                    width: {\n                      min: 320\n                    }\n                  }]\n                }\n              };\n              navigator.mediaDevices.getUserMedia(constraints) //{ video: { facingMode: "user" } })\n              .then(function (stream) {\n                currentStream = stream;\n                video.srcObject = stream;\n                video.play();\n                if (sdkEngine_canvas) sdkEngine_canvas.style.display = "block";\n                (0,utils_event/* emitCameraOpened */.em)();\n              })["catch"](function (error) {\n                cameraPermissionPanel_showCameraPermissionPanel();\n                (0,utils_event/* emitCameraAccessIssue */.wF)(); // console.error("Unable to access the camera/webcam.", error);\n              });\n            }\n\n            sceneManager.createNewPlane(video);\n\n          case 14:\n            animate(); // emitModuleOpened();\n\n            sdkEngine_videoContainer.classList.remove("loading"); //if (!isInitialized) setTimeout(disableInitLoading, 2000);\n\n            setTimeout(disableInitLoading, loaderTime);\n\n          case 17:\n          case "end":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function initialize() {\n    return _ref5.apply(this, arguments);\n  };\n}();\nfunction disableInitLoading() {\n  hideLottieLoader(); // loaderContainer.style.display = "none";\n\n  isInitialized = true;\n}\nsdkEngine_imageInput.addEventListener("click", function () {\n  optionsEventHandler("imgTryOn");\n});\nsdkEngine_imageInput.addEventListener("cancel", function (event) {\n  if (!UserUploadSrc) {\n    (0,utils_event/* emitUploadCancelled */.A3)();\n  }\n}); // imageInput.addEventListener("change", (event) => {\n//   const selectedFile = event.target.files[0];\n//   if (selectedFile) {\n//     const fileType = selectedFile.type;\n//     if (\n//       fileType.startsWith("image/") &&\n//       (fileType === "image/jpeg" ||\n//         fileType === "image/png" ||\n//         fileType === "image/avif" ||\n//         fileType === "image/webp" ||\n//         fileType === "image/vnd.wap.wbmp" ||\n//         fileType === "image/svg+xml")\n//     ) {\n//       // Valid image type\n//       const imageURL = URL.createObjectURL(selectedFile);\n//       imageSource = imageURL;\n//       UserUploadSrc = imageURL;\n//       UserUploadMode = true;\n//       showPrevIcon();\n//       showCrossIcon({ blurredBg: true });\n//       showSettingOptions();\n//       emitUploadModeStarted();\n//       onImageMode(imageSource);\n//       //  toggleOptionsSelectedImage(0);\n//       hideModelContainer();\n//       // Proceed with displaying or processing the image\n//     } else {\n//       // Invalid file type\n//       // console.log("Invalid file type. Please select a valid image file.");\n//     }\n//   }\n// });\n\nsdkEngine_imageInput.addEventListener("change", function (event) {\n  var selectedFile = event.target.files[0];\n\n  function displayError(message) {\n    showErrorPermissionPanel(message);\n  }\n\n  function downscaleImage(img, maxWidth, maxHeight, callback) {\n    var width = img.width;\n    var height = img.height;\n    var newWidth = width;\n    var newHeight = height;\n\n    if (width > maxWidth || height > maxHeight) {\n      var aspectRatio = width / height;\n\n      if (width > height) {\n        newWidth = maxWidth;\n        newHeight = Math.round(maxWidth / aspectRatio);\n      } else {\n        newHeight = maxHeight;\n        newWidth = Math.round(maxHeight * aspectRatio);\n      }\n    }\n\n    var canvas = document.createElement("canvas");\n    canvas.width = newWidth;\n    canvas.height = newHeight;\n    var ctx = canvas.getContext("2d");\n    ctx.drawImage(img, 0, 0, newWidth, newHeight);\n    callback(canvas.toDataURL());\n  }\n\n  try {\n    if (selectedFile) {\n      var fileType = selectedFile.type;\n      var validTypes = ["image/jpeg", "image/png", "image/avif", "image/webp", "image/vnd.wap.wbmp", "image/svg+xml"];\n\n      if (!validTypes.includes(fileType)) {\n        displayError("Invalid file type. Supported types are JPEG, PNG, AVIF, WEBP, WBMP, SVG.");\n        return;\n      }\n\n      var MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB\n\n      if (selectedFile.size > MAX_FILE_SIZE) {\n        displayError("File is too large. Please select a file smaller than 10MB.");\n        return;\n      }\n\n      if (selectedFile.size === 0) {\n        displayError("Selected file is empty.");\n        return;\n      }\n\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        var imageURL = event.target.result;\n        var img = new Image();\n\n        img.onload = function () {\n          var MAX_WIDTH = 2048; // 2k resolution width\n\n          var MAX_HEIGHT = 2048; // 2k resolution height\n\n          if (img.width > MAX_WIDTH || img.height > MAX_HEIGHT) {\n            downscaleImage(img, MAX_WIDTH, MAX_HEIGHT, function (downscaledImageURL) {\n              imageSource = downscaledImageURL;\n              UserUploadSrc = downscaledImageURL;\n              UserUploadMode = true;\n              showPrevIcon();\n              showCrossIcon({\n                blurredBg: true\n              });\n              showSettingOptions();\n              onImageMode(imageSource);\n              hideModelContainer();\n            });\n          } else {\n            imageSource = imageURL;\n            UserUploadSrc = imageURL;\n            UserUploadMode = true;\n            showPrevIcon();\n            showCrossIcon({\n              blurredBg: true\n            });\n            showSettingOptions();\n            onImageMode(imageSource);\n            hideModelContainer();\n          }\n        };\n\n        img.onerror = function () {\n          displayError("Error loading the image.");\n        };\n\n        img.src = imageURL;\n      };\n\n      reader.onerror = function () {\n        displayError("Error reading the file.");\n      };\n\n      reader.readAsDataURL(selectedFile);\n    } else {\n      displayError("No file selected.");\n    }\n  } catch (error) {\n    displayError("An error occurred while processing the file: " + error.message);\n  }\n\n  sdkEngine_imageInput.value = "";\n});\n\nfunction applyEventHandler() {\n  hideConfigContainer(); // toggleOptionsButton(3);\n}\n\nfunction resetEventHandler() {\n  ResetOpacitySliderValue();\n  ResetSliders(); //hideConfigContainer();\n}\n\nfunction tryOnEventHandler(type, imageID, imgURL) {\n  sceneManager.resetZoomChanges();\n  enableBothZoomIcons();\n  disableSettingIcon("zoomOut");\n\n  switch (type) {\n    case "live":\n      if (isCameraPermissionGranted()) {\n        UserUploadMode = false;\n        hideTryOnScreen();\n        showPrevIcon();\n        showCrossIcon({\n          blurredBg: true\n        });\n        (0,utils_event/* emitLiveModeStarted */.WF)();\n        showSettingOptions();\n        onVideoMode();\n      } else {\n        sdkEngine_canavas_container.style.display = "flex";\n        sdkEngine_canavas_container.style.justifyContent = "center";\n        sdkEngine_canvas.style.display = "none";\n        cameraPermissionPanel_showCameraPermissionPanel();\n      }\n\n      break;\n\n    case "upload":\n      if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n        if (imgURL) {\n          UserUploadSrc = imgURL;\n          UserUploadMode = true;\n          (0,utils_event/* emitUploadModeStarted */.M2)();\n          onImageMode(UserUploadSrc); //  toggleOptionsSelectedImage(0);\n        }\n      } else {\n        if (UserUploadSrc !== null) {// showPrevIcon();\n          // showCrossIcon({ blurredBg: true });\n          // showSettingOptions();\n          // hideModelContainer();\n          // UserUploadMode = true;\n          // onImageMode(UserUploadSrc);\n        }\n\n        (0,utils_event/* emitUploadModeStarted */.M2)();\n        sdkEngine_imageInput.click();\n      }\n\n      break;\n\n    case "modelTryOn":\n      if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n        UserUploadMode = false;\n        (0,utils_event/* emitModelTryonModeStarted */.GP)();\n        onImageMode(imgURL);\n      } else {\n        if (imgURL) {\n          onImageMode(imgURL);\n          showPrevIcon();\n          showSettingOptions();\n          showCrossIcon({\n            blurredBg: true\n          });\n        } else {\n          showPrevIcon();\n          showSettingOptions();\n          showCrossIcon({\n            blurredBg: true\n          });\n          UserUploadMode = false; //console.log(getSceneManagerInstance().getModelData()[]);\n\n          (0,utils_event/* emitModelTryonModeStarted */.GP)();\n          onImageMode(getSceneManagerInstance().getModelData()[imageID].imageUrl);\n        }\n      }\n\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction onPrevIconClick() {\n  CloseModule();\n  hideSettingOptions();\n  hidePrevIcon();\n  hideConfigContainer();\n  hideComparisonSlider();\n  unSelectAllSettings();\n  showCrossIcon({\n    blurredBg: false,\n    blackIcon: true\n  });\n  showTryOnScreen();\n}\n\nfunction onCrossIconClick() {\n  window.postMessage({\n    type: "nailColor",\n    payload: {\n      options: "resetSnapShot"\n    }\n  }); // showPopupModal();\n}\n\nfunction onConfirmClick() {\n  onPrevIconClick();\n  (0,utils_event/* emitModuleClosed */.KQ)();\n  CloseModule();\n  hidePopupModal();\n}\n\nfunction onCloseClick() {\n  hidePopupModal();\n}\n\nfunction settingsEventHandler(data) {\n  switch (data.tag) {\n    case "configSettings":\n      hideComparisonSlider();\n      toggleConfigContainer();\n      hideSettingOptions();\n      break;\n\n    case "comparison":\n      hideConfigContainer();\n      toggleComparisonSlider();\n      break;\n\n    case "zoomIn":\n      console.log("salhflhsflahsldfa");\n      getSceneManagerInstance().updateCameraZoom("up");\n      break;\n\n    case "zoomOut":\n      getSceneManagerInstance().updateCameraZoom("down");\n      break;\n\n    case "capture":\n      window.postMessage({\n        type: "nailColor",\n        payload: {\n          options: "clickSnapShot"\n        }\n      }); //CaptureSnapShot();\n\n      break;\n  }\n}\n\nfunction errorBtnHandler() {\n  hideErrorPermissionPanel();\n  onPrevIconClick();\n}\n\nfunction optionsEventHandler(tag, imgURL) {\n  // console.log(tag);\n  switch (tag) {\n    case "liveTryOn":\n      if (isCameraPermissionGranted()) {\n        UserUploadMode = false;\n        hideModelContainer(); //toggleOptionsSelectedImage(1);\n\n        if (SDKState !== 2) {\n          (0,utils_event/* emitLiveModeStarted */.WF)();\n          onVideoMode();\n        } else {// if (currentTryon === CategoryFactories.nailcolor) {\n          //   onClearClick();\n          //   if (sceneManager) {\n          //     sceneManager.resetNailData();\n          //   }\n          // }\n        }\n      } else {\n        // stopTracking();\n        sdkEngine_canavas_container.style.display = "flex";\n        sdkEngine_canavas_container.style.justifyContent = "center";\n        sdkEngine_canvas.style.display = "none";\n        hideModelContainer(); // toggleOptionsSelectedImage(1);\n\n        cameraPermissionPanel_showCameraPermissionPanel();\n        UserUploadMode = false; // emitModelTryonModeStarted();\n        // optionsEventHandler("modelTryOn");\n        // toggleOptionsSelectedImage(2);\n      }\n\n      break;\n\n    case "modelTryOn":\n      if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n        UserUploadMode = false;\n        (0,utils_event/* emitModelTryonModeStarted */.GP)();\n        onImageMode(imgURL);\n      } else {\n        UserUploadMode = false;\n        showModelContainer(); //toggleOptionsSelectedImage(2);\n\n        (0,utils_event/* emitModelTryonModeStarted */.GP)();\n        onImageMode(imageTrackingWithDefaultModel(sceneManager.getModelData(), getRelevantModels()));\n      }\n\n      break;\n\n    case "imgTryOn":\n      if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) {// if (imgURL) {\n        //   UserUploadSrc = imgURL;\n        //   UserUploadMode = true;\n        //   emitUploadModeStarted();\n        //   onImageMode(UserUploadSrc);\n        //   //  toggleOptionsSelectedImage(0);\n        // }\n      } else {\n        if (UserUploadSrc !== null) {// hideModelContainer();\n          // UserUploadMode = true;\n          // emitUploadModeStarted();\n          // onImageMode(UserUploadSrc);\n          // toggleOptionsSelectedImage(0);\n        }\n      }\n\n      break;\n\n    case "configScreen":\n      toggleConfigContainer();\n      break;\n  }\n}\nfunction configSliderHandler(value, tag) {\n  // console.log(value, tag);\n  switch (tag) {\n    case "Opacity":\n      setOpacitySliderValue(value);\n      getSceneManagerInstance().forceUpdateCurrentStyle();\n      break;\n\n    case "reset":\n      resetEventHandler();\n      break;\n\n    case "close":\n      unSelectAllSettings();\n      showSettingOptions();\n      hideConfigContainer();\n      break;\n\n    default:\n      resetEventHandler();\n  }\n}\n\nfunction cameraPermissionHandler() {\n  (0,utils_event/* emitCameraFailed */.A8)();\n  hideCameraPermissionPanel();\n  onPrevIconClick();\n}\n\nfunction billingHandler() {\n  (0,utils_event/* emitModuleClosed */.KQ)();\n  CloseModule();\n}\n\nvar onImageClick = /*#__PURE__*/function () {\n  var _ref6 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    var ignoreHandVisible,\n        _video3,\n        _args4 = arguments;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            ignoreHandVisible = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : false;\n\n            if (!(isHandVisible || ignoreHandVisible)) {\n              _context4.next = 8;\n              break;\n            }\n\n            clicked = true;\n            (_video3 = video) === null || _video3 === void 0 ? void 0 : _video3.pause(); // nailmaskProvider.fetchHealth()\n            // console.log("onImageClick");\n\n            _context4.next = 6;\n            return handsLandmarkProvider.SnapNailImage();\n\n          case 6:\n            _context4.next = 10;\n            break;\n\n          case 8:\n            (0,utils_event/* emitNailColorEvent */.C0)("error", globalVariables/* errorMessages */.Qj.nailDetectionIssue); // showSnackbar(errorMessages.nailDetectionIssue).then(() => {\n            //   setTimeout(() => {\n            //     // CloseModule();\n            //     hideSnackbar();\n            //   }, 500);\n            // });\n\n            showErrorPermissionPanel(globalVariables/* errorMessages */.Qj.nailDetectionIssue);\n\n          case 10:\n          case "end":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function onImageClick() {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar onClearClick = /*#__PURE__*/function () {\n  var _ref7 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n    var _video4;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            // console.log("onClearClick");\n            clicked = false;\n            (_video4 = video) === null || _video4 === void 0 ? void 0 : _video4.play();\n            if (sceneManager) sceneManager.resetHandLandmark();\n\n          case 3:\n          case "end":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function onClearClick() {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar loadML = /*#__PURE__*/function () {\n  var _ref8 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n    var fakeSKU;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            fakeSKU = function _fakeSKU() {\n              window.postMessage({\n                type: "applyMakeupByConfig",\n                payload: {\n                  sku: {\n                    _id: "eb117fdc-fa2f-4e15-8e57-d4fc4691a1e1",\n                    orgId: -99,\n                    category: "beauty",\n                    subCategory: "nailColor",\n                    productName: "Test Lipstick2",\n                    productImage: "URL/icon/01.png",\n                    vendor: "Lakeme",\n                    isActive: true,\n                    itemCode: "BRUNT-1709637495061",\n                    styleVariant: "single",\n                    styleIcon: "URL/icon/style1/01.png",\n                    attributes: [{\n                      name: "glossy",\n                      icons: ["URL/icon/palette/01.png"],\n                      colors: ["#ff0000", "#ffffff"],\n                      effectAssets: ["URL/style1/base-lipstick.png"]\n                    }],\n                    meta: {\n                      colorIntensity: 80\n                    },\n                    createdAt: "2024-03-18T07:33:24.640Z",\n                    updatedAt: "2024-03-18T07:33:24.640Z"\n                  }\n                }\n              });\n            };\n\n            if ((0,globalVariables/* getCategory */.n3)() === "hair") {\n              trackingMode = TrackingMode.Hair;\n            } else {\n              trackingMode = TrackingMode.Face;\n            }\n\n            if (!(trackingMode === TrackingMode.Face)) {\n              _context6.next = 9;\n              break;\n            }\n\n            if (facemeshLandmarksProvider) {\n              _context6.next = 7;\n              break;\n            }\n\n            facemeshLandmarksProvider = new FacemeshLandmarksProvider(onLandmarks, sdkEngine_canvas);\n            _context6.next = 7;\n            return facemeshLandmarksProvider.initialize();\n\n          case 7:\n            _context6.next = 14;\n            break;\n\n          case 9:\n            if (!(trackingMode === TrackingMode.Hair)) {\n              _context6.next = 14;\n              break;\n            }\n\n            if (getProviders().hairSegmentProvider) {\n              _context6.next = 14;\n              break;\n            }\n\n            setProvider("hair", new HairSegmentProvider(onHairSegment));\n            _context6.next = 14;\n            return getProviders().hairSegmentProvider.initialize();\n\n          case 14:\n            (0,utils_event/* emitModuleLoaded */.mK)();\n\n            if (!(0,globalVariables/* getOpenLiveOnInit */.md)()) {\n              console.log("getOpenLiveOnInit()", (0,globalVariables/* getOpenLiveOnInit */.md)());\n              disableInitLoading();\n            } else {\n              tryOnEventHandler("live");\n            }\n\n            fakeSKU();\n            sdkEngine_toastElement.addEventListener("click", function (e) {\n              var _e$target;\n\n              if ((e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.id) === "snackbar-close-icon") {\n                hideSnackbar();\n              }\n            });\n            window.addEventListener("resize", function () {\n              if (sceneManager) {\n                sceneManager.resizeCamera();\n              }\n            });\n\n          case 19:\n          case "end":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function loadML() {\n    return _ref8.apply(this, arguments);\n  };\n}();\nvar fakeInit = /*#__PURE__*/function () {\n  var _ref9 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            window.postMessage({\n              type: "initialize",\n              payload: {\n                mode: "platform",\n                chooseTryOnConfig: {\n                  tryOnScreen: {\n                    hideTryOnScreen: false,\n                    mode: "light",\n                    tryOnTypeConfig: {\n                      hideLiveCamera: false,\n                      hideModelTryOn: false,\n                      hideUploadMode: false\n                    }\n                  }\n                }\n              }\n            });\n\n          case 1:\n          case "end":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function fakeInit() {\n    return _ref9.apply(this, arguments);\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6104\n')},1691:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".tryon-screen {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  /* display: flex; */\\n  display: none;\\n  justify-content: center;\\n}\\n\\n.tryon_container {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 0 auto;\\n  padding-top: 64px;\\n  gap: 24px;\\n  max-width: 344px;\\n}\\n\\n.tryon_screen_light {\\n  background: white;\\n}\\n.tryon_screen_dark {\\n  background: #1c1d1e;\\n}\\n\\n.tryon_container_heading {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  color: #101112;\\n}\\n\\n.tryon_container_heading_text {\\n  font-size: 20px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 120%;\\n}\\n\\n.tryon_container_heading_subtext {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 140%;\\n  color: #4c4d4d;\\n}\\n\\n.tryon_container_live_tryon {\\n  padding: 16px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: #f1f1f1;\\n  border-radius: 8px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_live_tryon_left {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  color: #4c4d4d;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n\\n.tryon_container_live_tryon_left_camera {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.tryon_container_live_tryon_right path {\\n  /* fill: #4c4d4d; */\\n}\\n\\n.tryon_container_upload_tryon {\\n  padding: 16px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: #f1f1f1;\\n  border-radius: 8px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_upload_tryon_left {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  color: #4c4d4d;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n\\n.tryon_container_upload_tryon_left_camera {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.tryon_container_live_tryon_right path {\\n  /* fill: #4c4d4d; */\\n}\\n\\n.tryon_container_choose_model_heading {\\n  color: #101112;\\n  font-size: 18px;\\n  font-style: normal;\\n  line-height: 140%;\\n  margin-bottom: 4px;\\n}\\n\\n.tryon_container_model_tryon {\\n  display: grid;\\n  grid-template-columns: auto auto auto;\\n  gap: 8px;\\n}\\n\\n.tryon_container_model_tryon_container {\\n  width: 108px;\\n  height: 108px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_model_tryon_container img {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n  border-radius: 8px;\\n}\\n.tryon_container_model_tryon_upload {\\n  width: 108px;\\n  height: 108px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  background: #e7e7e7;\\n  border-radius: 8px;\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: normal;\\n  color: #b7b8b8;\\n  cursor: pointer;\\n  gap: 8px;\\n}\\n\\n.tryon_container_footer {\\n  height: 100px;\\n  padding: 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, #000000 100%);\\n  /* opacity: 0.3; */\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .tryon_container {\\n    max-width: 296px;\\n  }\\n  .tryon_container_heading_subtext {\\n    display: none;\\n  }\\n  .tryon_container_heading_text {\\n    font-size: 18px;\\n    position: relative;\\n    top: 12px;\\n  }\\n  .tryon_container_model_tryon {\\n    gap: 10px;\\n  }\\n  .tryon_container_choose_model_heading {\\n    font-size: 16px;\\n  }\\n  .tryon_container_live_tryon_left {\\n    font-size: 14px;\\n  }\\n  .tryon_container_live_tryon {\\n    padding: 12px 8px;\\n  }\\n  .tryon_container_model_tryon_container {\\n    width: 92px;\\n    height: 92px;\\n  }\\n\\n  .tryon_container_model_tryon_upload {\\n    width: 92px;\\n    height: 92px;\\n  }\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/chooseTryOn.css"],"names":[],"mappings":"AAAA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,mBAAmB;EACnB,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,eAAe;EACf,iBAAiB;EACjB,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;AACnB;AACA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;EACR,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;EACR,cAAc;EACd,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;EACR,cAAc;EACd,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,eAAe;EACf,kBAAkB;EAClB,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;AACpB;AACA;EACE,YAAY;EACZ,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,mBAAmB;EACnB,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;EACnB,cAAc;EACd,eAAe;EACf,QAAQ;AACV;;AAEA;EACE,aAAa;EACb,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,sEAAsE;EACtE,kBAAkB;AACpB;;AAEA;EACE;IACE,gBAAgB;EAClB;EACA;IACE,aAAa;EACf;EACA;IACE,eAAe;IACf,kBAAkB;IAClB,SAAS;EACX;EACA;IACE,SAAS;EACX;EACA;IACE,eAAe;EACjB;EACA;IACE,eAAe;EACjB;EACA;IACE,iBAAiB;EACnB;EACA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;AACF","sourcesContent":[".tryon-screen {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  /* display: flex; */\\n  display: none;\\n  justify-content: center;\\n}\\n\\n.tryon_container {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 0 auto;\\n  padding-top: 64px;\\n  gap: 24px;\\n  max-width: 344px;\\n}\\n\\n.tryon_screen_light {\\n  background: white;\\n}\\n.tryon_screen_dark {\\n  background: #1c1d1e;\\n}\\n\\n.tryon_container_heading {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  color: #101112;\\n}\\n\\n.tryon_container_heading_text {\\n  font-size: 20px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 120%;\\n}\\n\\n.tryon_container_heading_subtext {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 140%;\\n  color: #4c4d4d;\\n}\\n\\n.tryon_container_live_tryon {\\n  padding: 16px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: #f1f1f1;\\n  border-radius: 8px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_live_tryon_left {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  color: #4c4d4d;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n\\n.tryon_container_live_tryon_left_camera {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.tryon_container_live_tryon_right path {\\n  /* fill: #4c4d4d; */\\n}\\n\\n.tryon_container_upload_tryon {\\n  padding: 16px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: #f1f1f1;\\n  border-radius: 8px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_upload_tryon_left {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  color: #4c4d4d;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n\\n.tryon_container_upload_tryon_left_camera {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.tryon_container_live_tryon_right path {\\n  /* fill: #4c4d4d; */\\n}\\n\\n.tryon_container_choose_model_heading {\\n  color: #101112;\\n  font-size: 18px;\\n  font-style: normal;\\n  line-height: 140%;\\n  margin-bottom: 4px;\\n}\\n\\n.tryon_container_model_tryon {\\n  display: grid;\\n  grid-template-columns: auto auto auto;\\n  gap: 8px;\\n}\\n\\n.tryon_container_model_tryon_container {\\n  width: 108px;\\n  height: 108px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_model_tryon_container img {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n  border-radius: 8px;\\n}\\n.tryon_container_model_tryon_upload {\\n  width: 108px;\\n  height: 108px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  background: #e7e7e7;\\n  border-radius: 8px;\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: normal;\\n  color: #b7b8b8;\\n  cursor: pointer;\\n  gap: 8px;\\n}\\n\\n.tryon_container_footer {\\n  height: 100px;\\n  padding: 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, #000000 100%);\\n  /* opacity: 0.3; */\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .tryon_container {\\n    max-width: 296px;\\n  }\\n  .tryon_container_heading_subtext {\\n    display: none;\\n  }\\n  .tryon_container_heading_text {\\n    font-size: 18px;\\n    position: relative;\\n    top: 12px;\\n  }\\n  .tryon_container_model_tryon {\\n    gap: 10px;\\n  }\\n  .tryon_container_choose_model_heading {\\n    font-size: 16px;\\n  }\\n  .tryon_container_live_tryon_left {\\n    font-size: 14px;\\n  }\\n  .tryon_container_live_tryon {\\n    padding: 12px 8px;\\n  }\\n  .tryon_container_model_tryon_container {\\n    width: 92px;\\n    height: 92px;\\n  }\\n\\n  .tryon_container_model_tryon_upload {\\n    width: 92px;\\n    height: 92px;\\n  }\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY5MS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDZ0g7QUFDakI7QUFDL0YsOEJBQThCLG1GQUEyQixDQUFDLDRGQUFxQztBQUMvRjtBQUNBLHlEQUF5RCxnQkFBZ0IsaUJBQWlCLHVCQUF1QixXQUFXLHNCQUFzQixvQkFBb0IsNEJBQTRCLEdBQUcsc0JBQXNCLGdCQUFnQixpQkFBaUIsa0JBQWtCLDJCQUEyQixvQkFBb0Isc0JBQXNCLGNBQWMscUJBQXFCLEdBQUcseUJBQXlCLHNCQUFzQixHQUFHLHNCQUFzQix3QkFBd0IsR0FBRyw4QkFBOEIsa0JBQWtCLDJCQUEyQixhQUFhLG1CQUFtQixHQUFHLG1DQUFtQyxvQkFBb0IsdUJBQXVCLHFCQUFxQixzQkFBc0IsR0FBRyxzQ0FBc0Msb0JBQW9CLHVCQUF1QixxQkFBcUIsc0JBQXNCLG1CQUFtQixHQUFHLGlDQUFpQyxrQkFBa0Isa0JBQWtCLG1DQUFtQyx3QkFBd0IsOEJBQThCLHVCQUF1QixvQkFBb0IsR0FBRyxzQ0FBc0Msa0JBQWtCLHdCQUF3QixhQUFhLG1CQUFtQixvQkFBb0IsdUJBQXVCLHFCQUFxQixzQkFBc0IsR0FBRyw2Q0FBNkMsa0JBQWtCLHdCQUF3QixHQUFHLDRDQUE0QyxzQkFBc0IsS0FBSyxtQ0FBbUMsa0JBQWtCLGtCQUFrQixtQ0FBbUMsd0JBQXdCLDhCQUE4Qix1QkFBdUIsb0JBQW9CLEdBQUcsd0NBQXdDLGtCQUFrQix3QkFBd0IsYUFBYSxtQkFBbUIsb0JBQW9CLHVCQUF1QixxQkFBcUIsc0JBQXNCLEdBQUcsK0NBQStDLGtCQUFrQix3QkFBd0IsR0FBRyw0Q0FBNEMsc0JBQXNCLEtBQUssMkNBQTJDLG1CQUFtQixvQkFBb0IsdUJBQXVCLHNCQUFzQix1QkFBdUIsR0FBRyxrQ0FBa0Msa0JBQWtCLDBDQUEwQyxhQUFhLEdBQUcsNENBQTRDLGlCQUFpQixrQkFBa0Isb0JBQW9CLEdBQUcsZ0RBQWdELGdCQUFnQixpQkFBaUIsc0JBQXNCLHVCQUF1QixHQUFHLHVDQUF1QyxpQkFBaUIsa0JBQWtCLGtCQUFrQiwyQkFBMkIsNEJBQTRCLHdCQUF3Qix3QkFBd0IsdUJBQXVCLG9CQUFvQix1QkFBdUIscUJBQXFCLHdCQUF3QixtQkFBbUIsb0JBQW9CLGFBQWEsR0FBRyw2QkFBNkIsa0JBQWtCLGtCQUFrQixrQkFBa0IsNEJBQTRCLHdCQUF3QiwyRUFBMkUscUJBQXFCLEtBQUssZ0VBQWdFLHNCQUFzQix1QkFBdUIsS0FBSyxzQ0FBc0Msb0JBQW9CLEtBQUssbUNBQW1DLHNCQUFzQix5QkFBeUIsZ0JBQWdCLEtBQUssa0NBQWtDLGdCQUFnQixLQUFLLDJDQUEyQyxzQkFBc0IsS0FBSyxzQ0FBc0Msc0JBQXNCLEtBQUssaUNBQWlDLHdCQUF3QixLQUFLLDRDQUE0QyxrQkFBa0IsbUJBQW1CLEtBQUssMkNBQTJDLGtCQUFrQixtQkFBbUIsS0FBSyxHQUFHLFNBQVMseUdBQXlHLFVBQVUsVUFBVSxZQUFZLFdBQVcsWUFBWSxXQUFXLFlBQVksT0FBTyxLQUFLLFVBQVUsVUFBVSxVQUFVLFlBQVksV0FBVyxZQUFZLFdBQVcsWUFBWSxPQUFPLEtBQUssWUFBWSxNQUFNLEtBQUssWUFBWSxPQUFPLEtBQUssVUFBVSxZQUFZLFdBQVcsVUFBVSxPQUFPLEtBQUssVUFBVSxZQUFZLGFBQWEsYUFBYSxPQUFPLEtBQUssVUFBVSxZQUFZLGFBQWEsYUFBYSxXQUFXLE9BQU8sS0FBSyxVQUFVLFVBQVUsWUFBWSxhQUFhLGFBQWEsYUFBYSxXQUFXLE9BQU8sS0FBSyxVQUFVLFlBQVksV0FBVyxVQUFVLFVBQVUsWUFBWSxhQUFhLGFBQWEsT0FBTyxLQUFLLFVBQVUsWUFBWSxPQUFPLEtBQUssWUFBWSxPQUFPLEtBQUssVUFBVSxVQUFVLFlBQVksYUFBYSxhQUFhLGFBQWEsV0FBVyxPQUFPLEtBQUssVUFBVSxZQUFZLFdBQVcsVUFBVSxVQUFVLFlBQVksYUFBYSxhQUFhLE9BQU8sS0FBSyxVQUFVLFlBQVksT0FBTyxLQUFLLFlBQVksT0FBTyxLQUFLLFVBQVUsVUFBVSxZQUFZLGFBQWEsYUFBYSxPQUFPLEtBQUssVUFBVSxZQUFZLFdBQVcsTUFBTSxLQUFLLFVBQVUsVUFBVSxVQUFVLE9BQU8sS0FBSyxVQUFVLFVBQVUsWUFBWSxhQUFhLE1BQU0sS0FBSyxVQUFVLFVBQVUsVUFBVSxZQUFZLGFBQWEsYUFBYSxhQUFhLGFBQWEsV0FBVyxZQUFZLGFBQWEsYUFBYSxXQUFXLFVBQVUsVUFBVSxNQUFNLEtBQUssVUFBVSxVQUFVLFVBQVUsWUFBWSxhQUFhLGFBQWEsYUFBYSxPQUFPLEtBQUssS0FBSyxZQUFZLE1BQU0sS0FBSyxVQUFVLEtBQUssS0FBSyxVQUFVLFlBQVksV0FBVyxLQUFLLEtBQUssVUFBVSxLQUFLLEtBQUssVUFBVSxNQUFNLEtBQUssVUFBVSxNQUFNLEtBQUssWUFBWSxNQUFNLEtBQUssVUFBVSxVQUFVLE1BQU0sS0FBSyxVQUFVLFVBQVUsS0FBSyx3Q0FBd0MsZ0JBQWdCLGlCQUFpQix1QkFBdUIsV0FBVyxzQkFBc0Isb0JBQW9CLDRCQUE0QixHQUFHLHNCQUFzQixnQkFBZ0IsaUJBQWlCLGtCQUFrQiwyQkFBMkIsb0JBQW9CLHNCQUFzQixjQUFjLHFCQUFxQixHQUFHLHlCQUF5QixzQkFBc0IsR0FBRyxzQkFBc0Isd0JBQXdCLEdBQUcsOEJBQThCLGtCQUFrQiwyQkFBMkIsYUFBYSxtQkFBbUIsR0FBRyxtQ0FBbUMsb0JBQW9CLHVCQUF1QixxQkFBcUIsc0JBQXNCLEdBQUcsc0NBQXNDLG9CQUFvQix1QkFBdUIscUJBQXFCLHNCQUFzQixtQkFBbUIsR0FBRyxpQ0FBaUMsa0JBQWtCLGtCQUFrQixtQ0FBbUMsd0JBQXdCLDhCQUE4Qix1QkFBdUIsb0JBQW9CLEdBQUcsc0NBQXNDLGtCQUFrQix3QkFBd0IsYUFBYSxtQkFBbUIsb0JBQW9CLHVCQUF1QixxQkFBcUIsc0JBQXNCLEdBQUcsNkNBQTZDLGtCQUFrQix3QkFBd0IsR0FBRyw0Q0FBNEMsc0JBQXNCLEtBQUssbUNBQW1DLGtCQUFrQixrQkFBa0IsbUNBQW1DLHdCQUF3Qiw4QkFBOEIsdUJBQXVCLG9CQUFvQixHQUFHLHdDQUF3QyxrQkFBa0Isd0JBQXdCLGFBQWEsbUJBQW1CLG9CQUFvQix1QkFBdUIscUJBQXFCLHNCQUFzQixHQUFHLCtDQUErQyxrQkFBa0Isd0JBQXdCLEdBQUcsNENBQTRDLHNCQUFzQixLQUFLLDJDQUEyQyxtQkFBbUIsb0JBQW9CLHVCQUF1QixzQkFBc0IsdUJBQXVCLEdBQUcsa0NBQWtDLGtCQUFrQiwwQ0FBMEMsYUFBYSxHQUFHLDRDQUE0QyxpQkFBaUIsa0JBQWtCLG9CQUFvQixHQUFHLGdEQUFnRCxnQkFBZ0IsaUJBQWlCLHNCQUFzQix1QkFBdUIsR0FBRyx1Q0FBdUMsaUJBQWlCLGtCQUFrQixrQkFBa0IsMkJBQTJCLDRCQUE0Qix3QkFBd0Isd0JBQXdCLHVCQUF1QixvQkFBb0IsdUJBQXVCLHFCQUFxQix3QkFBd0IsbUJBQW1CLG9CQUFvQixhQUFhLEdBQUcsNkJBQTZCLGtCQUFrQixrQkFBa0Isa0JBQWtCLDRCQUE0Qix3QkFBd0IsMkVBQTJFLHFCQUFxQixLQUFLLGdFQUFnRSxzQkFBc0IsdUJBQXVCLEtBQUssc0NBQXNDLG9CQUFvQixLQUFLLG1DQUFtQyxzQkFBc0IseUJBQXlCLGdCQUFnQixLQUFLLGtDQUFrQyxnQkFBZ0IsS0FBSywyQ0FBMkMsc0JBQXNCLEtBQUssc0NBQXNDLHNCQUFzQixLQUFLLGlDQUFpQyx3QkFBd0IsS0FBSyw0Q0FBNEMsa0JBQWtCLG1CQUFtQixLQUFLLDJDQUEyQyxrQkFBa0IsbUJBQW1CLEtBQUssR0FBRyxxQkFBcUI7QUFDM29TO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWRpYXBpcGUtZmFjZW1lc2gtZWZmZWN0cy8uL3NyYy9odG1sU2VydmljZS9zdHlsZXMvY2hvb3NlVHJ5T24uY3NzPzNkZTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudHJ5b24tc2NyZWVuIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgLyogZGlzcGxheTogZmxleDsgKi9cXG4gIGRpc3BsYXk6IG5vbmU7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgcGFkZGluZzogMCBhdXRvO1xcbiAgcGFkZGluZy10b3A6IDY0cHg7XFxuICBnYXA6IDI0cHg7XFxuICBtYXgtd2lkdGg6IDM0NHB4O1xcbn1cXG5cXG4udHJ5b25fc2NyZWVuX2xpZ2h0IHtcXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xcbn1cXG4udHJ5b25fc2NyZWVuX2Rhcmsge1xcbiAgYmFja2dyb3VuZDogIzFjMWQxZTtcXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lcl9oZWFkaW5nIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZ2FwOiA4cHg7XFxuICBjb2xvcjogIzEwMTExMjtcXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lcl9oZWFkaW5nX3RleHQge1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gIGxpbmUtaGVpZ2h0OiAxMjAlO1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX2hlYWRpbmdfc3VidGV4dCB7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgbGluZS1oZWlnaHQ6IDE0MCU7XFxuICBjb2xvcjogIzRjNGQ0ZDtcXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lcl9saXZlX3RyeW9uIHtcXG4gIHBhZGRpbmc6IDE2cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi50cnlvbl9jb250YWluZXJfbGl2ZV90cnlvbl9sZWZ0IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiA4cHg7XFxuICBjb2xvcjogIzRjNGQ0ZDtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICBsaW5lLWhlaWdodDogMTQwJTtcXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lcl9saXZlX3RyeW9uX2xlZnRfY2FtZXJhIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX2xpdmVfdHJ5b25fcmlnaHQgcGF0aCB7XFxuICAvKiBmaWxsOiAjNGM0ZDRkOyAqL1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX3VwbG9hZF90cnlvbiB7XFxuICBwYWRkaW5nOiAxNnB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX3VwbG9hZF90cnlvbl9sZWZ0IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiA4cHg7XFxuICBjb2xvcjogIzRjNGQ0ZDtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICBsaW5lLWhlaWdodDogMTQwJTtcXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lcl91cGxvYWRfdHJ5b25fbGVmdF9jYW1lcmEge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi50cnlvbl9jb250YWluZXJfbGl2ZV90cnlvbl9yaWdodCBwYXRoIHtcXG4gIC8qIGZpbGw6ICM0YzRkNGQ7ICovXFxufVxcblxcbi50cnlvbl9jb250YWluZXJfY2hvb3NlX21vZGVsX2hlYWRpbmcge1xcbiAgY29sb3I6ICMxMDExMTI7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBsaW5lLWhlaWdodDogMTQwJTtcXG4gIG1hcmdpbi1ib3R0b206IDRweDtcXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lcl9tb2RlbF90cnlvbiB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG8gYXV0bztcXG4gIGdhcDogOHB4O1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX21vZGVsX3RyeW9uX2NvbnRhaW5lciB7XFxuICB3aWR0aDogMTA4cHg7XFxuICBoZWlnaHQ6IDEwOHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX21vZGVsX3RyeW9uX2NvbnRhaW5lciBpbWcge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBvYmplY3QtZml0OiBjb3ZlcjtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG59XFxuLnRyeW9uX2NvbnRhaW5lcl9tb2RlbF90cnlvbl91cGxvYWQge1xcbiAgd2lkdGg6IDEwOHB4O1xcbiAgaGVpZ2h0OiAxMDhweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgYmFja2dyb3VuZDogI2U3ZTdlNztcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBsaW5lLWhlaWdodDogbm9ybWFsO1xcbiAgY29sb3I6ICNiN2I4Yjg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBnYXA6IDhweDtcXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lcl9mb290ZXIge1xcbiAgaGVpZ2h0OiAxMDBweDtcXG4gIHBhZGRpbmc6IDEycHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgcmdiYSgwLCAwLCAwLCAwKSAwJSwgIzAwMDAwMCAxMDAlKTtcXG4gIC8qIG9wYWNpdHk6IDAuMzsgKi9cXG59XFxuXFxuQG1lZGlhIChtaW4tYXNwZWN0LXJhdGlvOiA0LzUpIGFuZCAobWF4LWFzcGVjdC1yYXRpbzogMS8xKSB7XFxuICAudHJ5b25fY29udGFpbmVyIHtcXG4gICAgbWF4LXdpZHRoOiAyOTZweDtcXG4gIH1cXG4gIC50cnlvbl9jb250YWluZXJfaGVhZGluZ19zdWJ0ZXh0IHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gIH1cXG4gIC50cnlvbl9jb250YWluZXJfaGVhZGluZ190ZXh0IHtcXG4gICAgZm9udC1zaXplOiAxOHB4O1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHRvcDogMTJweDtcXG4gIH1cXG4gIC50cnlvbl9jb250YWluZXJfbW9kZWxfdHJ5b24ge1xcbiAgICBnYXA6IDEwcHg7XFxuICB9XFxuICAudHJ5b25fY29udGFpbmVyX2Nob29zZV9tb2RlbF9oZWFkaW5nIHtcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcbiAgfVxcbiAgLnRyeW9uX2NvbnRhaW5lcl9saXZlX3RyeW9uX2xlZnQge1xcbiAgICBmb250LXNpemU6IDE0cHg7XFxuICB9XFxuICAudHJ5b25fY29udGFpbmVyX2xpdmVfdHJ5b24ge1xcbiAgICBwYWRkaW5nOiAxMnB4IDhweDtcXG4gIH1cXG4gIC50cnlvbl9jb250YWluZXJfbW9kZWxfdHJ5b25fY29udGFpbmVyIHtcXG4gICAgd2lkdGg6IDkycHg7XFxuICAgIGhlaWdodDogOTJweDtcXG4gIH1cXG5cXG4gIC50cnlvbl9jb250YWluZXJfbW9kZWxfdHJ5b25fdXBsb2FkIHtcXG4gICAgd2lkdGg6IDkycHg7XFxuICAgIGhlaWdodDogOTJweDtcXG4gIH1cXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2h0bWxTZXJ2aWNlL3N0eWxlcy9jaG9vc2VUcnlPbi5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sbUJBQW1CO0VBQ25CLGFBQWE7RUFDYix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixTQUFTO0VBQ1QsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFFBQVE7RUFDUixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixRQUFRO0VBQ1IsY0FBYztFQUNkLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixRQUFRO0VBQ1IsY0FBYztFQUNkLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHFDQUFxQztFQUNyQyxRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2IsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGNBQWM7RUFDZCxlQUFlO0VBQ2YsUUFBUTtBQUNWOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7RUFDYixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixzRUFBc0U7RUFDdEUsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7RUFDQTtJQUNFLGFBQWE7RUFDZjtFQUNBO0lBQ0UsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixTQUFTO0VBQ1g7RUFDQTtJQUNFLFNBQVM7RUFDWDtFQUNBO0lBQ0UsZUFBZTtFQUNqQjtFQUNBO0lBQ0UsZUFBZTtFQUNqQjtFQUNBO0lBQ0UsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxXQUFXO0lBQ1gsWUFBWTtFQUNkOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7RUFDZDtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi50cnlvbi1zY3JlZW4ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICAvKiBkaXNwbGF5OiBmbGV4OyAqL1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBwYWRkaW5nOiAwIGF1dG87XFxuICBwYWRkaW5nLXRvcDogNjRweDtcXG4gIGdhcDogMjRweDtcXG4gIG1heC13aWR0aDogMzQ0cHg7XFxufVxcblxcbi50cnlvbl9zY3JlZW5fbGlnaHQge1xcbiAgYmFja2dyb3VuZDogd2hpdGU7XFxufVxcbi50cnlvbl9zY3JlZW5fZGFyayB7XFxuICBiYWNrZ3JvdW5kOiAjMWMxZDFlO1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX2hlYWRpbmcge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBnYXA6IDhweDtcXG4gIGNvbG9yOiAjMTAxMTEyO1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX2hlYWRpbmdfdGV4dCB7XFxuICBmb250LXNpemU6IDIwcHg7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogNTAwO1xcbiAgbGluZS1oZWlnaHQ6IDEyMCU7XFxufVxcblxcbi50cnlvbl9jb250YWluZXJfaGVhZGluZ19zdWJ0ZXh0IHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBsaW5lLWhlaWdodDogMTQwJTtcXG4gIGNvbG9yOiAjNGM0ZDRkO1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX2xpdmVfdHJ5b24ge1xcbiAgcGFkZGluZzogMTZweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lcl9saXZlX3RyeW9uX2xlZnQge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDhweDtcXG4gIGNvbG9yOiAjNGM0ZDRkO1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gIGxpbmUtaGVpZ2h0OiAxNDAlO1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX2xpdmVfdHJ5b25fbGVmdF9jYW1lcmEge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi50cnlvbl9jb250YWluZXJfbGl2ZV90cnlvbl9yaWdodCBwYXRoIHtcXG4gIC8qIGZpbGw6ICM0YzRkNGQ7ICovXFxufVxcblxcbi50cnlvbl9jb250YWluZXJfdXBsb2FkX3RyeW9uIHtcXG4gIHBhZGRpbmc6IDE2cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi50cnlvbl9jb250YWluZXJfdXBsb2FkX3RyeW9uX2xlZnQge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDhweDtcXG4gIGNvbG9yOiAjNGM0ZDRkO1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gIGxpbmUtaGVpZ2h0OiAxNDAlO1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX3VwbG9hZF90cnlvbl9sZWZ0X2NhbWVyYSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lcl9saXZlX3RyeW9uX3JpZ2h0IHBhdGgge1xcbiAgLyogZmlsbDogIzRjNGQ0ZDsgKi9cXG59XFxuXFxuLnRyeW9uX2NvbnRhaW5lcl9jaG9vc2VfbW9kZWxfaGVhZGluZyB7XFxuICBjb2xvcjogIzEwMTExMjtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGxpbmUtaGVpZ2h0OiAxNDAlO1xcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX21vZGVsX3RyeW9uIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0byBhdXRvO1xcbiAgZ2FwOiA4cHg7XFxufVxcblxcbi50cnlvbl9jb250YWluZXJfbW9kZWxfdHJ5b25fY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDhweDtcXG4gIGhlaWdodDogMTA4cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi50cnlvbl9jb250YWluZXJfbW9kZWxfdHJ5b25fY29udGFpbmVyIGltZyB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIG9iamVjdC1maXQ6IGNvdmVyO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbn1cXG4udHJ5b25fY29udGFpbmVyX21vZGVsX3RyeW9uX3VwbG9hZCB7XFxuICB3aWR0aDogMTA4cHg7XFxuICBoZWlnaHQ6IDEwOHB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kOiAjZTdlN2U3O1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XFxuICBjb2xvcjogI2I3YjhiODtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGdhcDogOHB4O1xcbn1cXG5cXG4udHJ5b25fY29udGFpbmVyX2Zvb3RlciB7XFxuICBoZWlnaHQ6IDEwMHB4O1xcbiAgcGFkZGluZzogMTJweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDAsIDAsIDAsIDApIDAlLCAjMDAwMDAwIDEwMCUpO1xcbiAgLyogb3BhY2l0eTogMC4zOyAqL1xcbn1cXG5cXG5AbWVkaWEgKG1pbi1hc3BlY3QtcmF0aW86IDQvNSkgYW5kIChtYXgtYXNwZWN0LXJhdGlvOiAxLzEpIHtcXG4gIC50cnlvbl9jb250YWluZXIge1xcbiAgICBtYXgtd2lkdGg6IDI5NnB4O1xcbiAgfVxcbiAgLnRyeW9uX2NvbnRhaW5lcl9oZWFkaW5nX3N1YnRleHQge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgfVxcbiAgLnRyeW9uX2NvbnRhaW5lcl9oZWFkaW5nX3RleHQge1xcbiAgICBmb250LXNpemU6IDE4cHg7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgdG9wOiAxMnB4O1xcbiAgfVxcbiAgLnRyeW9uX2NvbnRhaW5lcl9tb2RlbF90cnlvbiB7XFxuICAgIGdhcDogMTBweDtcXG4gIH1cXG4gIC50cnlvbl9jb250YWluZXJfY2hvb3NlX21vZGVsX2hlYWRpbmcge1xcbiAgICBmb250LXNpemU6IDE2cHg7XFxuICB9XFxuICAudHJ5b25fY29udGFpbmVyX2xpdmVfdHJ5b25fbGVmdCB7XFxuICAgIGZvbnQtc2l6ZTogMTRweDtcXG4gIH1cXG4gIC50cnlvbl9jb250YWluZXJfbGl2ZV90cnlvbiB7XFxuICAgIHBhZGRpbmc6IDEycHggOHB4O1xcbiAgfVxcbiAgLnRyeW9uX2NvbnRhaW5lcl9tb2RlbF90cnlvbl9jb250YWluZXIge1xcbiAgICB3aWR0aDogOTJweDtcXG4gICAgaGVpZ2h0OiA5MnB4O1xcbiAgfVxcblxcbiAgLnRyeW9uX2NvbnRhaW5lcl9tb2RlbF90cnlvbl91cGxvYWQge1xcbiAgICB3aWR0aDogOTJweDtcXG4gICAgaGVpZ2h0OiA5MnB4O1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1691\n')},3254:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".configuration-container {\\n  width: 100%;\\n  position: absolute;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  margin: auto;\\n  z-index: 2000;\\n  visibility: hidden;\\n  opacity: 0;\\n  transition: visibility 0s linear 0.33s, opacity 0.33s linear;\\n  font-family: sans-serif;\\n}\\n\\n.show-configuration-container {\\n  opacity: 1;\\n  visibility: visible;\\n  transition-delay: 0s;\\n}\\n\\n.config-slider {\\n  position: relative;\\n}\\n\\n.config-slider-type {\\n  position: absolute;\\n  left: -48px;\\n  font-family: Inter;\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 140%;\\n}\\n\\n.config-slider-value {\\n  position: absolute;\\n  right: -10%;\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 140%;\\n}\\n\\n.config-type-slider {\\n  position: absolute;\\n  width: 100%;\\n  display: flex;\\n  top: 6px;\\n}\\n.config-type-slider input {\\n  /* -webkit-appearance: none; */\\n  /* background-color: rgba(255, 255, 255, 0.4); */\\n}\\n.config-type-slider input::-webkit-slider-thumb {\\n  /* height: 4px;\\n  background-color: aqua;\\n  accent-color: red; */\\n  /* box-shadow: -1px 0 0 1px #43e5f7; */\\n}\\n\\n.config-reset-icon {\\n  position: absolute;\\n  backdrop-filter: blur(25px);\\n  transition: backdrop-filter 0.33s linear;\\n  background: rgba(16, 17, 18, 0.1);\\n  border-radius: 50%;\\n  left: -112px;\\n  padding: 4px;\\n  display: flex;\\n  bottom: -30px;\\n  cursor: pointer;\\n}\\n\\n.config-bottom-sheet-container {\\n  padding: 16px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  gap: 16px;\\n  border-radius: 16px 16px 0px 0px;\\n  border-top: 1px solid rgba(255, 255, 255, 0.2);\\n  background: rgba(0, 0, 0, 0.16);\\n  backdrop-filter: blur(25px);\\n  transform: translateY(100%);\\n  transition: 0.3s ease;\\n}\\n\\n.show-configuration-container .config-bottom-sheet-container {\\n  transform: translateY(0%);\\n}\\n\\n.config-bottom-sheet-header-text {\\n  color: #fff;\\n  font-family: Inter;\\n  font-size: 18px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 24px;\\n  letter-spacing: 0.18px;\\n}\\n\\n.config-bottom-sheet-divider {\\n  height: 1px;\\n  width: 100%;\\n  background: rgba(255, 255, 255, 0.4);\\n  box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.16);\\n}\\n\\n.config-bottom-sheet-content {\\n  display: flex;\\n  gap: 16px;\\n  width: 100%;\\n  justify-content: center;\\n  align-items: center;\\n  max-width: 586px;\\n}\\n\\n.config-bottom-sheet-left-text {\\n  font-family: Inter;\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 140%;\\n}\\n.config-bottom-sheet-slider {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n}\\n.config-bottom-sheet-slider input {\\n  height: 1px;\\n  width: 100%;\\n  padding: 1px;\\n  /* accent-color: #fff; */\\n  cursor: pointer;\\n  -webkit-appearance: none;\\n  background: linear-gradient(\\n    to right,\\n    #fff 0%,\\n    #fff 50%,\\n    rgba(255, 255, 255, 0.4) 50%,\\n    rgba(255, 255, 255, 0.4) 100%\\n  );\\n  transition: background 450ms ease-in;\\n  outline: none;\\n  border-radius: 4px;\\n}\\ninput::-webkit-slider-thumb {\\n  background-color: white;\\n  border-radius: 0;\\n\\n  height: 16px;\\n  width: 16px;\\n  border-radius: 50%;\\n  -webkit-appearance: none;\\n  filter: drop-shadow(0px 4px 10px rgba(0, 0, 0, 0.25));\\n}\\n.config-bottom-sheet-right-text {\\n  width: 56px;\\n  display: flex;\\n  justify-content: end;\\n  font-family: Inter;\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 140%;\\n}\\n\\n.config-bottom-sheet-actions {\\n  position: absolute;\\n  display: flex;\\n  gap: 10px;\\n  top: -48px;\\n  right: 16px;\\n}\\n\\n.config-bottom-sheet-reset-button,\\n.config-bottom-sheet-close-button {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 40px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: relative;\\n  background: rgba(16, 17, 18, 0.1);\\n  backdrop-filter: blur(25px);\\n  cursor: pointer;\\n}\\n.config-bottom-sheet-close-button img {\\n  position: absolute;\\n  left: 8px;\\n  top: 8px;\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .config-bottom-sheet-header-text {\\n    font-size: 16px;\\n  }\\n  /* … */\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/configSlider.css"],"names":[],"mappings":"AAAA;EACE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,OAAO;EACP,SAAS;EACT,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,UAAU;EACV,4DAA4D;EAC5D,uBAAuB;AACzB;;AAEA;EACE,UAAU;EACV,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,QAAQ;AACV;AACA;EACE,8BAA8B;EAC9B,gDAAgD;AAClD;AACA;EACE;;sBAEoB;EACpB,sCAAsC;AACxC;;AAEA;EACE,kBAAkB;EAClB,2BAA2B;EAC3B,wCAAwC;EACxC,iCAAiC;EACjC,kBAAkB;EAClB,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,SAAS;EACT,gCAAgC;EAChC,8CAA8C;EAC9C,+BAA+B;EAC/B,2BAA2B;EAC3B,2BAA2B;EAC3B,qBAAqB;AACvB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,oCAAoC;EACpC,+CAA+C;AACjD;;AAEA;EACE,aAAa;EACb,SAAS;EACT,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;AACA;EACE,OAAO;EACP,aAAa;EACb,mBAAmB;AACrB;AACA;EACE,WAAW;EACX,WAAW;EACX,YAAY;EACZ,wBAAwB;EACxB,eAAe;EACf,wBAAwB;EACxB;;;;;;GAMC;EACD,oCAAoC;EACpC,aAAa;EACb,kBAAkB;AACpB;AACA;EACE,uBAAuB;EACvB,gBAAgB;;EAEhB,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,wBAAwB;EACxB,qDAAqD;AACvD;AACA;EACE,WAAW;EACX,aAAa;EACb,oBAAoB;EACpB,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,SAAS;EACT,UAAU;EACV,WAAW;AACb;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,iCAAiC;EACjC,2BAA2B;EAC3B,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,QAAQ;AACV;;AAEA;EACE;IACE,eAAe;EACjB;EACA,MAAM;AACR","sourcesContent":[".configuration-container {\\n  width: 100%;\\n  position: absolute;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  margin: auto;\\n  z-index: 2000;\\n  visibility: hidden;\\n  opacity: 0;\\n  transition: visibility 0s linear 0.33s, opacity 0.33s linear;\\n  font-family: sans-serif;\\n}\\n\\n.show-configuration-container {\\n  opacity: 1;\\n  visibility: visible;\\n  transition-delay: 0s;\\n}\\n\\n.config-slider {\\n  position: relative;\\n}\\n\\n.config-slider-type {\\n  position: absolute;\\n  left: -48px;\\n  font-family: Inter;\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 140%;\\n}\\n\\n.config-slider-value {\\n  position: absolute;\\n  right: -10%;\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 140%;\\n}\\n\\n.config-type-slider {\\n  position: absolute;\\n  width: 100%;\\n  display: flex;\\n  top: 6px;\\n}\\n.config-type-slider input {\\n  /* -webkit-appearance: none; */\\n  /* background-color: rgba(255, 255, 255, 0.4); */\\n}\\n.config-type-slider input::-webkit-slider-thumb {\\n  /* height: 4px;\\n  background-color: aqua;\\n  accent-color: red; */\\n  /* box-shadow: -1px 0 0 1px #43e5f7; */\\n}\\n\\n.config-reset-icon {\\n  position: absolute;\\n  backdrop-filter: blur(25px);\\n  transition: backdrop-filter 0.33s linear;\\n  background: rgba(16, 17, 18, 0.1);\\n  border-radius: 50%;\\n  left: -112px;\\n  padding: 4px;\\n  display: flex;\\n  bottom: -30px;\\n  cursor: pointer;\\n}\\n\\n.config-bottom-sheet-container {\\n  padding: 16px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  gap: 16px;\\n  border-radius: 16px 16px 0px 0px;\\n  border-top: 1px solid rgba(255, 255, 255, 0.2);\\n  background: rgba(0, 0, 0, 0.16);\\n  backdrop-filter: blur(25px);\\n  transform: translateY(100%);\\n  transition: 0.3s ease;\\n}\\n\\n.show-configuration-container .config-bottom-sheet-container {\\n  transform: translateY(0%);\\n}\\n\\n.config-bottom-sheet-header-text {\\n  color: #fff;\\n  font-family: Inter;\\n  font-size: 18px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 24px;\\n  letter-spacing: 0.18px;\\n}\\n\\n.config-bottom-sheet-divider {\\n  height: 1px;\\n  width: 100%;\\n  background: rgba(255, 255, 255, 0.4);\\n  box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.16);\\n}\\n\\n.config-bottom-sheet-content {\\n  display: flex;\\n  gap: 16px;\\n  width: 100%;\\n  justify-content: center;\\n  align-items: center;\\n  max-width: 586px;\\n}\\n\\n.config-bottom-sheet-left-text {\\n  font-family: Inter;\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 140%;\\n}\\n.config-bottom-sheet-slider {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n}\\n.config-bottom-sheet-slider input {\\n  height: 1px;\\n  width: 100%;\\n  padding: 1px;\\n  /* accent-color: #fff; */\\n  cursor: pointer;\\n  -webkit-appearance: none;\\n  background: linear-gradient(\\n    to right,\\n    #fff 0%,\\n    #fff 50%,\\n    rgba(255, 255, 255, 0.4) 50%,\\n    rgba(255, 255, 255, 0.4) 100%\\n  );\\n  transition: background 450ms ease-in;\\n  outline: none;\\n  border-radius: 4px;\\n}\\ninput::-webkit-slider-thumb {\\n  background-color: white;\\n  border-radius: 0;\\n\\n  height: 16px;\\n  width: 16px;\\n  border-radius: 50%;\\n  -webkit-appearance: none;\\n  filter: drop-shadow(0px 4px 10px rgba(0, 0, 0, 0.25));\\n}\\n.config-bottom-sheet-right-text {\\n  width: 56px;\\n  display: flex;\\n  justify-content: end;\\n  font-family: Inter;\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: 140%;\\n}\\n\\n.config-bottom-sheet-actions {\\n  position: absolute;\\n  display: flex;\\n  gap: 10px;\\n  top: -48px;\\n  right: 16px;\\n}\\n\\n.config-bottom-sheet-reset-button,\\n.config-bottom-sheet-close-button {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 40px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: relative;\\n  background: rgba(16, 17, 18, 0.1);\\n  backdrop-filter: blur(25px);\\n  cursor: pointer;\\n}\\n.config-bottom-sheet-close-button img {\\n  position: absolute;\\n  left: 8px;\\n  top: 8px;\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .config-bottom-sheet-header-text {\\n    font-size: 16px;\\n  }\\n  /* … */\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3254\n')},6029:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".left-nav-icon {\\n  position: absolute;\\n  left: 16px;\\n  top: 16px;\\n  display: none;\\n  justify-content: center;\\n  align-items: center;\\n  width: 40px;\\n  height: 40px;\\n  cursor: pointer;\\n  border-radius: 50%;\\n  z-index: 4;\\n}\\n\\n.cross-nav-icon {\\n  position: absolute;\\n  right: 16px;\\n  top: 16px;\\n  display: none;\\n  justify-content: center;\\n  align-items: center;\\n  width: 40px;\\n  height: 40px;\\n  cursor: pointer;\\n  border-radius: 50%;\\n  z-index: 4;\\n}\\n\\n.icon-blur-bg {\\n  backdrop-filter: blur(25px);\\n  background: rgba(16, 17, 18, 0.1);\\n}\\n\\n.icon-blur-bg img {\\n  width: 24px;\\n  height: 24px;\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/navigationButtons.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,2BAA2B;EAC3B,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;AACd","sourcesContent":[".left-nav-icon {\\n  position: absolute;\\n  left: 16px;\\n  top: 16px;\\n  display: none;\\n  justify-content: center;\\n  align-items: center;\\n  width: 40px;\\n  height: 40px;\\n  cursor: pointer;\\n  border-radius: 50%;\\n  z-index: 4;\\n}\\n\\n.cross-nav-icon {\\n  position: absolute;\\n  right: 16px;\\n  top: 16px;\\n  display: none;\\n  justify-content: center;\\n  align-items: center;\\n  width: 40px;\\n  height: 40px;\\n  cursor: pointer;\\n  border-radius: 50%;\\n  z-index: 4;\\n}\\n\\n.icon-blur-bg {\\n  backdrop-filter: blur(25px);\\n  background: rgba(16, 17, 18, 0.1);\\n}\\n\\n.icon-blur-bg img {\\n  width: 24px;\\n  height: 24px;\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAyOS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDZ0g7QUFDakI7QUFDL0YsOEJBQThCLG1GQUEyQixDQUFDLDRGQUFxQztBQUMvRjtBQUNBLDBEQUEwRCx1QkFBdUIsZUFBZSxjQUFjLGtCQUFrQiw0QkFBNEIsd0JBQXdCLGdCQUFnQixpQkFBaUIsb0JBQW9CLHVCQUF1QixlQUFlLEdBQUcscUJBQXFCLHVCQUF1QixnQkFBZ0IsY0FBYyxrQkFBa0IsNEJBQTRCLHdCQUF3QixnQkFBZ0IsaUJBQWlCLG9CQUFvQix1QkFBdUIsZUFBZSxHQUFHLG1CQUFtQixnQ0FBZ0Msc0NBQXNDLEdBQUcsdUJBQXVCLGdCQUFnQixpQkFBaUIsR0FBRyxTQUFTLCtHQUErRyxZQUFZLFdBQVcsVUFBVSxVQUFVLFlBQVksYUFBYSxXQUFXLFVBQVUsVUFBVSxZQUFZLFdBQVcsTUFBTSxLQUFLLFlBQVksV0FBVyxVQUFVLFVBQVUsWUFBWSxhQUFhLFdBQVcsVUFBVSxVQUFVLFlBQVksV0FBVyxNQUFNLEtBQUssWUFBWSxhQUFhLE9BQU8sS0FBSyxVQUFVLFVBQVUseUNBQXlDLHVCQUF1QixlQUFlLGNBQWMsa0JBQWtCLDRCQUE0Qix3QkFBd0IsZ0JBQWdCLGlCQUFpQixvQkFBb0IsdUJBQXVCLGVBQWUsR0FBRyxxQkFBcUIsdUJBQXVCLGdCQUFnQixjQUFjLGtCQUFrQiw0QkFBNEIsd0JBQXdCLGdCQUFnQixpQkFBaUIsb0JBQW9CLHVCQUF1QixlQUFlLEdBQUcsbUJBQW1CLGdDQUFnQyxzQ0FBc0MsR0FBRyx1QkFBdUIsZ0JBQWdCLGlCQUFpQixHQUFHLHFCQUFxQjtBQUM3dUQ7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21lZGlhcGlwZS1mYWNlbWVzaC1lZmZlY3RzLy4vc3JjL2h0bWxTZXJ2aWNlL3N0eWxlcy9uYXZpZ2F0aW9uQnV0dG9ucy5jc3M/ZjhlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5sZWZ0LW5hdi1pY29uIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDE2cHg7XFxuICB0b3A6IDE2cHg7XFxuICBkaXNwbGF5OiBub25lO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDQwcHg7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICB6LWluZGV4OiA0O1xcbn1cXG5cXG4uY3Jvc3MtbmF2LWljb24ge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDE2cHg7XFxuICB0b3A6IDE2cHg7XFxuICBkaXNwbGF5OiBub25lO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDQwcHg7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICB6LWluZGV4OiA0O1xcbn1cXG5cXG4uaWNvbi1ibHVyLWJnIHtcXG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cigyNXB4KTtcXG4gIGJhY2tncm91bmQ6IHJnYmEoMTYsIDE3LCAxOCwgMC4xKTtcXG59XFxuXFxuLmljb24tYmx1ci1iZyBpbWcge1xcbiAgd2lkdGg6IDI0cHg7XFxuICBoZWlnaHQ6IDI0cHg7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9odG1sU2VydmljZS9zdHlsZXMvbmF2aWdhdGlvbkJ1dHRvbnMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixTQUFTO0VBQ1QsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsU0FBUztFQUNULGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubGVmdC1uYXYtaWNvbiB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBsZWZ0OiAxNnB4O1xcbiAgdG9wOiAxNnB4O1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgei1pbmRleDogNDtcXG59XFxuXFxuLmNyb3NzLW5hdi1pY29uIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAxNnB4O1xcbiAgdG9wOiAxNnB4O1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgei1pbmRleDogNDtcXG59XFxuXFxuLmljb24tYmx1ci1iZyB7XFxuICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMjVweCk7XFxuICBiYWNrZ3JvdW5kOiByZ2JhKDE2LCAxNywgMTgsIDAuMSk7XFxufVxcblxcbi5pY29uLWJsdXItYmcgaW1nIHtcXG4gIHdpZHRoOiAyNHB4O1xcbiAgaGVpZ2h0OiAyNHB4O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6029\n')},5974:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".popup-modal {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 100%;\\n  display: none;\\n  z-index: 10;\\n  justify-content: center;\\n  align-items: center;\\n  background: rgba(28, 28, 28, 0.4);\\n}\\n\\n.modal-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 16px;\\n  padding: 16px;\\n  border-radius: 8px;\\n  justify-content: center;\\n  align-items: center;\\n  max-width: 328px;\\n  background: #fff;\\n}\\n\\n.modal-heading {\\n  font-size: 18px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n  color: #242b38;\\n  text-align: center;\\n}\\n\\n.modal-separator {\\n  border: 1px solid rgba(28, 28, 28, 0.1);\\n  width: 100%;\\n}\\n\\n.modal-actions-container {\\n  display: flex;\\n  justify-content: center;\\n  gap: 16px;\\n}\\n\\n.modal-positive-action {\\n  min-width: 104px;\\n  padding: 10px 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 6px;\\n  background: linear-gradient(168deg, #e65f6e 0.66%, #da0e64 59.95%);\\n  color: #fff;\\n  border-radius: 8px;\\n  border: none;\\n  cursor: pointer;\\n  font-weight: 600;\\n}\\n\\n.modal-negative-action {\\n  min-width: 104px;\\n  padding: 10px 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 6px;\\n  border: 1px solid #da0e64;\\n  color: #e65e97;\\n  background: #fff;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  background: rgba(218, 14, 100, 0.04);\\n  font-weight: 600;\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .modal-container {\\n    width: min-content;\\n  }\\n  .modal-heading {\\n    font-size: 16px;\\n  }\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/popupModal.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,MAAM;EACN,SAAS;EACT,WAAW;EACX,YAAY;EACZ,aAAa;EACb,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,iCAAiC;AACnC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,aAAa;EACb,kBAAkB;EAClB,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;EACjB,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,uCAAuC;EACvC,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;EACR,kEAAkE;EAClE,WAAW;EACX,kBAAkB;EAClB,YAAY;EACZ,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;EACR,yBAAyB;EACzB,cAAc;EACd,gBAAgB;EAChB,kBAAkB;EAClB,eAAe;EACf,oCAAoC;EACpC,gBAAgB;AAClB;;AAEA;EACE;IACE,kBAAkB;EACpB;EACA;IACE,eAAe;EACjB;AACF","sourcesContent":[".popup-modal {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 100%;\\n  display: none;\\n  z-index: 10;\\n  justify-content: center;\\n  align-items: center;\\n  background: rgba(28, 28, 28, 0.4);\\n}\\n\\n.modal-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 16px;\\n  padding: 16px;\\n  border-radius: 8px;\\n  justify-content: center;\\n  align-items: center;\\n  max-width: 328px;\\n  background: #fff;\\n}\\n\\n.modal-heading {\\n  font-size: 18px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n  color: #242b38;\\n  text-align: center;\\n}\\n\\n.modal-separator {\\n  border: 1px solid rgba(28, 28, 28, 0.1);\\n  width: 100%;\\n}\\n\\n.modal-actions-container {\\n  display: flex;\\n  justify-content: center;\\n  gap: 16px;\\n}\\n\\n.modal-positive-action {\\n  min-width: 104px;\\n  padding: 10px 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 6px;\\n  background: linear-gradient(168deg, #e65f6e 0.66%, #da0e64 59.95%);\\n  color: #fff;\\n  border-radius: 8px;\\n  border: none;\\n  cursor: pointer;\\n  font-weight: 600;\\n}\\n\\n.modal-negative-action {\\n  min-width: 104px;\\n  padding: 10px 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 6px;\\n  border: 1px solid #da0e64;\\n  color: #e65e97;\\n  background: #fff;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  background: rgba(218, 14, 100, 0.04);\\n  font-weight: 600;\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .modal-container {\\n    width: min-content;\\n  }\\n  .modal-heading {\\n    font-size: 16px;\\n  }\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5974\n')},991:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".setting-options {\\n  visibility: hidden;\\n  z-index: 4;\\n  position: absolute;\\n  right: 12px;\\n  bottom: 36px;\\n}\\n.settingOptions-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  transform: translateX(0%);\\n  transition: 0.3s ease;\\n}\\n.hide-settingOptions .settingOptions-container {\\n  transform: translateX(1000px);\\n}\\n\\n.settingOptions-icon-container {\\n  box-sizing: border-box;\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  display: flex;\\n  padding: 4px;\\n  justify-content: center;\\n  border: 1px solid transparent;\\n  backdrop-filter: blur(25px);\\n  background: rgba(16, 17, 18, 0.1);\\n  cursor: pointer;\\n}\\n\\n.settingOptions-icon-wrapper {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 50%;\\n  box-sizing: border-box;\\n}\\n\\n.settingOptions-icon-disabled {\\n  opacity: 0.5;\\n  pointer-events: none;\\n  touch-action: none;\\n}\\n\\n.settingOptions-custom-icon-wrapper {\\n  width: 100%;\\n  height: 100%;\\n  border: 1px solid white;\\n  padding: 4px;\\n  border-radius: 50%;\\n  box-sizing: border-box;\\n}\\n\\n.settingOptions-custom-icon {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 50%;\\n  background: white;\\n}\\n.settingOptions-icon-selected {\\n  border: 1px solid white;\\n}\\n.settingOptions-icon-selected .settingOptions-icon-wrapper {\\n  background: white;\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/settingOptions.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,UAAU;EACV,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;EACR,yBAAyB;EACzB,qBAAqB;AACvB;AACA;EACE,6BAA6B;AAC/B;;AAEA;EACE,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,6BAA6B;EAC7B,2BAA2B;EAC3B,iCAAiC;EACjC,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,oBAAoB;EACpB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,YAAY;EACZ,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;AACnB;AACA;EACE,uBAAuB;AACzB;AACA;EACE,iBAAiB;AACnB","sourcesContent":[".setting-options {\\n  visibility: hidden;\\n  z-index: 4;\\n  position: absolute;\\n  right: 12px;\\n  bottom: 36px;\\n}\\n.settingOptions-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  transform: translateX(0%);\\n  transition: 0.3s ease;\\n}\\n.hide-settingOptions .settingOptions-container {\\n  transform: translateX(1000px);\\n}\\n\\n.settingOptions-icon-container {\\n  box-sizing: border-box;\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  display: flex;\\n  padding: 4px;\\n  justify-content: center;\\n  border: 1px solid transparent;\\n  backdrop-filter: blur(25px);\\n  background: rgba(16, 17, 18, 0.1);\\n  cursor: pointer;\\n}\\n\\n.settingOptions-icon-wrapper {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 50%;\\n  box-sizing: border-box;\\n}\\n\\n.settingOptions-icon-disabled {\\n  opacity: 0.5;\\n  pointer-events: none;\\n  touch-action: none;\\n}\\n\\n.settingOptions-custom-icon-wrapper {\\n  width: 100%;\\n  height: 100%;\\n  border: 1px solid white;\\n  padding: 4px;\\n  border-radius: 50%;\\n  box-sizing: border-box;\\n}\\n\\n.settingOptions-custom-icon {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 50%;\\n  background: white;\\n}\\n.settingOptions-icon-selected {\\n  border: 1px solid white;\\n}\\n.settingOptions-icon-selected .settingOptions-icon-wrapper {\\n  background: white;\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkxLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNnSDtBQUNqQjtBQUMvRiw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsNERBQTRELHVCQUF1QixlQUFlLHVCQUF1QixnQkFBZ0IsaUJBQWlCLEdBQUcsNkJBQTZCLGtCQUFrQiwyQkFBMkIsYUFBYSw4QkFBOEIsMEJBQTBCLEdBQUcsa0RBQWtELGtDQUFrQyxHQUFHLG9DQUFvQywyQkFBMkIsZ0JBQWdCLGlCQUFpQix1QkFBdUIsa0JBQWtCLGlCQUFpQiw0QkFBNEIsa0NBQWtDLGdDQUFnQyxzQ0FBc0Msb0JBQW9CLEdBQUcsa0NBQWtDLGdCQUFnQixpQkFBaUIsa0JBQWtCLDRCQUE0Qix3QkFBd0IsdUJBQXVCLDJCQUEyQixHQUFHLG1DQUFtQyxpQkFBaUIseUJBQXlCLHVCQUF1QixHQUFHLHlDQUF5QyxnQkFBZ0IsaUJBQWlCLDRCQUE0QixpQkFBaUIsdUJBQXVCLDJCQUEyQixHQUFHLGlDQUFpQyxnQkFBZ0IsaUJBQWlCLHVCQUF1QixzQkFBc0IsR0FBRyxpQ0FBaUMsNEJBQTRCLEdBQUcsOERBQThELHNCQUFzQixHQUFHLFNBQVMsNEdBQTRHLFlBQVksV0FBVyxZQUFZLFdBQVcsVUFBVSxLQUFLLEtBQUssVUFBVSxZQUFZLFdBQVcsWUFBWSxhQUFhLE1BQU0sS0FBSyxZQUFZLE9BQU8sS0FBSyxZQUFZLFdBQVcsVUFBVSxZQUFZLFdBQVcsVUFBVSxZQUFZLGFBQWEsYUFBYSxhQUFhLFdBQVcsT0FBTyxLQUFLLFVBQVUsVUFBVSxVQUFVLFlBQVksYUFBYSxhQUFhLGFBQWEsT0FBTyxLQUFLLFVBQVUsWUFBWSxhQUFhLE9BQU8sS0FBSyxVQUFVLFVBQVUsWUFBWSxXQUFXLFlBQVksYUFBYSxPQUFPLEtBQUssVUFBVSxVQUFVLFlBQVksYUFBYSxNQUFNLEtBQUssWUFBWSxNQUFNLEtBQUssWUFBWSw0Q0FBNEMsdUJBQXVCLGVBQWUsdUJBQXVCLGdCQUFnQixpQkFBaUIsR0FBRyw2QkFBNkIsa0JBQWtCLDJCQUEyQixhQUFhLDhCQUE4QiwwQkFBMEIsR0FBRyxrREFBa0Qsa0NBQWtDLEdBQUcsb0NBQW9DLDJCQUEyQixnQkFBZ0IsaUJBQWlCLHVCQUF1QixrQkFBa0IsaUJBQWlCLDRCQUE0QixrQ0FBa0MsZ0NBQWdDLHNDQUFzQyxvQkFBb0IsR0FBRyxrQ0FBa0MsZ0JBQWdCLGlCQUFpQixrQkFBa0IsNEJBQTRCLHdCQUF3Qix1QkFBdUIsMkJBQTJCLEdBQUcsbUNBQW1DLGlCQUFpQix5QkFBeUIsdUJBQXVCLEdBQUcseUNBQXlDLGdCQUFnQixpQkFBaUIsNEJBQTRCLGlCQUFpQix1QkFBdUIsMkJBQTJCLEdBQUcsaUNBQWlDLGdCQUFnQixpQkFBaUIsdUJBQXVCLHNCQUFzQixHQUFHLGlDQUFpQyw0QkFBNEIsR0FBRyw4REFBOEQsc0JBQXNCLEdBQUcscUJBQXFCO0FBQ3RnSDtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVkaWFwaXBlLWZhY2VtZXNoLWVmZmVjdHMvLi9zcmMvaHRtbFNlcnZpY2Uvc3R5bGVzL3NldHRpbmdPcHRpb25zLmNzcz9jZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnNldHRpbmctb3B0aW9ucyB7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47XFxuICB6LWluZGV4OiA0O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDEycHg7XFxuICBib3R0b206IDM2cHg7XFxufVxcbi5zZXR0aW5nT3B0aW9ucy1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBnYXA6IDhweDtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XFxuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2U7XFxufVxcbi5oaWRlLXNldHRpbmdPcHRpb25zIC5zZXR0aW5nT3B0aW9ucy1jb250YWluZXIge1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMDBweCk7XFxufVxcblxcbi5zZXR0aW5nT3B0aW9ucy1pY29uLWNvbnRhaW5lciB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgd2lkdGg6IDQwcHg7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgcGFkZGluZzogNHB4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cigyNXB4KTtcXG4gIGJhY2tncm91bmQ6IHJnYmEoMTYsIDE3LCAxOCwgMC4xKTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnNldHRpbmdPcHRpb25zLWljb24td3JhcHBlciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4uc2V0dGluZ09wdGlvbnMtaWNvbi1kaXNhYmxlZCB7XFxuICBvcGFjaXR5OiAwLjU7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gIHRvdWNoLWFjdGlvbjogbm9uZTtcXG59XFxuXFxuLnNldHRpbmdPcHRpb25zLWN1c3RvbS1pY29uLXdyYXBwZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcXG4gIHBhZGRpbmc6IDRweDtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi5zZXR0aW5nT3B0aW9ucy1jdXN0b20taWNvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xcbn1cXG4uc2V0dGluZ09wdGlvbnMtaWNvbi1zZWxlY3RlZCB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcXG59XFxuLnNldHRpbmdPcHRpb25zLWljb24tc2VsZWN0ZWQgLnNldHRpbmdPcHRpb25zLWljb24td3JhcHBlciB7XFxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2h0bWxTZXJ2aWNlL3N0eWxlcy9zZXR0aW5nT3B0aW9ucy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtBQUNkO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFFBQVE7RUFDUix5QkFBeUI7RUFDekIscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsNkJBQTZCO0VBQzdCLDJCQUEyQjtFQUMzQixpQ0FBaUM7RUFDakMsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFlBQVk7RUFDWixvQkFBb0I7RUFDcEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5zZXR0aW5nLW9wdGlvbnMge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbiAgei1pbmRleDogNDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAxMnB4O1xcbiAgYm90dG9tOiAzNnB4O1xcbn1cXG4uc2V0dGluZ09wdGlvbnMtY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZ2FwOiA4cHg7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xcbiAgdHJhbnNpdGlvbjogMC4zcyBlYXNlO1xcbn1cXG4uaGlkZS1zZXR0aW5nT3B0aW9ucyAuc2V0dGluZ09wdGlvbnMtY29udGFpbmVyIHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAwcHgpO1xcbn1cXG5cXG4uc2V0dGluZ09wdGlvbnMtaWNvbi1jb250YWluZXIge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHBhZGRpbmc6IDRweDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XFxuICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMjVweCk7XFxuICBiYWNrZ3JvdW5kOiByZ2JhKDE2LCAxNywgMTgsIDAuMSk7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5zZXR0aW5nT3B0aW9ucy1pY29uLXdyYXBwZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLnNldHRpbmdPcHRpb25zLWljb24tZGlzYWJsZWQge1xcbiAgb3BhY2l0eTogMC41O1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICB0b3VjaC1hY3Rpb246IG5vbmU7XFxufVxcblxcbi5zZXR0aW5nT3B0aW9ucy1jdXN0b20taWNvbi13cmFwcGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XFxuICBwYWRkaW5nOiA0cHg7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4uc2V0dGluZ09wdGlvbnMtY3VzdG9tLWljb24ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXG59XFxuLnNldHRpbmdPcHRpb25zLWljb24tc2VsZWN0ZWQge1xcbiAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XFxufVxcbi5zZXR0aW5nT3B0aW9ucy1pY29uLXNlbGVjdGVkIC5zZXR0aW5nT3B0aW9ucy1pY29uLXdyYXBwZXIge1xcbiAgYmFja2dyb3VuZDogd2hpdGU7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///991\n')},1786:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".status-pill {\\n  position: absolute;\\n  top: 64px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 8px;\\n  width: 100%;\\n  z-index: 5;\\n}\\n\\n.pill-container {\\n  width: 125px;\\n  padding: 4px 12px;\\n  backdrop-filter: blur(16px);\\n  background: rgba(0, 0, 0, 0.4);\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 4px;\\n  border-radius: 8px;\\n}\\n\\n.pill-text {\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: normal;\\n  letter-spacing: 0.12px;\\n  color: #fff;\\n}\\n\\n.pill-status-text {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/statusPill.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,SAAS;EACT,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;EACR,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,2BAA2B;EAC3B,8BAA8B;EAC9B,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;EACR,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;EACnB,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB","sourcesContent":[".status-pill {\\n  position: absolute;\\n  top: 64px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 8px;\\n  width: 100%;\\n  z-index: 5;\\n}\\n\\n.pill-container {\\n  width: 125px;\\n  padding: 4px 12px;\\n  backdrop-filter: blur(16px);\\n  background: rgba(0, 0, 0, 0.4);\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 4px;\\n  border-radius: 8px;\\n}\\n\\n.pill-text {\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: normal;\\n  letter-spacing: 0.12px;\\n  color: #fff;\\n}\\n\\n.pill-status-text {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc4Ni5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDZ0g7QUFDakI7QUFDL0YsOEJBQThCLG1GQUEyQixDQUFDLDRGQUFxQztBQUMvRjtBQUNBLHdEQUF3RCx1QkFBdUIsY0FBYyxrQkFBa0IsNEJBQTRCLHdCQUF3QixhQUFhLGdCQUFnQixlQUFlLEdBQUcscUJBQXFCLGlCQUFpQixzQkFBc0IsZ0NBQWdDLG1DQUFtQyxrQkFBa0IsMkJBQTJCLDRCQUE0Qix3QkFBd0IsYUFBYSx1QkFBdUIsR0FBRyxnQkFBZ0Isb0JBQW9CLHVCQUF1QixxQkFBcUIsd0JBQXdCLDJCQUEyQixnQkFBZ0IsR0FBRyx1QkFBdUIsb0JBQW9CLHVCQUF1QixxQkFBcUIsc0JBQXNCLEdBQUcsU0FBUyx3R0FBd0csWUFBWSxXQUFXLFVBQVUsWUFBWSxhQUFhLFdBQVcsVUFBVSxVQUFVLE1BQU0sS0FBSyxVQUFVLFlBQVksYUFBYSxhQUFhLFdBQVcsWUFBWSxhQUFhLGFBQWEsV0FBVyxZQUFZLE9BQU8sS0FBSyxVQUFVLFlBQVksYUFBYSxhQUFhLGFBQWEsV0FBVyxNQUFNLEtBQUssVUFBVSxZQUFZLGFBQWEsYUFBYSx3Q0FBd0MsdUJBQXVCLGNBQWMsa0JBQWtCLDRCQUE0Qix3QkFBd0IsYUFBYSxnQkFBZ0IsZUFBZSxHQUFHLHFCQUFxQixpQkFBaUIsc0JBQXNCLGdDQUFnQyxtQ0FBbUMsa0JBQWtCLDJCQUEyQiw0QkFBNEIsd0JBQXdCLGFBQWEsdUJBQXVCLEdBQUcsZ0JBQWdCLG9CQUFvQix1QkFBdUIscUJBQXFCLHdCQUF3QiwyQkFBMkIsZ0JBQWdCLEdBQUcsdUJBQXVCLG9CQUFvQix1QkFBdUIscUJBQXFCLHNCQUFzQixHQUFHLHFCQUFxQjtBQUMvNUQ7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21lZGlhcGlwZS1mYWNlbWVzaC1lZmZlY3RzLy4vc3JjL2h0bWxTZXJ2aWNlL3N0eWxlcy9zdGF0dXNQaWxsLmNzcz8xMjYwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnN0YXR1cy1waWxsIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogNjRweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDhweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgei1pbmRleDogNTtcXG59XFxuXFxuLnBpbGwtY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMjVweDtcXG4gIHBhZGRpbmc6IDRweCAxMnB4O1xcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDE2cHgpO1xcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjQpO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDRweDtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG59XFxuXFxuLnBpbGwtdGV4dCB7XFxuICBmb250LXNpemU6IDEycHg7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcXG4gIGxldHRlci1zcGFjaW5nOiAwLjEycHg7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuXFxuLnBpbGwtc3RhdHVzLXRleHQge1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gIGxpbmUtaGVpZ2h0OiAxNDAlO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvaHRtbFNlcnZpY2Uvc3R5bGVzL3N0YXR1c1BpbGwuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixRQUFRO0VBQ1IsV0FBVztFQUNYLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsMkJBQTJCO0VBQzNCLDhCQUE4QjtFQUM5QixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsUUFBUTtFQUNSLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5zdGF0dXMtcGlsbCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDY0cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiA4cHg7XFxuICB3aWR0aDogMTAwJTtcXG4gIHotaW5kZXg6IDU7XFxufVxcblxcbi5waWxsLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMTI1cHg7XFxuICBwYWRkaW5nOiA0cHggMTJweDtcXG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cigxNnB4KTtcXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC40KTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiA0cHg7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxufVxcblxcbi5waWxsLXRleHQge1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XFxuICBsZXR0ZXItc3BhY2luZzogMC4xMnB4O1xcbiAgY29sb3I6ICNmZmY7XFxufVxcblxcbi5waWxsLXN0YXR1cy10ZXh0IHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICBsaW5lLWhlaWdodDogMTQwJTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1786\n')}}]);