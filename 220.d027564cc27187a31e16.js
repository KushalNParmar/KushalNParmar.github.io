(self.webpackChunkmediapipe_facemesh_effects=self.webpackChunkmediapipe_facemesh_effects||[]).push([[220],{168:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sign: () => (/* binding */ sign)\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es6_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6253);\n/* harmony import */ var core_js_modules_es6_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es6_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6331);\n/* harmony import */ var core_js_modules_es6_date_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es6_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6108);\n/* harmony import */ var core_js_modules_es6_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es6_regexp_replace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9357);\n/* harmony import */ var core_js_modules_es6_regexp_replace_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es6_date_to_iso_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1031);\n/* harmony import */ var core_js_modules_es6_date_to_iso_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_iso_string_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_es6_array_reduce_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(3057);\n/* harmony import */ var core_js_modules_es6_array_reduce_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_reduce_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var core_js_modules_es6_object_keys_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7476);\n/* harmony import */ var core_js_modules_es6_object_keys_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var core_js_modules_es6_array_is_array_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(774);\n/* harmony import */ var core_js_modules_es6_array_is_array_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_is_array_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var core_js_modules_es6_array_for_each_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4336);\n/* harmony import */ var core_js_modules_es6_array_for_each_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var core_js_modules_es6_array_sort_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(75);\n/* harmony import */ var core_js_modules_es6_array_sort_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_sort_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var core_js_modules_es6_array_map_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(9371);\n/* harmony import */ var core_js_modules_es6_array_map_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_map_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var core_js_modules_es6_regexp_split_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(1876);\n/* harmony import */ var core_js_modules_es6_regexp_split_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var core_js_modules_es6_string_trim_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(4564);\n/* harmony import */ var core_js_modules_es6_string_trim_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_trim_js__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var core_js_modules_es6_array_filter_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(8837);\n/* harmony import */ var core_js_modules_es6_array_filter_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_filter_js__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var core_js_modules_es6_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(3946);\n/* harmony import */ var core_js_modules_es6_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var core_js_modules_es6_array_index_of_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(3369);\n/* harmony import */ var core_js_modules_es6_array_index_of_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of_js__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var core_js_modules_es6_array_slice_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(110);\n/* harmony import */ var core_js_modules_es6_array_slice_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_slice_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var core_js_modules_es6_object_define_property_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(8388);\n/* harmony import */ var core_js_modules_es6_object_define_property_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property_js__WEBPACK_IMPORTED_MODULE_17__);\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar url = __webpack_require__(8575);\n\nvar querystring = __webpack_require__(7673);\n\nvar sha256 = __webpack_require__(2153);\n\nvar hmacSHA256 = __webpack_require__(8010);\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n} // This function assumes the string has already been percent encoded\n\n\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!\'()*]/g, function (c) {\n    return "%" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str; // return encodeRfc3986(encodeURIComponent(str));\n}\n\nvar HEADERS_TO_IGNORE = {\n  authorization: true,\n  connection: true,\n  "x-amzn-trace-id": true,\n  "user-agent": true,\n  expect: true,\n  "presigned-expires": true,\n  range: true\n};\nvar HEADERS_TO_INCLUDE = ["x-ebg-.*", "host"]; // request: { path | body, [host], [method], [headers], [service], [region] }\n\nvar RequestSigner = /*#__PURE__*/function () {\n  function RequestSigner(request) {\n    _classCallCheck(this, RequestSigner);\n\n    if (typeof request === "string") {\n      request = url.parse(request);\n    }\n\n    var headers = request.headers = request.headers || {};\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = "POST";\n    }\n\n    if (!headers.Host && !headers.host) {\n      headers.Host = request.hostname || request.host; // If a port is specified explicitly, use it as is\n\n      if (request.port) {\n        headers.Host += ":" + request.port;\n      }\n    }\n\n    if (!request.hostname && !request.host) {\n      request.hostname = headers.Host || headers.host;\n    }\n  }\n\n  _createClass(RequestSigner, [{\n    key: "prepareRequest",\n    value: function prepareRequest() {\n      this.parsePath();\n      var request = this.request;\n      var headers = request.headers;\n      var query;\n\n      if (request.signQuery) {\n        this.parsedPath.query = query = this.parsedPath.query || {};\n\n        if (query["x-ebg-param"]) {\n          this.datetime = query["x-ebg-param"];\n        } else {\n          query["x-ebg-param"] = this.getDateTime();\n        }\n      } else {\n        if (!request.doNotModifyHeaders) {\n          if (headers["x-ebg-param"]) {\n            this.datetime = headers["x-ebg-param"] || headers["x-ebg-param"];\n          } else {\n            headers["x-ebg-param"] = this.getDateTime();\n          }\n        }\n\n        delete headers["x-ebg-signature"];\n        delete headers["X-Ebg-Signature"];\n      }\n    }\n  }, {\n    key: "sign",\n    value: function sign() {\n      if (!this.parsedPath) {\n        this.prepareRequest();\n      }\n\n      if (this.request.signQuery) {\n        this.parsedPath.query["x-ebg-signature"] = this.signature();\n      } else {\n        this.request.headers["x-ebg-signature"] = this.signature();\n      }\n\n      this.request.path = this.formatPath();\n      return this.request;\n    }\n  }, {\n    key: "getDateTime",\n    value: function getDateTime() {\n      if (!this.datetime) {\n        var headers = this.request.headers;\n        var date = new Date(headers.Date || headers.date || new Date());\n        this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, "");\n      }\n\n      return this.datetime;\n    }\n  }, {\n    key: "getDate",\n    value: function getDate() {\n      return this.getDateTime().substr(0, 8);\n    }\n  }, {\n    key: "signature",\n    value: function signature() {\n      var kCredentials = "1234567";\n      var strTosign = this.stringToSign();\n      return "v1:".concat(hmac(kCredentials, strTosign, "hex"));\n    }\n  }, {\n    key: "stringToSign",\n    value: function stringToSign() {\n      return [this.getDateTime(), hash(this.canonicalString(), "hex")].join("\\n");\n    }\n  }, {\n    key: "canonicalString",\n    value: function canonicalString() {\n      if (!this.parsedPath) {\n        this.prepareRequest();\n      }\n\n      var pathStr = this.parsedPath.path;\n      var query = this.parsedPath.query;\n      var headers = this.request.headers;\n      var queryStr = "";\n      var normalizePath = true;\n      var decodePath = this.request.doNotEncodePath;\n      var decodeSlashesInPath = false;\n      var firstValOnly = false;\n      var bodyHash = hash(this.request.body || "", "hex");\n\n      if (query) {\n        var reducedQuery = Object.keys(query).reduce(function (obj, key) {\n          if (!key) {\n            return obj;\n          }\n\n          obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] : firstValOnly ? query[key][0] : query[key];\n          return obj;\n        }, {});\n        var encodedQueryPieces = [];\n        Object.keys(reducedQuery).sort().forEach(function (key) {\n          if (!Array.isArray(reducedQuery[key])) {\n            encodedQueryPieces.push(key + "=" + encodeRfc3986Full(reducedQuery[key]));\n          } else {\n            reducedQuery[key].map(encodeRfc3986Full).sort().forEach(function (val) {\n              encodedQueryPieces.push(key + "=" + val);\n            });\n          }\n        });\n        queryStr = encodedQueryPieces.join("&");\n      }\n\n      if (pathStr !== "/") {\n        if (normalizePath) {\n          pathStr = pathStr.replace(/\\/{2,}/g, "/");\n        }\n\n        pathStr = pathStr.split("/").reduce(function (path, piece) {\n          if (normalizePath && piece === "..") {\n            path.pop();\n          } else if (!normalizePath || piece !== ".") {\n            if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, " "));\n            path.push(encodeRfc3986Full(piece));\n          }\n\n          return path;\n        }, []).join("/");\n        if (pathStr[0] !== "/") pathStr = "/" + pathStr;\n        if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, "/");\n      }\n\n      var canonicalReq = [this.request.method || "GET", pathStr, queryStr, this.canonicalHeaders() + "\\n", this.signedHeaders(), bodyHash].join("\\n");\n      return canonicalReq;\n    }\n  }, {\n    key: "canonicalHeaders",\n    value: function canonicalHeaders() {\n      var headers = this.request.headers;\n\n      function trimAll(header) {\n        return header.toString().trim().replace(/\\s+/g, " ");\n      }\n\n      return Object.keys(headers).filter(function (key) {\n        var notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n\n        if (notInIgnoreHeader) {\n          var foundMatch = false;\n\n          for (var t in HEADERS_TO_INCLUDE) {\n            if (Object.prototype.hasOwnProperty.call(HEADERS_TO_INCLUDE, t)) {\n              foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], "ig").test(key);\n            }\n          }\n\n          return foundMatch;\n        } else {\n          return false;\n        }\n      }).sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      }).map(function (key) {\n        return key.toLowerCase() + ":" + trimAll(headers[key]);\n      }).join("\\n");\n    }\n  }, {\n    key: "signedHeaders",\n    value: function signedHeaders() {\n      return Object.keys(this.request.headers).map(function (key) {\n        return key.toLowerCase();\n      }).filter(function (key) {\n        var notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n\n        if (notInIgnoreHeader) {\n          var foundMatch = false;\n\n          for (var t in HEADERS_TO_INCLUDE) {\n            if (Object.prototype.hasOwnProperty.call(HEADERS_TO_INCLUDE, t)) {\n              foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], "ig").test(key);\n            }\n          }\n\n          return foundMatch;\n        } else {\n          return false;\n        }\n      }).sort().join(";");\n    }\n  }, {\n    key: "parsePath",\n    value: function parsePath() {\n      var path = this.request.path || "/"; // So if there are non-reserved chars (and it\'s not already all % encoded), just encode them all\n\n      if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*\'()#%]/.test(path)) {\n        path = encodeURI(decodeURI(path));\n      }\n\n      var queryIx = path.indexOf("?");\n      var query = null;\n\n      if (queryIx >= 0) {\n        query = querystring.parse(path.slice(queryIx + 1));\n        path = path.slice(0, queryIx);\n      }\n\n      this.parsedPath = {\n        path: path,\n        query: query\n      };\n    }\n  }, {\n    key: "formatPath",\n    value: function formatPath() {\n      var path = this.parsedPath.path;\n      var query = this.parsedPath.query;\n\n      if (!query) {\n        return path;\n      } // Services don\'t support empty query string keys\n\n\n      if (query[""] != null) {\n        delete query[""];\n      }\n\n      return path + "?" + encodeRfc3986(querystring.stringify(query));\n    }\n  }]);\n\n  return RequestSigner;\n}();\n\nfunction sign(request) {\n  return new RequestSigner(request).sign();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///168\n')},5213:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  CaptureSnapShot: () => (/* binding */ CaptureSnapShot),\n  CloseModule: () => (/* binding */ CloseModule),\n  SdkEngine: () => (/* binding */ SdkEngine),\n  configSettingContentHandlerForce: () => (/* binding */ configSettingContentHandlerForce),\n  configSliderHandler: () => (/* binding */ configSliderHandler),\n  getAnimationFrameId: () => (/* binding */ getAnimationFrameId),\n  getComparisonState: () => (/* binding */ getComparisonState),\n  getCurrentStream: () => (/* binding */ getCurrentStream),\n  getCurrentTryon: () => (/* binding */ getCurrentTryon),\n  getDebug: () => (/* binding */ getDebug),\n  getFacemeshLandmarksProvider: () => (/* binding */ getFacemeshLandmarksProvider),\n  getHandsLandmarkProvider: () => (/* binding */ getHandsLandmarkProvider),\n  getInputImage: () => (/* binding */ sdkEngine_getInputImage),\n  getIsInitialized: () => (/* binding */ getIsInitialized),\n  getIsVideo: () => (/* binding */ getIsVideo),\n  getNowTrackingMode: () => (/* binding */ getNowTrackingMode),\n  getSDKState: () => (/* binding */ getSDKState),\n  getSceneManagerInstance: () => (/* binding */ getSceneManagerInstance),\n  getTryOnConfig: () => (/* binding */ getTryOnConfig),\n  getUseOrtho: () => (/* binding */ getUseOrtho),\n  getUserUploadMode: () => (/* binding */ getUserUploadMode),\n  getVideo: () => (/* binding */ getVideo),\n  getVideoFrameProvider: () => (/* binding */ getVideoFrameProvider),\n  initialize: () => (/* binding */ initialize),\n  loadML: () => (/* binding */ loadML),\n  loadTexture: () => (/* binding */ loadTexture),\n  modelsEventHandler: () => (/* binding */ modelsEventHandler),\n  onApiSubmitResponse: () => (/* binding */ onApiSubmitResponse),\n  onHandLandsmarks: () => (/* binding */ onHandLandsmarks),\n  onLandmarks: () => (/* binding */ onLandmarks),\n  recognizationCaptureAPI: () => (/* binding */ recognizationCaptureAPI),\n  setComparisonState: () => (/* binding */ setComparisonState),\n  setCurrentTryon: () => (/* binding */ setCurrentTryon),\n  setFacemeshLandmarksProvider: () => (/* binding */ setFacemeshLandmarksProvider),\n  setHandsLandmarkProvider: () => (/* binding */ setHandsLandmarkProvider),\n  setImageSource: () => (/* binding */ setImageSource),\n  setInputImage: () => (/* binding */ setInputImage),\n  setInputImageTexture: () => (/* binding */ setInputImageTexture),\n  setIsPause: () => (/* binding */ setIsPause),\n  setIsVideo: () => (/* binding */ setIsVideo),\n  setNowTrackingMode: () => (/* binding */ setNowTrackingMode),\n  setSDKState: () => (/* binding */ setSDKState),\n  setSceneManagerInstance: () => (/* binding */ setSceneManagerInstance),\n  setTempWidth: () => (/* binding */ setTempWidth),\n  setTryOnConfig: () => (/* binding */ setTryOnConfig),\n  setVideo: () => (/* binding */ setVideo),\n  setVideoEL: () => (/* binding */ setVideoEL),\n  setVideoFrameProvider: () => (/* binding */ setVideoFrameProvider),\n  setVisibalityOfModels: () => (/* binding */ setVisibalityOfModels),\n  tryOnEventHandler: () => (/* binding */ tryOnEventHandler)\n});\n\n// NAMESPACE OBJECT: ./src/js/utils/sliderHandler.js\nvar sliderHandler_namespaceObject = {};\n__webpack_require__.r(sliderHandler_namespaceObject);\n__webpack_require__.d(sliderHandler_namespaceObject, {\n  mq: () => (getRingIndex),\n  CL: () => (getScaleSliderValue),\n  Rx: () => (getXSliderValue),\n  G5: () => (getYSliderValue),\n  l: () => (sliderHandler_resetSliderValues),\n  l$: () => (setHorizontalValue),\n  Zg: () => (sliderHandler_setRingIndex),\n  h$: () => (setScaleValue),\n  Gt: () => (setVerticalValue)\n});\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.search.js\nvar es6_regexp_search = __webpack_require__(6142);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.for-each.js\nvar es6_array_for_each = __webpack_require__(4336);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.array.includes.js\nvar es7_array_includes = __webpack_require__(2773);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.to-string.js\nvar es6_object_to_string = __webpack_require__(6253);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.date.to-string.js\nvar es6_date_to_string = __webpack_require__(6331);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.to-string.js\nvar es6_regexp_to_string = __webpack_require__(6108);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.promise.js\nvar es6_promise = __webpack_require__(851);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.split.js\nvar es6_regexp_split = __webpack_require__(1876);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.typed.uint8-array.js\nvar es6_typed_uint8_array = __webpack_require__(6964);\n// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__(5666);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(9477);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.replace.js\nvar es6_regexp_replace = __webpack_require__(9357);\n;// CONCATENATED MODULE: ./src/js/public_path.js\n\nvar PUBLIC_PATH = __webpack_require__.p.replace(/\\/$/, \'\') || \'\';\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.define-property.js\nvar es6_object_define_property = __webpack_require__(8388);\n;// CONCATENATED MODULE: ./src/js/video_frame_provider.js\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar VideoFrameProvider = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {\n  function VideoFrameProvider(videoElement, onFrame) {\n    _classCallCheck(this, VideoFrameProvider);\n\n    this.videoElement = videoElement;\n    this.onFrame = onFrame;\n    this.running = false;\n  }\n\n  _createClass(VideoFrameProvider, [{\n    key: "start",\n    value: function start() {\n      this.running = true;\n      var callback = this.onFrame;\n      var video = this.videoElement;\n\n      var _this = this;\n\n      var loop = function loop() {\n        requestAnimationFrame(loop);\n\n        if (!video || !_this.running) {\n          return;\n        }\n\n        callback(video);\n      };\n\n      loop();\n    }\n  }, {\n    key: "stop",\n    value: function stop() {\n      this.running = false;\n    }\n  }]);\n\n  return VideoFrameProvider;\n}()));\n// EXTERNAL MODULE: ./src/env.js\nvar env = __webpack_require__(2685);\n;// CONCATENATED MODULE: ./src/js/utils/snackbar.js\n\n\n\n\nvar snackbarElement = null;\n\nfunction getSnackbarElement() {\n  return snackbarElement;\n}\n\nfunction setSnackbarElement() {\n  snackbarElement = document.getElementById("snackbar");\n}\nfunction showSnackbar() {\n  var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "Something Went Wrong";\n  return new Promise(function (resolve, reject) {\n    try {\n      emitError(message);\n\n      var _snackbarElement = getSnackbarElement();\n\n      _snackbarElement.classList.add("show-bar");\n\n      _snackbarElement.innerHTML = "";\n      var snackBarInnerDiv = "\\n      <div class=\'snackbar-container\'>\\n        <div class=\'snackbar-left-icon-container\'>\\n          <img class=\'snackbar-left-icon-image\' src=\\"https://cdn.pixelbin.io/v2/glamar-fynd-835885/original/glamar_assets/camera-off.svg\\"/>\\n        </div>\\n        <div class=\'snackbar-text-container\'>\\n          ".concat(message, "\\n        </div>\\n        <div class=\'snackbar-right-icon-container\'>\\n          <img id=\\"snackbar-close-icon\\" src=\\"https://cdn.pixelbin.io/v2/glamar-fynd-835885/original/glamar_assets/x-close.svg\\"/>\\n        </div>\\n      </div>");\n      _snackbarElement.innerHTML = snackBarInnerDiv;\n      resolve("hidden succesfully");\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\nfunction isSnackBarVisible() {\n  if (snackbarElement && snackbarElement.style.display !== "none") return true;else return false;\n}\nfunction hideSnackbar() {\n  var snackbarElement = getSnackbarElement();\n  snackbarElement.classList.remove("show-bar");\n}\n// EXTERNAL MODULE: ./src/js/utils/globalVariables.js\nvar globalVariables = __webpack_require__(113);\n;// CONCATENATED MODULE: ./src/assets/svg/camera_permission.svg\n/* harmony default export */ const camera_permission = (__webpack_require__.p + "assets/models/src/assets/svg/camera_permission.svg");\n;// CONCATENATED MODULE: ./src/js/utils/cameraPermissionPanel.js\n\n\n\nvar Panel = null;\nvar msg = null;\nvar img = null;\nvar btn = null;\nfunction hideCameraPermissionPanel() {\n  Panel.style.display = "none";\n}\nfunction cameraPermissionPanel_showCameraPermissionPanel(url) {\n  Panel.style.display = "flex";\n}\nfunction setCameraPermissionElement(handler) {\n  Panel = document.querySelector(".camera-permission-panel");\n  msg = document.querySelector(".camera-permission-message");\n  img = document.getElementById("camera-permission-icon");\n  btn = document.getElementById("camera-permission-btn");\n  img.src = camera_permission;\n  msg.innerHTML = globalVariables/* errorMessages */.Qj.cameraPermissionNotGranted;\n  btn.addEventListener("click", function () {\n    handleCameraPermissionClickEvent(handler);\n  });\n}\n\nvar handleCameraPermissionClickEvent = function handleCameraPermissionClickEvent(handler) {\n  handler();\n};\n;// CONCATENATED MODULE: ./src/js/camera_frame_provider.js\n\n\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction camera_frame_provider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction camera_frame_provider_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction camera_frame_provider_createClass(Constructor, protoProps, staticProps) { if (protoProps) camera_frame_provider_defineProperties(Constructor.prototype, protoProps); if (staticProps) camera_frame_provider_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar cameraPermissionState = 0;\nvar isCameraPermissionGranted = function isCameraPermissionGranted() {\n  if (cameraPermissionState === 2) {\n    //emitCameraFailed();\n    return false;\n  } else return true;\n};\nvar CameraFrameProvider = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {\n  function CameraFrameProvider(videoElement, _onFrame) {\n    var _this = this;\n\n    camera_frame_provider_classCallCheck(this, CameraFrameProvider);\n\n    _defineProperty(this, "start", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _this.camera.start();\n\n            case 3:\n              cameraPermissionState = 1;\n              _this.isInitialized = true;\n              _context.next = 12;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context["catch"](0);\n              showCameraPermissionPanel(); //emitCameraFailed();\n              // if (error.name === "NotAllowedError") {\n              //   showSnackbar(errorMessages.cameraPermissionNotGranted);\n              // } else {\n              //   showSnackbar(errorMessages.cameraIssue);\n              // }\n\n              cameraPermissionState = 2;\n              _this.isInitialized = false;\n\n            case 12:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    })));\n\n    _defineProperty(this, "stop", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.camera.stop();\n\n            case 1:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    this.cameraOptions = {\n      onFrame: function () {\n        var _onFrame2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _onFrame(videoElement);\n\n                case 1:\n                case "end":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        function onFrame() {\n          return _onFrame2.apply(this, arguments);\n        }\n\n        return onFrame;\n      }(),\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    var mql = window.matchMedia("(orientation: portrait)"); // If there are matches, we\'re in portrait\n\n    if (mql.matches) {\n      this.cameraOptions.width = window.innerHeight;\n      this.cameraOptions.height = window.innerWidth; // Portrait orientation\n    } // this.isPortrait = screen.orientation.type.startsWith("portrait") ? true : false;\n    // if (this.isPortrait) {\n    //   console.log("portrait" + this.isPortrait);\n    //   this.cameraOptions.width = window.innerHeight;\n    //   this.cameraOptions.height = window.innerWidth;\n    // }\n\n\n    var camera = new Camera(videoElement, this.cameraOptions);\n    this.camera = camera;\n    this.isInitialized = false;\n  }\n\n  camera_frame_provider_createClass(CameraFrameProvider, [{\n    key: "handleWindowResize",\n    value: function handleWindowResize() {\n      if (this.cameraOptions) {\n        this.cameraOptions.width = window.innerWidth;\n        this.cameraOptions.height = window.innerHeight;\n      } // const newWidth = window.innerWidth; // Get the new width\n      // const newHeight = window.innerHeight; // Get the new height\n      // // Update the camera\'s width and height properties\n      // if (this.camera) {\n      //   this.camera.options.options = newWidth;\n      //   this.camera.options.height = newHeight;\n      // }\n\n    }\n  }, {\n    key: "getInitalizedState",\n    value: function getInitalizedState() {\n      return this.isInitialized;\n    }\n  }]);\n\n  return CameraFrameProvider;\n}()));\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.function.bind.js\nvar es6_function_bind = __webpack_require__(9730);\n// EXTERNAL MODULE: ./node_modules/@mediapipe/face_mesh/face_mesh.js\nvar face_mesh = __webpack_require__(8818);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.find.js\nvar es6_array_find = __webpack_require__(2310);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.map.js\nvar es6_array_map = __webpack_require__(9371);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.keys.js\nvar es6_object_keys = __webpack_require__(7476);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js\nvar es6_symbol = __webpack_require__(5767);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.filter.js\nvar es6_array_filter = __webpack_require__(8837);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js\nvar es6_object_get_own_property_descriptor = __webpack_require__(4882);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js\nvar es7_object_get_own_property_descriptors = __webpack_require__(8351);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.define-properties.js\nvar es6_object_define_properties = __webpack_require__(7470);\n;// CONCATENATED MODULE: ./src/js/facemesh/face_geom.js\nvar FACE_MESH_VERTEX_BUFFER = (/* unused pure expression or super */ null && ([0, -3.406404, 5.979507, 0.499977, 0.652534, 0, -1.126865, 7.475604, 0.500026, 0.547487, 0, -2.089024, 6.058267, 0.499974, 0.602372, -0.463928, 0.955357, 6.633583, 0.482113, 0.471979, 0, -0.46317, 7.58658, 0.500151, 0.527156, 0, 0.365669, 7.24287, 0.49991, 0.498253, 0, 2.473255, 5.788627, 0.499523, 0.401062, -4.253081, 2.577646, 3.279702, 0.289712, 0.380764, 0, 4.019042, 5.284764, 0.499955, 0.312398, 0, 4.885979, 5.385258, 0.499987, 0.269919, 0, 8.261778, 4.481535, 0.500023, 0.10705, 0, -3.706811, 5.864924, 0.500023, 0.666234, 0, -3.918301, 5.56943, 0.500016, 0.679224, 0, -3.994436, 5.219482, 0.500023, 0.692348, 0, -4.5424, 5.404754, 0.499977, 0.695278, 0, -4.745577, 5.529457, 0.499977, 0.705934, 0, -5.019567, 5.601448, 0.499977, 0.719385, 0, -5.365123, 5.535441, 0.499977, 0.737019, 0, -6.149624, 5.071372, 0.499968, 0.781371, 0, -1.501095, 7.112196, 0.499816, 0.562981, -0.416106, -1.466449, 6.447657, 0.473773, 0.57391, -7.08796, 5.434801, 0.09962, 0.104907, 0.254141, -2.628639, 2.035898, 3.848121, 0.36593, 0.409576, -3.198363, 1.985815, 3.796952, 0.338758, 0.413025, -3.775151, 2.039402, 3.646194, 0.31112, 0.40946, -4.465819, 2.42295, 3.155168, 0.274658, 0.389131, -2.164289, 2.189867, 3.851822, 0.393362, 0.403706, -3.208229, 3.223926, 4.115822, 0.345234, 0.344011, -2.673803, 3.205337, 4.092203, 0.370094, 0.346076, -3.745193, 3.165286, 3.972409, 0.319322, 0.347265, -4.161018, 3.059069, 3.719554, 0.297903, 0.353591, -5.062006, 1.934418, 2.776093, 0.247792, 0.41081, -2.266659, -7.425768, 4.389812, 0.396889, 0.842755, -4.445859, 2.663991, 3.173422, 0.280098, 0.3756, -7.21453, 2.263009, 0.07315, 0.10631, 0.399956, -5.799793, 2.349546, 2.204059, 0.209925, 0.391353, -2.844939, -0.720868, 4.43313, 0.355808, 0.534406, -0.711452, -3.329355, 5.877044, 0.471751, 0.650404, -0.606033, -3.924562, 5.444923, 0.474155, 0.680192, -1.431615, -3.500953, 5.496189, 0.439785, 0.657229, -1.91491, -3.803146, 5.02893, 0.414617, 0.666541, -1.131043, -3.973937, 5.189648, 0.450374, 0.680861, -1.563548, -4.082763, 4.842263, 0.428771, 0.682691, -2.650112, -5.003649, 4.188483, 0.374971, 0.727805, -0.427049, -1.094134, 7.360529, 0.486717, 0.547629, -0.496396, -0.475659, 7.440358, 0.485301, 0.527395, -5.253307, 3.881582, 3.363159, 0.257765, 0.31449, -1.718698, 0.974609, 4.558359, 0.401223, 0.455172, -1.608635, -0.942516, 5.814193, 0.429819, 0.548615, -1.651267, -0.610868, 5.581319, 0.421352, 0.533741, -4.765501, -0.701554, 3.534632, 0.276896, 0.532057, -0.478306, 0.295766, 7.101013, 0.48337, 0.499587, -3.734964, 4.50823, 4.550454, 0.337212, 0.282883, -4.588603, 4.302037, 4.048484, 0.296392, 0.293243, -6.279331, 6.615427, 1.42585, 0.169295, 0.193814, -1.220941, 4.142165, 5.106035, 0.44758, 0.30261, -2.193489, 3.100317, 4.000575, 0.39239, 0.353888, -3.102642, -4.352984, 4.095905, 0.35449, 0.696784, -6.719682, -4.788645, -1.745401, 0.067305, 0.730105, -1.193824, -1.306795, 5.737747, 0.442739, 0.572826, -0.729766, -1.593712, 5.833208, 0.457098, 0.584792, -2.456206, -4.342621, 4.283884, 0.381974, 0.694711, -2.204823, -4.304508, 4.162499, 0.392389, 0.694203, -4.985894, 4.802461, 3.751977, 0.277076, 0.271932, -1.592294, -1.257709, 5.456949, 0.422552, 0.563233, -2.644548, 4.524654, 4.921559, 0.385919, 0.281364, -2.760292, 5.100971, 5.01599, 0.383103, 0.25584, -3.523964, 8.005976, 3.729163, 0.331431, 0.119714, -5.599763, 5.71547, 2.724259, 0.229924, 0.232003, -3.063932, 6.566144, 4.529981, 0.364501, 0.189114, -5.720968, 4.254584, 2.830852, 0.229622, 0.299541, -6.374393, 4.78559, 1.591691, 0.173287, 0.278748, -0.672728, -3.688016, 5.737804, 0.472879, 0.666198, -1.26256, -3.787691, 5.417779, 0.446828, 0.668527, -1.732553, -3.952767, 5.000579, 0.422762, 0.67389, -1.043625, -1.464973, 5.662455, 0.445308, 0.580066, -2.321234, -4.329069, 4.258156, 0.388103, 0.693961, -2.056846, -4.477671, 4.520883, 0.403039, 0.70654, -2.153084, -4.276322, 4.038093, 0.403629, 0.693953, -0.946874, -1.035249, 6.512274, 0.460042, 0.557139, -1.469132, -4.036351, 4.604908, 0.431158, 0.692366, -1.02434, -3.989851, 4.926693, 0.452182, 0.692366, -0.533422, -3.993222, 5.138202, 0.475387, 0.692366, -0.76972, -6.095394, 4.985883, 0.465828, 0.77919, -0.699606, -5.29185, 5.448304, 0.472329, 0.736226, -0.669687, -4.94977, 5.509612, 0.473087, 0.717857, -0.630947, -4.695101, 5.449371, 0.473122, 0.704626, -0.583218, -4.517982, 5.339869, 0.473033, 0.695278, -1.53717, -4.423206, 4.74547, 0.427942, 0.695278, -1.6156, -4.475942, 4.813632, 0.426479, 0.70354, -1.729053, -4.61868, 4.854463, 0.423162, 0.711846, -1.838624, -4.828746, 4.823737, 0.418309, 0.720063, -2.36825, -3.106237, 4.868096, 0.390095, 0.639573, -7.542244, -1.049282, -2.431321, 0.013954, 0.560034, 0, -1.724003, 6.60139, 0.499914, 0.580147, -1.826614, -4.399531, 4.399021, 0.4132, 0.6954, -1.929558, -4.411831, 4.497052, 0.409626, 0.701823, -0.597442, -2.013686, 5.866456, 0.46808, 0.601535, -1.405627, -1.714196, 5.241087, 0.422729, 0.585985, -0.662449, -1.819321, 5.863759, 0.46308, 0.593784, -2.34234, 0.572222, 4.294303, 0.37212, 0.473414, -3.327324, 0.104863, 4.11386, 0.334562, 0.496073, -1.726175, -0.919165, 5.273355, 0.411671, 0.546965, -5.133204, 7.485602, 2.660442, 0.242176, 0.147676, -4.538641, 6.319907, 3.683424, 0.290777, 0.201446, -3.986562, 5.109487, 4.466315, 0.327338, 0.256527, -2.169681, -5.440433, 4.455874, 0.39951, 0.748921, -1.395634, 5.011963, 5.316032, 0.441728, 0.261676, -1.6195, 6.599217, 4.921106, 0.429765, 0.187834, -1.891399, 8.236377, 4.274997, 0.412198, 0.108901, -4.195832, 2.235205, 3.375099, 0.288955, 0.398952, -5.733342, 1.411738, 2.431726, 0.218937, 0.435411, -1.859887, 2.355757, 3.843181, 0.412782, 0.39897, -4.988612, 3.074654, 3.083858, 0.257135, 0.35544, -1.303263, 1.416453, 4.831091, 0.427685, 0.437961, -1.305757, -0.672779, 6.415959, 0.44834, 0.536936, -6.46517, 0.937119, 1.689873, 0.17856, 0.457554, -5.258659, 0.945811, 2.974312, 0.247308, 0.457194, -4.432338, 0.722096, 3.522615, 0.286267, 0.467675, -3.300681, 0.861641, 3.872784, 0.332828, 0.460712, -2.430178, 1.131492, 4.039035, 0.368756, 0.447207, -1.820731, 1.467954, 4.224124, 0.398964, 0.432655, -0.563221, 2.307693, 5.566789, 0.47641, 0.405806, -6.338145, -0.529279, 1.881175, 0.189241, 0.523924, -5.587698, 3.208071, 2.687839, 0.228962, 0.348951, -0.242624, -1.462857, 7.071491, 0.490726, 0.562401, -1.611251, 0.339326, 4.895421, 0.40467, 0.485133, -7.743095, 2.364999, -2.005167, 0.019469, 0.401564, -1.391142, 1.851048, 4.448999, 0.426243, 0.420431, -1.785794, -0.978284, 4.85047, 0.396993, 0.548797, -4.670959, 2.664461, 3.084075, 0.26647, 0.376977, -1.33397, -0.283761, 6.097047, 0.439121, 0.518958, -7.270895, -2.890917, -2.252455, 0.032314, 0.644357, -1.856432, 2.585245, 3.757904, 0.419054, 0.387155, -0.923388, 0.073076, 6.671944, 0.462783, 0.505747, -5.000589, -6.135128, 1.892523, 0.238979, 0.779745, -5.085276, -7.17859, 0.714711, 0.198221, 0.831938, -7.159291, -0.81182, -0.072044, 0.10755, 0.540755, -5.843051, -5.248023, 0.924091, 0.18361, 0.740257, -6.847258, 3.662916, 0.724695, 0.13441, 0.333683, -2.412942, -8.258853, 4.119213, 0.385764, 0.883154, -0.179909, -1.689864, 6.573301, 0.490967, 0.579378, -2.103655, -0.163946, 4.566119, 0.382385, 0.508573, -6.407571, 2.236021, 1.560843, 0.174399, 0.397671, -3.670075, 2.360153, 3.63523, 0.318785, 0.396235, -3.177186, 2.294265, 3.775704, 0.343364, 0.400597, -2.196121, -4.598322, 4.479786, 0.3961, 0.710217, -6.234883, -1.94443, 1.663542, 0.187885, 0.588538, -1.292924, -9.29592, 4.094063, 0.430987, 0.944065, -3.210651, -8.533278, 2.802001, 0.318993, 0.898285, -4.068926, -7.993109, 1.925119, 0.266248, 0.869701, 0, 6.54539, 5.027311, 0.500023, 0.190576, 0, -9.403378, 4.264492, 0.499977, 0.954453, -2.724032, 2.315802, 3.777151, 0.36617, 0.398822, -2.28846, 2.398891, 3.697603, 0.393207, 0.395537, -1.998311, 2.496547, 3.689148, 0.410373, 0.39108, -6.13004, 3.399261, 2.038516, 0.194993, 0.342102, -2.28846, 2.886504, 3.775031, 0.388665, 0.362284, -2.724032, 2.96181, 3.871767, 0.365962, 0.355971, -3.177186, 2.964136, 3.876973, 0.343364, 0.355357, -3.670075, 2.927714, 3.724325, 0.318785, 0.35834, -4.018389, 2.857357, 3.482983, 0.301415, 0.363156, -7.555811, 4.106811, -0.991917, 0.058133, 0.319076, -4.018389, 2.483695, 3.440898, 0.301415, 0.387449, 0, -2.521945, 5.932265, 0.499988, 0.618434, -1.776217, -2.683946, 5.213116, 0.415838, 0.624196, -1.222237, -1.182444, 5.952465, 0.445682, 0.566077, -0.731493, -2.536683, 5.815343, 0.465844, 0.620641, 0, 3.271027, 5.236015, 0.499923, 0.351524, -4.135272, -6.996638, 2.67197, 0.288719, 0.819946, -3.311811, -7.660815, 3.382963, 0.335279, 0.85282, -1.313701, -8.639995, 4.702456, 0.440512, 0.902419, -5.940524, -6.223629, -0.631468, 0.128294, 0.791941, -1.998311, 2.743838, 3.74403, 0.408772, 0.373894, -0.901447, 1.236992, 5.754256, 0.455607, 0.451801, 0, -8.765243, 4.891441, 0.499877, 0.90899, -2.308977, -8.974196, 3.60907, 0.375437, 0.924192, -6.954154, -2.439843, -0.131163, 0.11421, 0.615022, -1.098819, -4.458788, 5.120727, 0.448662, 0.695278, -1.181124, -4.579996, 5.189564, 0.44802, 0.704632, -1.255818, -4.787901, 5.237051, 0.447112, 0.715808, -1.325085, -5.106507, 5.20501, 0.444832, 0.730794, -1.546388, -5.819392, 4.757893, 0.430012, 0.766809, -1.953754, -4.183892, 4.431713, 0.406787, 0.685673, -2.117802, -4.137093, 4.555096, 0.400738, 0.681069, -2.285339, -4.051196, 4.582438, 0.3924, 0.677703, -2.85016, -3.66572, 4.484994, 0.367856, 0.663919, -5.278538, -2.238942, 2.861224, 0.247923, 0.601333, -0.946709, 1.907628, 5.196779, 0.45277, 0.42085, -1.314173, 3.104912, 4.231404, 0.436392, 0.359887, -1.78, 2.86, 3.881555, 0.416164, 0.368714, -1.84511, -4.09888, 4.247264, 0.413386, 0.692366, -5.436187, -4.030482, 2.109852, 0.228018, 0.683572, -0.766444, 3.182131, 4.861453, 0.468268, 0.352671, -1.938616, -6.61441, 4.521085, 0.411362, 0.804327, 0, 1.059413, 6.774605, 0.499989, 0.469825, -0.516573, 1.583572, 6.148363, 0.479154, 0.442654, 0, 1.728369, 6.31675, 0.499974, 0.439637, -1.246815, 0.230297, 5.681036, 0.432112, 0.493589, 0, -7.942194, 5.181173, 0.499886, 0.866917, 0, -6.991499, 5.153478, 0.499913, 0.821729, -0.997827, -6.930921, 4.979576, 0.456549, 0.819201, -3.288807, -5.382514, 3.795752, 0.344549, 0.745439, -2.311631, -1.566237, 4.590085, 0.378909, 0.57401, -2.68025, -6.111567, 4.096152, 0.374293, 0.780185, -3.832928, -1.537326, 4.137731, 0.319688, 0.570738, -2.96186, -2.274215, 4.440943, 0.357155, 0.60427, -4.386901, -2.683286, 3.643886, 0.295284, 0.621581, -1.217295, -7.834465, 4.969286, 0.44775, 0.862477, -1.542374, -0.136843, 5.201008, 0.410986, 0.508723, -3.878377, -6.041764, 3.311079, 0.313951, 0.775308, -3.084037, -6.809842, 3.814195, 0.354128, 0.812553, -3.747321, -4.503545, 3.726453, 0.324548, 0.703993, -6.094129, -3.205991, 1.473482, 0.189096, 0.6463, -4.588995, -4.728726, 2.983221, 0.279777, 0.714658, -6.583231, -3.941269, 0.070268, 0.133823, 0.682701, -3.49258, -3.19582, 4.130198, 0.336768, 0.644733, -1.255543, 0.802341, 5.307551, 0.429884, 0.466522, -1.126122, -0.933602, 6.538785, 0.455528, 0.548623, -1.443109, -1.142774, 5.905127, 0.437114, 0.558896, -0.923043, -0.529042, 7.003423, 0.467288, 0.529925, -1.755386, 3.529117, 4.327696, 0.414712, 0.33522, -2.632589, 3.713828, 4.364629, 0.377046, 0.322778, -3.388062, 3.721976, 4.309028, 0.344108, 0.320151, -4.075766, 3.675413, 4.076063, 0.312876, 0.322332, -4.62291, 3.474691, 3.646321, 0.283526, 0.33319, -5.171755, 2.535753, 2.670867, 0.241246, 0.382786, -7.297331, 0.763172, -0.048769, 0.102986, 0.468763, -4.706828, 1.651, 3.109532, 0.267612, 0.42456, -4.071712, 1.476821, 3.476944, 0.297879, 0.433176, -3.269817, 1.470659, 3.731945, 0.333434, 0.433878, -2.527572, 1.617311, 3.865444, 0.366427, 0.426116, -1.970894, 1.858505, 3.961782, 0.396012, 0.416696, -1.579543, 2.097941, 4.084996, 0.420121, 0.410228, -7.664182, 0.673132, -2.435867, 0.007561, 0.480777, -1.397041, -1.340139, 5.630378, 0.432949, 0.569518, -0.884838, 0.65874, 6.233232, 0.458639, 0.479089, -0.767097, -0.968035, 7.077932, 0.473466, 0.545744, -0.460213, -1.334106, 6.787447, 0.476088, 0.56383, -0.748618, -1.067994, 6.798303, 0.468472, 0.555057, -1.236408, -1.585568, 5.48049, 0.433991, 0.582362, -0.387306, -1.40999, 6.957705, 0.483518, 0.562984, -0.319925, -1.607931, 6.508676, 0.482483, 0.577849, -1.639633, 2.556298, 3.863736, 0.42645, 0.389799, -1.255645, 2.467144, 4.2038, 0.438999, 0.396495, -1.031362, 2.382663, 4.615849, 0.450067, 0.400434, -4.253081, 2.772296, 3.315305, 0.289712, 0.368253, -4.53, 2.91, 3.339685, 0.27667, 0.363373, 0.463928, 0.955357, 6.633583, 0.517862, 0.471948, 4.253081, 2.577646, 3.279702, 0.710288, 0.380764, 0.416106, -1.466449, 6.447657, 0.526227, 0.57391, 7.08796, 5.434801, 0.09962, 0.895093, 0.254141, 2.628639, 2.035898, 3.848121, 0.63407, 0.409576, 3.198363, 1.985815, 3.796952, 0.661242, 0.413025, 3.775151, 2.039402, 3.646194, 0.68888, 0.40946, 4.465819, 2.42295, 3.155168, 0.725342, 0.389131, 2.164289, 2.189867, 3.851822, 0.60663, 0.403705, 3.208229, 3.223926, 4.115822, 0.654766, 0.344011, 2.673803, 3.205337, 4.092203, 0.629906, 0.346076, 3.745193, 3.165286, 3.972409, 0.680678, 0.347265, 4.161018, 3.059069, 3.719554, 0.702097, 0.353591, 5.062006, 1.934418, 2.776093, 0.752212, 0.410805, 2.266659, -7.425768, 4.389812, 0.602918, 0.842863, 4.445859, 2.663991, 3.173422, 0.719902, 0.3756, 7.21453, 2.263009, 0.07315, 0.893693, 0.39996, 5.799793, 2.349546, 2.204059, 0.790082, 0.391354, 2.844939, -0.720868, 4.43313, 0.643998, 0.534488, 0.711452, -3.329355, 5.877044, 0.528249, 0.650404, 0.606033, -3.924562, 5.444923, 0.52585, 0.680191, 1.431615, -3.500953, 5.496189, 0.560215, 0.657229, 1.91491, -3.803146, 5.02893, 0.585384, 0.666541, 1.131043, -3.973937, 5.189648, 0.549626, 0.680861, 1.563548, -4.082763, 4.842263, 0.571228, 0.682692, 2.650112, -5.003649, 4.188483, 0.624852, 0.728099, 0.427049, -1.094134, 7.360529, 0.51305, 0.547282, 0.496396, -0.475659, 7.440358, 0.515097, 0.527252, 5.253307, 3.881582, 3.363159, 0.742247, 0.314507, 1.718698, 0.974609, 4.558359, 0.598631, 0.454979, 1.608635, -0.942516, 5.814193, 0.570338, 0.548575, 1.651267, -0.610868, 5.581319, 0.578632, 0.533623, 4.765501, -0.701554, 3.534632, 0.723087, 0.532054, 0.478306, 0.295766, 7.101013, 0.516446, 0.499639, 3.734964, 4.50823, 4.550454, 0.662801, 0.282918, 4.588603, 4.302037, 4.048484, 0.703624, 0.293271, 6.279331, 6.615427, 1.42585, 0.830705, 0.193814, 1.220941, 4.142165, 5.106035, 0.552386, 0.302568, 2.193489, 3.100317, 4.000575, 0.60761, 0.353888, 3.102642, -4.352984, 4.095905, 0.645429, 0.696707, 6.719682, -4.788645, -1.745401, 0.932695, 0.730105, 1.193824, -1.306795, 5.737747, 0.557261, 0.572826, 0.729766, -1.593712, 5.833208, 0.542902, 0.584792, 2.456206, -4.342621, 4.283884, 0.618026, 0.694711, 2.204823, -4.304508, 4.162499, 0.607591, 0.694203, 4.985894, 4.802461, 3.751977, 0.722943, 0.271963, 1.592294, -1.257709, 5.456949, 0.577414, 0.563167, 2.644548, 4.524654, 4.921559, 0.614083, 0.281387, 2.760292, 5.100971, 5.01599, 0.616907, 0.255886, 3.523964, 8.005976, 3.729163, 0.668509, 0.119914, 5.599763, 5.71547, 2.724259, 0.770092, 0.232021, 3.063932, 6.566144, 4.529981, 0.635536, 0.189249, 5.720968, 4.254584, 2.830852, 0.770391, 0.299556, 6.374393, 4.78559, 1.591691, 0.826722, 0.278755, 0.672728, -3.688016, 5.737804, 0.527121, 0.666198, 1.26256, -3.787691, 5.417779, 0.553172, 0.668527, 1.732553, -3.952767, 5.000579, 0.577238, 0.67389, 1.043625, -1.464973, 5.662455, 0.554692, 0.580066, 2.321234, -4.329069, 4.258156, 0.611897, 0.693961, 2.056846, -4.477671, 4.520883, 0.596961, 0.70654, 2.153084, -4.276322, 4.038093, 0.596371, 0.693953, 0.946874, -1.035249, 6.512274, 0.539958, 0.557139, 1.469132, -4.036351, 4.604908, 0.568842, 0.692366, 1.02434, -3.989851, 4.926693, 0.547818, 0.692366, 0.533422, -3.993222, 5.138202, 0.524613, 0.692366, 0.76972, -6.095394, 4.985883, 0.53409, 0.779141, 0.699606, -5.29185, 5.448304, 0.527671, 0.736226, 0.669687, -4.94977, 5.509612, 0.526913, 0.717857, 0.630947, -4.695101, 5.449371, 0.526878, 0.704626, 0.583218, -4.517982, 5.339869, 0.526967, 0.695278, 1.53717, -4.423206, 4.74547, 0.572058, 0.695278, 1.6156, -4.475942, 4.813632, 0.573521, 0.70354, 1.729053, -4.61868, 4.854463, 0.576838, 0.711846, 1.838624, -4.828746, 4.823737, 0.581691, 0.720063, 2.36825, -3.106237, 4.868096, 0.609945, 0.63991, 7.542244, -1.049282, -2.431321, 0.986046, 0.560034, 1.826614, -4.399531, 4.399021, 0.5868, 0.6954, 1.929558, -4.411831, 4.497052, 0.590372, 0.701823, 0.597442, -2.013686, 5.866456, 0.531915, 0.601537, 1.405627, -1.714196, 5.241087, 0.577268, 0.585935, 0.662449, -1.819321, 5.863759, 0.536915, 0.593786, 2.34234, 0.572222, 4.294303, 0.627543, 0.473352, 3.327324, 0.104863, 4.11386, 0.665586, 0.495951, 1.726175, -0.919165, 5.273355, 0.588354, 0.546862, 5.133204, 7.485602, 2.660442, 0.757824, 0.147676, 4.538641, 6.319907, 3.683424, 0.70925, 0.201508, 3.986562, 5.109487, 4.466315, 0.672684, 0.256581, 2.169681, -5.440433, 4.455874, 0.600409, 0.749005, 1.395634, 5.011963, 5.316032, 0.558266, 0.261672, 1.6195, 6.599217, 4.921106, 0.570304, 0.187871, 1.891399, 8.236377, 4.274997, 0.588166, 0.109044, 4.195832, 2.235205, 3.375099, 0.711045, 0.398952, 5.733342, 1.411738, 2.431726, 0.78107, 0.435405, 1.859887, 2.355757, 3.843181, 0.587247, 0.398932, 4.988612, 3.074654, 3.083858, 0.74287, 0.355446, 1.303263, 1.416453, 4.831091, 0.572156, 0.437652, 1.305757, -0.672779, 6.415959, 0.551868, 0.53657, 6.46517, 0.937119, 1.689873, 0.821442, 0.457556, 5.258659, 0.945811, 2.974312, 0.752702, 0.457182, 4.432338, 0.722096, 3.522615, 0.713757, 0.467627, 3.300681, 0.861641, 3.872784, 0.667113, 0.460673, 2.430178, 1.131492, 4.039035, 0.631101, 0.447154, 1.820731, 1.467954, 4.224124, 0.600862, 0.432473, 0.563221, 2.307693, 5.566789, 0.523481, 0.405627, 6.338145, -0.529279, 1.881175, 0.810748, 0.523926, 5.587698, 3.208071, 2.687839, 0.771046, 0.348959, 0.242624, -1.462857, 7.071491, 0.509127, 0.562718, 1.611251, 0.339326, 4.895421, 0.595293, 0.485024, 7.743095, 2.364999, -2.005167, 0.980531, 0.401564, 1.391142, 1.851048, 4.448999, 0.5735, 0.42, 1.785794, -0.978284, 4.85047, 0.602995, 0.548688, 4.670959, 2.664461, 3.084075, 0.73353, 0.376977, 1.33397, -0.283761, 6.097047, 0.560611, 0.519017, 7.270895, -2.890917, -2.252455, 0.967686, 0.644357, 1.856432, 2.585245, 3.757904, 0.580985, 0.38716, 0.923388, 0.073076, 6.671944, 0.537728, 0.505385, 5.000589, -6.135128, 1.892523, 0.760966, 0.779753, 5.085276, -7.17859, 0.714711, 0.801779, 0.831938, 7.159291, -0.81182, -0.072044, 0.892441, 0.540761, 5.843051, -5.248023, 0.924091, 0.816351, 0.74026, 6.847258, 3.662916, 0.724695, 0.865595, 0.333687, 2.412942, -8.258853, 4.119213, 0.614074, 0.883246, 0.179909, -1.689864, 6.573301, 0.508953, 0.579438, 2.103655, -0.163946, 4.566119, 0.617942, 0.508316, 6.407571, 2.236021, 1.560843, 0.825608, 0.397675, 3.670075, 2.360153, 3.63523, 0.681215, 0.396235, 3.177186, 2.294265, 3.775704, 0.656636, 0.400597, 2.196121, -4.598322, 4.479786, 0.6039, 0.710217, 6.234883, -1.94443, 1.663542, 0.812086, 0.588539, 1.292924, -9.29592, 4.094063, 0.568013, 0.944565, 3.210651, -8.533278, 2.802001, 0.681008, 0.898285, 4.068926, -7.993109, 1.925119, 0.733752, 0.869701, 2.724032, 2.315802, 3.777151, 0.63383, 0.398822, 2.28846, 2.398891, 3.697603, 0.606793, 0.395537, 1.998311, 2.496547, 3.689148, 0.58966, 0.391062, 6.13004, 3.399261, 2.038516, 0.805016, 0.342108, 2.28846, 2.886504, 3.775031, 0.611335, 0.362284, 2.724032, 2.96181, 3.871767, 0.634038, 0.355971, 3.177186, 2.964136, 3.876973, 0.656636, 0.355357, 3.670075, 2.927714, 3.724325, 0.681215, 0.35834, 4.018389, 2.857357, 3.482983, 0.698585, 0.363156, 7.555811, 4.106811, -0.991917, 0.941867, 0.319076, 4.018389, 2.483695, 3.440898, 0.698585, 0.387449, 1.776217, -2.683946, 5.213116, 0.584177, 0.624107, 1.222237, -1.182444, 5.952465, 0.554318, 0.566077, 0.731493, -2.536683, 5.815343, 0.534154, 0.62064, 4.135272, -6.996638, 2.67197, 0.711218, 0.819975, 3.311811, -7.660815, 3.382963, 0.66463, 0.852871, 1.313701, -8.639995, 4.702456, 0.5591, 0.902632, 5.940524, -6.223629, -0.631468, 0.871706, 0.791941, 1.998311, 2.743838, 3.74403, 0.591234, 0.373894, 0.901447, 1.236992, 5.754256, 0.544341, 0.451584, 2.308977, -8.974196, 3.60907, 0.624563, 0.924192, 6.954154, -2.439843, -0.131163, 0.88577, 0.615029, 1.098819, -4.458788, 5.120727, 0.551338, 0.695278, 1.181124, -4.579996, 5.189564, 0.55198, 0.704632, 1.255818, -4.787901, 5.237051, 0.552888, 0.715808, 1.325085, -5.106507, 5.20501, 0.555168, 0.730794, 1.546388, -5.819392, 4.757893, 0.569944, 0.767035, 1.953754, -4.183892, 4.431713, 0.593203, 0.685676, 2.117802, -4.137093, 4.555096, 0.599262, 0.681069, 2.285339, -4.051196, 4.582438, 0.6076, 0.677703, 2.85016, -3.66572, 4.484994, 0.631938, 0.6635, 5.278538, -2.238942, 2.861224, 0.752033, 0.601315, 0.946709, 1.907628, 5.196779, 0.547226, 0.420395, 1.314173, 3.104912, 4.231404, 0.563544, 0.359828, 1.78, 2.86, 3.881555, 0.583841, 0.368714, 1.84511, -4.09888, 4.247264, 0.586614, 0.692366, 5.436187, -4.030482, 2.109852, 0.771915, 0.683578, 0.766444, 3.182131, 4.861453, 0.531597, 0.352483, 1.938616, -6.61441, 4.521085, 0.588371, 0.804441, 0.516573, 1.583572, 6.148363, 0.520797, 0.442565, 1.246815, 0.230297, 5.681036, 0.567985, 0.493479, 0.997827, -6.930921, 4.979576, 0.543283, 0.819255, 3.288807, -5.382514, 3.795752, 0.655317, 0.745515, 2.311631, -1.566237, 4.590085, 0.621009, 0.574018, 2.68025, -6.111567, 4.096152, 0.62556, 0.780312, 3.832928, -1.537326, 4.137731, 0.680198, 0.570719, 2.96186, -2.274215, 4.440943, 0.642764, 0.604338, 4.386901, -2.683286, 3.643886, 0.704663, 0.62153, 1.217295, -7.834465, 4.969286, 0.552012, 0.862592, 1.542374, -0.136843, 5.201008, 0.589072, 0.508637, 3.878377, -6.041764, 3.311079, 0.685945, 0.775357, 3.084037, -6.809842, 3.814195, 0.645735, 0.81264, 3.747321, -4.503545, 3.726453, 0.675343, 0.703978, 6.094129, -3.205991, 1.473482, 0.810858, 0.646305, 4.588995, -4.728726, 2.983221, 0.720122, 0.714667, 6.583231, -3.941269, 0.070268, 0.866152, 0.682705, 3.49258, -3.19582, 4.130198, 0.663187, 0.644597, 1.255543, 0.802341, 5.307551, 0.570082, 0.466326, 1.126122, -0.933602, 6.538785, 0.544562, 0.548376, 1.443109, -1.142774, 5.905127, 0.562759, 0.558785, 0.923043, -0.529042, 7.003423, 0.531987, 0.53014, 1.755386, 3.529117, 4.327696, 0.585271, 0.335177, 2.632589, 3.713828, 4.364629, 0.622953, 0.322779, 3.388062, 3.721976, 4.309028, 0.655896, 0.320163, 4.075766, 3.675413, 4.076063, 0.687132, 0.322346, 4.62291, 3.474691, 3.646321, 0.716482, 0.333201, 5.171755, 2.535753, 2.670867, 0.758757, 0.382787, 7.297331, 0.763172, -0.048769, 0.897013, 0.468769, 4.706828, 1.651, 3.109532, 0.732392, 0.424547, 4.071712, 1.476821, 3.476944, 0.702114, 0.433163, 3.269817, 1.470659, 3.731945, 0.666525, 0.433866, 2.527572, 1.617311, 3.865444, 0.633505, 0.426088, 1.970894, 1.858505, 3.961782, 0.603876, 0.416587, 1.579543, 2.097941, 4.084996, 0.579658, 0.409945, 7.664182, 0.673132, -2.435867, 0.99244, 0.480777, 1.397041, -1.340139, 5.630378, 0.567192, 0.56942, 0.884838, 0.65874, 6.233232, 0.541366, 0.478899, 0.767097, -0.968035, 7.077932, 0.526564, 0.546118, 0.460213, -1.334106, 6.787447, 0.523913, 0.56383, 0.748618, -1.067994, 6.798303, 0.531529, 0.555057, 1.236408, -1.585568, 5.48049, 0.566036, 0.582329, 0.387306, -1.40999, 6.957705, 0.516311, 0.563054, 0.319925, -1.607931, 6.508676, 0.517472, 0.577877, 1.639633, 2.556298, 3.863736, 0.573595, 0.389807, 1.255645, 2.467144, 4.2038, 0.560698, 0.395332, 1.031362, 2.382663, 4.615849, 0.549756, 0.399751, 4.253081, 2.772296, 3.315305, 0.710288, 0.368253, 4.53, 2.91, 3.339685, 0.72333, 0.363373]));\nvar FACE_MESH_INDEX_BUFFER = [173, 155, 133, 246, 33, 7, 382, 398, 362, 263, 466, 249, 308, 415, 324, 78, 95, 191, 356, 389, 264, 127, 34, 162, 368, 264, 389, 139, 162, 34, 267, 0, 302, 37, 72, 0, 11, 302, 0, 11, 0, 72, 349, 451, 350, 120, 121, 231, 452, 350, 451, 232, 231, 121, 267, 302, 269, 37, 39, 72, 303, 269, 302, 73, 72, 39, 357, 343, 350, 128, 121, 114, 277, 350, 343, 47, 114, 121, 350, 452, 357, 121, 128, 232, 453, 357, 452, 233, 232, 128, 299, 333, 297, 69, 67, 104, 332, 297, 333, 103, 104, 67, 175, 152, 396, 175, 171, 152, 377, 396, 152, 148, 152, 171, 381, 384, 382, 154, 155, 157, 398, 382, 384, 173, 157, 155, 280, 347, 330, 50, 101, 118, 348, 330, 347, 119, 118, 101, 269, 303, 270, 39, 40, 73, 304, 270, 303, 74, 73, 40, 9, 336, 151, 9, 151, 107, 337, 151, 336, 108, 107, 151, 344, 278, 360, 115, 131, 48, 279, 360, 278, 49, 48, 131, 262, 431, 418, 32, 194, 211, 424, 418, 431, 204, 211, 194, 304, 408, 270, 74, 40, 184, 409, 270, 408, 185, 184, 40, 272, 310, 407, 42, 183, 80, 415, 407, 310, 191, 80, 183, 322, 270, 410, 92, 186, 40, 409, 410, 270, 185, 40, 186, 347, 449, 348, 118, 119, 229, 450, 348, 449, 230, 229, 119, 434, 432, 430, 214, 210, 212, 422, 430, 432, 202, 212, 210, 313, 314, 18, 83, 18, 84, 17, 18, 314, 17, 84, 18, 307, 375, 306, 77, 76, 146, 291, 306, 375, 61, 146, 76, 259, 387, 260, 29, 30, 160, 388, 260, 387, 161, 160, 30, 286, 414, 384, 56, 157, 190, 398, 384, 414, 173, 190, 157, 418, 424, 406, 194, 182, 204, 335, 406, 424, 106, 204, 182, 367, 416, 364, 138, 135, 192, 434, 364, 416, 214, 192, 135, 391, 423, 327, 165, 98, 203, 358, 327, 423, 129, 203, 98, 298, 301, 284, 68, 54, 71, 251, 284, 301, 21, 71, 54, 4, 275, 5, 4, 5, 45, 281, 5, 275, 51, 45, 5, 254, 373, 253, 24, 23, 144, 374, 253, 373, 145, 144, 23, 320, 321, 307, 90, 77, 91, 375, 307, 321, 146, 91, 77, 280, 425, 411, 50, 187, 205, 427, 411, 425, 207, 205, 187, 421, 313, 200, 201, 200, 83, 18, 200, 313, 18, 83, 200, 335, 321, 406, 106, 182, 91, 405, 406, 321, 181, 91, 182, 405, 321, 404, 181, 180, 91, 320, 404, 321, 90, 91, 180, 17, 314, 16, 17, 16, 84, 315, 16, 314, 85, 84, 16, 425, 266, 426, 205, 206, 36, 423, 426, 266, 203, 36, 206, 369, 396, 400, 140, 176, 171, 377, 400, 396, 148, 171, 176, 391, 269, 322, 165, 92, 39, 270, 322, 269, 40, 39, 92, 417, 465, 413, 193, 189, 245, 464, 413, 465, 244, 245, 189, 257, 258, 386, 27, 159, 28, 385, 386, 258, 158, 28, 159, 260, 388, 467, 30, 247, 161, 466, 467, 388, 246, 161, 247, 248, 456, 419, 3, 196, 236, 399, 419, 456, 174, 236, 196, 333, 298, 332, 104, 103, 68, 284, 332, 298, 54, 68, 103, 285, 8, 417, 55, 193, 8, 168, 417, 8, 168, 8, 193, 340, 261, 346, 111, 117, 31, 448, 346, 261, 228, 31, 117, 285, 417, 441, 55, 221, 193, 413, 441, 417, 189, 193, 221, 327, 460, 326, 98, 97, 240, 328, 326, 460, 99, 240, 97, 277, 355, 329, 47, 100, 126, 371, 329, 355, 142, 126, 100, 309, 392, 438, 79, 218, 166, 439, 438, 392, 219, 166, 218, 381, 382, 256, 154, 26, 155, 341, 256, 382, 112, 155, 26, 360, 279, 420, 131, 198, 49, 429, 420, 279, 209, 49, 198, 365, 364, 379, 136, 150, 135, 394, 379, 364, 169, 135, 150, 355, 277, 437, 126, 217, 47, 343, 437, 277, 114, 47, 217, 443, 444, 282, 223, 52, 224, 283, 282, 444, 53, 224, 52, 281, 275, 363, 51, 134, 45, 440, 363, 275, 220, 45, 134, 431, 262, 395, 211, 170, 32, 369, 395, 262, 140, 32, 170, 337, 299, 338, 108, 109, 69, 297, 338, 299, 67, 69, 109, 335, 273, 321, 106, 91, 43, 375, 321, 273, 146, 43, 91, 348, 450, 349, 119, 120, 230, 451, 349, 450, 231, 230, 120, 467, 359, 342, 247, 113, 130, 446, 342, 359, 226, 130, 113, 282, 283, 334, 52, 105, 53, 293, 334, 283, 63, 53, 105, 250, 458, 462, 20, 242, 238, 461, 462, 458, 241, 238, 242, 276, 353, 300, 46, 70, 124, 383, 300, 353, 156, 124, 70, 325, 292, 324, 96, 95, 62, 308, 324, 292, 78, 62, 95, 283, 276, 293, 53, 63, 46, 300, 293, 276, 70, 46, 63, 447, 264, 345, 227, 116, 34, 372, 345, 264, 143, 34, 116, 352, 345, 346, 123, 117, 116, 340, 346, 345, 111, 116, 117, 1, 19, 274, 1, 44, 19, 354, 274, 19, 125, 19, 44, 248, 281, 456, 3, 236, 51, 363, 456, 281, 134, 51, 236, 425, 426, 427, 205, 207, 206, 436, 427, 426, 216, 206, 207, 380, 381, 252, 153, 22, 154, 256, 252, 381, 26, 154, 22, 391, 393, 269, 165, 39, 167, 267, 269, 393, 37, 167, 39, 199, 428, 200, 199, 200, 208, 421, 200, 428, 201, 208, 200, 330, 329, 266, 101, 36, 100, 371, 266, 329, 142, 100, 36, 422, 432, 273, 202, 43, 212, 287, 273, 432, 57, 212, 43, 290, 250, 328, 60, 99, 20, 462, 328, 250, 242, 20, 99, 258, 286, 385, 28, 158, 56, 384, 385, 286, 157, 56, 158, 342, 446, 353, 113, 124, 226, 265, 353, 446, 35, 226, 124, 257, 386, 259, 27, 29, 159, 387, 259, 386, 160, 159, 29, 430, 422, 431, 210, 211, 202, 424, 431, 422, 204, 202, 211, 445, 342, 276, 225, 46, 113, 353, 276, 342, 124, 113, 46, 424, 422, 335, 204, 106, 202, 273, 335, 422, 43, 202, 106, 306, 292, 307, 76, 77, 62, 325, 307, 292, 96, 62, 77, 366, 447, 352, 137, 123, 227, 345, 352, 447, 116, 227, 123, 302, 268, 303, 72, 73, 38, 271, 303, 268, 41, 38, 73, 371, 358, 266, 142, 36, 129, 423, 266, 358, 203, 129, 36, 327, 294, 460, 98, 240, 64, 455, 460, 294, 235, 64, 240, 294, 331, 278, 64, 48, 102, 279, 278, 331, 49, 102, 48, 303, 271, 304, 73, 74, 41, 272, 304, 271, 42, 41, 74, 427, 436, 434, 207, 214, 216, 432, 434, 436, 212, 216, 214, 304, 272, 408, 74, 184, 42, 407, 408, 272, 183, 42, 184, 394, 430, 395, 169, 170, 210, 431, 395, 430, 211, 210, 170, 395, 369, 378, 170, 149, 140, 400, 378, 369, 176, 140, 149, 296, 334, 299, 66, 69, 105, 333, 299, 334, 104, 105, 69, 417, 168, 351, 193, 122, 168, 6, 351, 168, 6, 168, 122, 280, 411, 352, 50, 123, 187, 376, 352, 411, 147, 187, 123, 319, 320, 325, 89, 96, 90, 307, 325, 320, 77, 90, 96, 285, 295, 336, 55, 107, 65, 296, 336, 295, 66, 65, 107, 404, 320, 403, 180, 179, 90, 319, 403, 320, 89, 90, 179, 330, 348, 329, 101, 100, 119, 349, 329, 348, 120, 119, 100, 334, 293, 333, 105, 104, 63, 298, 333, 293, 68, 63, 104, 323, 454, 366, 93, 137, 234, 447, 366, 454, 227, 234, 137, 16, 315, 15, 16, 15, 85, 316, 15, 315, 86, 85, 15, 429, 279, 358, 209, 129, 49, 331, 358, 279, 102, 49, 129, 15, 316, 14, 15, 14, 86, 317, 14, 316, 87, 86, 14, 8, 285, 9, 8, 9, 55, 336, 9, 285, 107, 55, 9, 329, 349, 277, 100, 47, 120, 350, 277, 349, 121, 120, 47, 252, 253, 380, 22, 153, 23, 374, 380, 253, 145, 23, 153, 402, 403, 318, 178, 88, 179, 319, 318, 403, 89, 179, 88, 351, 6, 419, 122, 196, 6, 197, 419, 6, 197, 6, 196, 324, 318, 325, 95, 96, 88, 319, 325, 318, 89, 88, 96, 397, 367, 365, 172, 136, 138, 364, 365, 367, 135, 138, 136, 288, 435, 397, 58, 172, 215, 367, 397, 435, 138, 215, 172, 438, 439, 344, 218, 115, 219, 278, 344, 439, 48, 219, 115, 271, 311, 272, 41, 42, 81, 310, 272, 311, 80, 81, 42, 5, 281, 195, 5, 195, 51, 248, 195, 281, 3, 51, 195, 273, 287, 375, 43, 146, 57, 291, 375, 287, 61, 57, 146, 396, 428, 175, 171, 175, 208, 199, 175, 428, 199, 208, 175, 268, 312, 271, 38, 41, 82, 311, 271, 312, 81, 82, 41, 444, 445, 283, 224, 53, 225, 276, 283, 445, 46, 225, 53, 254, 339, 373, 24, 144, 110, 390, 373, 339, 163, 110, 144, 295, 282, 296, 65, 66, 52, 334, 296, 282, 105, 52, 66, 346, 448, 347, 117, 118, 228, 449, 347, 448, 229, 228, 118, 454, 356, 447, 234, 227, 127, 264, 447, 356, 34, 127, 227, 336, 296, 337, 107, 108, 66, 299, 337, 296, 69, 66, 108, 151, 337, 10, 151, 10, 108, 338, 10, 337, 109, 108, 10, 278, 439, 294, 48, 64, 219, 455, 294, 439, 235, 219, 64, 407, 415, 292, 183, 62, 191, 308, 292, 415, 78, 191, 62, 358, 371, 429, 129, 209, 142, 355, 429, 371, 126, 142, 209, 345, 372, 340, 116, 111, 143, 265, 340, 372, 35, 143, 111, 388, 390, 466, 161, 246, 163, 249, 466, 390, 7, 163, 246, 352, 346, 280, 123, 50, 117, 347, 280, 346, 118, 117, 50, 295, 442, 282, 65, 52, 222, 443, 282, 442, 223, 222, 52, 19, 94, 354, 19, 125, 94, 370, 354, 94, 141, 94, 125, 295, 285, 442, 65, 222, 55, 441, 442, 285, 221, 55, 222, 419, 197, 248, 196, 3, 197, 195, 248, 197, 195, 197, 3, 359, 263, 255, 130, 25, 33, 249, 255, 263, 7, 33, 25, 275, 274, 440, 45, 220, 44, 457, 440, 274, 237, 44, 220, 300, 383, 301, 70, 71, 156, 368, 301, 383, 139, 156, 71, 417, 351, 465, 193, 245, 122, 412, 465, 351, 188, 122, 245, 466, 263, 467, 246, 247, 33, 359, 467, 263, 130, 33, 247, 389, 251, 368, 162, 139, 21, 301, 368, 251, 71, 21, 139, 374, 386, 380, 145, 153, 159, 385, 380, 386, 158, 159, 153, 379, 394, 378, 150, 149, 169, 395, 378, 394, 170, 169, 149, 351, 419, 412, 122, 188, 196, 399, 412, 419, 174, 196, 188, 426, 322, 436, 206, 216, 92, 410, 436, 322, 186, 92, 216, 387, 373, 388, 160, 161, 144, 390, 388, 373, 163, 144, 161, 393, 326, 164, 167, 164, 97, 2, 164, 326, 2, 97, 164, 354, 370, 461, 125, 241, 141, 462, 461, 370, 242, 141, 241, 0, 267, 164, 0, 164, 37, 393, 164, 267, 167, 37, 164, 11, 12, 302, 11, 72, 12, 268, 302, 12, 38, 12, 72, 386, 374, 387, 159, 160, 145, 373, 387, 374, 144, 145, 160, 12, 13, 268, 12, 38, 13, 312, 268, 13, 82, 13, 38, 293, 300, 298, 63, 68, 70, 301, 298, 300, 71, 70, 68, 340, 265, 261, 111, 31, 35, 446, 261, 265, 226, 35, 31, 380, 385, 381, 153, 154, 158, 384, 381, 385, 157, 158, 154, 280, 330, 425, 50, 205, 101, 266, 425, 330, 36, 101, 205, 423, 391, 426, 203, 206, 165, 322, 426, 391, 92, 165, 206, 429, 355, 420, 209, 198, 126, 437, 420, 355, 217, 126, 198, 391, 327, 393, 165, 167, 98, 326, 393, 327, 97, 98, 167, 457, 438, 440, 237, 220, 218, 344, 440, 438, 115, 218, 220, 382, 362, 341, 155, 112, 133, 463, 341, 362, 243, 133, 112, 457, 461, 459, 237, 239, 241, 458, 459, 461, 238, 241, 239, 434, 430, 364, 214, 135, 210, 394, 364, 430, 169, 210, 135, 414, 463, 398, 190, 173, 243, 362, 398, 463, 133, 243, 173, 262, 428, 369, 32, 140, 208, 396, 369, 428, 171, 208, 140, 457, 274, 461, 237, 241, 44, 354, 461, 274, 125, 44, 241, 316, 403, 317, 86, 87, 179, 402, 317, 403, 178, 179, 87, 315, 404, 316, 85, 86, 180, 403, 316, 404, 179, 180, 86, 314, 405, 315, 84, 85, 181, 404, 315, 405, 180, 181, 85, 313, 406, 314, 83, 84, 182, 405, 314, 406, 181, 182, 84, 418, 406, 421, 194, 201, 182, 313, 421, 406, 83, 182, 201, 366, 401, 323, 137, 93, 177, 361, 323, 401, 132, 177, 93, 408, 407, 306, 184, 76, 183, 292, 306, 407, 62, 183, 76, 408, 306, 409, 184, 185, 76, 291, 409, 306, 61, 76, 185, 410, 409, 287, 186, 57, 185, 291, 287, 409, 61, 185, 57, 436, 410, 432, 216, 212, 186, 287, 432, 410, 57, 186, 212, 434, 416, 427, 214, 207, 192, 411, 427, 416, 187, 192, 207, 264, 368, 372, 34, 143, 139, 383, 372, 368, 156, 139, 143, 457, 459, 438, 237, 218, 239, 309, 438, 459, 79, 239, 218, 352, 376, 366, 123, 137, 147, 401, 366, 376, 177, 147, 137, 4, 1, 275, 4, 45, 1, 274, 275, 1, 44, 1, 45, 428, 262, 421, 208, 201, 32, 418, 421, 262, 194, 32, 201, 327, 358, 294, 98, 64, 129, 331, 294, 358, 102, 129, 64, 367, 435, 416, 138, 192, 215, 433, 416, 435, 213, 215, 192, 455, 439, 289, 235, 59, 219, 392, 289, 439, 166, 219, 59, 328, 462, 326, 99, 97, 242, 370, 326, 462, 141, 242, 97, 326, 370, 2, 97, 2, 141, 94, 2, 370, 94, 141, 2, 460, 455, 305, 240, 75, 235, 289, 305, 455, 59, 235, 75, 448, 339, 449, 228, 229, 110, 254, 449, 339, 24, 110, 229, 261, 446, 255, 31, 25, 226, 359, 255, 446, 130, 226, 25, 449, 254, 450, 229, 230, 24, 253, 450, 254, 23, 24, 230, 450, 253, 451, 230, 231, 23, 252, 451, 253, 22, 23, 231, 451, 252, 452, 231, 232, 22, 256, 452, 252, 26, 22, 232, 256, 341, 452, 26, 232, 112, 453, 452, 341, 233, 112, 232, 413, 464, 414, 189, 190, 244, 463, 414, 464, 243, 244, 190, 441, 413, 286, 221, 56, 189, 414, 286, 413, 190, 189, 56, 441, 286, 442, 221, 222, 56, 258, 442, 286, 28, 56, 222, 442, 258, 443, 222, 223, 28, 257, 443, 258, 27, 28, 223, 444, 443, 259, 224, 29, 223, 257, 259, 443, 27, 223, 29, 259, 260, 444, 29, 224, 30, 445, 444, 260, 225, 30, 224, 260, 467, 445, 30, 225, 247, 342, 445, 467, 113, 247, 225, 250, 309, 458, 20, 238, 79, 459, 458, 309, 239, 79, 238, 290, 305, 392, 60, 166, 75, 289, 392, 305, 59, 75, 166, 460, 305, 328, 240, 99, 75, 290, 328, 305, 60, 75, 99, 376, 433, 401, 147, 177, 213, 435, 401, 433, 215, 213, 177, 250, 290, 309, 20, 79, 60, 392, 309, 290, 166, 60, 79, 411, 416, 376, 187, 147, 192, 433, 376, 416, 213, 192, 147, 341, 463, 453, 112, 233, 243, 464, 453, 463, 244, 243, 233, 453, 464, 357, 233, 128, 244, 465, 357, 464, 245, 244, 128, 412, 343, 465, 188, 245, 114, 357, 465, 343, 128, 114, 245, 437, 343, 399, 217, 174, 114, 412, 399, 343, 188, 114, 174, 363, 440, 360, 134, 131, 220, 344, 360, 440, 115, 220, 131, 456, 420, 399, 236, 174, 198, 437, 399, 420, 217, 198, 174, 456, 363, 420, 236, 198, 134, 360, 420, 363, 131, 134, 198, 361, 401, 288, 132, 58, 177, 435, 288, 401, 215, 177, 58, 353, 265, 383, 124, 156, 35, 372, 383, 265, 143, 35, 156, 255, 249, 339, 25, 110, 7, 390, 339, 249, 163, 7, 110, 261, 255, 448, 31, 228, 25, 339, 448, 255, 110, 25, 228, 14, 317, 13, 14, 13, 87, 312, 13, 317, 82, 87, 13, 317, 402, 312, 87, 82, 178, 311, 312, 402, 81, 178, 82, 402, 318, 311, 178, 81, 88, 310, 311, 318, 80, 88, 81, 318, 324, 310, 88, 80, 95, 415, 310, 324, 191, 95, 80];\nvar FACE_MESH_UV = [[0.499976992607117, 0.652534008026123], [0.500025987625122, 0.547487020492554], [0.499974012374878, 0.602371990680695], [0.482113003730774, 0.471979022026062], [0.500150978565216, 0.527155995368958], [0.499909996986389, 0.498252987861633], [0.499523013830185, 0.40106201171875], [0.289712011814117, 0.380764007568359], [0.499954998493195, 0.312398016452789], [0.499987006187439, 0.269918978214264], [0.500023007392883, 0.107050001621246], [0.500023007392883, 0.666234016418457], [0.5000159740448, 0.679224014282227], [0.500023007392883, 0.692348003387451], [0.499976992607117, 0.695277988910675], [0.499976992607117, 0.70593398809433], [0.499976992607117, 0.719385027885437], [0.499976992607117, 0.737019002437592], [0.499967992305756, 0.781370997428894], [0.499816000461578, 0.562981009483337], [0.473773002624512, 0.573909997940063], [0.104906998574734, 0.254140973091125], [0.365929991006851, 0.409575998783112], [0.338757991790771, 0.41302502155304], [0.311120003461838, 0.409460008144379], [0.274657994508743, 0.389131009578705], [0.393361985683441, 0.403706014156342], [0.345234006643295, 0.344011008739471], [0.370094001293182, 0.346076011657715], [0.319321990013123, 0.347265005111694], [0.297903001308441, 0.353591024875641], [0.24779200553894, 0.410809993743896], [0.396889001131058, 0.842755019664764], [0.280097991228104, 0.375599980354309], [0.106310002505779, 0.399955987930298], [0.2099249958992, 0.391353011131287], [0.355807989835739, 0.534406006336212], [0.471751004457474, 0.65040397644043], [0.474155008792877, 0.680191993713379], [0.439785003662109, 0.657229006290436], [0.414617002010345, 0.66654098033905], [0.450374007225037, 0.680860996246338], [0.428770989179611, 0.682690978050232], [0.374971002340317, 0.727805018424988], [0.486716985702515, 0.547628998756409], [0.485300987958908, 0.527395009994507], [0.257764995098114, 0.314490020275116], [0.401223003864288, 0.455172002315521], [0.429818987846375, 0.548614978790283], [0.421351999044418, 0.533740997314453], [0.276895999908447, 0.532056987285614], [0.483370006084442, 0.499586999416351], [0.33721199631691, 0.282882988452911], [0.296391993761063, 0.293242990970612], [0.169294998049736, 0.193813979625702], [0.447580009698868, 0.302609980106354], [0.392390012741089, 0.353887975215912], [0.354490011930466, 0.696784019470215], [0.067304998636246, 0.730105042457581], [0.442739009857178, 0.572826027870178], [0.457098007202148, 0.584792017936707], [0.381974011659622, 0.694710969924927], [0.392388999462128, 0.694203019142151], [0.277076005935669, 0.271932005882263], [0.422551989555359, 0.563233017921448], [0.385919004678726, 0.281364023685455], [0.383103013038635, 0.255840003490448], [0.331431001424789, 0.119714021682739], [0.229923993349075, 0.232002973556519], [0.364500999450684, 0.189113974571228], [0.229622006416321, 0.299540996551514], [0.173287004232407, 0.278747975826263], [0.472878992557526, 0.666198015213013], [0.446828007698059, 0.668527007102966], [0.422762006521225, 0.673889994621277], [0.445307999849319, 0.580065965652466], [0.388103008270264, 0.693961024284363], [0.403039008378983, 0.706539988517761], [0.403629004955292, 0.693953037261963], [0.460041999816895, 0.557139039039612], [0.431158006191254, 0.692366003990173], [0.452181994915009, 0.692366003990173], [0.475387006998062, 0.692366003990173], [0.465828001499176, 0.779190003871918], [0.472328990697861, 0.736225962638855], [0.473087012767792, 0.717857003211975], [0.473122000694275, 0.704625964164734], [0.473033010959625, 0.695277988910675], [0.427942007780075, 0.695277988910675], [0.426479011774063, 0.703539967536926], [0.423162013292313, 0.711845993995667], [0.4183090031147, 0.720062971115112], [0.390094995498657, 0.639572978019714], [0.013953999616206, 0.560034036636353], [0.499913990497589, 0.58014702796936], [0.413199990987778, 0.69539999961853], [0.409626007080078, 0.701822996139526], [0.468080013990402, 0.601534962654114], [0.422728985548019, 0.585985004901886], [0.463079988956451, 0.593783974647522], [0.37211999297142, 0.47341400384903], [0.334562003612518, 0.496073007583618], [0.411671012639999, 0.546965003013611], [0.242175996303558, 0.14767599105835], [0.290776997804642, 0.201445996761322], [0.327338010072708, 0.256527006626129], [0.399509996175766, 0.748921036720276], [0.441727995872498, 0.261676013469696], [0.429764986038208, 0.187834024429321], [0.412198007106781, 0.108901023864746], [0.288955003023148, 0.398952007293701], [0.218936994671822, 0.435410976409912], [0.41278201341629, 0.398970007896423], [0.257135003805161, 0.355440020561218], [0.427684992551804, 0.437960982322693], [0.448339998722076, 0.536936044692993], [0.178560003638268, 0.45755398273468], [0.247308000922203, 0.457193970680237], [0.286267012357712, 0.467674970626831], [0.332827985286713, 0.460712015628815], [0.368755996227264, 0.447206974029541], [0.398963987827301, 0.432654976844788], [0.476410001516342, 0.405806005001068], [0.189241006970406, 0.523923993110657], [0.228962004184723, 0.348950982093811], [0.490725994110107, 0.562400996685028], [0.404670000076294, 0.485132992267609], [0.019469000399113, 0.401564002037048], [0.426243007183075, 0.420431017875671], [0.396993011236191, 0.548797011375427], [0.266469985246658, 0.376977026462555], [0.439121007919312, 0.51895797252655], [0.032313998788595, 0.644356966018677], [0.419054001569748, 0.387154996395111], [0.462783008813858, 0.505746960639954], [0.238978996872902, 0.779744982719421], [0.198220998048782, 0.831938028335571], [0.107550002634525, 0.540755033493042], [0.183610007166862, 0.740257024765015], [0.134409993886948, 0.333683013916016], [0.385764002799988, 0.883153975009918], [0.490967005491257, 0.579378008842468], [0.382384985685349, 0.508572995662689], [0.174399003386497, 0.397670984268188], [0.318785011768341, 0.39623498916626], [0.343364000320435, 0.400596976280212], [0.396100014448166, 0.710216999053955], [0.187885001301765, 0.588537991046906], [0.430987000465393, 0.944064974784851], [0.318993002176285, 0.898285031318665], [0.266247987747192, 0.869701027870178], [0.500023007392883, 0.190576016902924], [0.499976992607117, 0.954452991485596], [0.366169989109039, 0.398822009563446], [0.393207013607025, 0.39553701877594], [0.410373002290726, 0.391080021858215], [0.194993004202843, 0.342101991176605], [0.388664990663528, 0.362284004688263], [0.365961998701096, 0.355970978736877], [0.343364000320435, 0.355356991291046], [0.318785011768341, 0.35834002494812], [0.301414996385574, 0.363156020641327], [0.058132998645306, 0.319076001644135], [0.301414996385574, 0.387449026107788], [0.499987989664078, 0.618434011936188], [0.415838003158569, 0.624195992946625], [0.445681989192963, 0.566076993942261], [0.465844005346298, 0.620640993118286], [0.49992299079895, 0.351523995399475], [0.288718998432159, 0.819945991039276], [0.335278987884521, 0.852819979190826], [0.440512001514435, 0.902418971061707], [0.128294005990028, 0.791940987110138], [0.408771991729736, 0.373893976211548], [0.455606997013092, 0.451801002025604], [0.499877005815506, 0.908990025520325], [0.375436991453171, 0.924192011356354], [0.11421000212431, 0.615022003650665], [0.448662012815475, 0.695277988910675], [0.4480200111866, 0.704632043838501], [0.447111994028091, 0.715808033943176], [0.444831997156143, 0.730794012546539], [0.430011987686157, 0.766808986663818], [0.406787008047104, 0.685672998428345], [0.400738000869751, 0.681069016456604], [0.392399996519089, 0.677703022956848], [0.367855995893478, 0.663918972015381], [0.247923001646996, 0.601333022117615], [0.452769994735718, 0.420849978923798], [0.43639200925827, 0.359887003898621], [0.416164010763168, 0.368713974952698], [0.413385987281799, 0.692366003990173], [0.228018000721931, 0.683571994304657], [0.468268007040024, 0.352671027183533], [0.411361992359161, 0.804327011108398], [0.499989002943039, 0.469825029373169], [0.479153990745544, 0.442654013633728], [0.499974012374878, 0.439637005329132], [0.432112008333206, 0.493588984012604], [0.499886006116867, 0.866917014122009], [0.49991300702095, 0.821729004383087], [0.456548988819122, 0.819200992584229], [0.344549000263214, 0.745438992977142], [0.37890899181366, 0.574010014533997], [0.374292999505997, 0.780184984207153], [0.319687992334366, 0.570737957954407], [0.357154995203018, 0.604269981384277], [0.295284003019333, 0.621580958366394], [0.447750002145767, 0.862477004528046], [0.410986006259918, 0.508723020553589], [0.31395098567009, 0.775308012962341], [0.354128003120422, 0.812552988529205], [0.324548006057739, 0.703992962837219], [0.189096003770828, 0.646299958229065], [0.279776990413666, 0.71465802192688], [0.1338230073452, 0.682700991630554], [0.336768001317978, 0.644733011722565], [0.429883986711502, 0.466521978378296], [0.455527991056442, 0.548622965812683], [0.437114000320435, 0.558896005153656], [0.467287987470627, 0.529924988746643], [0.414712011814117, 0.335219979286194], [0.37704598903656, 0.322777986526489], [0.344107985496521, 0.320150971412659], [0.312875986099243, 0.32233202457428], [0.283526003360748, 0.333190023899078], [0.241245999932289, 0.382785975933075], [0.102986000478268, 0.468762993812561], [0.267612010240555, 0.424560010433197], [0.297879010438919, 0.433175981044769], [0.333433985710144, 0.433878004550934], [0.366427004337311, 0.426115989685059], [0.396012008190155, 0.416696012020111], [0.420121014118195, 0.41022801399231], [0.007561000064015, 0.480777025222778], [0.432949006557465, 0.569517970085144], [0.458638995885849, 0.479089021682739], [0.473466008901596, 0.545744001865387], [0.476087987422943, 0.563830018043518], [0.468472003936768, 0.555056989192963], [0.433990985155106, 0.582361996173859], [0.483518004417419, 0.562983989715576], [0.482482999563217, 0.57784903049469], [0.42645001411438, 0.389798998832703], [0.438998997211456, 0.39649498462677], [0.450067013502121, 0.400434017181396], [0.289712011814117, 0.368252992630005], [0.276670008897781, 0.363372981548309], [0.517862021923065, 0.471948027610779], [0.710287988185883, 0.380764007568359], [0.526226997375488, 0.573909997940063], [0.895093023777008, 0.254140973091125], [0.634069979190826, 0.409575998783112], [0.661242008209229, 0.41302502155304], [0.688880026340485, 0.409460008144379], [0.725341975688934, 0.389131009578705], [0.606630027294159, 0.40370500087738], [0.654766023159027, 0.344011008739471], [0.629905998706818, 0.346076011657715], [0.680678009986877, 0.347265005111694], [0.702096998691559, 0.353591024875641], [0.75221198797226, 0.410804986953735], [0.602918028831482, 0.842862963676453], [0.719901978969574, 0.375599980354309], [0.893692970275879, 0.399959981441498], [0.790081977844238, 0.391354024410248], [0.643998026847839, 0.534487962722778], [0.528249025344849, 0.65040397644043], [0.525849997997284, 0.680191040039062], [0.560214996337891, 0.657229006290436], [0.585384011268616, 0.66654098033905], [0.549625992774963, 0.680860996246338], [0.57122802734375, 0.682691991329193], [0.624852001667023, 0.72809898853302], [0.513050019741058, 0.547281980514526], [0.51509702205658, 0.527251958847046], [0.742246985435486, 0.314507007598877], [0.598631024360657, 0.454979002475739], [0.570338010787964, 0.548575043678284], [0.578631997108459, 0.533622980117798], [0.723087012767792, 0.532054007053375], [0.516445994377136, 0.499638974666595], [0.662801027297974, 0.282917976379395], [0.70362401008606, 0.293271005153656], [0.830704987049103, 0.193813979625702], [0.552385985851288, 0.302568018436432], [0.607609987258911, 0.353887975215912], [0.645429015159607, 0.696707010269165], [0.932694971561432, 0.730105042457581], [0.557260990142822, 0.572826027870178], [0.542901992797852, 0.584792017936707], [0.6180260181427, 0.694710969924927], [0.607590973377228, 0.694203019142151], [0.722943007946014, 0.271963000297546], [0.577413976192474, 0.563166975975037], [0.614082992076874, 0.281386971473694], [0.616907000541687, 0.255886018276215], [0.668509006500244, 0.119913995265961], [0.770092010498047, 0.232020974159241], [0.635536015033722, 0.189248979091644], [0.77039098739624, 0.299556016921997], [0.826722025871277, 0.278755009174347], [0.527121007442474, 0.666198015213013], [0.553171992301941, 0.668527007102966], [0.577238023281097, 0.673889994621277], [0.554691970348358, 0.580065965652466], [0.611896991729736, 0.693961024284363], [0.59696102142334, 0.706539988517761], [0.596370995044708, 0.693953037261963], [0.539958000183105, 0.557139039039612], [0.568841993808746, 0.692366003990173], [0.547818005084991, 0.692366003990173], [0.52461302280426, 0.692366003990173], [0.534089982509613, 0.779141008853912], [0.527670979499817, 0.736225962638855], [0.526912987232208, 0.717857003211975], [0.526877999305725, 0.704625964164734], [0.526966989040375, 0.695277988910675], [0.572058022022247, 0.695277988910675], [0.573521018028259, 0.703539967536926], [0.57683801651001, 0.711845993995667], [0.581691026687622, 0.720062971115112], [0.609944999217987, 0.639909982681274], [0.986046016216278, 0.560034036636353], [0.5867999792099, 0.69539999961853], [0.590372025966644, 0.701822996139526], [0.531915009021759, 0.601536989212036], [0.577268004417419, 0.585934996604919], [0.536915004253387, 0.593786001205444], [0.627542972564697, 0.473352015018463], [0.665585994720459, 0.495950996875763], [0.588353991508484, 0.546862006187439], [0.757824003696442, 0.14767599105835], [0.709249973297119, 0.201507985591888], [0.672684013843536, 0.256581008434296], [0.600408971309662, 0.74900496006012], [0.55826598405838, 0.261672019958496], [0.570303976535797, 0.187870979309082], [0.588165998458862, 0.109044015407562], [0.711045026779175, 0.398952007293701], [0.781069993972778, 0.435405015945435], [0.587247014045715, 0.398931980133057], [0.742869973182678, 0.355445981025696], [0.572156012058258, 0.437651991844177], [0.55186802148819, 0.536570012569427], [0.821442008018494, 0.457556009292603], [0.752701997756958, 0.457181990146637], [0.71375697851181, 0.467626988887787], [0.66711300611496, 0.460672974586487], [0.631101012229919, 0.447153985500336], [0.6008620262146, 0.432473003864288], [0.523481011390686, 0.405627012252808], [0.810747981071472, 0.523926019668579], [0.771045982837677, 0.348959028720856], [0.509127020835876, 0.562718033790588], [0.595292985439301, 0.485023975372314], [0.980530977249146, 0.401564002037048], [0.573499977588654, 0.420000016689301], [0.602994978427887, 0.548687994480133], [0.733529984951019, 0.376977026462555], [0.560611009597778, 0.519016981124878], [0.967685997486115, 0.644356966018677], [0.580985009670258, 0.387160003185272], [0.537728011608124, 0.505385041236877], [0.760966002941132, 0.779752969741821], [0.801778972148895, 0.831938028335571], [0.892440974712372, 0.54076099395752], [0.816350996494293, 0.740260004997253], [0.865594983100891, 0.333687007427216], [0.614073991775513, 0.883246004581451], [0.508952975273132, 0.579437971115112], [0.617941975593567, 0.508316040039062], [0.825608015060425, 0.397674977779388], [0.681214988231659, 0.39623498916626], [0.656635999679565, 0.400596976280212], [0.603900015354156, 0.710216999053955], [0.81208598613739, 0.588539004325867], [0.56801301240921, 0.944564998149872], [0.681007981300354, 0.898285031318665], [0.733752012252808, 0.869701027870178], [0.633830010890961, 0.398822009563446], [0.606792986392975, 0.39553701877594], [0.589659988880157, 0.391062021255493], [0.805015981197357, 0.342108011245728], [0.611334979534149, 0.362284004688263], [0.634037971496582, 0.355970978736877], [0.656635999679565, 0.355356991291046], [0.681214988231659, 0.35834002494812], [0.698584973812103, 0.363156020641327], [0.941866993904114, 0.319076001644135], [0.698584973812103, 0.387449026107788], [0.584177017211914, 0.624107003211975], [0.554318010807037, 0.566076993942261], [0.534153997898102, 0.62064003944397], [0.711217999458313, 0.819975018501282], [0.664629995822906, 0.852871000766754], [0.559099972248077, 0.902631998062134], [0.871706008911133, 0.791940987110138], [0.591234028339386, 0.373893976211548], [0.544341027736664, 0.451583981513977], [0.624562978744507, 0.924192011356354], [0.88577002286911, 0.615028977394104], [0.551338016986847, 0.695277988910675], [0.551980018615723, 0.704632043838501], [0.552887976169586, 0.715808033943176], [0.555167973041534, 0.730794012546539], [0.569944024085999, 0.767035007476807], [0.593203008174896, 0.685675978660583], [0.599261999130249, 0.681069016456604], [0.607599973678589, 0.677703022956848], [0.631937980651855, 0.663500010967255], [0.752032995223999, 0.601315021514893], [0.547226011753082, 0.420395016670227], [0.563543975353241, 0.359827995300293], [0.583841025829315, 0.368713974952698], [0.586614012718201, 0.692366003990173], [0.771915018558502, 0.683578014373779], [0.531597018241882, 0.352482974529266], [0.588370978832245, 0.804440975189209], [0.52079701423645, 0.442565023899078], [0.567984998226166, 0.493479013442993], [0.543282985687256, 0.819254994392395], [0.655317008495331, 0.745514988899231], [0.621008992195129, 0.574018001556396], [0.625559985637665, 0.78031200170517], [0.680198013782501, 0.570719003677368], [0.64276397228241, 0.604337990283966], [0.704662978649139, 0.621529996395111], [0.552012026309967, 0.862591981887817], [0.589071989059448, 0.508637011051178], [0.685944974422455, 0.775357007980347], [0.645735025405884, 0.812640011310577], [0.675342977046967, 0.703978002071381], [0.810858011245728, 0.646304965019226], [0.72012197971344, 0.714666962623596], [0.866151988506317, 0.682704985141754], [0.663187026977539, 0.644596993923187], [0.570082008838654, 0.466325998306274], [0.544561982154846, 0.548375964164734], [0.562758982181549, 0.558784961700439], [0.531987011432648, 0.530140042304993], [0.585271000862122, 0.335177004337311], [0.622952997684479, 0.32277899980545], [0.655896008014679, 0.320163011550903], [0.687132000923157, 0.322345972061157], [0.716481983661652, 0.333200991153717], [0.758756995201111, 0.382786989212036], [0.897013008594513, 0.468769013881683], [0.732392013072968, 0.424547016620636], [0.70211398601532, 0.433162987232208], [0.66652500629425, 0.433866024017334], [0.633504986763, 0.426087975502014], [0.603875994682312, 0.416586995124817], [0.579657971858978, 0.409945011138916], [0.992439985275269, 0.480777025222778], [0.567192018032074, 0.569419980049133], [0.54136598110199, 0.478899002075195], [0.526564002037048, 0.546118021011353], [0.523913025856018, 0.563830018043518], [0.531529009342194, 0.555056989192963], [0.566035985946655, 0.582329034805298], [0.51631098985672, 0.563053965568542], [0.5174720287323, 0.577877044677734], [0.573594987392426, 0.389806985855103], [0.560697972774506, 0.395331978797913], [0.549755990505219, 0.399751007556915], [0.710287988185883, 0.368252992630005], [0.723330020904541, 0.363372981548309]]; // const FACE_MESH_INDICES = [\n//   127,\n//   34,\n//   139,\n//   11,\n//   0,\n//   37,\n//   232,\n//   231,\n//   120,\n//   72,\n//   37,\n//   39,\n//   128,\n//   121,\n//   47,\n//   232,\n//   121,\n//   128,\n//   104,\n//   69,\n//   67,\n//   175,\n//   171,\n//   148,\n//   157,\n//   154,\n//   155,\n//   118,\n//   50,\n//   101,\n//   73,\n//   39,\n//   40,\n//   9,\n//   151,\n//   108,\n//   48,\n//   115,\n//   131,\n//   194,\n//   204,\n//   211,\n//   74,\n//   40,\n//   185,\n//   80,\n//   42,\n//   183,\n//   40,\n//   92,\n//   186,\n//   230,\n//   229,\n//   118,\n//   202,\n//   212,\n//   214,\n//   83,\n//   18,\n//   17,\n//   76,\n//   61,\n//   146,\n//   160,\n//   29,\n//   30,\n//   56,\n//   157,\n//   173,\n//   106,\n//   204,\n//   194,\n//   135,\n//   214,\n//   192,\n//   203,\n//   165,\n//   98,\n//   21,\n//   71,\n//   68,\n//   51,\n//   45,\n//   4,\n//   144,\n//   24,\n//   23,\n//   77,\n//   146,\n//   91,\n//   205,\n//   50,\n//   187,\n//   201,\n//   200,\n//   18,\n//   91,\n//   106,\n//   182,\n//   90,\n//   91,\n//   181,\n//   85,\n//   84,\n//   17,\n//   206,\n//   203,\n//   36,\n//   148,\n//   171,\n//   140,\n//   92,\n//   40,\n//   39,\n//   193,\n//   189,\n//   244,\n//   159,\n//   158,\n//   28,\n//   247,\n//   246,\n//   161,\n//   236,\n//   3,\n//   196,\n//   54,\n//   68,\n//   104,\n//   193,\n//   168,\n//   8,\n//   117,\n//   228,\n//   31,\n//   189,\n//   193,\n//   55,\n//   98,\n//   97,\n//   99,\n//   126,\n//   47,\n//   100,\n//   166,\n//   79,\n//   218,\n//   155,\n//   154,\n//   26,\n//   209,\n//   49,\n//   131,\n//   135,\n//   136,\n//   150,\n//   47,\n//   126,\n//   217,\n//   223,\n//   52,\n//   53,\n//   45,\n//   51,\n//   134,\n//   211,\n//   170,\n//   140,\n//   67,\n//   69,\n//   108,\n//   43,\n//   106,\n//   91,\n//   230,\n//   119,\n//   120,\n//   226,\n//   130,\n//   247,\n//   63,\n//   53,\n//   52,\n//   238,\n//   20,\n//   242,\n//   46,\n//   70,\n//   156,\n//   78,\n//   62,\n//   96,\n//   46,\n//   53,\n//   63,\n//   143,\n//   34,\n//   227,\n//   173,\n//   155,\n//   133,\n//   123,\n//   117,\n//   111,\n//   44,\n//   125,\n//   19,\n//   236,\n//   134,\n//   51,\n//   216,\n//   206,\n//   205,\n//   154,\n//   153,\n//   22,\n//   39,\n//   37,\n//   167,\n//   200,\n//   201,\n//   208,\n//   36,\n//   142,\n//   100,\n//   57,\n//   212,\n//   202,\n//   20,\n//   60,\n//   99,\n//   28,\n//   158,\n//   157,\n//   35,\n//   226,\n//   113,\n//   160,\n//   159,\n//   27,\n//   204,\n//   202,\n//   210,\n//   113,\n//   225,\n//   46,\n//   43,\n//   202,\n//   204,\n//   62,\n//   76,\n//   77,\n//   137,\n//   123,\n//   116,\n//   41,\n//   38,\n//   72,\n//   203,\n//   129,\n//   142,\n//   64,\n//   98,\n//   240,\n//   49,\n//   102,\n//   64,\n//   41,\n//   73,\n//   74,\n//   212,\n//   216,\n//   207,\n//   42,\n//   74,\n//   184,\n//   169,\n//   170,\n//   211,\n//   170,\n//   149,\n//   176,\n//   105,\n//   66,\n//   69,\n//   122,\n//   6,\n//   168,\n//   123,\n//   147,\n//   187,\n//   96,\n//   77,\n//   90,\n//   65,\n//   55,\n//   107,\n//   89,\n//   90,\n//   180,\n//   101,\n//   100,\n//   120,\n//   63,\n//   105,\n//   104,\n//   93,\n//   137,\n//   227,\n//   15,\n//   86,\n//   85,\n//   129,\n//   102,\n//   49,\n//   14,\n//   87,\n//   86,\n//   55,\n//   8,\n//   9,\n//   100,\n//   47,\n//   121,\n//   145,\n//   23,\n//   22,\n//   88,\n//   89,\n//   179,\n//   6,\n//   122,\n//   196,\n//   88,\n//   95,\n//   96,\n//   138,\n//   172,\n//   136,\n//   215,\n//   58,\n//   172,\n//   115,\n//   48,\n//   219,\n//   42,\n//   80,\n//   81,\n//   195,\n//   3,\n//   51,\n//   43,\n//   146,\n//   61,\n//   171,\n//   175,\n//   199,\n//   81,\n//   82,\n//   38,\n//   53,\n//   46,\n//   225,\n//   144,\n//   163,\n//   110,\n//   246,\n//   33,\n//   7,\n//   52,\n//   65,\n//   66,\n//   229,\n//   228,\n//   117,\n//   34,\n//   127,\n//   234,\n//   107,\n//   108,\n//   69,\n//   109,\n//   108,\n//   151,\n//   48,\n//   64,\n//   235,\n//   62,\n//   78,\n//   191,\n//   129,\n//   209,\n//   126,\n//   111,\n//   35,\n//   143,\n//   163,\n//   161,\n//   246,\n//   117,\n//   123,\n//   50,\n//   222,\n//   65,\n//   52,\n//   19,\n//   125,\n//   141,\n//   221,\n//   55,\n//   65,\n//   3,\n//   195,\n//   197,\n//   25,\n//   7,\n//   33,\n//   220,\n//   237,\n//   44,\n//   70,\n//   71,\n//   139,\n//   122,\n//   193,\n//   245,\n//   247,\n//   130,\n//   33,\n//   71,\n//   21,\n//   162,\n//   153,\n//   158,\n//   159,\n//   170,\n//   169,\n//   150,\n//   188,\n//   174,\n//   196,\n//   216,\n//   186,\n//   92,\n//   144,\n//   160,\n//   161,\n//   2,\n//   97,\n//   167,\n//   141,\n//   125,\n//   241,\n//   164,\n//   167,\n//   37,\n//   72,\n//   38,\n//   12,\n//   145,\n//   159,\n//   160,\n//   38,\n//   82,\n//   13,\n//   63,\n//   68,\n//   71,\n//   226,\n//   35,\n//   111,\n//   158,\n//   153,\n//   154,\n//   101,\n//   50,\n//   205,\n//   206,\n//   92,\n//   165,\n//   209,\n//   198,\n//   217,\n//   165,\n//   167,\n//   97,\n//   220,\n//   115,\n//   218,\n//   133,\n//   112,\n//   243,\n//   239,\n//   238,\n//   241,\n//   214,\n//   135,\n//   169,\n//   190,\n//   173,\n//   133,\n//   171,\n//   208,\n//   32,\n//   125,\n//   44,\n//   237,\n//   86,\n//   87,\n//   178,\n//   85,\n//   86,\n//   179,\n//   84,\n//   85,\n//   180,\n//   83,\n//   84,\n//   181,\n//   201,\n//   83,\n//   182,\n//   137,\n//   93,\n//   132,\n//   76,\n//   62,\n//   183,\n//   61,\n//   76,\n//   184,\n//   57,\n//   61,\n//   185,\n//   212,\n//   57,\n//   186,\n//   214,\n//   207,\n//   187,\n//   34,\n//   143,\n//   156,\n//   79,\n//   239,\n//   237,\n//   123,\n//   137,\n//   177,\n//   44,\n//   1,\n//   4,\n//   201,\n//   194,\n//   32,\n//   64,\n//   102,\n//   129,\n//   213,\n//   215,\n//   138,\n//   59,\n//   166,\n//   219,\n//   242,\n//   99,\n//   97,\n//   2,\n//   94,\n//   141,\n//   75,\n//   59,\n//   235,\n//   24,\n//   110,\n//   228,\n//   25,\n//   130,\n//   226,\n//   23,\n//   24,\n//   229,\n//   22,\n//   23,\n//   230,\n//   26,\n//   22,\n//   231,\n//   112,\n//   26,\n//   232,\n//   189,\n//   190,\n//   243,\n//   221,\n//   56,\n//   190,\n//   28,\n//   56,\n//   221,\n//   27,\n//   28,\n//   222,\n//   29,\n//   27,\n//   223,\n//   30,\n//   29,\n//   224,\n//   247,\n//   30,\n//   225,\n//   238,\n//   79,\n//   20,\n//   166,\n//   59,\n//   75,\n//   60,\n//   75,\n//   240,\n//   147,\n//   177,\n//   215,\n//   20,\n//   79,\n//   166,\n//   187,\n//   147,\n//   213,\n//   112,\n//   233,\n//   244,\n//   233,\n//   128,\n//   245,\n//   128,\n//   114,\n//   188,\n//   114,\n//   217,\n//   174,\n//   131,\n//   115,\n//   220,\n//   217,\n//   198,\n//   236,\n//   198,\n//   131,\n//   134,\n//   177,\n//   132,\n//   58,\n//   143,\n//   35,\n//   124,\n//   110,\n//   163,\n//   7,\n//   228,\n//   110,\n//   25,\n//   356,\n//   389,\n//   368,\n//   11,\n//   302,\n//   267,\n//   452,\n//   350,\n//   349,\n//   302,\n//   303,\n//   269,\n//   357,\n//   343,\n//   277,\n//   452,\n//   453,\n//   357,\n//   333,\n//   332,\n//   297,\n//   175,\n//   152,\n//   377,\n//   384,\n//   398,\n//   382,\n//   347,\n//   348,\n//   330,\n//   303,\n//   304,\n//   270,\n//   9,\n//   336,\n//   337,\n//   278,\n//   279,\n//   360,\n//   418,\n//   262,\n//   431,\n//   304,\n//   408,\n//   409,\n//   310,\n//   415,\n//   407,\n//   270,\n//   409,\n//   410,\n//   450,\n//   348,\n//   347,\n//   422,\n//   430,\n//   434,\n//   313,\n//   314,\n//   17,\n//   306,\n//   307,\n//   375,\n//   387,\n//   388,\n//   260,\n//   286,\n//   414,\n//   398,\n//   335,\n//   406,\n//   418,\n//   364,\n//   367,\n//   416,\n//   423,\n//   358,\n//   327,\n//   251,\n//   284,\n//   298,\n//   281,\n//   5,\n//   4,\n//   373,\n//   374,\n//   253,\n//   307,\n//   320,\n//   321,\n//   425,\n//   427,\n//   411,\n//   421,\n//   313,\n//   18,\n//   321,\n//   405,\n//   406,\n//   320,\n//   404,\n//   405,\n//   315,\n//   16,\n//   17,\n//   426,\n//   425,\n//   266,\n//   377,\n//   400,\n//   369,\n//   322,\n//   391,\n//   269,\n//   417,\n//   465,\n//   464,\n//   386,\n//   257,\n//   258,\n//   466,\n//   260,\n//   388,\n//   456,\n//   399,\n//   419,\n//   284,\n//   332,\n//   333,\n//   417,\n//   285,\n//   8,\n//   346,\n//   340,\n//   261,\n//   413,\n//   441,\n//   285,\n//   327,\n//   460,\n//   328,\n//   355,\n//   371,\n//   329,\n//   392,\n//   439,\n//   438,\n//   382,\n//   341,\n//   256,\n//   429,\n//   420,\n//   360,\n//   364,\n//   394,\n//   379,\n//   277,\n//   343,\n//   437,\n//   443,\n//   444,\n//   283,\n//   275,\n//   440,\n//   363,\n//   431,\n//   262,\n//   369,\n//   297,\n//   338,\n//   337,\n//   273,\n//   375,\n//   321,\n//   450,\n//   451,\n//   349,\n//   446,\n//   342,\n//   467,\n//   293,\n//   334,\n//   282,\n//   458,\n//   461,\n//   462,\n//   276,\n//   353,\n//   383,\n//   308,\n//   324,\n//   325,\n//   276,\n//   300,\n//   293,\n//   372,\n//   345,\n//   447,\n//   382,\n//   398,\n//   362,\n//   352,\n//   345,\n//   340,\n//   274,\n//   1,\n//   19,\n//   456,\n//   248,\n//   281,\n//   436,\n//   427,\n//   425,\n//   381,\n//   256,\n//   252,\n//   269,\n//   391,\n//   393,\n//   200,\n//   199,\n//   428,\n//   266,\n//   330,\n//   329,\n//   287,\n//   273,\n//   422,\n//   250,\n//   462,\n//   328,\n//   258,\n//   286,\n//   384,\n//   265,\n//   353,\n//   342,\n//   387,\n//   259,\n//   257,\n//   424,\n//   431,\n//   430,\n//   342,\n//   353,\n//   276,\n//   273,\n//   335,\n//   424,\n//   292,\n//   325,\n//   307,\n//   366,\n//   447,\n//   345,\n//   271,\n//   303,\n//   302,\n//   423,\n//   266,\n//   371,\n//   294,\n//   455,\n//   460,\n//   279,\n//   278,\n//   294,\n//   271,\n//   272,\n//   304,\n//   432,\n//   434,\n//   427,\n//   272,\n//   407,\n//   408,\n//   394,\n//   430,\n//   431,\n//   395,\n//   369,\n//   400,\n//   334,\n//   333,\n//   299,\n//   351,\n//   417,\n//   168,\n//   352,\n//   280,\n//   411,\n//   325,\n//   319,\n//   320,\n//   295,\n//   296,\n//   336,\n//   319,\n//   403,\n//   404,\n//   330,\n//   348,\n//   349,\n//   293,\n//   298,\n//   333,\n//   323,\n//   454,\n//   447,\n//   15,\n//   16,\n//   315,\n//   358,\n//   429,\n//   279,\n//   14,\n//   15,\n//   316,\n//   285,\n//   336,\n//   9,\n//   329,\n//   349,\n//   350,\n//   374,\n//   380,\n//   252,\n//   318,\n//   402,\n//   403,\n//   6,\n//   197,\n//   419,\n//   318,\n//   319,\n//   325,\n//   367,\n//   364,\n//   365,\n//   435,\n//   367,\n//   397,\n//   344,\n//   438,\n//   439,\n//   272,\n//   271,\n//   311,\n//   195,\n//   5,\n//   281,\n//   273,\n//   287,\n//   291,\n//   396,\n//   428,\n//   199,\n//   311,\n//   271,\n//   268,\n//   283,\n//   444,\n//   445,\n//   373,\n//   254,\n//   339,\n//   263,\n//   466,\n//   249,\n//   282,\n//   334,\n//   296,\n//   449,\n//   347,\n//   346,\n//   264,\n//   447,\n//   454,\n//   336,\n//   296,\n//   299,\n//   338,\n//   10,\n//   151,\n//   278,\n//   439,\n//   455,\n//   292,\n//   407,\n//   415,\n//   358,\n//   371,\n//   355,\n//   340,\n//   345,\n//   372,\n//   390,\n//   249,\n//   466,\n//   346,\n//   347,\n//   280,\n//   442,\n//   443,\n//   282,\n//   19,\n//   94,\n//   370,\n//   441,\n//   442,\n//   295,\n//   248,\n//   419,\n//   197,\n//   263,\n//   255,\n//   359,\n//   440,\n//   275,\n//   274,\n//   300,\n//   383,\n//   368,\n//   351,\n//   412,\n//   465,\n//   263,\n//   467,\n//   466,\n//   301,\n//   368,\n//   389,\n//   380,\n//   374,\n//   386,\n//   395,\n//   378,\n//   379,\n//   412,\n//   351,\n//   419,\n//   436,\n//   426,\n//   322,\n//   373,\n//   390,\n//   388,\n//   2,\n//   164,\n//   393,\n//   370,\n//   462,\n//   461,\n//   164,\n//   0,\n//   267,\n//   302,\n//   11,\n//   12,\n//   374,\n//   373,\n//   387,\n//   268,\n//   12,\n//   13,\n//   293,\n//   300,\n//   301,\n//   446,\n//   261,\n//   340,\n//   385,\n//   384,\n//   381,\n//   330,\n//   266,\n//   425,\n//   426,\n//   423,\n//   391,\n//   429,\n//   355,\n//   437,\n//   391,\n//   327,\n//   326,\n//   440,\n//   457,\n//   438,\n//   341,\n//   382,\n//   362,\n//   459,\n//   457,\n//   461,\n//   434,\n//   430,\n//   394,\n//   414,\n//   463,\n//   362,\n//   396,\n//   369,\n//   262,\n//   354,\n//   461,\n//   457,\n//   316,\n//   403,\n//   402,\n//   315,\n//   404,\n//   403,\n//   314,\n//   405,\n//   404,\n//   313,\n//   406,\n//   405,\n//   421,\n//   418,\n//   406,\n//   366,\n//   401,\n//   361,\n//   306,\n//   408,\n//   407,\n//   291,\n//   409,\n//   408,\n//   287,\n//   410,\n//   409,\n//   432,\n//   436,\n//   410,\n//   434,\n//   416,\n//   411,\n//   264,\n//   368,\n//   383,\n//   309,\n//   438,\n//   457,\n//   352,\n//   376,\n//   401,\n//   274,\n//   275,\n//   4,\n//   421,\n//   428,\n//   262,\n//   294,\n//   327,\n//   358,\n//   433,\n//   416,\n//   367,\n//   289,\n//   455,\n//   439,\n//   462,\n//   370,\n//   326,\n//   2,\n//   326,\n//   370,\n//   305,\n//   460,\n//   455,\n//   254,\n//   449,\n//   448,\n//   255,\n//   261,\n//   446,\n//   253,\n//   450,\n//   449,\n//   252,\n//   451,\n//   450,\n//   256,\n//   452,\n//   451,\n//   341,\n//   453,\n//   452,\n//   413,\n//   464,\n//   463,\n//   441,\n//   413,\n//   414,\n//   258,\n//   442,\n//   441,\n//   257,\n//   443,\n//   442,\n//   259,\n//   444,\n//   443,\n//   260,\n//   445,\n//   444,\n//   467,\n//   342,\n//   445,\n//   459,\n//   458,\n//   250,\n//   289,\n//   392,\n//   290,\n//   290,\n//   328,\n//   460,\n//   376,\n//   433,\n//   435,\n//   250,\n//   290,\n//   392,\n//   411,\n//   416,\n//   433,\n//   341,\n//   463,\n//   464,\n//   453,\n//   464,\n//   465,\n//   357,\n//   465,\n//   412,\n//   343,\n//   412,\n//   399,\n//   360,\n//   363,\n//   440,\n//   437,\n//   399,\n//   456,\n//   420,\n//   456,\n//   363,\n//   401,\n//   435,\n//   288,\n//   372,\n//   383,\n//   353,\n//   339,\n//   255,\n//   249,\n//   448,\n//   261,\n//   255,\n//   133,\n//   243,\n//   190,\n//   133,\n//   155,\n//   112,\n//   33,\n//   246,\n//   247,\n//   33,\n//   130,\n//   25,\n//   398,\n//   384,\n//   286,\n//   362,\n//   398,\n//   414,\n//   362,\n//   463,\n//   341,\n//   263,\n//   359,\n//   467,\n//   263,\n//   249,\n//   255,\n//   466,\n//   467,\n//   260,\n//   75,\n//   60,\n//   166,\n//   238,\n//   239,\n//   79,\n//   162,\n//   127,\n//   139,\n//   72,\n//   11,\n//   37,\n//   121,\n//   232,\n//   120,\n//   73,\n//   72,\n//   39,\n//   114,\n//   128,\n//   47,\n//   233,\n//   232,\n//   128,\n//   103,\n//   104,\n//   67,\n//   152,\n//   175,\n//   148,\n//   173,\n//   157,\n//   155,\n//   119,\n//   118,\n//   101,\n//   74,\n//   73,\n//   40,\n//   107,\n//   9,\n//   108,\n//   49,\n//   48,\n//   131,\n//   32,\n//   194,\n//   211,\n//   184,\n//   74,\n//   185,\n//   191,\n//   80,\n//   183,\n//   185,\n//   40,\n//   186,\n//   119,\n//   230,\n//   118,\n//   210,\n//   202,\n//   214,\n//   84,\n//   83,\n//   17,\n//   77,\n//   76,\n//   146,\n//   161,\n//   160,\n//   30,\n//   190,\n//   56,\n//   173,\n//   182,\n//   106,\n//   194,\n//   138,\n//   135,\n//   192,\n//   129,\n//   203,\n//   98,\n//   54,\n//   21,\n//   68,\n//   5,\n//   51,\n//   4,\n//   145,\n//   144,\n//   23,\n//   90,\n//   77,\n//   91,\n//   207,\n//   205,\n//   187,\n//   83,\n//   201,\n//   18,\n//   181,\n//   91,\n//   182,\n//   180,\n//   90,\n//   181,\n//   16,\n//   85,\n//   17,\n//   205,\n//   206,\n//   36,\n//   176,\n//   148,\n//   140,\n//   165,\n//   92,\n//   39,\n//   245,\n//   193,\n//   244,\n//   27,\n//   159,\n//   28,\n//   30,\n//   247,\n//   161,\n//   174,\n//   236,\n//   196,\n//   103,\n//   54,\n//   104,\n//   55,\n//   193,\n//   8,\n//   111,\n//   117,\n//   31,\n//   221,\n//   189,\n//   55,\n//   240,\n//   98,\n//   99,\n//   142,\n//   126,\n//   100,\n//   219,\n//   166,\n//   218,\n//   112,\n//   155,\n//   26,\n//   198,\n//   209,\n//   131,\n//   169,\n//   135,\n//   150,\n//   114,\n//   47,\n//   217,\n//   224,\n//   223,\n//   53,\n//   220,\n//   45,\n//   134,\n//   32,\n//   211,\n//   140,\n//   109,\n//   67,\n//   108,\n//   146,\n//   43,\n//   91,\n//   231,\n//   230,\n//   120,\n//   113,\n//   226,\n//   247,\n//   105,\n//   63,\n//   52,\n//   241,\n//   238,\n//   242,\n//   124,\n//   46,\n//   156,\n//   95,\n//   78,\n//   96,\n//   70,\n//   46,\n//   63,\n//   116,\n//   143,\n//   227,\n//   116,\n//   123,\n//   111,\n//   1,\n//   44,\n//   19,\n//   3,\n//   236,\n//   51,\n//   207,\n//   216,\n//   205,\n//   26,\n//   154,\n//   22,\n//   165,\n//   39,\n//   167,\n//   199,\n//   200,\n//   208,\n//   101,\n//   36,\n//   100,\n//   43,\n//   57,\n//   202,\n//   242,\n//   20,\n//   99,\n//   56,\n//   28,\n//   157,\n//   124,\n//   35,\n//   113,\n//   29,\n//   160,\n//   27,\n//   211,\n//   204,\n//   210,\n//   124,\n//   113,\n//   46,\n//   106,\n//   43,\n//   204,\n//   96,\n//   62,\n//   77,\n//   227,\n//   137,\n//   116,\n//   73,\n//   41,\n//   72,\n//   36,\n//   203,\n//   142,\n//   235,\n//   64,\n//   240,\n//   48,\n//   49,\n//   64,\n//   42,\n//   41,\n//   74,\n//   214,\n//   212,\n//   207,\n//   183,\n//   42,\n//   184,\n//   210,\n//   169,\n//   211,\n//   140,\n//   170,\n//   176,\n//   104,\n//   105,\n//   69,\n//   193,\n//   122,\n//   168,\n//   50,\n//   123,\n//   187,\n//   89,\n//   96,\n//   90,\n//   66,\n//   65,\n//   107,\n//   179,\n//   89,\n//   180,\n//   119,\n//   101,\n//   120,\n//   68,\n//   63,\n//   104,\n//   234,\n//   93,\n//   227,\n//   16,\n//   15,\n//   85,\n//   209,\n//   129,\n//   49,\n//   15,\n//   14,\n//   86,\n//   107,\n//   55,\n//   9,\n//   120,\n//   100,\n//   121,\n//   153,\n//   145,\n//   22,\n//   178,\n//   88,\n//   179,\n//   197,\n//   6,\n//   196,\n//   89,\n//   88,\n//   96,\n//   135,\n//   138,\n//   136,\n//   138,\n//   215,\n//   172,\n//   218,\n//   115,\n//   219,\n//   41,\n//   42,\n//   81,\n//   5,\n//   195,\n//   51,\n//   57,\n//   43,\n//   61,\n//   208,\n//   171,\n//   199,\n//   41,\n//   81,\n//   38,\n//   224,\n//   53,\n//   225,\n//   24,\n//   144,\n//   110,\n//   105,\n//   52,\n//   66,\n//   118,\n//   229,\n//   117,\n//   227,\n//   34,\n//   234,\n//   66,\n//   107,\n//   69,\n//   10,\n//   109,\n//   151,\n//   219,\n//   48,\n//   235,\n//   183,\n//   62,\n//   191,\n//   142,\n//   129,\n//   126,\n//   116,\n//   111,\n//   143,\n//   7,\n//   163,\n//   246,\n//   118,\n//   117,\n//   50,\n//   223,\n//   222,\n//   52,\n//   94,\n//   19,\n//   141,\n//   222,\n//   221,\n//   65,\n//   196,\n//   3,\n//   197,\n//   45,\n//   220,\n//   44,\n//   156,\n//   70,\n//   139,\n//   188,\n//   122,\n//   245,\n//   139,\n//   71,\n//   162,\n//   145,\n//   153,\n//   159,\n//   149,\n//   170,\n//   150,\n//   122,\n//   188,\n//   196,\n//   206,\n//   216,\n//   92,\n//   163,\n//   144,\n//   161,\n//   164,\n//   2,\n//   167,\n//   242,\n//   141,\n//   241,\n//   0,\n//   164,\n//   37,\n//   11,\n//   72,\n//   12,\n//   144,\n//   145,\n//   160,\n//   12,\n//   38,\n//   13,\n//   70,\n//   63,\n//   71,\n//   31,\n//   226,\n//   111,\n//   157,\n//   158,\n//   154,\n//   36,\n//   101,\n//   205,\n//   203,\n//   206,\n//   165,\n//   126,\n//   209,\n//   217,\n//   98,\n//   165,\n//   97,\n//   237,\n//   220,\n//   218,\n//   237,\n//   239,\n//   241,\n//   210,\n//   214,\n//   169,\n//   140,\n//   171,\n//   32,\n//   241,\n//   125,\n//   237,\n//   179,\n//   86,\n//   178,\n//   180,\n//   85,\n//   179,\n//   181,\n//   84,\n//   180,\n//   182,\n//   83,\n//   181,\n//   194,\n//   201,\n//   182,\n//   177,\n//   137,\n//   132,\n//   184,\n//   76,\n//   183,\n//   185,\n//   61,\n//   184,\n//   186,\n//   57,\n//   185,\n//   216,\n//   212,\n//   186,\n//   192,\n//   214,\n//   187,\n//   139,\n//   34,\n//   156,\n//   218,\n//   79,\n//   237,\n//   147,\n//   123,\n//   177,\n//   45,\n//   44,\n//   4,\n//   208,\n//   201,\n//   32,\n//   98,\n//   64,\n//   129,\n//   192,\n//   213,\n//   138,\n//   235,\n//   59,\n//   219,\n//   141,\n//   242,\n//   97,\n//   97,\n//   2,\n//   141,\n//   240,\n//   75,\n//   235,\n//   229,\n//   24,\n//   228,\n//   31,\n//   25,\n//   226,\n//   230,\n//   23,\n//   229,\n//   231,\n//   22,\n//   230,\n//   232,\n//   26,\n//   231,\n//   233,\n//   112,\n//   232,\n//   244,\n//   189,\n//   243,\n//   189,\n//   221,\n//   190,\n//   222,\n//   28,\n//   221,\n//   223,\n//   27,\n//   222,\n//   224,\n//   29,\n//   223,\n//   225,\n//   30,\n//   224,\n//   113,\n//   247,\n//   225,\n//   99,\n//   60,\n//   240,\n//   213,\n//   147,\n//   215,\n//   60,\n//   20,\n//   166,\n//   192,\n//   187,\n//   213,\n//   243,\n//   112,\n//   244,\n//   244,\n//   233,\n//   245,\n//   245,\n//   128,\n//   188,\n//   188,\n//   114,\n//   174,\n//   134,\n//   131,\n//   220,\n//   174,\n//   217,\n//   236,\n//   236,\n//   198,\n//   134,\n//   215,\n//   177,\n//   58,\n//   156,\n//   143,\n//   124,\n//   25,\n//   110,\n//   7,\n//   31,\n//   228,\n//   25,\n//   264,\n//   356,\n//   368,\n//   0,\n//   11,\n//   267,\n//   451,\n//   452,\n//   349,\n//   267,\n//   302,\n//   269,\n//   350,\n//   357,\n//   277,\n//   350,\n//   452,\n//   357,\n//   299,\n//   333,\n//   297,\n//   396,\n//   175,\n//   377,\n//   381,\n//   384,\n//   382,\n//   280,\n//   347,\n//   330,\n//   269,\n//   303,\n//   270,\n//   151,\n//   9,\n//   337,\n//   344,\n//   278,\n//   360,\n//   424,\n//   418,\n//   431,\n//   270,\n//   304,\n//   409,\n//   272,\n//   310,\n//   407,\n//   322,\n//   270,\n//   410,\n//   449,\n//   450,\n//   347,\n//   432,\n//   422,\n//   434,\n//   18,\n//   313,\n//   17,\n//   291,\n//   306,\n//   375,\n//   259,\n//   387,\n//   260,\n//   424,\n//   335,\n//   418,\n//   434,\n//   364,\n//   416,\n//   391,\n//   423,\n//   327,\n//   301,\n//   251,\n//   298,\n//   275,\n//   281,\n//   4,\n//   254,\n//   373,\n//   253,\n//   375,\n//   307,\n//   321,\n//   280,\n//   425,\n//   411,\n//   200,\n//   421,\n//   18,\n//   335,\n//   321,\n//   406,\n//   321,\n//   320,\n//   405,\n//   314,\n//   315,\n//   17,\n//   423,\n//   426,\n//   266,\n//   396,\n//   377,\n//   369,\n//   270,\n//   322,\n//   269,\n//   413,\n//   417,\n//   464,\n//   385,\n//   386,\n//   258,\n//   248,\n//   456,\n//   419,\n//   298,\n//   284,\n//   333,\n//   168,\n//   417,\n//   8,\n//   448,\n//   346,\n//   261,\n//   417,\n//   413,\n//   285,\n//   326,\n//   327,\n//   328,\n//   277,\n//   355,\n//   329,\n//   309,\n//   392,\n//   438,\n//   381,\n//   382,\n//   256,\n//   279,\n//   429,\n//   360,\n//   365,\n//   364,\n//   379,\n//   355,\n//   277,\n//   437,\n//   282,\n//   443,\n//   283,\n//   281,\n//   275,\n//   363,\n//   395,\n//   431,\n//   369,\n//   299,\n//   297,\n//   337,\n//   335,\n//   273,\n//   321,\n//   348,\n//   450,\n//   349,\n//   359,\n//   446,\n//   467,\n//   283,\n//   293,\n//   282,\n//   250,\n//   458,\n//   462,\n//   300,\n//   276,\n//   383,\n//   292,\n//   308,\n//   325,\n//   283,\n//   276,\n//   293,\n//   264,\n//   372,\n//   447,\n//   346,\n//   352,\n//   340,\n//   354,\n//   274,\n//   19,\n//   363,\n//   456,\n//   281,\n//   426,\n//   436,\n//   425,\n//   380,\n//   381,\n//   252,\n//   267,\n//   269,\n//   393,\n//   421,\n//   200,\n//   428,\n//   371,\n//   266,\n//   329,\n//   432,\n//   287,\n//   422,\n//   290,\n//   250,\n//   328,\n//   385,\n//   258,\n//   384,\n//   446,\n//   265,\n//   342,\n//   386,\n//   387,\n//   257,\n//   422,\n//   424,\n//   430,\n//   445,\n//   342,\n//   276,\n//   422,\n//   273,\n//   424,\n//   306,\n//   292,\n//   307,\n//   352,\n//   366,\n//   345,\n//   268,\n//   271,\n//   302,\n//   358,\n//   423,\n//   371,\n//   327,\n//   294,\n//   460,\n//   331,\n//   279,\n//   294,\n//   303,\n//   271,\n//   304,\n//   436,\n//   432,\n//   427,\n//   304,\n//   272,\n//   408,\n//   395,\n//   394,\n//   431,\n//   378,\n//   395,\n//   400,\n//   296,\n//   334,\n//   299,\n//   6,\n//   351,\n//   168,\n//   376,\n//   352,\n//   411,\n//   307,\n//   325,\n//   320,\n//   285,\n//   295,\n//   336,\n//   320,\n//   319,\n//   404,\n//   329,\n//   330,\n//   349,\n//   334,\n//   293,\n//   333,\n//   366,\n//   323,\n//   447,\n//   316,\n//   15,\n//   315,\n//   331,\n//   358,\n//   279,\n//   317,\n//   14,\n//   316,\n//   8,\n//   285,\n//   9,\n//   277,\n//   329,\n//   350,\n//   253,\n//   374,\n//   252,\n//   319,\n//   318,\n//   403,\n//   351,\n//   6,\n//   419,\n//   324,\n//   318,\n//   325,\n//   397,\n//   367,\n//   365,\n//   288,\n//   435,\n//   397,\n//   278,\n//   344,\n//   439,\n//   310,\n//   272,\n//   311,\n//   248,\n//   195,\n//   281,\n//   375,\n//   273,\n//   291,\n//   175,\n//   396,\n//   199,\n//   312,\n//   311,\n//   268,\n//   276,\n//   283,\n//   445,\n//   390,\n//   373,\n//   339,\n//   295,\n//   282,\n//   296,\n//   448,\n//   449,\n//   346,\n//   356,\n//   264,\n//   454,\n//   337,\n//   336,\n//   299,\n//   337,\n//   338,\n//   151,\n//   294,\n//   278,\n//   455,\n//   308,\n//   292,\n//   415,\n//   429,\n//   358,\n//   355,\n//   265,\n//   340,\n//   372,\n//   388,\n//   390,\n//   466,\n//   352,\n//   346,\n//   280,\n//   295,\n//   442,\n//   282,\n//   354,\n//   19,\n//   370,\n//   285,\n//   441,\n//   295,\n//   195,\n//   248,\n//   197,\n//   457,\n//   440,\n//   274,\n//   301,\n//   300,\n//   368,\n//   417,\n//   351,\n//   465,\n//   251,\n//   301,\n//   389,\n//   385,\n//   380,\n//   386,\n//   394,\n//   395,\n//   379,\n//   399,\n//   412,\n//   419,\n//   410,\n//   436,\n//   322,\n//   387,\n//   373,\n//   388,\n//   326,\n//   2,\n//   393,\n//   354,\n//   370,\n//   461,\n//   393,\n//   164,\n//   267,\n//   268,\n//   302,\n//   12,\n//   386,\n//   374,\n//   387,\n//   312,\n//   268,\n//   13,\n//   298,\n//   293,\n//   301,\n//   265,\n//   446,\n//   340,\n//   380,\n//   385,\n//   381,\n//   280,\n//   330,\n//   425,\n//   322,\n//   426,\n//   391,\n//   420,\n//   429,\n//   437,\n//   393,\n//   391,\n//   326,\n//   344,\n//   440,\n//   438,\n//   458,\n//   459,\n//   461,\n//   364,\n//   434,\n//   394,\n//   428,\n//   396,\n//   262,\n//   274,\n//   354,\n//   457,\n//   317,\n//   316,\n//   402,\n//   316,\n//   315,\n//   403,\n//   315,\n//   314,\n//   404,\n//   314,\n//   313,\n//   405,\n//   313,\n//   421,\n//   406,\n//   323,\n//   366,\n//   361,\n//   292,\n//   306,\n//   407,\n//   306,\n//   291,\n//   408,\n//   291,\n//   287,\n//   409,\n//   287,\n//   432,\n//   410,\n//   427,\n//   434,\n//   411,\n//   372,\n//   264,\n//   383,\n//   459,\n//   309,\n//   457,\n//   366,\n//   352,\n//   401,\n//   1,\n//   274,\n//   4,\n//   418,\n//   421,\n//   262,\n//   331,\n//   294,\n//   358,\n//   435,\n//   433,\n//   367,\n//   392,\n//   289,\n//   439,\n//   328,\n//   462,\n//   326,\n//   94,\n//   2,\n//   370,\n//   289,\n//   305,\n//   455,\n//   339,\n//   254,\n//   448,\n//   359,\n//   255,\n//   446,\n//   254,\n//   253,\n//   449,\n//   253,\n//   252,\n//   450,\n//   252,\n//   256,\n//   451,\n//   256,\n//   341,\n//   452,\n//   414,\n//   413,\n//   463,\n//   286,\n//   441,\n//   414,\n//   286,\n//   258,\n//   441,\n//   258,\n//   257,\n//   442,\n//   257,\n//   259,\n//   443,\n//   259,\n//   260,\n//   444,\n//   260,\n//   467,\n//   445,\n//   309,\n//   459,\n//   250,\n//   305,\n//   289,\n//   290,\n//   305,\n//   290,\n//   460,\n//   401,\n//   376,\n//   435,\n//   309,\n//   250,\n//   392,\n//   376,\n//   411,\n//   433,\n//   453,\n//   341,\n//   464,\n//   357,\n//   453,\n//   465,\n//   343,\n//   357,\n//   412,\n//   437,\n//   343,\n//   399,\n//   344,\n//   360,\n//   440,\n//   420,\n//   437,\n//   456,\n//   360,\n//   420,\n//   363,\n//   361,\n//   401,\n//   288,\n//   265,\n//   372,\n//   353,\n//   390,\n//   339,\n//   249,\n//   339,\n//   448,\n//   255,\n// ];\n// const FACE_MESH_UVS = [\n//   [0.499976992607117, 0.652534008026123],\n//   [0.500025987625122, 0.547487020492554],\n//   [0.499974012374878, 0.602371990680695],\n//   [0.482113003730774, 0.471979022026062],\n//   [0.500150978565216, 0.527155995368958],\n//   [0.499909996986389, 0.498252987861633],\n//   [0.499523013830185, 0.40106201171875],\n//   [0.289712011814117, 0.380764007568359],\n//   [0.499954998493195, 0.312398016452789],\n//   [0.499987006187439, 0.269918978214264],\n//   [0.500023007392883, 0.107050001621246],\n//   [0.500023007392883, 0.666234016418457],\n//   [0.5000159740448, 0.679224014282227],\n//   [0.500023007392883, 0.692348003387451],\n//   [0.499976992607117, 0.695277988910675],\n//   [0.499976992607117, 0.70593398809433],\n//   [0.499976992607117, 0.719385027885437],\n//   [0.499976992607117, 0.737019002437592],\n//   [0.499967992305756, 0.781370997428894],\n//   [0.499816000461578, 0.562981009483337],\n//   [0.473773002624512, 0.573909997940063],\n//   [0.104906998574734, 0.254140973091125],\n//   [0.365929991006851, 0.409575998783112],\n//   [0.338757991790771, 0.41302502155304],\n//   [0.311120003461838, 0.409460008144379],\n//   [0.274657994508743, 0.389131009578705],\n//   [0.393361985683441, 0.403706014156342],\n//   [0.345234006643295, 0.344011008739471],\n//   [0.370094001293182, 0.346076011657715],\n//   [0.319321990013123, 0.347265005111694],\n//   [0.297903001308441, 0.353591024875641],\n//   [0.24779200553894, 0.410809993743896],\n//   [0.396889001131058, 0.842755019664764],\n//   [0.280097991228104, 0.375599980354309],\n//   [0.106310002505779, 0.399955987930298],\n//   [0.2099249958992, 0.391353011131287],\n//   [0.355807989835739, 0.534406006336212],\n//   [0.471751004457474, 0.65040397644043],\n//   [0.474155008792877, 0.680191993713379],\n//   [0.439785003662109, 0.657229006290436],\n//   [0.414617002010345, 0.66654098033905],\n//   [0.450374007225037, 0.680860996246338],\n//   [0.428770989179611, 0.682690978050232],\n//   [0.374971002340317, 0.727805018424988],\n//   [0.486716985702515, 0.547628998756409],\n//   [0.485300987958908, 0.527395009994507],\n//   [0.257764995098114, 0.314490020275116],\n//   [0.401223003864288, 0.455172002315521],\n//   [0.429818987846375, 0.548614978790283],\n//   [0.421351999044418, 0.533740997314453],\n//   [0.276895999908447, 0.532056987285614],\n//   [0.483370006084442, 0.499586999416351],\n//   [0.33721199631691, 0.282882988452911],\n//   [0.296391993761063, 0.293242990970612],\n//   [0.169294998049736, 0.193813979625702],\n//   [0.447580009698868, 0.302609980106354],\n//   [0.392390012741089, 0.353887975215912],\n//   [0.354490011930466, 0.696784019470215],\n//   [0.067304998636246, 0.730105042457581],\n//   [0.442739009857178, 0.572826027870178],\n//   [0.457098007202148, 0.584792017936707],\n//   [0.381974011659622, 0.694710969924927],\n//   [0.392388999462128, 0.694203019142151],\n//   [0.277076005935669, 0.271932005882263],\n//   [0.422551989555359, 0.563233017921448],\n//   [0.385919004678726, 0.281364023685455],\n//   [0.383103013038635, 0.255840003490448],\n//   [0.331431001424789, 0.119714021682739],\n//   [0.229923993349075, 0.232002973556519],\n//   [0.364500999450684, 0.189113974571228],\n//   [0.229622006416321, 0.299540996551514],\n//   [0.173287004232407, 0.278747975826263],\n//   [0.472878992557526, 0.666198015213013],\n//   [0.446828007698059, 0.668527007102966],\n//   [0.422762006521225, 0.673889994621277],\n//   [0.445307999849319, 0.580065965652466],\n//   [0.388103008270264, 0.693961024284363],\n//   [0.403039008378983, 0.706539988517761],\n//   [0.403629004955292, 0.693953037261963],\n//   [0.460041999816895, 0.557139039039612],\n//   [0.431158006191254, 0.692366003990173],\n//   [0.452181994915009, 0.692366003990173],\n//   [0.475387006998062, 0.692366003990173],\n//   [0.465828001499176, 0.779190003871918],\n//   [0.472328990697861, 0.736225962638855],\n//   [0.473087012767792, 0.717857003211975],\n//   [0.473122000694275, 0.704625964164734],\n//   [0.473033010959625, 0.695277988910675],\n//   [0.427942007780075, 0.695277988910675],\n//   [0.426479011774063, 0.703539967536926],\n//   [0.423162013292313, 0.711845993995667],\n//   [0.4183090031147, 0.720062971115112],\n//   [0.390094995498657, 0.639572978019714],\n//   [0.013953999616206, 0.560034036636353],\n//   [0.499913990497589, 0.58014702796936],\n//   [0.413199990987778, 0.69539999961853],\n//   [0.409626007080078, 0.701822996139526],\n//   [0.468080013990402, 0.601534962654114],\n//   [0.422728985548019, 0.585985004901886],\n//   [0.463079988956451, 0.593783974647522],\n//   [0.37211999297142, 0.47341400384903],\n//   [0.334562003612518, 0.496073007583618],\n//   [0.411671012639999, 0.546965003013611],\n//   [0.242175996303558, 0.14767599105835],\n//   [0.290776997804642, 0.201445996761322],\n//   [0.327338010072708, 0.256527006626129],\n//   [0.399509996175766, 0.748921036720276],\n//   [0.441727995872498, 0.261676013469696],\n//   [0.429764986038208, 0.187834024429321],\n//   [0.412198007106781, 0.108901023864746],\n//   [0.288955003023148, 0.398952007293701],\n//   [0.218936994671822, 0.435410976409912],\n//   [0.41278201341629, 0.398970007896423],\n//   [0.257135003805161, 0.355440020561218],\n//   [0.427684992551804, 0.437960982322693],\n//   [0.448339998722076, 0.536936044692993],\n//   [0.178560003638268, 0.45755398273468],\n//   [0.247308000922203, 0.457193970680237],\n//   [0.286267012357712, 0.467674970626831],\n//   [0.332827985286713, 0.460712015628815],\n//   [0.368755996227264, 0.447206974029541],\n//   [0.398963987827301, 0.432654976844788],\n//   [0.476410001516342, 0.405806005001068],\n//   [0.189241006970406, 0.523923993110657],\n//   [0.228962004184723, 0.348950982093811],\n//   [0.490725994110107, 0.562400996685028],\n//   [0.404670000076294, 0.485132992267609],\n//   [0.019469000399113, 0.401564002037048],\n//   [0.426243007183075, 0.420431017875671],\n//   [0.396993011236191, 0.548797011375427],\n//   [0.266469985246658, 0.376977026462555],\n//   [0.439121007919312, 0.51895797252655],\n//   [0.032313998788595, 0.644356966018677],\n//   [0.419054001569748, 0.387154996395111],\n//   [0.462783008813858, 0.505746960639954],\n//   [0.238978996872902, 0.779744982719421],\n//   [0.198220998048782, 0.831938028335571],\n//   [0.107550002634525, 0.540755033493042],\n//   [0.183610007166862, 0.740257024765015],\n//   [0.134409993886948, 0.333683013916016],\n//   [0.385764002799988, 0.883153975009918],\n//   [0.490967005491257, 0.579378008842468],\n//   [0.382384985685349, 0.508572995662689],\n//   [0.174399003386497, 0.397670984268188],\n//   [0.318785011768341, 0.39623498916626],\n//   [0.343364000320435, 0.400596976280212],\n//   [0.396100014448166, 0.710216999053955],\n//   [0.187885001301765, 0.588537991046906],\n//   [0.430987000465393, 0.944064974784851],\n//   [0.318993002176285, 0.898285031318665],\n//   [0.266247987747192, 0.869701027870178],\n//   [0.500023007392883, 0.190576016902924],\n//   [0.499976992607117, 0.954452991485596],\n//   [0.366169989109039, 0.398822009563446],\n//   [0.393207013607025, 0.39553701877594],\n//   [0.410373002290726, 0.391080021858215],\n//   [0.194993004202843, 0.342101991176605],\n//   [0.388664990663528, 0.362284004688263],\n//   [0.365961998701096, 0.355970978736877],\n//   [0.343364000320435, 0.355356991291046],\n//   [0.318785011768341, 0.35834002494812],\n//   [0.301414996385574, 0.363156020641327],\n//   [0.058132998645306, 0.319076001644135],\n//   [0.301414996385574, 0.387449026107788],\n//   [0.499987989664078, 0.618434011936188],\n//   [0.415838003158569, 0.624195992946625],\n//   [0.445681989192963, 0.566076993942261],\n//   [0.465844005346298, 0.620640993118286],\n//   [0.49992299079895, 0.351523995399475],\n//   [0.288718998432159, 0.819945991039276],\n//   [0.335278987884521, 0.852819979190826],\n//   [0.440512001514435, 0.902418971061707],\n//   [0.128294005990028, 0.791940987110138],\n//   [0.408771991729736, 0.373893976211548],\n//   [0.455606997013092, 0.451801002025604],\n//   [0.499877005815506, 0.908990025520325],\n//   [0.375436991453171, 0.924192011356354],\n//   [0.11421000212431, 0.615022003650665],\n//   [0.448662012815475, 0.695277988910675],\n//   [0.4480200111866, 0.704632043838501],\n//   [0.447111994028091, 0.715808033943176],\n//   [0.444831997156143, 0.730794012546539],\n//   [0.430011987686157, 0.766808986663818],\n//   [0.406787008047104, 0.685672998428345],\n//   [0.400738000869751, 0.681069016456604],\n//   [0.392399996519089, 0.677703022956848],\n//   [0.367855995893478, 0.663918972015381],\n//   [0.247923001646996, 0.601333022117615],\n//   [0.452769994735718, 0.420849978923798],\n//   [0.43639200925827, 0.359887003898621],\n//   [0.416164010763168, 0.368713974952698],\n//   [0.413385987281799, 0.692366003990173],\n//   [0.228018000721931, 0.683571994304657],\n//   [0.468268007040024, 0.352671027183533],\n//   [0.411361992359161, 0.804327011108398],\n//   [0.499989002943039, 0.469825029373169],\n//   [0.479153990745544, 0.442654013633728],\n//   [0.499974012374878, 0.439637005329132],\n//   [0.432112008333206, 0.493588984012604],\n//   [0.499886006116867, 0.866917014122009],\n//   [0.49991300702095, 0.821729004383087],\n//   [0.456548988819122, 0.819200992584229],\n//   [0.344549000263214, 0.745438992977142],\n//   [0.37890899181366, 0.574010014533997],\n//   [0.374292999505997, 0.780184984207153],\n//   [0.319687992334366, 0.570737957954407],\n//   [0.357154995203018, 0.604269981384277],\n//   [0.295284003019333, 0.621580958366394],\n//   [0.447750002145767, 0.862477004528046],\n//   [0.410986006259918, 0.508723020553589],\n//   [0.31395098567009, 0.775308012962341],\n//   [0.354128003120422, 0.812552988529205],\n//   [0.324548006057739, 0.703992962837219],\n//   [0.189096003770828, 0.646299958229065],\n//   [0.279776990413666, 0.71465802192688],\n//   [0.1338230073452, 0.682700991630554],\n//   [0.336768001317978, 0.644733011722565],\n//   [0.429883986711502, 0.466521978378296],\n//   [0.455527991056442, 0.548622965812683],\n//   [0.437114000320435, 0.558896005153656],\n//   [0.467287987470627, 0.529924988746643],\n//   [0.414712011814117, 0.335219979286194],\n//   [0.37704598903656, 0.322777986526489],\n//   [0.344107985496521, 0.320150971412659],\n//   [0.312875986099243, 0.32233202457428],\n//   [0.283526003360748, 0.333190023899078],\n//   [0.241245999932289, 0.382785975933075],\n//   [0.102986000478268, 0.468762993812561],\n//   [0.267612010240555, 0.424560010433197],\n//   [0.297879010438919, 0.433175981044769],\n//   [0.333433985710144, 0.433878004550934],\n//   [0.366427004337311, 0.426115989685059],\n//   [0.396012008190155, 0.416696012020111],\n//   [0.420121014118195, 0.41022801399231],\n//   [0.007561000064015, 0.480777025222778],\n//   [0.432949006557465, 0.569517970085144],\n//   [0.458638995885849, 0.479089021682739],\n//   [0.473466008901596, 0.545744001865387],\n//   [0.476087987422943, 0.563830018043518],\n//   [0.468472003936768, 0.555056989192963],\n//   [0.433990985155106, 0.582361996173859],\n//   [0.483518004417419, 0.562983989715576],\n//   [0.482482999563217, 0.57784903049469],\n//   [0.42645001411438, 0.389798998832703],\n//   [0.438998997211456, 0.39649498462677],\n//   [0.450067013502121, 0.400434017181396],\n//   [0.289712011814117, 0.368252992630005],\n//   [0.276670008897781, 0.363372981548309],\n//   [0.517862021923065, 0.471948027610779],\n//   [0.710287988185883, 0.380764007568359],\n//   [0.526226997375488, 0.573909997940063],\n//   [0.895093023777008, 0.254140973091125],\n//   [0.634069979190826, 0.409575998783112],\n//   [0.661242008209229, 0.41302502155304],\n//   [0.688880026340485, 0.409460008144379],\n//   [0.725341975688934, 0.389131009578705],\n//   [0.606630027294159, 0.40370500087738],\n//   [0.654766023159027, 0.344011008739471],\n//   [0.629905998706818, 0.346076011657715],\n//   [0.680678009986877, 0.347265005111694],\n//   [0.702096998691559, 0.353591024875641],\n//   [0.75221198797226, 0.410804986953735],\n//   [0.602918028831482, 0.842862963676453],\n//   [0.719901978969574, 0.375599980354309],\n//   [0.893692970275879, 0.399959981441498],\n//   [0.790081977844238, 0.391354024410248],\n//   [0.643998026847839, 0.534487962722778],\n//   [0.528249025344849, 0.65040397644043],\n//   [0.525849997997284, 0.680191040039062],\n//   [0.560214996337891, 0.657229006290436],\n//   [0.585384011268616, 0.66654098033905],\n//   [0.549625992774963, 0.680860996246338],\n//   [0.57122802734375, 0.682691991329193],\n//   [0.624852001667023, 0.72809898853302],\n//   [0.513050019741058, 0.547281980514526],\n//   [0.51509702205658, 0.527251958847046],\n//   [0.742246985435486, 0.314507007598877],\n//   [0.598631024360657, 0.454979002475739],\n//   [0.570338010787964, 0.548575043678284],\n//   [0.578631997108459, 0.533622980117798],\n//   [0.723087012767792, 0.532054007053375],\n//   [0.516445994377136, 0.499638974666595],\n//   [0.662801027297974, 0.282917976379395],\n//   [0.70362401008606, 0.293271005153656],\n//   [0.830704987049103, 0.193813979625702],\n//   [0.552385985851288, 0.302568018436432],\n//   [0.607609987258911, 0.353887975215912],\n//   [0.645429015159607, 0.696707010269165],\n//   [0.932694971561432, 0.730105042457581],\n//   [0.557260990142822, 0.572826027870178],\n//   [0.542901992797852, 0.584792017936707],\n//   [0.6180260181427, 0.694710969924927],\n//   [0.607590973377228, 0.694203019142151],\n//   [0.722943007946014, 0.271963000297546],\n//   [0.577413976192474, 0.563166975975037],\n//   [0.614082992076874, 0.281386971473694],\n//   [0.616907000541687, 0.255886018276215],\n//   [0.668509006500244, 0.119913995265961],\n//   [0.770092010498047, 0.232020974159241],\n//   [0.635536015033722, 0.189248979091644],\n//   [0.77039098739624, 0.299556016921997],\n//   [0.826722025871277, 0.278755009174347],\n//   [0.527121007442474, 0.666198015213013],\n//   [0.553171992301941, 0.668527007102966],\n//   [0.577238023281097, 0.673889994621277],\n//   [0.554691970348358, 0.580065965652466],\n//   [0.611896991729736, 0.693961024284363],\n//   [0.59696102142334, 0.706539988517761],\n//   [0.596370995044708, 0.693953037261963],\n//   [0.539958000183105, 0.557139039039612],\n//   [0.568841993808746, 0.692366003990173],\n//   [0.547818005084991, 0.692366003990173],\n//   [0.52461302280426, 0.692366003990173],\n//   [0.534089982509613, 0.779141008853912],\n//   [0.527670979499817, 0.736225962638855],\n//   [0.526912987232208, 0.717857003211975],\n//   [0.526877999305725, 0.704625964164734],\n//   [0.526966989040375, 0.695277988910675],\n//   [0.572058022022247, 0.695277988910675],\n//   [0.573521018028259, 0.703539967536926],\n//   [0.57683801651001, 0.711845993995667],\n//   [0.581691026687622, 0.720062971115112],\n//   [0.609944999217987, 0.639909982681274],\n//   [0.986046016216278, 0.560034036636353],\n//   [0.5867999792099, 0.69539999961853],\n//   [0.590372025966644, 0.701822996139526],\n//   [0.531915009021759, 0.601536989212036],\n//   [0.577268004417419, 0.585934996604919],\n//   [0.536915004253387, 0.593786001205444],\n//   [0.627542972564697, 0.473352015018463],\n//   [0.665585994720459, 0.495950996875763],\n//   [0.588353991508484, 0.546862006187439],\n//   [0.757824003696442, 0.14767599105835],\n//   [0.709249973297119, 0.201507985591888],\n//   [0.672684013843536, 0.256581008434296],\n//   [0.600408971309662, 0.74900496006012],\n//   [0.55826598405838, 0.261672019958496],\n//   [0.570303976535797, 0.187870979309082],\n//   [0.588165998458862, 0.109044015407562],\n//   [0.711045026779175, 0.398952007293701],\n//   [0.781069993972778, 0.435405015945435],\n//   [0.587247014045715, 0.398931980133057],\n//   [0.742869973182678, 0.355445981025696],\n//   [0.572156012058258, 0.437651991844177],\n//   [0.55186802148819, 0.536570012569427],\n//   [0.821442008018494, 0.457556009292603],\n//   [0.752701997756958, 0.457181990146637],\n//   [0.71375697851181, 0.467626988887787],\n//   [0.66711300611496, 0.460672974586487],\n//   [0.631101012229919, 0.447153985500336],\n//   [0.6008620262146, 0.432473003864288],\n//   [0.523481011390686, 0.405627012252808],\n//   [0.810747981071472, 0.523926019668579],\n//   [0.771045982837677, 0.348959028720856],\n//   [0.509127020835876, 0.562718033790588],\n//   [0.595292985439301, 0.485023975372314],\n//   [0.980530977249146, 0.401564002037048],\n//   [0.573499977588654, 0.420000016689301],\n//   [0.602994978427887, 0.548687994480133],\n//   [0.733529984951019, 0.376977026462555],\n//   [0.560611009597778, 0.519016981124878],\n//   [0.967685997486115, 0.644356966018677],\n//   [0.580985009670258, 0.387160003185272],\n//   [0.537728011608124, 0.505385041236877],\n//   [0.760966002941132, 0.779752969741821],\n//   [0.801778972148895, 0.831938028335571],\n//   [0.892440974712372, 0.54076099395752],\n//   [0.816350996494293, 0.740260004997253],\n//   [0.865594983100891, 0.333687007427216],\n//   [0.614073991775513, 0.883246004581451],\n//   [0.508952975273132, 0.579437971115112],\n//   [0.617941975593567, 0.508316040039062],\n//   [0.825608015060425, 0.397674977779388],\n//   [0.681214988231659, 0.39623498916626],\n//   [0.656635999679565, 0.400596976280212],\n//   [0.603900015354156, 0.710216999053955],\n//   [0.81208598613739, 0.588539004325867],\n//   [0.56801301240921, 0.944564998149872],\n//   [0.681007981300354, 0.898285031318665],\n//   [0.733752012252808, 0.869701027870178],\n//   [0.633830010890961, 0.398822009563446],\n//   [0.606792986392975, 0.39553701877594],\n//   [0.589659988880157, 0.391062021255493],\n//   [0.805015981197357, 0.342108011245728],\n//   [0.611334979534149, 0.362284004688263],\n//   [0.634037971496582, 0.355970978736877],\n//   [0.656635999679565, 0.355356991291046],\n//   [0.681214988231659, 0.35834002494812],\n//   [0.698584973812103, 0.363156020641327],\n//   [0.941866993904114, 0.319076001644135],\n//   [0.698584973812103, 0.387449026107788],\n//   [0.584177017211914, 0.624107003211975],\n//   [0.554318010807037, 0.566076993942261],\n//   [0.534153997898102, 0.62064003944397],\n//   [0.711217999458313, 0.819975018501282],\n//   [0.664629995822906, 0.852871000766754],\n//   [0.559099972248077, 0.902631998062134],\n//   [0.871706008911133, 0.791940987110138],\n//   [0.591234028339386, 0.373893976211548],\n//   [0.544341027736664, 0.451583981513977],\n//   [0.624562978744507, 0.924192011356354],\n//   [0.88577002286911, 0.615028977394104],\n//   [0.551338016986847, 0.695277988910675],\n//   [0.551980018615723, 0.704632043838501],\n//   [0.552887976169586, 0.715808033943176],\n//   [0.555167973041534, 0.730794012546539],\n//   [0.569944024085999, 0.767035007476807],\n//   [0.593203008174896, 0.685675978660583],\n//   [0.599261999130249, 0.681069016456604],\n//   [0.607599973678589, 0.677703022956848],\n//   [0.631937980651855, 0.663500010967255],\n//   [0.752032995223999, 0.601315021514893],\n//   [0.547226011753082, 0.420395016670227],\n//   [0.563543975353241, 0.359827995300293],\n//   [0.583841025829315, 0.368713974952698],\n//   [0.586614012718201, 0.692366003990173],\n//   [0.771915018558502, 0.683578014373779],\n//   [0.531597018241882, 0.352482974529266],\n//   [0.588370978832245, 0.804440975189209],\n//   [0.52079701423645, 0.442565023899078],\n//   [0.567984998226166, 0.493479013442993],\n//   [0.543282985687256, 0.819254994392395],\n//   [0.655317008495331, 0.745514988899231],\n//   [0.621008992195129, 0.574018001556396],\n//   [0.625559985637665, 0.78031200170517],\n//   [0.680198013782501, 0.570719003677368],\n//   [0.64276397228241, 0.604337990283966],\n//   [0.704662978649139, 0.621529996395111],\n//   [0.552012026309967, 0.862591981887817],\n//   [0.589071989059448, 0.508637011051178],\n//   [0.685944974422455, 0.775357007980347],\n//   [0.645735025405884, 0.812640011310577],\n//   [0.675342977046967, 0.703978002071381],\n//   [0.810858011245728, 0.646304965019226],\n//   [0.72012197971344, 0.714666962623596],\n//   [0.866151988506317, 0.682704985141754],\n//   [0.663187026977539, 0.644596993923187],\n//   [0.570082008838654, 0.466325998306274],\n//   [0.544561982154846, 0.548375964164734],\n//   [0.562758982181549, 0.558784961700439],\n//   [0.531987011432648, 0.530140042304993],\n//   [0.585271000862122, 0.335177004337311],\n//   [0.622952997684479, 0.32277899980545],\n//   [0.655896008014679, 0.320163011550903],\n//   [0.687132000923157, 0.322345972061157],\n//   [0.716481983661652, 0.333200991153717],\n//   [0.758756995201111, 0.382786989212036],\n//   [0.897013008594513, 0.468769013881683],\n//   [0.732392013072968, 0.424547016620636],\n//   [0.70211398601532, 0.433162987232208],\n//   [0.66652500629425, 0.433866024017334],\n//   [0.633504986763, 0.426087975502014],\n//   [0.603875994682312, 0.416586995124817],\n//   [0.579657971858978, 0.409945011138916],\n//   [0.992439985275269, 0.480777025222778],\n//   [0.567192018032074, 0.569419980049133],\n//   [0.54136598110199, 0.478899002075195],\n//   [0.526564002037048, 0.546118021011353],\n//   [0.523913025856018, 0.563830018043518],\n//   [0.531529009342194, 0.555056989192963],\n//   [0.566035985946655, 0.582329034805298],\n//   [0.51631098985672, 0.563053965568542],\n//   [0.5174720287323, 0.577877044677734],\n//   [0.573594987392426, 0.389806985855103],\n//   [0.560697972774506, 0.395331978797913],\n//   [0.549755990505219, 0.399751007556915],\n//   [0.710287988185883, 0.368252992630005],\n//   [0.723330020904541, 0.363372981548309],\n// ];\n;// CONCATENATED MODULE: ./src/js/facemesh/landmarks_helpers.js\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { landmarks_helpers_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction landmarks_helpers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Mediapipe uses different convention for axis\n * than three js. This function adapts mediapipe\n * landmarks for three js.\n * @param {*} landmarks\n */\n\nvar transformLandmarks = function transformLandmarks(landmarks) {\n  // console.log(landmarks);\n  if (!landmarks) {\n    return landmarks;\n  }\n\n  var hasVisiblity = !!landmarks.find(function (l) {\n    return l.visibility;\n  });\n  var minZ = 1e-4; // currently mediapipe facemesh js\n  // has visibility set to undefined\n  // so we use a heuristic to set z position of facemesh\n\n  if (hasVisiblity) {\n    landmarks.forEach(function (landmark) {\n      var z = landmark.z,\n          visibility = landmark.visibility;\n      z = -z;\n\n      if (z < minZ && visibility) {\n        minZ = z;\n      }\n    });\n  } else {\n    minZ = Math.max(-landmarks[234].z, -landmarks[454].z);\n  }\n\n  return landmarks.map(function (landmark) {\n    var x = landmark.x,\n        y = landmark.y,\n        z = landmark.z;\n    return {\n      x: -0.5 + x,\n      y: 0.5 - y,\n      z: -z - minZ,\n      visibility: landmark.visibility\n    };\n  });\n};\n/**\n * Scales landmark by width and height\n * @param {*} landmark\n * @param {*} width\n * @param {*} height\n */\n\nvar scaleLandmark = function scaleLandmark(landmark, width, height) {\n  var x = landmark.x,\n      y = landmark.y,\n      z = landmark.z;\n  return _objectSpread(_objectSpread({}, landmark), {}, {\n    x: x * width,\n    y: y * height,\n    z: z * width\n  });\n};\nvar geometry = new three_module/* BufferGeometry */.u9r();\n/**\n * makes buffer geometry from facemesh landmarks\n * @param {*} landmarks\n */\n\nvar makeGeometry = function makeGeometry(landmarks) {\n  // console.log(landmarks);\n  var vertices = [];\n  var uvs = []; // create the vertices array by landmark points {x:0.34343,y:0.394343,z:98434933}\n\n  for (var i = 0; i < 468; i++) {\n    // face landmarks given by facemesh and are transformed\n    var _landmarks$i = landmarks[i],\n        x = _landmarks$i.x,\n        y = _landmarks$i.y,\n        z = _landmarks$i.z;\n    var vertex = [x, y, z];\n    vertices.push.apply(vertices, vertex);\n  }\n\n  for (var j = 0; j < 468; j++) {\n    uvs[j * 2] = FACE_MESH_UV[j][0];\n    uvs[j * 2 + 1] = FACE_MESH_UV[j][1];\n  }\n\n  geometry.setIndex(FACE_MESH_INDEX_BUFFER);\n  geometry.setAttribute("position", new three_module/* Float32BufferAttribute */.a$l(vertices, 3));\n  geometry.setAttribute("uv", new three_module/* Float32BufferAttribute */.a$l(uvs, 2));\n  geometry.computeVertexNormals();\n  return geometry;\n};\n// EXTERNAL MODULE: ./node_modules/@mediapipe/tasks-vision/vision_bundle.mjs\nvar vision_bundle = __webpack_require__(203);\n;// CONCATENATED MODULE: ./src/MLModels/face_landmarker.task\n/* harmony default export */ const face_landmarker = (__webpack_require__.p + "assets/models/src/MLModels/face_landmarker.task");\n;// CONCATENATED MODULE: ./src/js/facemesh/landmarks_provider.js\n\n\nfunction landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction landmarks_provider_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\nfunction landmarks_provider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction landmarks_provider_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction landmarks_provider_createClass(Constructor, protoProps, staticProps) { if (protoProps) landmarks_provider_defineProperties(Constructor.prototype, protoProps); if (staticProps) landmarks_provider_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n //import { transformLandmarks } from "./eyeliner_landmark_helper";\n\nvar FacemeshLandmarksProvider = /*#__PURE__*/function () {\n  function FacemeshLandmarksProvider(callback) {\n    landmarks_provider_classCallCheck(this, FacemeshLandmarksProvider);\n\n    this.isold = false;\n    this.callback = callback;\n    this.faceMesh = null;\n    this.faceLandmarker;\n    this.runningMode = "VIDEO";\n    this.init = false;\n    this.landmarks;\n    this.distanceState = -1;\n    this.prevdistanceState = -1;\n    this.positionState = -1;\n    this.prevPositionState = -1;\n    this.shouldCalculate = false;\n    this.result;\n    this.lastVideoTime = -1;\n  }\n\n  landmarks_provider_createClass(FacemeshLandmarksProvider, [{\n    key: "send",\n    value: function send(image) {\n      var _this = this;\n\n      var _shouldCalculate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var isVideo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.shouldCalculate = _shouldCalculate;\n\n      if (this.isold) {\n        return new Promise(function (resolve, reject) {\n          _this.faceMesh.send({\n            image: image\n          }).then(function () {\n            // Add any additional logic after successful send\n            resolve(); // Resolve the Promise upon successful completion\n          })["catch"](function (error) {\n            // Handle errors from the send method\n            // console.error("Error sending image:", error);\n            // Perform appropriate actions based on the error, such as retries or fallbacks\n            reject(error); // Reject the Promise with the encountered error\n          });\n        });\n      } else {\n        if (isVideo) {\n          if (this.lastVideoTime !== image.currentTime) {\n            this.lastVideoTime = image.currentTime;\n            this.result = this.faceLandmarker.detectForVideo(image, performance.now());\n          }\n        } else {\n          this.result = this.faceLandmarker.detect(image);\n        }\n\n        this.landmarks = this.result.faceLandmarks[0];\n        var multiFaceLandmarks = transformLandmarks(this.result.faceLandmarks[0]);\n\n        if (this.shouldCalculate && this.landmarks) {\n          this.calculateDistance(this.landmarks[300].x, this.landmarks[70].x, this.landmarks[300].y, this.landmarks[70].y);\n          this.categorizePosition(this.landmarks[4].x, this.landmarks[4].y);\n        }\n\n        this.callback({\n          image: image,\n          landmarks: multiFaceLandmarks\n        });\n      }\n    }\n  }, {\n    key: "onResults",\n    value: function onResults(_ref) {\n      var image = _ref.image,\n          multiFaceLandmarks = _ref.multiFaceLandmarks,\n          multiFaceGeometry = _ref.multiFaceGeometry;\n\n      if (this.isold) {\n        if (image != null && multiFaceLandmarks != null) {\n          this.landmarks = multiFaceLandmarks[0];\n          multiFaceLandmarks = transformLandmarks(multiFaceLandmarks[0]);\n          this.callback({\n            image: image,\n            landmarks: multiFaceLandmarks\n          });\n\n          if (this.shouldCalculate && this.landmarks) {\n            this.calculateDistance(this.landmarks[300].x, this.landmarks[70].x, this.landmarks[300].y, this.landmarks[70].y);\n            this.categorizePosition(this.landmarks[4].x, this.landmarks[4].y); //console.log(this.landmarks[9].x, this.landmarks[9].y);\n          }\n        }\n      }\n    }\n  }, {\n    key: "createFaceLandmark",\n    value: function () {\n      var _createFaceLandmark = landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var vision;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return vision_bundle/* FilesetResolver */.n.forVisionTasks("".concat(PUBLIC_PATH, "/mediapipe/task-vision/wasm"));\n\n              case 3:\n                vision = _context.sent;\n                _context.next = 6;\n                return vision_bundle/* FaceLandmarker */.jr.createFromOptions(vision, {\n                  baseOptions: {\n                    modelAssetPath: face_landmarker,\n                    delegate: "GPU"\n                  },\n                  outputFaceBlendshapes: false,\n                  outputFacialTransformationMatrixes: false,\n                  runningMode: this.runningMode,\n                  numFaces: 1\n                });\n\n              case 6:\n                this.faceLandmarker = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context["catch"](0);\n\n              case 11:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function createFaceLandmark() {\n        return _createFaceLandmark.apply(this, arguments);\n      }\n\n      return createFaceLandmark;\n    }()\n  }, {\n    key: "initialize",\n    value: function () {\n      var _initialize = landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isold) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.initializeOld();\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.next = 7;\n                return this.createFaceLandmark();\n\n              case 7:\n                this.init = true;\n\n              case 8:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }, {\n    key: "initializeOld",\n    value: function () {\n      var _initializeOld = landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var onResults;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // console.log("face init");\n                onResults = this.onResults.bind(this);\n                this.faceMesh = new face_mesh.FaceMesh({\n                  locateFile: function locateFile(file) {\n                    var url = "".concat(PUBLIC_PATH, "/mediapipe/").concat(file);\n                    return url;\n                  }\n                });\n                this.faceMesh.setOptions({\n                  maxNumFaces: 1,\n                  //enableFaceGeometry: true,\n                  selfieMode: true,\n                  refineLandmarks: true,\n                  minDetectionConfidence: 0.5,\n                  minTrackingConfidence: 0.5,\n                  useCpuInference: true\n                });\n                this.faceMesh.onResults(onResults);\n                _context3.next = 6;\n                return this.faceMesh.initialize();\n\n              case 6:\n                this.init = true;\n\n              case 7:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function initializeOld() {\n        return _initializeOld.apply(this, arguments);\n      }\n\n      return initializeOld;\n    }()\n  }, {\n    key: "IsInit",\n    value: function IsInit() {\n      return this.init;\n    }\n  }, {\n    key: "setInit",\n    value: function setInit(state) {\n      this.init = state;\n    }\n  }, {\n    key: "setSelfieMode",\n    value: function () {\n      var _setSelfieMode = landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(state) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.isold) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                this.faceMesh.setOptions({\n                  selfieMode: state\n                });\n                _context4.next = 9;\n                break;\n\n              case 4:\n                if (!(this.getState() === state)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt("return");\n\n              case 6:\n                // console.log(this.getState());\n                if (state) this.runningMode = "VIDEO";else this.runningMode = "IMAGE"; //console.log(this.runningMode);\n\n                _context4.next = 9;\n                return this.faceLandmarker.setOptions({\n                  runningMode: this.runningMode\n                });\n\n              case 9:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setSelfieMode(_x) {\n        return _setSelfieMode.apply(this, arguments);\n      }\n\n      return setSelfieMode;\n    }()\n  }, {\n    key: "getState",\n    value: function getState() {\n      if (this.runningMode === "IMAGE") return false;else return true;\n    }\n  }, {\n    key: "close",\n    value: function () {\n      var _close = landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this.isold) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return this.faceMesh.close();\n\n              case 3:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }, {\n    key: "calculateDistance",\n    value: function calculateDistance(lefteye, righteyes, lefteyeY, righteyesY) {\n      var eyeToEye = 13.0;\n      var depthToFace = 48.0;\n      var eyeToEyeInPixel = 384.5; // Calculate focal length\n\n      var calculatedFocalLength = this.focalLength(depthToFace, eyeToEye, eyeToEyeInPixel); // Calculate eye measurement (assuming x_300 and x_70 are defined)\n\n      var x_300 = lefteye;\n      var x_70 = righteyes;\n      var y_300 = lefteyeY;\n      var y_70 = righteyesY;\n      var distance;\n\n      if (Math.abs(x_300 - x_70) > Math.abs(y_300 - y_70)) {\n        distance = Math.abs(x_300 - x_70);\n      } else {\n        distance = Math.abs(y_300 - y_70);\n      }\n\n      var eyeMeasurement = distance; //Math.abs(x_300 - x_70);\n      // Calculate distance\n\n      var calculatedDistance = this.distanceFinder(calculatedFocalLength, eyeToEye, eyeMeasurement);\n      var categorizedDepth = this.categorizeDepth(calculatedDistance);\n    }\n  }, {\n    key: "categorizeDepth",\n    value: function categorizeDepth(distance) {\n      var smallThreshold = 40000;\n      var mediumThreshold = 72000; // if (isMobileDevice()) {\n      //   smallThreshold = 50000;\n      //   mediumThreshold = 100000;\n      // }\n\n      var msg = null; //console.log("distance", distance);\n\n      if (distance < smallThreshold) {\n        this.distanceState = 1; //emitRecognizationDistanceAlert("TOO_CLOSE");\n\n        msg = "TOO_CLOSE"; // showDistanceMessagePanel();\n        // setDistanceMsg("Too Close");\n      } else if (distance > mediumThreshold) {\n        this.distanceState = 2; //emitRecognizationDistanceAlert("TOO_FAR");\n\n        msg = "TOO_FAR"; // showDistanceMessagePanel();\n        // setDistanceMsg("Too far");\n      } else {\n        this.distanceState = 0; //emitRecognizationDistanceAlert("PERFECT");\n\n        msg = "PERFECT"; //hideDistanceMessagePanel();\n      }\n\n      if (this.distanceState !== this.prevdistanceState) {\n        if (msg) {\n          var json = {\n            state: this.distanceState,\n            message: msg\n          };\n          emitFaceAnalysisEvent("distance", json);\n        }\n\n        this.prevdistanceState = this.distanceState;\n      }\n\n      return distance > smallThreshold && distance < mediumThreshold ? false : true;\n    }\n  }, {\n    key: "categorizePosition",\n    value: function categorizePosition(xdist, ydist) {\n      var xMinThresold = 0.4;\n      var xMaxThresold = 0.6;\n      var yMinThresold = 0.4;\n      var yMaxThresold = 0.75;\n      var msg = null; //console.log("distance", distance);\n\n      if (xdist > xMinThresold && xdist < xMaxThresold && ydist > yMinThresold && ydist < yMaxThresold) {\n        this.positionState = 0;\n        msg = "PERFECT";\n      } else {\n        this.positionState = 1;\n        msg = "Out";\n      }\n\n      if (this.positionState !== this.prevPositionState) {\n        if (msg) {\n          var json = {\n            state: this.positionState,\n            message: msg\n          };\n          emitFaceAnalysisEvent("position", json);\n        }\n\n        this.prevPositionState = this.positionState;\n      }\n    }\n  }, {\n    key: "focalLength",\n    value: function focalLength(depthToFace, eyeToEye, eyeToEyeInPixel) {\n      return eyeToEyeInPixel * depthToFace / eyeToEye;\n    } // Function to find distance based on focal length, eye-to-eye in pixels, and width calculated\n\n  }, {\n    key: "distanceFinder",\n    value: function distanceFinder(focalLength, eyeToEyeInPixel, widthCalculated) {\n      var distance = eyeToEyeInPixel * focalLength / widthCalculated;\n      return distance - 6;\n    }\n  }]);\n\n  return FacemeshLandmarksProvider;\n}();\n// EXTERNAL MODULE: ./node_modules/@mediapipe/hands/hands.js\nvar hands = __webpack_require__(7523);\n;// CONCATENATED MODULE: ./src/js/facemesh/hand_landmarks_helpers.js\nfunction hand_landmarks_helpers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction hand_landmarks_helpers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? hand_landmarks_helpers_ownKeys(Object(source), !0).forEach(function (key) { hand_landmarks_helpers_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : hand_landmarks_helpers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction hand_landmarks_helpers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n//import { FACE_MESH_INDEX_BUFFER, FACE_MESH_UV } from "./face_geom.js";\n\n/**\n * Mediapipe uses different convention for axis\n * than three js. This function adapts mediapipe\n * landmarks for three js.\n * @param {*} landmarks\n */\nvar hand_landmarks_helpers_transformLandmarks = function transformLandmarks(landmarks) {\n  // console.log(landmarks);\n  if (!landmarks) {\n    return landmarks;\n  }\n\n  var hasVisiblity = !!landmarks.find(function (l) {\n    return l.visibility;\n  });\n  var minZ = 1e-4; //console.log(hasVisiblity);\n  // currently mediapipe facemesh js\n  // has visibility set to undefined\n  // so we use a heuristic to set z position of facemesh\n\n  if (hasVisiblity) {\n    landmarks.forEach(function (landmark) {\n      var z = landmark.z,\n          visibility = landmark.visibility;\n      z = -z;\n\n      if (z < minZ && visibility) {\n        minZ = z;\n      }\n    });\n  } else {\n    if (landmarks && landmarks[5] !== undefined && landmarks[5].z !== undefined) minZ = Math.max(-landmarks[5].z, -landmarks[17].z);\n  }\n\n  return landmarks.map(function (landmark) {\n    var x = landmark.x,\n        y = landmark.y,\n        z = landmark.z;\n    return {\n      x: -0.5 + x,\n      y: 0.5 - y,\n      z: -z - minZ,\n      visibility: landmark.visibility\n    };\n  });\n};\n/**\n * Scales landmark by width and height\n * @param {*} landmark\n * @param {*} width\n * @param {*} height\n */\n\nvar hand_landmarks_helpers_scaleLandmark = function scaleLandmark(landmark, width, height) {\n  if (landmark) {\n    var x = landmark.x,\n        y = landmark.y,\n        z = landmark.z;\n    return hand_landmarks_helpers_objectSpread(hand_landmarks_helpers_objectSpread({}, landmark), {}, {\n      x: x * width,\n      y: y * height,\n      z: z * width\n    });\n  } else {\n    // Handle the case where \'landmark\' is undefined by returning default values\n    return {\n      x: 0,\n      y: 0,\n      z: 0\n    }; // Adjust default values as needed\n  }\n};\n/**\n * makes buffer geometry from facemesh landmarks\n * @param {*} landmarks\n */\n\nvar hand_landmarks_helpers_makeGeometry = function makeGeometry(landmarks) {// const { x, y, z } = landmarks; // Extract the X, Y, Z coordinates of the pose landmark\n  // // Create a Three.js object to represent the pose landmark (e.g., a sphere)\n  // const geometry = new THREE.SphereGeometry(0.05); // Adjust the size of the sphere as needed\n  // const material = new THREE.MeshBasicMaterial({ color: 0xff0000 }); // Adjust the color as needed\n  // const sphere = new THREE.Mesh(geometry, material);\n  // // Set the position of the sphere based on the pose landmark coordinates\n  // sphere.position.set(x, y, z);\n  // // Add the sphere to the Three.js scene\n  // scene.add(sphere);\n  //return geometry;\n};\n;// CONCATENATED MODULE: ./src/MLModels/hand_landmarker.task\n/* harmony default export */ const hand_landmarker = (__webpack_require__.p + "assets/models/src/MLModels/hand_landmarker.task");\n;// CONCATENATED MODULE: ./src/js/facemesh/Hands_landmarks_provider.js\n\n\nfunction Hands_landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction Hands_landmarks_provider_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { Hands_landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { Hands_landmarks_provider_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\nfunction Hands_landmarks_provider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Hands_landmarks_provider_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Hands_landmarks_provider_createClass(Constructor, protoProps, staticProps) { if (protoProps) Hands_landmarks_provider_defineProperties(Constructor.prototype, protoProps); if (staticProps) Hands_landmarks_provider_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\nvar HandsLandmarkProvider = /*#__PURE__*/function () {\n  function HandsLandmarkProvider(callback) {\n    Hands_landmarks_provider_classCallCheck(this, HandsLandmarkProvider);\n\n    this.isold = false;\n    this.callback = callback;\n    this.init = false;\n    this.runningMode = "VIDEO";\n    this.result;\n    this.lastVideoTime = -1;\n  } // send(image) {\n  //   return this.hands.send({ image: image });\n  // }\n\n\n  Hands_landmarks_provider_createClass(HandsLandmarkProvider, [{\n    key: "send",\n    value: function send(image) {\n      var _this = this;\n\n      var isVideo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (this.isold) {\n        return new Promise(function (resolve, reject) {\n          _this.hands.send({\n            image: image\n          }).then(function () {\n            // Add any additional logic after successful send\n            resolve(); // Resolve the Promise upon successful completion\n          })["catch"](function (error) {\n            // Handle errors from the send method\n            //console.error("Error sending image:", error);\n            // Perform appropriate actions based on the error, such as retries or fallbacks\n            reject(error); // Reject the Promise with the encountered error\n          });\n        });\n      } else {\n        if (isVideo) {\n          if (this.lastVideoTime !== image.currentTime) {\n            this.lastVideoTime = image.currentTime;\n            this.result = this.handLandmarker.detectForVideo(image, performance.now());\n          }\n        } else {\n          this.result = this.handLandmarker.detect(image);\n        }\n\n        this.landmarks = this.result.landmarks[0];\n        var multiHandLandmarks = hand_landmarks_helpers_transformLandmarks(this.result.landmarks[0]);\n        this.callback({\n          image: image,\n          landmarks: multiHandLandmarks,\n          multiHandWorldLandmarks: this.result.worldLandmarks,\n          handedness: this.result.handedness,\n          isVideo: isVideo\n        });\n      }\n    }\n  }, {\n    key: "onResults",\n    value: function onResults(_ref) {\n      var image = _ref.image,\n          multiHandLandmarks = _ref.multiHandLandmarks,\n          multiHandWorldLandmarks = _ref.multiHandWorldLandmarks,\n          multiHandedness = _ref.multiHandedness;\n\n      if (image != null && multiHandLandmarks != null) {\n        multiHandLandmarks = hand_landmarks_helpers_transformLandmarks(multiHandLandmarks[0]);\n        multiHandedness = multiHandedness;\n        this.callback({\n          image: image,\n          landmarks: multiHandLandmarks,\n          segmentationmask: multiHandWorldLandmarks,\n          handedness: multiHandedness\n        });\n      }\n    }\n  }, {\n    key: "createHandLandmark",\n    value: function () {\n      var _createHandLandmark = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var vision;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return vision_bundle/* FilesetResolver */.n.forVisionTasks("".concat(PUBLIC_PATH, "/mediapipe/task-vision/wasm"));\n\n              case 3:\n                vision = _context.sent;\n                _context.next = 6;\n                return vision_bundle/* HandLandmarker */.uq.createFromOptions(vision, {\n                  baseOptions: {\n                    modelAssetPath: hand_landmarker,\n                    delegate: "GPU"\n                  },\n                  runningMode: this.runningMode,\n                  numHands: 1\n                });\n\n              case 6:\n                this.handLandmarker = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context["catch"](0);\n\n              case 11:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function createHandLandmark() {\n        return _createHandLandmark.apply(this, arguments);\n      }\n\n      return createHandLandmark;\n    }()\n  }, {\n    key: "initialize",\n    value: function () {\n      var _initialize = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isold) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.initializeOld();\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.next = 7;\n                return this.createHandLandmark();\n\n              case 7:\n                this.init = true;\n\n              case 8:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }, {\n    key: "initializeOld",\n    value: function () {\n      var _initializeOld = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var onResults;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.isold) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                onResults = this.onResults.bind(this);\n                this.hands = new hands.Hands({\n                  locateFile: function locateFile(file) {\n                    var url = "".concat(PUBLIC_PATH, "/mediapipe/").concat(file); //let url = `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n\n                    return url;\n                  }\n                });\n                this.hands.setOptions({\n                  selfieMode: true,\n                  maxNumHands: 1,\n                  modelComplexity: 0,\n                  minDetectionConfidence: 0.5,\n                  minTrackingConfidence: 0.8\n                });\n                this.hands.onResults(onResults);\n                _context3.next = 7;\n                return this.hands.initialize();\n\n              case 7:\n                this.init = true;\n\n              case 8:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function initializeOld() {\n        return _initializeOld.apply(this, arguments);\n      }\n\n      return initializeOld;\n    }()\n  }, {\n    key: "IsInit",\n    value: function IsInit() {\n      return this.init;\n    }\n  }, {\n    key: "setInit",\n    value: function setInit(state) {\n      this.init = state;\n    }\n  }, {\n    key: "setSelfieMode",\n    value: function () {\n      var _setSelfieMode = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(state) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.isold) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                this.hands.setOptions({\n                  selfieMode: state\n                });\n                _context4.next = 9;\n                break;\n\n              case 4:\n                if (!(this.getState() === state)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt("return");\n\n              case 6:\n                if (state) this.runningMode = "VIDEO";else this.runningMode = "IMAGE"; // console.error(this.runningMode);\n\n                _context4.next = 9;\n                return this.handLandmarker.setOptions({\n                  runningMode: this.runningMode\n                });\n\n              case 9:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setSelfieMode(_x) {\n        return _setSelfieMode.apply(this, arguments);\n      }\n\n      return setSelfieMode;\n    }()\n  }, {\n    key: "getState",\n    value: function getState() {\n      if (this.runningMode === "IMAGE") return false;else return true;\n    }\n  }, {\n    key: "reset",\n    value: function reset() {\n      this.hands.reset();\n    }\n  }, {\n    key: "close",\n    value: function () {\n      var _close = Hands_landmarks_provider_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.hands.close();\n\n              case 2:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }]);\n\n  return HandsLandmarkProvider;\n}();\n;// CONCATENATED MODULE: ./src/assets/svg/positionIcon.svg\n/* harmony default export */ const positionIcon = (__webpack_require__.p + "assets/models/src/assets/svg/positionIcon.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/positionIconSelected.svg\n/* harmony default export */ const positionIconSelected = (__webpack_require__.p + "assets/models/src/assets/svg/positionIconSelected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/scaleIcon.svg\n/* harmony default export */ const scaleIcon = (__webpack_require__.p + "assets/models/src/assets/svg/scaleIcon.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/scaleIconSelected.svg\n/* harmony default export */ const scaleIconSelected = (__webpack_require__.p + "assets/models/src/assets/svg/scaleIconSelected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/fingerIcon.svg\n/* harmony default export */ const fingerIcon = (__webpack_require__.p + "assets/models/src/assets/svg/fingerIcon.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/fingerIconSelected.svg\n/* harmony default export */ const fingerIconSelected = (__webpack_require__.p + "assets/models/src/assets/svg/fingerIconSelected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/indexSelected.svg\n/* harmony default export */ const indexSelected = (__webpack_require__.p + "assets/models/src/assets/svg/indexSelected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/middleSelected.svg\n/* harmony default export */ const middleSelected = (__webpack_require__.p + "assets/models/src/assets/svg/middleSelected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/ringSelected.svg\n/* harmony default export */ const ringSelected = (__webpack_require__.p + "assets/models/src/assets/svg/ringSelected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/littleSelected.svg\n/* harmony default export */ const littleSelected = (__webpack_require__.p + "assets/models/src/assets/svg/littleSelected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/indexUnselected.svg\n/* harmony default export */ const indexUnselected = (__webpack_require__.p + "assets/models/src/assets/svg/indexUnselected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/middleUnselected.svg\n/* harmony default export */ const middleUnselected = (__webpack_require__.p + "assets/models/src/assets/svg/middleUnselected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/ringUnselected.svg\n/* harmony default export */ const ringUnselected = (__webpack_require__.p + "assets/models/src/assets/svg/ringUnselected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/littleUnselected.svg\n/* harmony default export */ const littleUnselected = (__webpack_require__.p + "assets/models/src/assets/svg/littleUnselected.svg");\n;// CONCATENATED MODULE: ./src/js/style_factories.js\n\n\nfunction style_factories_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction style_factories_createClass(Constructor, protoProps, staticProps) { if (protoProps) style_factories_defineProperties(Constructor.prototype, protoProps); if (staticProps) style_factories_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction style_factories_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction style_factories_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar StyleFactories = /*#__PURE__*/style_factories_createClass(function StyleFactories() {\n  style_factories_classCallCheck(this, StyleFactories);\n});\n\nstyle_factories_defineProperty(StyleFactories, "Glasses", "glasses");\n\nstyle_factories_defineProperty(StyleFactories, "Caps", "cap");\n\nstyle_factories_defineProperty(StyleFactories, "Necklace", "necklace");\n\nstyle_factories_defineProperty(StyleFactories, "Earrings", "earring");\n\nstyle_factories_defineProperty(StyleFactories, "Rings", "ring");\n\nstyle_factories_defineProperty(StyleFactories, "Watches", "watch");\n\nstyle_factories_defineProperty(StyleFactories, "Bracelet", "bracelet");\n\nstyle_factories_defineProperty(StyleFactories, "Mangtika", "mangtika");\n\nvar StyleID = /*#__PURE__*/style_factories_createClass(function StyleID() {\n  style_factories_classCallCheck(this, StyleID);\n});\n\nstyle_factories_defineProperty(StyleID, "GlassesTryon", 1);\n\nstyle_factories_defineProperty(StyleID, "CapsTryon", 3);\n\nstyle_factories_defineProperty(StyleID, "NecklaceTryon", 2);\n\nstyle_factories_defineProperty(StyleID, "EarringsTryon", 5);\n\nstyle_factories_defineProperty(StyleID, "RingsTryon", 4);\n\nstyle_factories_defineProperty(StyleID, "WatchesTryon", 0);\n\nstyle_factories_defineProperty(StyleID, "BraceletTryon", 6);\n\nstyle_factories_defineProperty(StyleID, "MangtikaTryon", 7);\n;// CONCATENATED MODULE: ./src/constants/configContants.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar iconLinks = {\n  imgTryOnNormal: "".concat(env/* default */.Z.ASSET_URL, "icons/imagetryon_n.svg"),\n  imgTryOnSelect: "".concat(env/* default */.Z.ASSET_URL, "icons/config_s.svg"),\n  liveTryOnNormal: "".concat(env/* default */.Z.ASSET_URL, "icons/livetryon_n.svg"),\n  liveTryOnSelect: "".concat(env/* default */.Z.ASSET_URL, "icons/livetryon_s.svg"),\n  modelTryOnNormal: "".concat(env/* default */.Z.ASSET_URL, "icons/modeltryon_n.svg"),\n  modelTryOnSelect: "".concat(env/* default */.Z.ASSET_URL, "icons/modeltryon_s.svg")\n};\nvar modelSelectionIcons = {\n  selected: "".concat(env/* default */.Z.ASSET_URL, "icons/modelselection_s.svg")\n};\nvar configContants_iconConfig = [{\n  normalIconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/imagetryon_n.svg"),\n  selectIconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/imagetryon_s.svg"),\n  tag: "imgTryOn",\n  isSelected: false,\n  mutuallyConnected: true,\n  toolTip: "Browse Image"\n}, {\n  normalIconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/livetryon_n.svg"),\n  selectIconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/livetryon_s.svg"),\n  tag: "liveTryOn",\n  isSelected: false,\n  mutuallyConnected: true,\n  toolTip: "Experience Live"\n}, {\n  normalIconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/modeltryon_n.svg"),\n  selectIconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/modeltryon_s.svg"),\n  tag: "modelTryOn",\n  isSelected: false,\n  mutuallyConnected: true,\n  toolTip: "Model Trial"\n}, {\n  normalIconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/config_n.svg"),\n  selectIconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/config_s.svg"),\n  tag: "configScreen",\n  isSelected: false,\n  mutuallyConnected: false,\n  toolTip: "Adjustment"\n}];\nvar sliderConfigurations = [{\n  text: "Shift Vertically",\n  leftText: "Up",\n  rightText: "Down",\n  tag: "vertical",\n  min: -1,\n  max: 1,\n  step: 0.1,\n  defaultValue: 0\n}, {\n  text: "Shift Horizontally",\n  leftText: "Left",\n  rightText: "Right",\n  tag: "horizontal",\n  min: -1,\n  max: 1,\n  step: 0.1,\n  defaultValue: 0\n}, {\n  text: "Zoom",\n  leftText: "Zoom Out",\n  rightText: "Zoom In",\n  tag: "zoom",\n  min: 0.8,\n  max: 1.2,\n  step: 0.03,\n  defaultValue: 1\n}];\nvar distortConfig = {\n  move: [{\n    iconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/move_left_n.svg"),\n    tag: "left"\n  }, {\n    iconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/move_right_n.svg"),\n    tag: "right"\n  }, {\n    iconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/move_up_n.svg"),\n    tag: "up"\n  }, {\n    iconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/move_down_n.svg"),\n    tag: "down"\n  }],\n  zoom: [{\n    iconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/zoom_in_n.svg"),\n    tag: "zoom_in"\n  }, {\n    iconLink: "".concat(env/* default */.Z.ASSET_URL, "icons/zoom_out_n.svg"),\n    tag: "zoom_out"\n  }]\n};\nvar configBottomSheetConfig = {\n  tabs: [{\n    label: "Finger",\n    selectedIcon: fingerIconSelected,\n    tag: "finger",\n    unSelectedIcon: fingerIcon,\n    allowedCategory: ["ring"],\n    selected: false,\n    subComponent: [{\n      type: "fingers",\n      tag: "fingers",\n      defaultValue: 2\n    }]\n  }, {\n    label: "Position",\n    tag: "position",\n    selectedIcon: positionIconSelected,\n    unSelectedIcon: positionIcon,\n    allowedCategory: ["ring", "glasses", "cap", "necklace", "bracelet", "earring", "watch", "mangtika"],\n    selected: false,\n    subComponent: [{\n      type: "slider",\n      tag: "horizontal",\n      leftText: "Left",\n      rightText: "Right",\n      defaultValue: 0,\n      step: 0.01,\n      min: -1,\n      max: 1\n    }, {\n      type: "slider",\n      tag: "vertical",\n      leftText: "Up",\n      rightText: "Down",\n      defaultValue: 0,\n      step: 0.01,\n      min: -1,\n      max: 1\n    }]\n  }, {\n    label: "Scale",\n    tag: "scale",\n    selectedIcon: scaleIconSelected,\n    unSelectedIcon: scaleIcon,\n    allowedCategory: ["ring", "glasses", "cap", "necklace", "bracelet", "earring", "watch", "mangtika"],\n    selected: false,\n    subComponent: [{\n      type: "slider",\n      leftText: "Scale",\n      tag: "scale",\n      defaultValue: 1,\n      step: 0.02,\n      min: 0.8,\n      max: 1.2\n    }]\n  }]\n};\nvar ringIconConfig = [{\n  label: "Index",\n  tag: "index",\n  unSelectedIcon: indexSelected,\n  selectedIcon: indexUnselected\n}, {\n  label: "Middle",\n  tag: "middle",\n  unSelectedIcon: middleSelected,\n  selectedIcon: middleUnselected\n}, {\n  label: "Ring",\n  tag: "ring",\n  unSelectedIcon: ringSelected,\n  selectedIcon: ringUnselected\n}, {\n  label: "Little",\n  tag: "little",\n  unSelectedIcon: littleSelected,\n  selectedIcon: littleUnselected\n}];\nvar ModelsCategories = [StyleFactories.Glasses, StyleFactories.Caps, StyleFactories.Necklace, StyleFactories.Earrings, StyleFactories.Watches, StyleFactories.Bracelet, StyleFactories.Mangtika, StyleFactories.Rings];\n;// CONCATENATED MODULE: ./src/js/utils/sliderHandler.js\n\n\nvar scaleValue = sliderConfigurations[2].defaultValue;\nvar xValue = sliderConfigurations[1].defaultValue;\nvar yValue = sliderConfigurations[0].defaultValue;\nvar ringIndex = 0;\nfunction getScaleSliderValue() {\n  return scaleValue;\n}\nfunction getXSliderValue() {\n  if (getIsVideo()) return xValue;else return -xValue;\n}\nfunction getYSliderValue() {\n  return yValue;\n}\nfunction getRingIndex() {\n  return ringIndex;\n}\nfunction sliderHandler_setRingIndex(index) {\n  ringIndex = index;\n}\nfunction sliderHandler_resetSliderValues() {\n  scaleValue = sliderConfigurations[2].defaultValue;\n  xValue = sliderConfigurations[1].defaultValue;\n  yValue = sliderConfigurations[0].defaultValue;\n  ringIndex = 2;\n}\nfunction setHorizontalValue(value) {\n  var appliedValue;\n\n  if (value || value == 0) {\n    appliedValue = parseFloat(value);\n\n    if (appliedValue > sliderConfigurations[1].max) {\n      xValue = sliderConfigurations[1].max;\n    } else {\n      xValue = -appliedValue;\n    }\n  }\n}\nfunction setVerticalValue(value) {\n  var appliedValue;\n\n  if (value || value == 0) {\n    appliedValue = parseFloat(value);\n\n    if (appliedValue > sliderConfigurations[0].max) {\n      yValue = sliderConfigurations[0].max;\n    } else {\n      yValue = appliedValue;\n    }\n  }\n}\nfunction setScaleValue(value) {\n  var appliedValue;\n\n  if (value || value == 0) {\n    appliedValue = parseFloat(value);\n\n    if (appliedValue > sliderConfigurations[2].max) {\n      scaleValue = sliderConfigurations[2].max;\n    } else {\n      scaleValue = appliedValue;\n    }\n  }\n}\n;// CONCATENATED MODULE: ./src/js/three_components/face_mask.js\n\n\nfunction face_mask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction face_mask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction face_mask_createClass(Constructor, protoProps, staticProps) { if (protoProps) face_mask_defineProperties(Constructor.prototype, protoProps); if (staticProps) face_mask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\nvar FaceMask = /*#__PURE__*/function () {\n  function FaceMask(scene, width, height) {\n    face_mask_classCallCheck(this, FaceMask);\n\n    this.scene = scene;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.faces = null;\n    this.width = width;\n    this.height = height;\n    this.configOffset = 1;\n    this.material = new three_module/* MeshBasicMaterial */.vBJ({// map: texture,\n      // transparent: true,\n      // opacity: 0.5,\n    });\n  }\n\n  face_mask_createClass(FaceMask, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateMaterial",\n    value: function updateMaterial(material) {\n      this.material = material;\n      this.material.needsUpdate = true;\n    }\n  }, {\n    key: "setConfigOffset",\n    value: function setConfigOffset(offset) {\n      this.configOffset = offset;\n    }\n  }, {\n    key: "addFaces",\n    value: function addFaces() {\n      var leftEyeUpper1 = scaleLandmark(this.landmarks[264], this.width, this.height);\n      var rightEyeUpper1 = scaleLandmark(this.landmarks[34], this.width, this.height);\n      var eyeDist = Math.sqrt(Math.pow(leftEyeUpper1.x - rightEyeUpper1.x, 2) + Math.pow(leftEyeUpper1.y - rightEyeUpper1.y, 2) + Math.pow(leftEyeUpper1.z - rightEyeUpper1.z, 2));\n      var geometry = makeGeometry(this.landmarks);\n\n      if (!this.faces) {\n        this.faces = new three_module/* Mesh */.Kj0(geometry, this.material);\n        this.faces.renderOrder = 1;\n        this.faces.envMapIntensity = 1;\n        this.faces.material.colorWrite = false;\n        this.scene.add(this.faces);\n      } else {\n        this.faces.geometry = geometry;\n      }\n\n      this.faces.position.set(-this.width * -0.0005 + getXSliderValue() * this.configOffset * eyeDist, -(getYSliderValue() * this.configOffset * eyeDist), -this.width * 0.07);\n      this.faces.scale.set(this.width, this.height, this.width);\n    }\n  }, {\n    key: "removeFaces",\n    value: function removeFaces() {\n      this.scene.remove(this.faces);\n      this.faces = null;\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        if (this.faces != null) {// this.removeFaces();\n        }\n\n        if (this.landmarks != null) {\n          this.addFaces();\n        }\n\n        this.needsUpdate = false;\n      }\n    }\n  }, {\n    key: "forceUpdate",\n    value: function forceUpdate() {\n      this.addFaces();\n    }\n  }]);\n\n  return FaceMask;\n}();\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.fill.js\nvar es6_array_fill = __webpack_require__(8977);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.function.name.js\nvar es6_function_name = __webpack_require__(6059);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.set-prototype-of.js\nvar es6_object_set_prototype_of = __webpack_require__(8838);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.get-prototype-of.js\nvar es6_object_get_prototype_of = __webpack_require__(1520);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.reflect.construct.js\nvar es6_reflect_construct = __webpack_require__(2139);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.create.js\nvar es6_object_create = __webpack_require__(8132);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.iterator.js\nvar es6_string_iterator = __webpack_require__(9115);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.iterator.js\nvar es6_array_iterator = __webpack_require__(6997);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js\nvar web_dom_iterable = __webpack_require__(1181);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/loaders/GLTFLoader.js + 1 modules\nvar GLTFLoader = __webpack_require__(3867);\n;// CONCATENATED MODULE: ./src/js/three_components/FlickerSmoother.js\n\n\nfunction FlickerSmoother_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction FlickerSmoother_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction FlickerSmoother_createClass(Constructor, protoProps, staticProps) { if (protoProps) FlickerSmoother_defineProperties(Constructor.prototype, protoProps); if (staticProps) FlickerSmoother_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\nvar FlickerSmoother = /*#__PURE__*/function () {\n  function FlickerSmoother() {\n    FlickerSmoother_classCallCheck(this, FlickerSmoother);\n\n    this.currentvector = new three_module/* Vector3 */.Pa4(0, 6, 5);\n    this.params = {\n      floatValue: 0.5 // Initial float value\n\n    };\n  }\n\n  FlickerSmoother_createClass(FlickerSmoother, [{\n    key: "smoothAndFilterLandmarks",\n    value: function smoothAndFilterLandmarks(previousLandmarks, currentLandmarks) {\n      var smoothedPosition = new three_module/* Vector3 */.Pa4();\n      smoothedPosition.lerpVectors(previousLandmarks, currentLandmarks, this.params.floatValue);\n      var distance = currentLandmarks.distanceTo(smoothedPosition);\n      var threshold = this.currentvector.z;\n\n      if (distance > threshold) {\n        smoothedPosition.copy(currentLandmarks);\n      } else {}\n\n      return smoothedPosition;\n    }\n  }]);\n\n  return FlickerSmoother;\n}();\n;// CONCATENATED MODULE: ./src/js/three_components/StyleFactory.js\n\n\nfunction StyleFactory_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction StyleFactory_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction StyleFactory_createClass(Constructor, protoProps, staticProps) { if (protoProps) StyleFactory_defineProperties(Constructor.prototype, protoProps); if (staticProps) StyleFactory_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nvar StyleFactory = /*#__PURE__*/function () {\n  function StyleFactory() {\n    StyleFactory_classCallCheck(this, StyleFactory);\n\n    if (this.constructor === StyleFactory) {\n      throw new Error("Abstract class StyleFactory cannot be instantiated.");\n    }\n  }\n\n  StyleFactory_createClass(StyleFactory, [{\n    key: "createStyle",\n    value: function createStyle(apiResponseData, scene, width, height) {\n      throw new Error("Method createStyle() must be implemented.");\n    }\n  }]);\n\n  return StyleFactory;\n}();\n;// CONCATENATED MODULE: ./src/assets/svg/watch_n.svg\n/* harmony default export */ const watch_n = (__webpack_require__.p + "assets/models/src/assets/svg/watch_n.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/ring_n.svg\n/* harmony default export */ const ring_n = (__webpack_require__.p + "assets/models/src/assets/svg/ring_n.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/bracelet_n.svg\n/* harmony default export */ const bracelet_n = (__webpack_require__.p + "assets/models/src/assets/svg/bracelet_n.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/earring_n.svg\n/* harmony default export */ const earring_n = (__webpack_require__.p + "assets/models/src/assets/svg/earring_n.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/necklace_n.svg\n/* harmony default export */ const necklace_n = (__webpack_require__.p + "assets/models/src/assets/svg/necklace_n.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/glasses_n.svg\n/* harmony default export */ const glasses_n = (__webpack_require__.p + "assets/models/src/assets/svg/glasses_n.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/cap_n.svg\n/* harmony default export */ const cap_n = (__webpack_require__.p + "assets/models/src/assets/svg/cap_n.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/mangtika_n.svg\n/* harmony default export */ const mangtika_n = (__webpack_require__.p + "assets/models/src/assets/svg/mangtika_n.svg");\n;// CONCATENATED MODULE: ./src/js/utils/loadingModelPanel.js\n\n\n\n\n\n\n\n\n\nvar loadingModelPanel = null;\nvar imgElementCache = null;\n\nfunction getIcon(name) {\n  switch (name) {\n    case "watch":\n      return watch_n;\n\n    case "ring":\n      return ring_n;\n\n    case "bracelet":\n      return bracelet_n;\n\n    case "earring":\n      return earring_n;\n\n    case "necklace":\n      return necklace_n;\n\n    case "glasses":\n      return glasses_n;\n\n    case "cap":\n      return cap_n;\n\n    case "mangtika":\n      return mangtika_n;\n  }\n}\n\nfunction setTrackingMsg(message) {\n  loadingModelPanel.innerHTML = message;\n}\nfunction hideLoadingModelPanel() {\n  loadingModelPanel.style.display = "none";\n}\nfunction showLoadingModelPanel(name) {\n  imgElementCache.src = getIcon(name);\n  loadingModelPanel.style.display = "flex";\n}\nfunction setLoadingModelPanelElement(type) {\n  loadingModelPanel = document.querySelector(".loading-model-Panel");\n  var imgElement = document.createElement("img");\n  imgElement.style.position = "absolute";\n  imgElement.style.top = "20%";\n  imgElement.style.height = "35%";\n  imgElement.style.width = "35%";\n  imgElement.src = "".concat(env/* default */.Z.ASSET_URL, "default_icon_web/watch_n.svg");\n  loadingModelPanel.appendChild(imgElement);\n  imgElementCache = imgElement;\n}\n;// CONCATENATED MODULE: ./src/js/utils/distanceMessage.js\n\nvar distanceMessage_msg = null;\nfunction setDistanceMsg(message) {\n  distanceMessage_msg.innerHTML = message;\n}\nfunction hideDistanceMessagePanel() {\n  distanceMessage_msg.style.display = "none";\n}\nfunction showDistanceMessagePanel(url) {\n  distanceMessage_msg.style.display = "flex";\n}\nfunction setDistanceMessageElement() {\n  distanceMessage_msg = document.querySelector(".distanceMessage");\n}\n;// CONCATENATED MODULE: ./src/js/utils/event.js\nvar parentOrigin = "";\nvar wrapper = "web";\nvar setWrapperType = function setWrapperType(type) {\n  wrapper = type; //console.log("wrappertype set ---\x3e" + type);\n};\n\nvar sendMessage = function sendMessage(message) {\n  window.parent !== window.self && //   // window.parent.postMessage(message, parentOrigin);\n  window.parent.postMessage(message, "*"); //console.log("sending data From SDK to client");\n\n  if (wrapper === "android" && window.Android) {\n    window.Android.onLog(JSON.stringify(message));\n  }\n\n  if (wrapper === "ios" && window.webkit && window.webkit.messageHandlers) {\n    window.webkit.messageHandlers.onLog.postMessage(JSON.stringify(message));\n  }\n\n  if (wrapper === "flutter" && window.flutter_inappwebview && window.flutter_inappwebview.callHandler) {\n    // console.log("sending data to flutter" + JSON.stringify(message));\n    window.flutter_inappwebview.callHandler("onLog", JSON.stringify(message));\n  }\n};\n\nvar setParentOrigin = function setParentOrigin(origin) {\n  parentOrigin = origin;\n};\nvar emitInitComplete = function emitInitComplete() {\n  //console.log("Emit init called " + document);\n  sendMessage({\n    type: "init-complete"\n  });\n};\nvar emitModuleLoading = function emitModuleLoading() {\n  sendMessage({\n    type: "loading"\n  });\n};\nvar emitModuleLoaded = function emitModuleLoaded() {\n  sendMessage({\n    type: "loaded"\n  });\n};\nvar emitModuleOpened = function emitModuleOpened() {\n  sendMessage({\n    type: "opened"\n  });\n};\nvar emitModuleClosed = function emitModuleClosed() {\n  sendMessage({\n    type: "closed"\n  });\n};\nvar emitModuleResume = function emitModuleResume() {\n  sendMessage({\n    type: "resume"\n  });\n};\nvar emitModulePause = function emitModulePause() {\n  sendMessage({\n    type: "pause"\n  });\n};\nvar emitCameraOpened = function emitCameraOpened() {\n  sendMessage({\n    type: "camera-opened"\n  });\n};\nvar emitCameraClosed = function emitCameraClosed() {\n  sendMessage({\n    type: "camera-closed"\n  });\n};\nvar emitCameraFailed = function emitCameraFailed() {\n  sendMessage({\n    type: "camera-failed"\n  });\n};\nvar emitCameraAccessIssue = function emitCameraAccessIssue() {\n  sendMessage({\n    type: "camera-access-issue"\n  });\n};\nvar emitPhotoLoaded = function emitPhotoLoaded(base64) {\n  //console.log("emitPhotoLoaded", base64);\n  sendMessage({\n    type: "photo-loaded",\n    payload: {\n      image: base64\n    }\n  });\n};\nvar emitSKUApplied = function emitSKUApplied() {\n  //console.log("a;fjha;shf;a");\n  sendMessage({\n    type: "sku-applied"\n  });\n};\nvar emitSKULoaded = function emitSKULoaded() {\n  //console.log("a;fjha;shf;a");\n  sendMessage({\n    type: "sku-loaded"\n  });\n};\nvar emitSubscriptionIssue = function emitSubscriptionIssue(response) {\n  sendMessage({\n    type: "subscription-invalid",\n    payload: {\n      response: response\n    }\n  });\n};\nvar emitSKUFailed = function emitSKUFailed() {\n  sendMessage({\n    type: "sku-failed"\n  });\n};\nvar emitReset = function emitReset() {\n  sendMessage({\n    type: "reset"\n  });\n};\nvar emitUploadCancelled = function emitUploadCancelled() {\n  sendMessage({\n    type: "upload-cancelled"\n  });\n};\nvar emitUploadStarted = function emitUploadStarted() {\n  sendMessage({\n    type: "upload-started"\n  });\n};\nvar event_emitError = function emitError(payload) {\n  sendMessage({\n    type: "error",\n    payload: payload\n  });\n};\nvar event_emitRecognizationOpen = function emitRecognizationOpen(payload) {\n  //console.log("openRecognizationSDK " + payload);\n  sendMessage({\n    type: "openRecognizationSDK",\n    payload: payload\n  });\n};\nvar emitRecognizationData = function emitRecognizationData(payload) {\n  //console.log("onRecognizationDataRecieve " + payload);\n  sendMessage({\n    type: "onRecognizationDataRecieve",\n    payload: payload\n  });\n};\nvar emitRecognizationDistanceAlert = function emitRecognizationDistanceAlert(payload) {\n  //console.log("onRecognizationDistanceAlert " + payload);\n  sendMessage({\n    type: "onRecognizationDistanceAlert",\n    payload: payload\n  });\n};\nvar emitRecognizationDataToNami = function emitRecognizationDataToNami(payload) {\n  //console.log("onRecognizationDataRecievetonami " + payload);\n  parent.postMessage({\n    type: "onRecognizationDataRecieve",\n    payload: payload\n  }); //console.log("onRecognizationDataRecievetonami success " + payload);\n};\n\nvar sendMessageToAndroid = function sendMessageToAndroid(message) {\n  window.Android.onLog(JSON.stringify(message));\n};\n\nvar sendMessageToIOS = function sendMessageToIOS(message) {\n  var valueToSend = //your data from html\n  window.webkit.messageHandlers.onLog.postMessage(valueToSend);\n}; // export const emitModuleLoaded = () => {\n//   sendMessageToAndroid({ type: "loaded" });\n// };\n;// CONCATENATED MODULE: ./src/js/utils/assetsCache.js\nvar globalCache = {};\nfunction addToGlobalCache(key, value) {\n  if (!globalCache[key]) {\n    globalCache[key] = value; // console.log(`Added to cache: ${key}`);\n  } else {// console.log(`Key ${key} already exists in the cache.`);\n  }\n}\nfunction hasGlobalAssetKey(key) {\n  return !!globalCache[key];\n}\nfunction getGlobalCacheAsset(key) {\n  if (hasGlobalAssetKey(key)) {\n    // console.log(`Retrieved value for key ${key}`);\n    return globalCache[key];\n  } else {\n    //console.log(`Key ${key} does not exist in the cache.`);\n    return null;\n  }\n}\n;// CONCATENATED MODULE: ./src/assets/svg/align_hand.svg\n/* harmony default export */ const align_hand = (__webpack_require__.p + "assets/models/src/assets/svg/align_hand.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/align_face.svg\n/* harmony default export */ const align_face = (__webpack_require__.p + "assets/models/src/assets/svg/align_face.svg");\n;// CONCATENATED MODULE: ./src/js/utils/alignMessagePanel.js\n\n\n\n\nvar alignMessagePanel_Panel = null;\nvar alignMessagePanel_msg = null;\nvar alignMessagePanel_img = null;\nvar CurrentType;\nvar CurrentMsg;\nfunction updateAlignUI(type, message) {\n  if (CurrentType && CurrentMsg && CurrentType === type && CurrentMsg == message) return;\n  setAlignMsg(message);\n  setAlignIcon(type);\n  event_emitError(message);\n  CurrentType = type;\n  CurrentMsg = message;\n}\nfunction setAlignMsg(message) {\n  alignMessagePanel_msg.innerHTML = message;\n}\nfunction setAlignIcon(type) {\n  // if (CurrentType && CurrentType === type) return;\n  // CurrentType = type;\n  switch (type) {\n    case "face":\n      alignMessagePanel_img.src = align_face;\n      break;\n\n    case "hand":\n      alignMessagePanel_img.src = align_hand;\n      break;\n\n    case "ring":\n      alignMessagePanel_img.src = align_hand;\n      break;\n\n    default:\n  }\n}\nfunction hideAlignMessagePanel() {\n  updatePanel("none"); //Panel.style.display = "none";\n}\nfunction showAlignMessagePanel(url) {\n  updatePanel("flex"); // Panel.style.display = "flex";\n}\nvar debouncedUpdatePanel = debounce(function (state) {\n  alignMessagePanel_Panel.style.display = state;\n}, 8); // Adjust delay as needed\n\nfunction updatePanel(state) {\n  debouncedUpdatePanel(state);\n}\n\nfunction setAlignMessageElement() {\n  alignMessagePanel_Panel = document.querySelector(".align-message-panel");\n  alignMessagePanel_msg = document.querySelector(".align-message");\n  alignMessagePanel_img = document.getElementById("align-icon");\n  hideAlignMessagePanel();\n}\n\nfunction debounce(func, delay) {\n  var timerId;\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n\n    timerId = setTimeout(function () {\n      return func.apply(_this, args);\n    }, delay);\n  };\n}\n;// CONCATENATED MODULE: ./src/js/three_components/glasses.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\n\n\n\nfunction glasses_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction glasses_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { glasses_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { glasses_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction glasses_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction glasses_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction glasses_createClass(Constructor, protoProps, staticProps) { if (protoProps) glasses_defineProperties(Constructor.prototype, protoProps); if (staticProps) glasses_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction loadModel(file) {\n  return new Promise(function (res, rej) {\n    var loader = new GLTFLoader/* GLTFLoader */.E();\n    loader.load(file, function (gltf) {\n      res(gltf.scene);\n      addToGlobalCache(file, gltf.scene);\n    }, undefined, function (error) {\n      rej(error);\n    });\n  });\n}\n\nvar Glasses = /*#__PURE__*/function (_StyleFactory) {\n  _inherits(Glasses, _StyleFactory);\n\n  var _super = _createSuper(Glasses);\n\n  function Glasses(scene, width, height, sceneManager) {\n    var _this;\n\n    glasses_classCallCheck(this, Glasses);\n\n    _this = _super.call(this);\n    _this.sceneManager = sceneManager;\n    _this.scene = scene;\n    _this.width = width;\n    _this.height = height;\n    _this.needsUpdate = false;\n    _this.landmarks = null;\n    _this.geometry = new three_module/* SphereGeometry */.xo$(0.1); // Adjust the size of the sphere as needed\n\n    _this.material = new three_module/* MeshBasicMaterial */.vBJ({\n      color: 0xff0000,\n      transparent: true,\n      opacity: 0\n    });\n    _this.root = new three_module/* Mesh */.Kj0(_this.geometry, _this.material);\n    _this.fill;\n    _this.nose;\n    _this.nosepoint;\n    _this.planeMesh;\n    _this.imagewidth;\n    _this.imageheight;\n    _this.planeMesh1;\n    _this.planeMesh2;\n    _this.planeMesh3;\n    _this.planeMesh4;\n    _this.planeMesh5;\n    _this.PrevScale = 1;\n    _this.PrevXValue = 0;\n    _this.PrevYValue = 0;\n    _this.is2d = true;\n    _this.localURL = "".concat(PUBLIC_PATH, "/3d/glasses/01.gltf");\n    _this.localURL2d = ["".concat(PUBLIC_PATH, "/3d/glasses/01_1.png"), "".concat(PUBLIC_PATH, "/3d/glasses/01_2.png"), "".concat(PUBLIC_PATH, "/3d/glasses/01_3.png"), "".concat(PUBLIC_PATH, "/3d/glasses/01_4.png"), "".concat(PUBLIC_PATH, "/3d/glasses/01_5.png"), "".concat(PUBLIC_PATH, "/3d/glasses/01_6.png")];\n    _this.URL = ["".concat(PUBLIC_PATH, "/3d/glasses/01.gltf")]; //this.loadGlasses();\n\n    _this.flickerSmoother = new FlickerSmoother();\n    _this.flickerSmoother.currentvector.y = 1.5;\n    _this.filter = 0;\n    _this.Prevlandmark;\n    _this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevbase = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid2 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.distanceState = -1;\n    _this.prevdistanceState = -1; // const gui = new GUI();\n    // this.currentvector = new THREE.Vector3(0.8, -0.24, 2.9);\n    // const vectorFolder2 = gui.addFolder("Vector Controls");\n    // vectorFolder2.add(this.currentvector, "x", -Math.PI, Math.PI).step(0.001);\n    // vectorFolder2.add(this.currentvector, "y", -Math.PI, Math.PI).step(0.001);\n    // vectorFolder2.add(this.currentvector, "z", -Math.PI, Math.PI).step(0.001);\n    // this.currentvector1 = new THREE.Vector3(2.9, 0.2, -3);\n    // const vectorFolder3 = gui.addFolder(\'Vector Controls1\');\n    // vectorFolder3.add(this.currentvector1, \'x\', -500, 500).step(0.01);\n    // vectorFolder3.add(this.currentvector1, \'y\', -500, 500).step(0.01);\n    // vectorFolder3.add(this.currentvector1, \'z\', -500, 500).step(0.01);\n\n    _this.timeoutId;\n    return _this;\n  }\n\n  glasses_createClass(Glasses, [{\n    key: "debounceLoad",\n    value: function () {\n      var _debounceLoad = glasses_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(AssetURL, is2d) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // AssetURL = null;\n                if (is2d !== undefined && is2d !== null) this.is2d = is2d;\n\n                if (!AssetURL) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.URL = AssetURL;\n                _context2.next = 7;\n                break;\n\n              case 5:\n                return _context2.abrupt("return");\n\n              case 7:\n                showLoadingModelPanel("glasses");\n                this.glasses = null;\n                this.planeMesh = null;\n                this.scale2d = 200; // Clear the previous timeout (if any) to cancel the previous call\n\n                clearTimeout(this.timeoutId); // Set a new timeout to trigger the function after a delay\n\n                this.timeoutId = setTimeout( /*#__PURE__*/glasses_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _this2.loadGlasses(AssetURL);\n\n                        case 2:\n                          _this2.update();\n\n                        case 3:\n                        case "end":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 0); // Adjust the delay as needed (e.g., 500 milliseconds)\n\n              case 13:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function debounceLoad(_x, _x2) {\n        return _debounceLoad.apply(this, arguments);\n      }\n\n      return debounceLoad;\n    }()\n  }, {\n    key: "loadGlasses",\n    value: function () {\n      var _loadGlasses = glasses_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(AssetURL) {\n        var _this3 = this;\n\n        var imageTexture6, imageTexture5, imageTexture4, imageTexture3, imageTexture2, imageTexture1, imageTexture, width5, height5, material2d5, planeGeometry5, width6, height6, material2d6, planeGeometry6, width1, height1, material2d1, planeGeometry1, width2, height2, material2d2, planeGeometry2, material2d3, planeGeometry3, material2d, planeGeometry, bbox, size, geometry, material, geometrynose, materialnose, geometrynosepoint, materialnosepoint;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.is2d) {\n                  _context3.next = 132;\n                  break;\n                }\n\n                this.scaleFactor = 5.3;\n                imageTexture6 = null;\n                imageTexture5 = null;\n                imageTexture4 = null;\n                imageTexture3 = null;\n                imageTexture2 = null;\n                imageTexture1 = null;\n                imageTexture = null;\n\n                if (hasGlobalAssetKey(this.URL[4])) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                _context3.next = 12;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL[4], resolve);\n                });\n\n              case 12:\n                imageTexture5 = _context3.sent;\n                addToGlobalCache(this.URL[4], imageTexture5);\n                _context3.next = 17;\n                break;\n\n              case 16:\n                imageTexture5 = getGlobalCacheAsset(this.URL[4]);\n\n              case 17:\n                width5 = imageTexture5.image.width;\n                height5 = imageTexture5.image.height; // imageTexture.minFilter = THREE.LinearFilter;\n\n                imageTexture5.generateMipmaps = false;\n                imageTexture5.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture5.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture5.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                material2d5 = new three_module/* MeshBasicMaterial */.vBJ({\n                  map: imageTexture5,\n                  // Assign the loaded texture\n                  transparent: true,\n                  // Enable transparency\n                  side: three_module/* DoubleSide */.ehD,\n                  // Make the material visible from both sides of the plane (if needed)\n                  toneMapped: false\n                });\n                material2d5.depthWrite = false;\n                material2d5.needsUpdate = true;\n                planeGeometry5 = new three_module/* PlaneGeometry */._12(-width5 / this.scale2d, height5 / this.scale2d);\n                this.planeMesh4 = new three_module/* Mesh */.Kj0(planeGeometry5, material2d5);\n                this.planeMesh4.renderOrder = 2;\n\n                if (hasGlobalAssetKey(this.URL[5])) {\n                  _context3.next = 36;\n                  break;\n                }\n\n                _context3.next = 32;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL[5], resolve);\n                });\n\n              case 32:\n                imageTexture6 = _context3.sent;\n                addToGlobalCache(this.URL[5], imageTexture6);\n                _context3.next = 37;\n                break;\n\n              case 36:\n                imageTexture6 = getGlobalCacheAsset(this.URL[5]);\n\n              case 37:\n                width6 = imageTexture6.image.width;\n                height6 = imageTexture6.image.height; // imageTexture.minFilter = THREE.LinearFilter;\n\n                imageTexture6.generateMipmaps = false;\n                imageTexture6.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture6.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture6.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                material2d6 = new three_module/* MeshBasicMaterial */.vBJ({\n                  map: imageTexture6,\n                  // Assign the loaded texture\n                  transparent: true,\n                  // Enable transparency\n                  side: three_module/* DoubleSide */.ehD,\n                  // Make the material visible from both sides of the plane (if needed)\n                  toneMapped: false\n                });\n                material2d6.depthWrite = false;\n                material2d6.needsUpdate = true;\n                planeGeometry6 = new three_module/* PlaneGeometry */._12(width6 / this.scale2d, height6 / this.scale2d);\n                this.planeMesh5 = new three_module/* Mesh */.Kj0(planeGeometry6, material2d6);\n                this.planeMesh5.renderOrder = 2;\n\n                if (hasGlobalAssetKey(this.URL[2])) {\n                  _context3.next = 56;\n                  break;\n                }\n\n                _context3.next = 52;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL[2], resolve);\n                });\n\n              case 52:\n                imageTexture1 = _context3.sent;\n                addToGlobalCache(this.URL[2], imageTexture1);\n                _context3.next = 57;\n                break;\n\n              case 56:\n                imageTexture1 = getGlobalCacheAsset(this.URL[2]);\n\n              case 57:\n                width1 = imageTexture1.image.width;\n                height1 = imageTexture1.image.height; // imageTexture.minFilter = THREE.LinearFilter;\n\n                imageTexture1.generateMipmaps = false;\n                imageTexture1.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture1.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture1.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                material2d1 = new three_module/* MeshBasicMaterial */.vBJ({\n                  map: imageTexture1,\n                  // Assign the loaded texture\n                  transparent: true,\n                  // Enable transparency\n                  side: three_module/* DoubleSide */.ehD,\n                  // Make the material visible from both sides of the plane (if needed)\n                  toneMapped: false\n                });\n                material2d1.depthWrite = false;\n                material2d1.needsUpdate = true;\n                planeGeometry1 = new three_module/* PlaneGeometry */._12(-width1 / this.scale2d, height1 / this.scale2d);\n\n                if (hasGlobalAssetKey(this.URL[3])) {\n                  _context3.next = 74;\n                  break;\n                }\n\n                _context3.next = 70;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL[3], resolve);\n                });\n\n              case 70:\n                imageTexture2 = _context3.sent;\n                addToGlobalCache(this.URL[3], imageTexture2);\n                _context3.next = 75;\n                break;\n\n              case 74:\n                imageTexture2 = getGlobalCacheAsset(this.URL[3]);\n\n              case 75:\n                width2 = imageTexture2.image.width;\n                height2 = imageTexture2.image.height; // imageTexture.minFilter = THREE.LinearFilter;\n\n                imageTexture2.generateMipmaps = false;\n                imageTexture2.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture2.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture2.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                material2d2 = new three_module/* MeshBasicMaterial */.vBJ({\n                  map: imageTexture2,\n                  // Assign the loaded texture\n                  transparent: true,\n                  // Enable transparency\n                  side: three_module/* DoubleSide */.ehD,\n                  // Make the material visible from both sides of the plane (if needed)\n                  toneMapped: false\n                });\n                material2d2.depthWrite = false;\n                material2d2.needsUpdate = true;\n                planeGeometry2 = new three_module/* PlaneGeometry */._12(width2 / this.scale2d, height2 / this.scale2d);\n                this.planeMesh1 = new three_module/* Mesh */.Kj0(planeGeometry1, material2d1);\n                this.planeMesh1.renderOrder = 2;\n                this.planeMesh2 = new three_module/* Mesh */.Kj0(planeGeometry2, material2d2);\n                this.planeMesh2.renderOrder = 2;\n\n                if (hasGlobalAssetKey(this.URL[0])) {\n                  _context3.next = 96;\n                  break;\n                }\n\n                _context3.next = 92;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL[0], resolve);\n                });\n\n              case 92:\n                imageTexture3 = _context3.sent;\n                addToGlobalCache(this.URL[0], imageTexture3);\n                _context3.next = 97;\n                break;\n\n              case 96:\n                imageTexture3 = getGlobalCacheAsset(this.URL[0]);\n\n              case 97:\n                imageTexture3.generateMipmaps = false;\n                imageTexture3.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture3.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture3.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                this.imagewidth3 = imageTexture3.image.width;\n                this.imageheight3 = imageTexture3.image.height; //console.log("1::" + this.imagewidth);\n\n                material2d3 = new three_module/* MeshBasicMaterial */.vBJ({\n                  map: imageTexture3,\n                  // Assign the loaded texture\n                  transparent: true,\n                  // Enable transparency\n                  side: three_module/* DoubleSide */.ehD,\n                  // Make the material visible from both sides of the plane (if needed)\n                  toneMapped: false\n                });\n                material2d3.metalness = 1;\n                material2d3.envMapIntensity = 1;\n                material2d3.needsUpdate = true; //material2d1.toneMapped = false;\n\n                planeGeometry3 = new three_module/* PlaneGeometry */._12(this.imagewidth3 / this.scale2d, this.imageheight3 / this.scale2d, this.imagewidth3 / this.scale2d);\n                this.planeMesh3 = new three_module/* Mesh */.Kj0(planeGeometry3, material2d3);\n                this.planeMesh3.renderOrder = 2;\n\n                if (hasGlobalAssetKey(this.URL[1])) {\n                  _context3.next = 117;\n                  break;\n                }\n\n                _context3.next = 113;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL[1], resolve);\n                });\n\n              case 113:\n                imageTexture = _context3.sent;\n                addToGlobalCache(this.URL[1], imageTexture);\n                _context3.next = 118;\n                break;\n\n              case 117:\n                imageTexture = getGlobalCacheAsset(this.URL[1]);\n\n              case 118:\n                imageTexture.generateMipmaps = false;\n                imageTexture.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                this.imagewidth = imageTexture.image.width;\n                this.imageheight = imageTexture.image.height;\n                material2d = new three_module/* MeshBasicMaterial */.vBJ({\n                  map: imageTexture,\n                  // Assign the loaded texture\n                  transparent: true,\n                  // Enable transparency\n                  side: three_module/* DoubleSide */.ehD,\n                  // Make the material visible from both sides of the plane (if needed)\n                  toneMapped: false\n                }); // const material2d = new THREE.MeshPhysicalMaterial({\n                //   map: imageTexture,\n                //   transparent: true,\n                //   side: THREE.FrontSide,\n                //   roughness: 0,\n                //   metalness: 1,\n                //   toneMapped: false,\n                //   envMapIntensity: 1,\n                // });\n                // material2d.metalness = 1;\n                // material2d.envMapIntensity = 1;\n                // material2d.roughness = 0;\n\n                material2d.needsUpdate = true; //material2d1.toneMapped = false;\n\n                planeGeometry = new three_module/* PlaneGeometry */._12(this.imagewidth / this.scale2d, this.imageheight / this.scale2d, this.imagewidth / this.scale2d);\n                this.planeMesh = new three_module/* Mesh */.Kj0(planeGeometry, material2d);\n                this.planeMesh.renderOrder = 2;\n                this.planeMesh.name = "glasses";\n                _context3.next = 149;\n                break;\n\n              case 132:\n                if (hasGlobalAssetKey(this.URL[0])) {\n                  _context3.next = 138;\n                  break;\n                }\n\n                _context3.next = 135;\n                return loadModel(this.URL[0]);\n\n              case 135:\n                this.glasses = _context3.sent;\n                _context3.next = 139;\n                break;\n\n              case 138:\n                this.glasses = getGlobalCacheAsset(this.URL[0]);\n\n              case 139:\n                //hideLoadingModelPanel();\n                // scale glasses\n                bbox = new three_module/* Box3 */.ZzF().setFromObject(this.glasses);\n                size = bbox.getSize(new three_module/* Vector3 */.Pa4());\n                this.scaleFactor = 5.6;\n                this.glasses.name = "glasses";\n                this.glasses.traverse(function (child) {\n                  if (child.isMesh) {\n                    //if (child.material.metalness > 1) child.material.metalness = 1;\n                    // if (child.material.name.toLowerCase().includes("glass")) {\n                    //   child.material.transparent = true; // Enable transparency\n                    //   child.material.opacity = 0.8;\n                    // }\n                    //(child.material.name);\n                    // child.material.side = THREE.DoubleSide;\n                    // child.material.envMapIntensity = 1;\n                    child.renderOrder = 2; // child.material.toneMapped = false;\n                  }\n                });\n                geometry = new three_module/* SphereGeometry */.xo$(3.4);\n                material = new three_module/* MeshBasicMaterial */.vBJ({\n                  color: 0xff0000 // transparent: true,\n                  // opacity: 0.5,\n\n                });\n                this.fill = new three_module/* Mesh */.Kj0(geometry, material);\n                this.fill.renderOrder = 1; //this.fill.receiveShadow = true;\n\n                this.fill.material.colorWrite = false;\n\n              case 149:\n                geometrynose = new three_module/* BoxGeometry */.DvJ(1.5, 1.5, 1.7);\n                materialnose = new three_module/* MeshBasicMaterial */.vBJ({\n                  color: 0xff0000 // transparent: true,\n                  // opacity: 0.5,\n\n                });\n                this.nose = new three_module/* Mesh */.Kj0(geometrynose, materialnose);\n                this.nose.renderOrder = 1;\n                this.nose.scale.set(0.2, 0.2, 1);\n                this.nose.rotation.set(-0.02, 0.01, 1.25);\n                this.nose.position.set(0.05, 0.17, 0.57);\n                this.nose.material.colorWrite = false;\n                geometrynosepoint = new three_module/* SphereGeometry */.xo$(1.5);\n                materialnosepoint = new three_module/* MeshBasicMaterial */.vBJ({\n                  color: 0xff0000 // transparent: true,\n                  // opacity: 0.5,\n\n                });\n                this.nosepoint = new three_module/* Mesh */.Kj0(geometrynosepoint, materialnosepoint);\n                this.nosepoint.renderOrder = 1;\n                this.nosepoint.scale.set(1, 1, 0.2); //this.nosepoint.rotation.set(-0.02, 0.01, 1.25);\n\n                this.nosepoint.position.set(0.45, 0, 0.9);\n                this.nosepoint.material.colorWrite = false;\n                this.nose.add(this.nosepoint);\n\n                if (this.sceneManager.isVideo) {\n                  this.flickerSmoother.currentvector.y = 1.5;\n                } else {\n                  this.flickerSmoother.currentvector.y = 10;\n                }\n\n                hideLoadingModelPanel();\n                emitSKUApplied();\n\n              case 168:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadGlasses(_x3) {\n        return _loadGlasses.apply(this, arguments);\n      }\n\n      return loadGlasses;\n    }()\n  }, {\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; // this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateGlasses",\n    value: function updateGlasses() {\n      // Points for reference\n      // https://raw.githubusercontent.com/google/mediapipe/master/mediapipe/modules/face_geometry/data/canonical_face_model_uv_visualization.png\n      // if (this.filter < this.flickerSmoother.currentvector.x) {\n      //   this.filter += 1;\n      //   return;\n      // }\n      // this.filter = 0;\n      if (!this.landmarks) return;\n\n      if (this.sceneManager) {\n        this.flickerSmoother.params.floatValue = 1;\n\n        if (this.sceneManager.isVideo) {\n          this.flickerSmoother.currentvector.y = 6;\n        } else {\n          this.flickerSmoother.currentvector.y = 10;\n        }\n      }\n\n      if (this.sceneManager.shouldForceHideTryons()) {\n        this.calculateDistance(scaleLandmark(this.landmarks[300], this.width, this.height).x, scaleLandmark(this.landmarks[70], this.width, this.height).x);\n      } else {\n        this.distanceState = -1;\n        this.prevdistanceState = -1;\n      }\n\n      var midEyes = scaleLandmark(this.landmarks[168], this.width, this.height);\n      var leftEyeInnerCorner = scaleLandmark(this.landmarks[463], this.width, this.height);\n      var rightEyeInnerCorner = scaleLandmark(this.landmarks[243], this.width, this.height);\n      var noseBottom = scaleLandmark(this.landmarks[2], this.width, this.height);\n      var midEyes5 = scaleLandmark(this.landmarks[197], this.width, this.height);\n      var rightEyeInnerCorner5 = scaleLandmark(this.landmarks[196], this.width, this.height);\n      var noseBottom5 = scaleLandmark(this.landmarks[195], this.width, this.height); // These points seem appropriate 446, 265, 372, 264\n\n      var leftEyeUpper1 = scaleLandmark(this.landmarks[264], this.width, this.height); // These points seem appropriate 226, 35, 143, 34\n\n      var rightEyeUpper1 = scaleLandmark(this.landmarks[34], this.width, this.height);\n      var tempPrevlandmark = new three_module/* Vector3 */.Pa4(midEyes5.x, midEyes5.y, midEyes5.z);\n      var difference = this.Prevlandmark.distanceTo(tempPrevlandmark);\n\n      if (difference > 0 || this.PrevScale !== getScaleSliderValue() || this.PrevXValue !== getXSliderValue() || this.PrevYValue !== getYSliderValue()) {\n        if (!this.is2d && this.glasses || this.is2d && this.planeMesh) {\n          if (this.sceneManager.shouldForceHideTryons()) {\n            this.hide();\n          } else {\n            this.show();\n          }\n\n          var tempbase = new three_module/* Vector3 */.Pa4(midEyes5.x, midEyes5.y, midEyes5.z);\n          var tempmid1 = new three_module/* Vector3 */.Pa4(rightEyeInnerCorner5.x, rightEyeInnerCorner5.y, rightEyeInnerCorner5.z);\n          var tempmid2 = new three_module/* Vector3 */.Pa4(noseBottom5.x, noseBottom5.y, noseBottom5.z); // midEyes5 = this.flickerSmoother.smoothAndFilterLandmarks(\n          //   this.prevbase,\n          //   tempbase\n          // );\n          // rightEyeInnerCorner5 = this.flickerSmoother.smoothAndFilterLandmarks(\n          //   this.prevmid,\n          //   tempmid1\n          // );\n          // noseBottom5 = this.flickerSmoother.smoothAndFilterLandmarks(\n          //   this.prevmid2,\n          //   tempmid2\n          // );\n          // this.prevbase = tempbase;\n          // this.prevmid = tempmid1;\n          // this.prevmid2 = tempmid2;\n          // position\n          // scale to make glasses\n          // as wide as distance between\n          // left eye corner and right eye corner\n\n          var eyeDist = Math.sqrt(Math.pow(leftEyeUpper1.x - rightEyeUpper1.x, 2) + Math.pow(leftEyeUpper1.y - rightEyeUpper1.y, 2) + Math.pow(leftEyeUpper1.z - rightEyeUpper1.z, 2));\n          var scale = (eyeDist / this.scaleFactor + 1) * getScaleSliderValue();\n          this.root.scale.set(scale, scale, scale);\n          this.root.position.set(midEyes.x + 1.5 / scale + getXSliderValue() * 0.7 * scale, midEyes.y - getYSliderValue() * 0.7 * scale, midEyes.z); // use two vectors to rotate glasses\n          // Vertical Vector from midEyes to noseBottom\n          // is used for calculating rotation around x and z axis\n          // Horizontal Vector from leftEyeCorner to rightEyeCorner\n          // us use to calculate rotation around y axis\n\n          /*\n          let upVector = new THREE.Vector3(\n            midEyes.x - noseBottom.x,\n            midEyes.y - noseBottom.y,\n            midEyes.z - noseBottom.z,\n          ).normalize();\n             let sideVector = new THREE.Vector3(\n            leftEyeInnerCorner.x - rightEyeInnerCorner.x,\n            leftEyeInnerCorner.y - rightEyeInnerCorner.y,\n            leftEyeInnerCorner.z - rightEyeInnerCorner.z,\n          ).normalize();\n             let zRot = (new THREE.Vector3(1, 0, 0)).angleTo(\n            upVector.clone().projectOnPlane(\n              new THREE.Vector3(0, 0, 1)\n            )\n          ) - (Math.PI / 2)\n             let xRot = (Math.PI / 2) - (new THREE.Vector3(0, 0, 1)).angleTo(\n            upVector.clone().projectOnPlane(\n              new THREE.Vector3(1, 0, 0)\n            )\n          );\n             let yRot = (\n            new THREE.Vector3(sideVector.x, 0, sideVector.z)\n          ).angleTo(new THREE.Vector3(0, 0, 1)) - (Math.PI / 2);\n             //this.glasses.rotation.set(xRot + this.currentvector.x, yRot + this.currentvector.y, (zRot - (yRot * 0.15)) + this.currentvector.z);\n          this.glasses.rotation.set(xRot, yRot, zRot);\n             */\n\n          var forwardDirection = new three_module/* Vector3 */.Pa4().subVectors(noseBottom5, midEyes5);\n          var rightDirection = new three_module/* Vector3 */.Pa4().subVectors(rightEyeInnerCorner5, midEyes5);\n          var upDirection = new three_module/* Vector3 */.Pa4().crossVectors(forwardDirection, rightDirection).normalize();\n          var quaternion = new three_module/* Quaternion */._fP();\n          quaternion.setFromRotationMatrix(new three_module/* Matrix4 */.yGw().lookAt(forwardDirection, new three_module/* Vector3 */.Pa4(0, 0, 0), upDirection)); // console.log(\n          //   "dir",\n          //   rightDirection.x,\n          //   rightDirection.y,\n          //   rightDirection.z\n          // );\n          // quaternion.set(quaternion.x, quaternion.y, quaternion.z);\n          //const finalrot = new THREE.Quaternion().slerp(rotateRoot.quaternion, quaternion, animationCurve.evaluate(speedcal * time.deltaTime));\n\n          this.root.quaternion.copy(quaternion);\n\n          if (rightDirection.z < -14 || rightDirection.z > 8) {\n            setAlignMsg("Turn on your camera and keep your face align to it.");\n            setAlignIcon("face");\n            showAlignMessagePanel(); // setTrackingMsg("Tracking lost. <br>Point your hand towards camera.");\n            // showTrackingMsg();\n\n            if (!this.is2d) this.glasses.visible = false;else this.planeMesh.visible = false;\n          } else {\n            hideAlignMessagePanel();\n            if (!this.is2d) this.glasses.visible = true;else this.planeMesh.visible = true;\n          } //this.glasses.rotation.set(this.currentvector.x, this.currentvector.y, this.currentvector.z);\n\n\n          if (this.is2d) {\n            this.planeMesh.position.set(0.02, 0.15, 0.4);\n            this.planeMesh.rotation.set(0.85, -0.26, 2.92);\n            this.planeMesh1.rotation.set(0, -1.56, 0);\n            this.planeMesh1.position.set(2.75, 0, -2.81);\n            this.planeMesh2.position.set(-2.72, 0, -2.8);\n            this.planeMesh2.rotation.set(0, -1.6, 0);\n            this.planeMesh4.rotation.set(0, -1.56, 0);\n            this.planeMesh4.position.set(2.74, 0, -2.81);\n            this.planeMesh5.position.set(-2.71, 0, -2.8);\n            this.planeMesh5.rotation.set(0, -1.6, 0); //this.planeMesh3.position.set(0, 0, 1);\n            // this.planeMesh3.rotation.set(0, 0, 0);\n          }\n\n          this.Prevlandmark = tempPrevlandmark;\n          this.PrevScale = getScaleSliderValue();\n          this.PrevXValue = getXSliderValue();\n          this.PrevYValue = getYSliderValue();\n        } //this.fill.visible = false;\n\n      }\n    }\n  }, {\n    key: "addGlasses",\n    value: function addGlasses() {\n      // if (this.is2d) {\n      if (this.planeMesh) {\n        this.scene.add(this.root); // this.root.add(this.fill);\n\n        this.root.add(this.nose);\n        this.root.add(this.planeMesh);\n        this.planeMesh.add(this.planeMesh1);\n        this.planeMesh.add(this.planeMesh2);\n        this.planeMesh.add(this.planeMesh3);\n        this.planeMesh.add(this.planeMesh4);\n        this.planeMesh.add(this.planeMesh5); //("planeMesh child added");\n\n        this.root.position.set(0, 0, -70); // this.fill.position.set(1.4, 4, -3.7);\n        // this.fill.rotation.set(0, 0, 0);\n      } // } else {\n\n\n      if (this.glasses) {\n        this.scene.add(this.root);\n        this.root.add(this.glasses);\n        this.root.add(this.fill);\n        this.root.add(this.nose);\n        this.glasses.rotation.set(0.84, -0.25, 2.93);\n        this.fill.position.set(1.4, 4, -3.7);\n        this.fill.rotation.set(0, 0, 0);\n      } //}\n\n    }\n  }, {\n    key: "remove",\n    value: function remove() {\n      //console.log("removing");\n      if (this.is2d) {\n        //console.log("removing 2d");\n        if (this.planeMesh) {\n          // console.log(this.planeMesh.children.length);\n          this.planeMesh.remove(this.planeMesh1);\n          this.planeMesh.remove(this.planeMesh2);\n          this.planeMesh.remove(this.planeMesh3);\n          this.planeMesh.remove(this.planeMesh4);\n          this.planeMesh.remove(this.planeMesh5); //console.log("removing root");\n\n          this.root.remove(this.nose);\n          this.root.remove(this.planeMesh);\n          this.scene.remove(this.root);\n        }\n      } else {\n        if (this.glasses) {\n          while (this.root.children.length > 0) {\n            this.root.remove(this.root.children[0]);\n          }\n\n          this.scene.remove(this.root);\n        }\n      }\n\n      this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    }\n  }, {\n    key: "hide",\n    value: function hide() {\n      if (this.root) {\n        this.root.visible = false;\n      }\n    }\n  }, {\n    key: "show",\n    value: function show() {\n      if (this.root) {\n        this.root.visible = true;\n      }\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        var inScene = !!this.scene.getObjectByName("glasses");\n        var shouldShow = !!this.landmarks;\n\n        if (inScene) {\n          shouldShow ? this.updateGlasses() : this.remove();\n        } else {\n          if (shouldShow) {\n            this.addGlasses();\n            this.updateGlasses();\n          }\n        }\n      }\n    }\n  }, {\n    key: "focalLength",\n    value: function focalLength(depthToFace, eyeToEye, eyeToEyeInPixel) {\n      return eyeToEyeInPixel * depthToFace / eyeToEye;\n    } // Function to find distance based on focal length, eye-to-eye in pixels, and width calculated\n\n  }, {\n    key: "distanceFinder",\n    value: function distanceFinder(focalLength, eyeToEyeInPixel, widthCalculated) {\n      var distance = eyeToEyeInPixel * focalLength / widthCalculated;\n      return distance - 6;\n    } // Function to categorize depth based on distance\n\n  }, {\n    key: "categorizeDepth",\n    value: function categorizeDepth(distance) {\n      var smallThreshold = 70;\n      var mediumThreshold = 110;\n      var msg = null;\n\n      if (distance < smallThreshold) {\n        this.distanceState = 0; //emitRecognizationDistanceAlert("TOO_CLOSE");\n\n        msg = "TOO_CLOSE"; // showDistanceMessagePanel();\n        // setDistanceMsg("Too Close");\n      } else if (distance > mediumThreshold) {\n        this.distanceState = 1; //emitRecognizationDistanceAlert("TOO_FAR");\n\n        msg = "TOO_FAR"; // showDistanceMessagePanel();\n        // setDistanceMsg("Too far");\n      } else {\n        this.distanceState = 2; //emitRecognizationDistanceAlert("PERFECT");\n\n        msg = "PERFECT"; //hideDistanceMessagePanel();\n      }\n\n      if (this.distanceState !== this.prevdistanceState) {\n        if (msg) {\n          emitRecognizationDistanceAlert(msg);\n        }\n\n        this.prevdistanceState = this.distanceState;\n      }\n\n      return distance > smallThreshold && distance < mediumThreshold ? false : true;\n    }\n  }, {\n    key: "calculateDistance",\n    value: function calculateDistance(lefteye, righteyes) {\n      var eyeToEye = 13.0;\n      var depthToFace = 48.0;\n      var eyeToEyeInPixel = 384.5; // Calculate focal length\n\n      var calculatedFocalLength = this.focalLength(depthToFace, eyeToEye, eyeToEyeInPixel); // Calculate eye measurement (assuming x_300 and x_70 are defined)\n\n      var x_300 = lefteye;\n      var x_70 = righteyes;\n      var eyeMeasurement = Math.abs(x_300 - x_70); // Calculate distance\n\n      var calculatedDistance = this.distanceFinder(calculatedFocalLength, eyeToEye, eyeMeasurement); // Categorize depth based on distance\n\n      var categorizedDepth = this.categorizeDepth(calculatedDistance); // Use the calculated values as needed\n      // console.log("Calculated Focal Length:", calculatedFocalLength);\n      // console.log("Calculated Distance:", calculatedDistance);\n      // console.log("Categorized Depth:", categorizedDepth);\n    }\n  }]);\n\n  return Glasses;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/js/three_components/necklace.js\nfunction necklace_typeof(obj) { "@babel/helpers - typeof"; return necklace_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, necklace_typeof(obj); }\n\n\n\nfunction necklace_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction necklace_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { necklace_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { necklace_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction necklace_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction necklace_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction necklace_createClass(Constructor, protoProps, staticProps) { if (protoProps) necklace_defineProperties(Constructor.prototype, protoProps); if (staticProps) necklace_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction necklace_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) necklace_setPrototypeOf(subClass, superClass); }\n\nfunction necklace_setPrototypeOf(o, p) { necklace_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return necklace_setPrototypeOf(o, p); }\n\nfunction necklace_createSuper(Derived) { var hasNativeReflectConstruct = necklace_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = necklace_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = necklace_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return necklace_possibleConstructorReturn(this, result); }; }\n\nfunction necklace_possibleConstructorReturn(self, call) { if (call && (necklace_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return necklace_assertThisInitialized(self); }\n\nfunction necklace_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction necklace_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction necklace_getPrototypeOf(o) { necklace_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return necklace_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction necklace_loadModel(file) {\n  return new Promise(function (res, rej) {\n    var loader = new GLTFLoader/* GLTFLoader */.E();\n    loader.load(file, function (gltf) {\n      res(gltf.scene);\n    }, undefined, function (error) {\n      rej(error);\n    });\n  });\n}\n\nvar Necklace = /*#__PURE__*/function (_StyleFactory) {\n  necklace_inherits(Necklace, _StyleFactory);\n\n  var _super = necklace_createSuper(Necklace);\n\n  function Necklace(scene, width, height, sceneManager) {\n    var _this;\n\n    necklace_classCallCheck(this, Necklace);\n\n    _this = _super.call(this);\n    _this.sceneManager = sceneManager;\n    _this.scene = scene;\n    _this.width = width;\n    _this.height = height;\n    _this.needsUpdate = false;\n    _this.landmarks = null;\n    _this.geometry = new three_module/* SphereGeometry */.xo$(0.1); // Adjust the size of the sphere as needed\n\n    _this.material = new three_module/* MeshBasicMaterial */.vBJ({\n      color: 0xff0000,\n      transparent: true,\n      opacity: 0\n    });\n    _this.root = new three_module/* Mesh */.Kj0(_this.geometry, _this.material);\n    _this.flickerSmoother = new FlickerSmoother();\n    _this.flickerSmoother.currentvector.y = 1; // if (AssetURL)\n    //   this.URL = AssetURL;\n    // else\n\n    _this.localURL = "".concat(PUBLIC_PATH, "/3d/necklace/01.png");\n    _this.URL = "".concat(PUBLIC_PATH, "/3d/necklace/01.png");\n    _this.Prevlandmark;\n    _this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevbase = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid2 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid3 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid4 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid5 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.planeMesh = null;\n    _this.SpriteMesh = null; // this.SpriteMeshLeft = null;\n    // this.SpriteMeshRight = null;\n\n    _this.imageWidth = null;\n    _this.imageHeight = null;\n    _this.imageWidthLeft = null;\n    _this.imageHeightleft = null;\n    _this.is2d = true;\n    _this.Scale = 1;\n    _this.PrevScale = 1;\n    _this.PrevXValue = 0;\n    _this.PrevYValue = 0; //this.loadNecklace(this.URL);\n    // const gui = new GUI();\n    // this.currentvector = new THREE.Vector3(1, -0.3, 3);\n    // const vectorFolder2 = gui.addFolder(\'Vector Controls\');\n    // vectorFolder2.add(this.currentvector, \'x\', -Math.PI, Math.PI).step(0.001);\n    // vectorFolder2.add(this.currentvector, \'y\', -Math.PI, Math.PI).step(0.001);\n    // vectorFolder2.add(this.currentvector, \'z\', -Math.PI, Math.PI).step(0.001);\n    // Add a controller to the GUI\n\n    _this.timeoutId;\n    return _this;\n  }\n\n  necklace_createClass(Necklace, [{\n    key: "debounceLoad",\n    value: function () {\n      var _debounceLoad = necklace_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(AssetURL, is2d) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //AssetURL = null;\n                if (is2d !== undefined && is2d !== null) this.is2d = is2d;\n\n                if (!AssetURL) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.URL = AssetURL;\n                _context2.next = 7;\n                break;\n\n              case 5:\n                return _context2.abrupt("return");\n\n              case 7:\n                showLoadingModelPanel("necklace"); // Clear the previous timeout (if any) to cancel the previous call\n\n                clearTimeout(this.timeoutId); // Set a new timeout to trigger the function after a delay\n\n                this.timeoutId = setTimeout( /*#__PURE__*/necklace_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _this2.loadNecklace(AssetURL);\n\n                        case 2:\n                          _this2.update();\n\n                        case 3:\n                        case "end":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 0); // Adjust the delay as needed (e.g., 500 milliseconds)\n\n              case 10:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function debounceLoad(_x, _x2) {\n        return _debounceLoad.apply(this, arguments);\n      }\n\n      return debounceLoad;\n    }()\n  }, {\n    key: "loadNecklace",\n    value: function () {\n      var _loadNecklace = necklace_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(AssetURL) {\n        var _this3 = this;\n\n        var imageTexture, materialSprite, bbox, size;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.is2d) {\n                  _context3.next = 30;\n                  break;\n                }\n\n                //if (AssetURL) this.URL = AssetURL; else this.URL = this.localURL;\n                imageTexture = null;\n\n                if (hasGlobalAssetKey(this.URL)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 5;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL, resolve);\n                });\n\n              case 5:\n                imageTexture = _context3.sent;\n                addToGlobalCache(this.URL, imageTexture);\n                _context3.next = 10;\n                break;\n\n              case 9:\n                imageTexture = getGlobalCacheAsset(this.URL);\n\n              case 10:\n                hideLoadingModelPanel();\n                emitSKUApplied();\n                imageTexture.generateMipmaps = false;\n                imageTexture.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                imageTexture.needsUpdate = true; //imageTexture.generateMipmaps = false;\n\n                this.imageWidth = imageTexture.image.width;\n                this.imageHeight = imageTexture.image.height;\n                this.scaleFactor = 1.8; //imageTexture.colorSpace = THREE.SRGBColorSpace;\n\n                materialSprite = new three_module/* SpriteMaterial */.xeV({\n                  map: imageTexture,\n                  transparent: true,\n                  side: three_module/* DoubleSide */.ehD\n                }); // materialSprite.precision = \'highp\';\n\n                materialSprite.depthWrite = false;\n                materialSprite.needsUpdate = true;\n                materialSprite.toneMapped = false; // Create a sprite and set its material\n\n                this.SpriteMesh = new three_module/* Sprite */.jyi(materialSprite);\n                this.SpriteMesh.scale.set(this.imageWidth, this.imageHeight, 1); // Set the sprite\'s size\n\n                this.SpriteMesh.position.set(0, 0, 0); // Set the sprite\'s position in the scene\n\n                this.SpriteMesh.name = "Necklace";\n                _context3.next = 39;\n                break;\n\n              case 30:\n                //if (AssetURL) this.URL = AssetURL; else this.URL = this.localURL;\n                this.Necklace = null;\n                _context3.next = 33;\n                return necklace_loadModel(this.URL);\n\n              case 33:\n                this.Necklace = _context3.sent;\n                // scale glasses\n                bbox = new three_module/* Box3 */.ZzF().setFromObject(this.Necklace);\n                size = bbox.getSize(new three_module/* Vector3 */.Pa4());\n                this.scaleFactor = size.x;\n                this.Necklace.name = "Necklace";\n                this.Necklace.traverse(function (child) {\n                  if (child.isMesh) {\n                    // Check if the material has metallicness property\n                    if (child.material) {\n                      if (child.material.metalness > 1) child.material.metalness = 1;\n                      child.material.envMapIntensity = 1;\n                    }\n                  }\n                });\n\n              case 39:\n                if (this.sceneManager.isVideo) {\n                  this.flickerSmoother.currentvector.y = 1.5;\n                } else {\n                  this.flickerSmoother.currentvector.y = 1; // console.log("necklace smooth image");\n                } //this.sceneManager.onConfigChange();\n\n\n              case 40:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadNecklace(_x3) {\n        return _loadNecklace.apply(this, arguments);\n      }\n\n      return loadNecklace;\n    }()\n  }, {\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateNecklace",\n    value: function updateNecklace() {\n      if (!this.landmarks) return;\n\n      if (this.sceneManager) {\n        this.flickerSmoother.params.floatValue = 0.3;\n\n        if (this.sceneManager.isVideo) {\n          this.flickerSmoother.currentvector.y = 3;\n        } else {\n          this.flickerSmoother.currentvector.y = 0;\n        }\n      }\n\n      var midEyes = scaleLandmark(this.landmarks[168], this.width, this.height);\n      var chin = scaleLandmark(this.landmarks[152], this.width, this.height);\n      var Leftear = scaleLandmark(this.landmarks[454], this.width, this.height);\n      var rightear = scaleLandmark(this.landmarks[234], this.width, this.height);\n      var leftEyeInnerCorner = scaleLandmark(this.landmarks[463], this.width, this.height);\n      var rightEyeInnerCorner = scaleLandmark(this.landmarks[243], this.width, this.height);\n      var noseBottom = scaleLandmark(this.landmarks[2], this.width, this.height); // // These points seem appropriate 446, 265, 372, 264\n\n      var leftEyeUpper1 = scaleLandmark(this.landmarks[264], this.width, this.height); // These points seem appropriate 226, 35, 143, 34\n\n      var rightEyeUpper1 = scaleLandmark(this.landmarks[34], this.width, this.height);\n      var tempPrevlandmark = new three_module/* Vector3 */.Pa4(midEyes.x, midEyes.y, midEyes.z);\n      var difference = this.Prevlandmark.distanceTo(tempPrevlandmark);\n\n      if (difference > this.flickerSmoother.currentvector.y || this.PrevScale !== getScaleSliderValue() || this.PrevXValue !== getXSliderValue() || this.PrevYValue !== getYSliderValue() // !this.sceneManager.isVideo\n      ) {\n        if (this.Necklace || this.SpriteMesh) {\n          this.show(); // let midEyes5 = scaleLandmark(this.landmarks[197], this.width, this.height);\n          // let rightEyeInnerCorner5 = scaleLandmark(this.landmarks[196], this.width, this.height);\n          // let noseBottom5 = scaleLandmark(this.landmarks[195], this.width, this.height);\n          // const eyeDist = Math.sqrt(\n          //   (leftEyeUpper1.x - rightEyeUpper1.x) ** 2 +\n          //   (leftEyeUpper1.y - rightEyeUpper1.y) ** 2 +\n          //   (leftEyeUpper1.z - rightEyeUpper1.z) ** 2\n          // );\n          // const scale = (eyeDist / this.scaleFactor) / 1.2;\n          // this.Necklace.scale.set(scale, scale, scale);\n          // const forwardDirection = new THREE.Vector3().subVectors(noseBottom5, midEyes5);\n          // const rightDirection = new THREE.Vector3().subVectors(rightEyeInnerCorner5, midEyes5);\n          // //let forwardDirectionRot =\n          // const upDirection = new THREE.Vector3().crossVectors(forwardDirection, rightDirection).normalize();\n          // forwardDirection.x = this.clamp(forwardDirection.x, -0.5, 0.5);\n          // forwardDirection.y = this.clamp(forwardDirection.y, -7, -6);\n          // rightDirection.y = this.clamp(rightDirection.y, -1.6, -1.3);\n          // console.log(forwardDirection);\n          // let quaternion = new THREE.Quaternion();\n          // quaternion.setFromRotationMatrix(\n          //   new THREE.Matrix4().lookAt(forwardDirection, new THREE.Vector3(0, 0, 0), upDirection)\n          // );\n          // this.root.quaternion.copy(quaternion);\n          // let forwardDirectionNormalized = new THREE.Vector3();\n          // forwardDirectionNormalized.copy(forwardDirection).normalize();\n          // let rightDirectionnorm = new THREE.Vector3();\n          // rightDirectionnorm.copy(rightDirection).normalize();\n          // this.Necklace.rotation.set(this.currentvector.x, this.currentvector.y, this.currentvector.z);\n          // this.Necklace.position.set(0, 0, -100);\n          // this.root.position.set(\n          //   //(rightDirectionnorm.y * (scale * 1)),\n          //   chin.x - (forwardDirectionNormalized.y * (scale * 0.2)) - (rightDirectionnorm.y * (scale * 1)) - (forwardDirectionNormalized.x * (scale * 1.8)) - (0.36 * scale),\n          //   chin.y - ((forwardDirectionNormalized.y * (scale * 1.5)) + (0.5 * scale)),\n          //   chin.z - 20,\n          // )\n          ///*____old_______\n\n          var tempbase = new three_module/* Vector3 */.Pa4(midEyes.x, midEyes.y, midEyes.z);\n          var tempmid1 = new three_module/* Vector3 */.Pa4(chin.x, chin.y, chin.z);\n          var tempmid2 = new three_module/* Vector3 */.Pa4(leftEyeInnerCorner.x, leftEyeInnerCorner.y, leftEyeInnerCorner.z);\n          var tempmid3 = new three_module/* Vector3 */.Pa4(rightEyeInnerCorner.x, rightEyeInnerCorner.y, rightEyeInnerCorner.z);\n          var tempmid4 = new three_module/* Vector3 */.Pa4(leftEyeUpper1.x, leftEyeUpper1.y, leftEyeUpper1.z);\n          var tempmid5 = new three_module/* Vector3 */.Pa4(rightEyeUpper1.x, rightEyeUpper1.y, rightEyeUpper1.z);\n          midEyes = this.flickerSmoother.smoothAndFilterLandmarks(this.prevbase, tempbase);\n          chin = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid, tempmid1);\n          leftEyeInnerCorner = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid2, tempmid2);\n          rightEyeInnerCorner = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid3, tempmid3);\n          leftEyeUpper1 = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid4, tempmid4);\n          rightEyeUpper1 = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid5, tempmid5);\n          this.prevbase = tempbase;\n          this.prevmid = tempmid1;\n          this.prevmid2 = tempmid2;\n          this.prevmid3 = tempmid3;\n          this.prevmid4 = tempmid4;\n          this.prevmid5 = tempmid5;\n          var eyeDist = Math.sqrt(Math.pow(leftEyeUpper1.x - rightEyeUpper1.x, 2) + Math.pow(leftEyeUpper1.y - rightEyeUpper1.y, 2) + Math.pow(leftEyeUpper1.z - rightEyeUpper1.z, 2));\n          this.Scale = eyeDist / (this.scaleFactor / 0.83) * getScaleSliderValue();\n\n          if (!this.is2d) {\n            this.Necklace.scale.set(this.Scale, this.Scale, this.Scale);\n          } else {\n            this.SpriteMesh.scale.set(this.imageWidth / 460 * this.Scale, this.imageHeight / 460 * this.Scale, 1);\n          }\n\n          var upVector = new three_module/* Vector3 */.Pa4(midEyes.x - chin.x, midEyes.y - chin.y, midEyes.z - chin.z).normalize();\n          var sideVector = new three_module/* Vector3 */.Pa4(leftEyeInnerCorner.x - rightEyeInnerCorner.x, leftEyeInnerCorner.y - rightEyeInnerCorner.y, leftEyeInnerCorner.z - rightEyeInnerCorner.z).normalize();\n          var zRot = new three_module/* Vector3 */.Pa4(1, 0, 0).angleTo(upVector.clone().projectOnPlane(new three_module/* Vector3 */.Pa4(0, 0, 1))) - Math.PI / 2;\n          var xRot = Math.PI / 2 - new three_module/* Vector3 */.Pa4(0, 0, 1).angleTo(upVector.clone().projectOnPlane(new three_module/* Vector3 */.Pa4(1, 0, 0)));\n          var yRot = new three_module/* Vector3 */.Pa4(sideVector.x, 0, sideVector.z).angleTo(new three_module/* Vector3 */.Pa4(0, 0, 1)) - Math.PI / 2; // console.log("xrot" + xRot + "   yrot" + yRot + "   zrot" + zRot);\n          // let xpos;\n          // let offset = ((10 + scale) - ((10 + scale / 2) * yRot));\n          // // console.log(offset);\n          // xpos = (chin.x) - ((10 + scale) - offset);\n\n          var clampedYRot = this.clamp(yRot, -0.5, 0.5);\n          var clampedZRot = this.clamp(zRot, -0.1, 0.1);\n          if (!this.is2d) this.Necklace.rotation.set(-0.3, clampedYRot, clampedZRot); //this.planeMesh.rotation.set(-0.3, clampedYRot, clampedZRot);\n\n          var ypos; //console.log(5 + (scale / 1.1));\n\n          ypos = chin.y + (5 + this.Scale / 1.1 + (5 + this.Scale / 1.1) * xRot); // position\n\n          if (!this.is2d) {\n            this.Necklace.position.set(chin.x - (20 + this.Scale) * yRot + (10 - this.Scale) * zRot, ypos - this.Scale / 2, 0);\n          } else {\n            this.SpriteMesh.position.set(chin.x - (1.42 + zRot / 2.5) * this.Scale * yRot - 0.4 * this.Scale * zRot - this.Scale * 0.01 + getXSliderValue() * 0.7 * this.Scale, chin.y + 1.5 * this.Scale * xRot - 0.05 * this.Scale * yRot - 0.01 * this.Scale * zRot - this.Scale / 0.75 - getYSliderValue() * 0.7 * this.Scale, 2000);\n          }\n\n          this.Prevlandmark = tempPrevlandmark;\n          this.PrevScale = getScaleSliderValue();\n          this.PrevXValue = getXSliderValue();\n          this.PrevYValue = getYSliderValue();\n        }\n      }\n    }\n  }, {\n    key: "addNecklace",\n    value: function addNecklace() {\n      if (this.Necklace) {\n        //this.scene.add(this.root);\n        this.scene.add(this.Necklace); // this.scene.add(this.planeMesh);\n      } else if (this.SpriteMesh) {\n        this.scene.add(this.SpriteMesh);\n        this.SpriteMesh.scale.set(this.imageWidth / 460 * this.Scale, this.imageHeight / 460 * this.Scale, 1);\n      }\n    }\n  }, {\n    key: "clamp",\n    value: function clamp(num, min, max) {\n      return num <= min ? min : num >= max ? max : num;\n    }\n  }, {\n    key: "remove",\n    value: function remove() {\n      if (this.Necklace) {\n        this.scene.remove(this.Necklace);\n      } else if (this.SpriteMesh) {\n        while (!!this.scene.getObjectByName("Necklace")) {\n          this.scene.remove(this.scene.getObjectByName("Necklace"));\n        }\n      }\n\n      this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n      this.PrevScale = 1;\n      this.SpriteMesh = null;\n    }\n  }, {\n    key: "hide",\n    value: function hide() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = false;\n      }\n\n      if (this.Necklace) {\n        this.Necklace.visible = false;\n      }\n    }\n  }, {\n    key: "show",\n    value: function show() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = true;\n      }\n\n      if (this.Necklace) {\n        this.Necklace.visible = true;\n      }\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        var inScene = !!this.scene.getObjectByName("Necklace");\n        var shouldShow = !!this.landmarks;\n\n        if (inScene) {\n          shouldShow ? this.updateNecklace() : this.remove();\n        } else {\n          if (shouldShow) {\n            this.addNecklace();\n            this.updateNecklace();\n          }\n        }\n      }\n    }\n  }]);\n\n  return Necklace;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/js/three_components/earrings.js\nfunction earrings_typeof(obj) { "@babel/helpers - typeof"; return earrings_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, earrings_typeof(obj); }\n\n\n\nfunction earrings_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction earrings_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { earrings_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { earrings_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction earrings_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction earrings_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction earrings_createClass(Constructor, protoProps, staticProps) { if (protoProps) earrings_defineProperties(Constructor.prototype, protoProps); if (staticProps) earrings_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction earrings_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) earrings_setPrototypeOf(subClass, superClass); }\n\nfunction earrings_setPrototypeOf(o, p) { earrings_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return earrings_setPrototypeOf(o, p); }\n\nfunction earrings_createSuper(Derived) { var hasNativeReflectConstruct = earrings_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = earrings_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = earrings_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return earrings_possibleConstructorReturn(this, result); }; }\n\nfunction earrings_possibleConstructorReturn(self, call) { if (call && (earrings_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return earrings_assertThisInitialized(self); }\n\nfunction earrings_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction earrings_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction earrings_getPrototypeOf(o) { earrings_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return earrings_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction earrings_loadModel(file) {\n  return new Promise(function (res, rej) {\n    var loader = new GLTFLoader/* GLTFLoader */.E();\n    loader.load(file, function (gltf) {\n      res(gltf.scene);\n    }, undefined, function (error) {\n      rej(error);\n    });\n  });\n}\n\nvar Earrings = /*#__PURE__*/function (_StyleFactory) {\n  earrings_inherits(Earrings, _StyleFactory);\n\n  var _super = earrings_createSuper(Earrings);\n\n  function Earrings(scene, width, height, sceneManager) {\n    var _this;\n\n    earrings_classCallCheck(this, Earrings);\n\n    _this = _super.call(this);\n    _this.sceneManager = sceneManager;\n    _this.scene = scene;\n    _this.width = width;\n    _this.height = height;\n    _this.needsUpdate = false;\n    _this.landmarks = null;\n    _this.geometry = new three_module/* SphereGeometry */.xo$(0.1); // Adjust the size of the sphere as needed\n\n    _this.material = new three_module/* MeshBasicMaterial */.vBJ({\n      color: 0xff0000,\n      transparent: true,\n      opacity: 0\n    });\n    _this.root = new three_module/* Mesh */.Kj0(_this.geometry, _this.material);\n    _this.flickerSmoother = new FlickerSmoother();\n    _this.flickerSmoother.currentvector.y = 1; // if (AssetURL)\n    //   this.URL = AssetURL;\n    // else\n\n    _this.localURL = "".concat(PUBLIC_PATH, "/3d/earrings/01.png");\n    _this.URL = "".concat(PUBLIC_PATH, "/3d/earrings/01.png");\n    _this.Prevlandmark;\n    _this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevbase = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid2 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid3 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid4 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid5 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.SpriteMeshLeft = null;\n    _this.SpriteMeshRight = null;\n    _this.imageWidthLeft = null;\n    _this.imageHeightleft = null;\n    _this.is2d = true;\n    _this.Scale = 1;\n    _this.PrevScale = 1;\n    _this.PrevXValue = 0;\n    _this.PrevYValue = 0;\n    _this.timeoutId;\n    return _this;\n  }\n\n  earrings_createClass(Earrings, [{\n    key: "debounceLoad",\n    value: function () {\n      var _debounceLoad = earrings_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(AssetURL, is2d) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (is2d !== undefined && is2d !== null) this.is2d = is2d;\n\n                if (!AssetURL) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.URL = AssetURL;\n                _context2.next = 7;\n                break;\n\n              case 5:\n                return _context2.abrupt("return");\n\n              case 7:\n                showLoadingModelPanel("earring"); // Clear the previous timeout (if any) to cancel the previous call\n\n                clearTimeout(this.timeoutId); // Set a new timeout to trigger the function after a delay\n\n                this.timeoutId = setTimeout( /*#__PURE__*/earrings_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _this2.loadEarrings(AssetURL);\n\n                        case 2:\n                          _this2.update();\n\n                        case 3:\n                        case "end":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 0); // Adjust the delay as needed (e.g., 500 milliseconds)\n\n              case 10:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function debounceLoad(_x, _x2) {\n        return _debounceLoad.apply(this, arguments);\n      }\n\n      return debounceLoad;\n    }()\n  }, {\n    key: "loadEarrings",\n    value: function () {\n      var _loadEarrings = earrings_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(AssetURL) {\n        var _this3 = this;\n\n        var imageTexture1, materialSprite1, bbox, size;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.is2d) {\n                  _context3.next = 35;\n                  break;\n                }\n\n                // if (AssetURL) this.URL = AssetURL; else this.URL = this.localURL;\n                this.scaleFactor = 2.4;\n                imageTexture1 = null;\n\n                if (hasGlobalAssetKey(this.URL)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                _context3.next = 6;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL, resolve);\n                });\n\n              case 6:\n                imageTexture1 = _context3.sent;\n                addToGlobalCache(this.URL, imageTexture1);\n                _context3.next = 11;\n                break;\n\n              case 10:\n                imageTexture1 = getGlobalCacheAsset(this.URL);\n\n              case 11:\n                hideLoadingModelPanel();\n                emitSKUApplied();\n                imageTexture1.generateMipmaps = false; //imageTexture1.minFilter = THREE.LinearMipMapNearestFilter;\n\n                imageTexture1.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture1.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture1.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                imageTexture1.needsUpdate = true; //imageTexture.generateMipmaps = false;\n\n                this.imageWidthLeft = imageTexture1.image.width;\n                this.imageHeightLeft = imageTexture1.image.height; //imageTexture.colorSpace = THREE.SRGBColorSpace;\n\n                materialSprite1 = new three_module/* SpriteMaterial */.xeV({\n                  map: imageTexture1,\n                  transparent: true,\n                  side: three_module/* DoubleSide */.ehD\n                });\n                materialSprite1.precision = "highp";\n                materialSprite1.depthWrite = false;\n                materialSprite1.needsUpdate = true;\n                materialSprite1.toneMapped = false; // Create a sprite and set its material\n\n                this.SpriteMeshLeft = new three_module/* Sprite */.jyi(materialSprite1);\n                this.SpriteMeshLeft.scale.set(this.imageWidthLeft, this.imageHeightLeft, 1); // Set the sprite\'s size\n\n                this.SpriteMeshLeft.position.set(0, 0, 0); // Set the sprite\'s position in the scene\n                // Create a sprite and set its material\n\n                this.SpriteMeshRight = new three_module/* Sprite */.jyi(materialSprite1);\n                this.SpriteMeshRight.scale.set(this.imageWidthLeft, this.imageHeightLeft, 1); // Set the sprite\'s size\n\n                this.SpriteMeshRight.position.set(0, 0, 0); // Set the sprite\'s position in the scene\n\n                this.SpriteMeshRight.name = "Earrings";\n                this.SpriteMeshLeft.name = "Earrings";\n                _context3.next = 44;\n                break;\n\n              case 35:\n                //if (AssetURL) this.URL = AssetURL; else this.URL = this.localURL;\n                this.Earrings = null;\n                _context3.next = 38;\n                return earrings_loadModel(this.URL);\n\n              case 38:\n                this.Earrings = _context3.sent;\n                // scale glasses\n                bbox = new three_module/* Box3 */.ZzF().setFromObject(this.Earrings);\n                size = bbox.getSize(new three_module/* Vector3 */.Pa4());\n                this.scaleFactor = size.x;\n                this.Earrings.name = "Earrings";\n                this.Earrings.traverse(function (child) {\n                  if (child.isMesh) {\n                    // Check if the material has metallicness property\n                    if (child.material) {\n                      if (child.material.metalness > 1) child.material.metalness = 1;\n                      child.material.envMapIntensity = 1;\n                    }\n                  }\n                });\n\n              case 44:\n                if (this.sceneManager.isVideo) {\n                  this.flickerSmoother.currentvector.y = 1.5;\n                } else {\n                  this.flickerSmoother.currentvector.y = 6;\n                }\n\n              case 45:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadEarrings(_x3) {\n        return _loadEarrings.apply(this, arguments);\n      }\n\n      return loadEarrings;\n    }()\n  }, {\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateEarrings",\n    value: function updateEarrings() {\n      // Points for reference\n      // https://raw.githubusercontent.com/google/mediapipe/master/mediapipe/modules/face_geometry/data/canonical_face_model_uv_visualization.png\n      if (!this.landmarks) return;\n\n      if (this.sceneManager) {\n        if (this.sceneManager.isVideo) {\n          this.flickerSmoother.currentvector.y = 1.5;\n        } else {\n          this.flickerSmoother.currentvector.y = 0;\n        }\n      }\n\n      var midEyes = scaleLandmark(this.landmarks[168], this.width, this.height);\n      var chin = scaleLandmark(this.landmarks[152], this.width, this.height);\n      var Leftear = scaleLandmark(this.landmarks[454], this.width, this.height);\n      var rightear = scaleLandmark(this.landmarks[234], this.width, this.height);\n      var leftEyeInnerCorner = scaleLandmark(this.landmarks[463], this.width, this.height);\n      var rightEyeInnerCorner = scaleLandmark(this.landmarks[243], this.width, this.height);\n      var noseBottom = scaleLandmark(this.landmarks[2], this.width, this.height); // // These points seem appropriate 446, 265, 372, 264\n\n      var leftEyeUpper1 = scaleLandmark(this.landmarks[264], this.width, this.height); // These points seem appropriate 226, 35, 143, 34\n\n      var rightEyeUpper1 = scaleLandmark(this.landmarks[34], this.width, this.height);\n      var tempPrevlandmark = new three_module/* Vector3 */.Pa4(midEyes.x, midEyes.y, midEyes.z);\n      var difference = this.Prevlandmark.distanceTo(tempPrevlandmark);\n\n      if (difference > this.flickerSmoother.currentvector.y || this.PrevScale !== getScaleSliderValue() || this.PrevXValue !== getXSliderValue() || this.PrevYValue !== getYSliderValue()) {\n        if (this.Earrings || this.SpriteMeshRight) {\n          this.show();\n          var tempbase = new three_module/* Vector3 */.Pa4(midEyes.x, midEyes.y, midEyes.z);\n          var tempmid1 = new three_module/* Vector3 */.Pa4(chin.x, chin.y, chin.z);\n          var tempmid2 = new three_module/* Vector3 */.Pa4(leftEyeInnerCorner.x, leftEyeInnerCorner.y, leftEyeInnerCorner.z);\n          var tempmid3 = new three_module/* Vector3 */.Pa4(rightEyeInnerCorner.x, rightEyeInnerCorner.y, rightEyeInnerCorner.z);\n          var tempmid4 = new three_module/* Vector3 */.Pa4(leftEyeUpper1.x, leftEyeUpper1.y, leftEyeUpper1.z);\n          var tempmid5 = new three_module/* Vector3 */.Pa4(rightEyeUpper1.x, rightEyeUpper1.y, rightEyeUpper1.z);\n          midEyes = this.flickerSmoother.smoothAndFilterLandmarks(this.prevbase, tempbase);\n          chin = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid, tempmid1);\n          leftEyeInnerCorner = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid2, tempmid2);\n          rightEyeInnerCorner = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid3, tempmid3);\n          leftEyeUpper1 = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid4, tempmid4);\n          rightEyeUpper1 = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid5, tempmid5);\n          this.prevbase = tempbase;\n          this.prevmid = tempmid1;\n          this.prevmid2 = tempmid2;\n          this.prevmid3 = tempmid3;\n          this.prevmid4 = tempmid4;\n          this.prevmid5 = tempmid5;\n          var eyeDist = Math.sqrt(Math.pow(leftEyeUpper1.x - rightEyeUpper1.x, 2) + Math.pow(leftEyeUpper1.y - rightEyeUpper1.y, 2) + Math.pow(leftEyeUpper1.z - rightEyeUpper1.z, 2));\n          this.Scale = eyeDist / this.scaleFactor / 1.2 * getScaleSliderValue();\n\n          if (!this.is2d) {\n            this.Earrings.scale.set(this.Scale, this.Scale, this.Scale);\n          } else {\n            this.SpriteMeshLeft.scale.set(this.imageWidthLeft / 1350 * this.Scale, this.imageHeightLeft / 1350 * this.Scale, 1);\n            this.SpriteMeshRight.scale.set(this.imageWidthLeft / 1350 * this.Scale, this.imageHeightLeft / 1350 * this.Scale, 1);\n          }\n\n          var upVector = new three_module/* Vector3 */.Pa4(midEyes.x - chin.x, midEyes.y - chin.y, midEyes.z - chin.z).normalize();\n          var sideVector = new three_module/* Vector3 */.Pa4(leftEyeInnerCorner.x - rightEyeInnerCorner.x, leftEyeInnerCorner.y - rightEyeInnerCorner.y, leftEyeInnerCorner.z - rightEyeInnerCorner.z).normalize();\n          var zRot = new three_module/* Vector3 */.Pa4(1, 0, 0).angleTo(upVector.clone().projectOnPlane(new three_module/* Vector3 */.Pa4(0, 0, 1))) - Math.PI / 2;\n          var xRot = Math.PI / 2 - new three_module/* Vector3 */.Pa4(0, 0, 1).angleTo(upVector.clone().projectOnPlane(new three_module/* Vector3 */.Pa4(1, 0, 0)));\n          var yRot = new three_module/* Vector3 */.Pa4(sideVector.x, 0, sideVector.z).angleTo(new three_module/* Vector3 */.Pa4(0, 0, 1)) - Math.PI / 2; // console.log("xrot" + xRot + "   yrot" + yRot + "   zrot" + zRot);\n          // let xpos;\n          // let offset = ((10 + scale) - ((10 + scale / 2) * yRot));\n          // // console.log(offset);\n          // xpos = (chin.x) - ((10 + scale) - offset);\n\n          var clampedYRot = this.clamp(yRot, -0.5, 0.5);\n          var clampedZRot = this.clamp(zRot, -0.1, 0.1);\n          if (!this.is2d) this.Earrings.rotation.set(-0.3, clampedYRot, clampedZRot); //this.planeMesh.rotation.set(-0.3, clampedYRot, clampedZRot);\n\n          var ypos; //console.log(5 + (scale / 1.1));\n\n          ypos = chin.y + (5 + this.Scale / 1.1 + (5 + this.Scale / 1.1) * xRot); // position\n\n          if (!this.is2d) {\n            this.Earrings.position.set(chin.x - (20 + this.Scale) * yRot + (10 - this.Scale) * zRot, ypos - this.Scale / 2, 0);\n          } else {\n            this.SpriteMeshLeft.position.set(Leftear.x - (0.3 - zRot / 2) * this.Scale * yRot + 0.5 * this.Scale * zRot + this.Scale * 0.05 + getXSliderValue() * 0.7 * this.Scale, Leftear.y + 0.4 * this.Scale * xRot + 0.1 * this.Scale * yRot - this.Scale / 1.45 - getYSliderValue() * 0.7 * this.Scale, -110);\n            this.SpriteMeshRight.position.set(rightear.x - (0.3 + zRot / 2) * this.Scale * yRot + 0.5 * this.Scale * zRot - this.Scale * 0.05 + getXSliderValue() * 0.7 * this.Scale, rightear.y + 0.4 * this.Scale * xRot - 0.2 * this.Scale * yRot - this.Scale / 1.45 - getYSliderValue() * 0.7 * this.Scale, -110);\n          }\n\n          this.Prevlandmark = tempPrevlandmark;\n          this.PrevScale = getScaleSliderValue();\n          this.PrevXValue = getXSliderValue();\n          this.PrevYValue = getYSliderValue(); //*/\n        }\n      }\n    }\n  }, {\n    key: "addEarrings",\n    value: function addEarrings() {\n      if (this.Earrings) {\n        //this.scene.add(this.root);\n        this.scene.add(this.Earrings); // this.scene.add(this.planeMesh);\n      } else if (this.SpriteMeshRight) {\n        this.scene.add(this.SpriteMeshLeft);\n        this.scene.add(this.SpriteMeshRight);\n        this.SpriteMeshLeft.scale.set(this.imageWidthLeft / 1350 * this.Scale, this.imageHeightLeft / 1350 * this.Scale, 1);\n        this.SpriteMeshRight.scale.set(this.imageWidthLeft / 1350 * this.Scale, this.imageHeightLeft / 1350 * this.Scale, 1);\n      }\n    }\n  }, {\n    key: "clamp",\n    value: function clamp(num, min, max) {\n      return num <= min ? min : num >= max ? max : num;\n    }\n  }, {\n    key: "remove",\n    value: function remove() {\n      if (this.Earrings) {\n        this.scene.remove(this.Earrings); // this.scene.remove(this.planeMesh);\n      } else if (this.SpriteMeshRight || this.SpriteMeshLeft) {\n        while (!!this.scene.getObjectByName("Earrings")) {\n          this.scene.remove(this.scene.getObjectByName("Earrings"));\n        } //this.scene.remove(this.SpriteMeshLeft);\n        //this.scene.remove(this.SpriteMeshRight);\n\n      }\n\n      this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n      this.PrevScale = 1;\n      this.SpriteMeshRight = null;\n      this.SpriteMeshLeft = null;\n    }\n  }, {\n    key: "hide",\n    value: function hide() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = false;\n      }\n\n      if (this.Earrings) {\n        this.Earrings.visible = false;\n      }\n    }\n  }, {\n    key: "show",\n    value: function show() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = true;\n      }\n\n      if (this.Earrings) {\n        this.Earrings.visible = true;\n      }\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        var inScene = !!this.scene.getObjectByName("Earrings");\n        var shouldShow = !!this.landmarks;\n\n        if (inScene) {\n          shouldShow ? this.updateEarrings() : this.remove();\n        } else {\n          if (shouldShow) {\n            this.addEarrings();\n            this.updateEarrings();\n          }\n        }\n      }\n    }\n  }]);\n\n  return Earrings;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/js/three_components/headwear.js\nfunction headwear_typeof(obj) { "@babel/helpers - typeof"; return headwear_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, headwear_typeof(obj); }\n\n\n\nfunction headwear_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction headwear_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { headwear_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { headwear_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction headwear_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction headwear_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction headwear_createClass(Constructor, protoProps, staticProps) { if (protoProps) headwear_defineProperties(Constructor.prototype, protoProps); if (staticProps) headwear_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction headwear_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) headwear_setPrototypeOf(subClass, superClass); }\n\nfunction headwear_setPrototypeOf(o, p) { headwear_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return headwear_setPrototypeOf(o, p); }\n\nfunction headwear_createSuper(Derived) { var hasNativeReflectConstruct = headwear_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = headwear_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = headwear_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return headwear_possibleConstructorReturn(this, result); }; }\n\nfunction headwear_possibleConstructorReturn(self, call) { if (call && (headwear_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return headwear_assertThisInitialized(self); }\n\nfunction headwear_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction headwear_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction headwear_getPrototypeOf(o) { headwear_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return headwear_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction headwear_loadModel(file) {\n  return new Promise(function (res, rej) {\n    var loader = new GLTFLoader/* GLTFLoader */.E();\n    loader.load(file, function (gltf) {\n      res(gltf.scene);\n      addToGlobalCache(file, gltf.scene);\n    }, undefined, function (error) {\n      rej(error);\n    });\n  });\n}\n\nvar Headwear = /*#__PURE__*/function (_StyleFactory) {\n  headwear_inherits(Headwear, _StyleFactory);\n\n  var _super = headwear_createSuper(Headwear);\n\n  function Headwear(scene, width, height, sceneManager) {\n    var _this;\n\n    headwear_classCallCheck(this, Headwear);\n\n    _this = _super.call(this);\n    _this.sceneManager = sceneManager;\n    _this.scene = scene;\n    _this.width = width;\n    _this.height = height;\n    _this.needsUpdate = false;\n    _this.landmarks = null;\n    _this.geometry = new three_module/* SphereGeometry */.xo$(0.1); // Adjust the size of the sphere as needed\n\n    _this.material = new three_module/* MeshBasicMaterial */.vBJ({\n      color: 0xff0000,\n      transparent: true,\n      opacity: 0\n    });\n    _this.root = new three_module/* Mesh */.Kj0(_this.geometry, _this.material);\n    _this.fill;\n    _this.localURL = "".concat(PUBLIC_PATH, "/3d/caps/01.gltf");\n    _this.URL = "".concat(PUBLIC_PATH, "/3d/caps/01.gltf"); //this.loadHeadwear();\n\n    _this.flickerSmoother = new FlickerSmoother(); //this.flickerSmoother.currentvector.y = 4;\n\n    _this.filter = 0;\n    _this.Prevlandmark;\n    _this.PrevScale = 1;\n    _this.PrevXValue = 0;\n    _this.PrevYValue = 0;\n    _this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevbase = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid2 = new three_module/* Vector3 */.Pa4(0, 0, 0); // const gui = new GUI();\n    // this.currentvector = new THREE.Vector3(0.9, -0.29, 2.94);\n    // const vectorFolder2 = gui.addFolder(\'Vector Controls\');\n    // vectorFolder2.add(this.currentvector, \'x\', -Math.PI, Math.PI).step(0.001);\n    // vectorFolder2.add(this.currentvector, \'y\', -Math.PI, Math.PI).step(0.001);\n    // vectorFolder2.add(this.currentvector, \'z\', -Math.PI, Math.PI).step(0.001);\n\n    _this.timeoutId;\n    return _this;\n  }\n\n  headwear_createClass(Headwear, [{\n    key: "debounceLoad",\n    value: function () {\n      var _debounceLoad = headwear_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(AssetURL) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!AssetURL) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                this.URL = AssetURL;\n                _context2.next = 6;\n                break;\n\n              case 4:\n                return _context2.abrupt("return");\n\n              case 6:\n                showLoadingModelPanel("cap");\n                this.Headwear = null; // Clear the previous timeout (if any) to cancel the previous call\n\n                clearTimeout(this.timeoutId); // Set a new timeout to trigger the function after a delay\n\n                this.timeoutId = setTimeout( /*#__PURE__*/headwear_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _this2.loadHeadwear(AssetURL);\n\n                        case 2:\n                          _this2.update();\n\n                        case 3:\n                        case "end":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 0); // Adjust the delay as needed (e.g., 500 milliseconds)\n\n              case 10:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function debounceLoad(_x) {\n        return _debounceLoad.apply(this, arguments);\n      }\n\n      return debounceLoad;\n    }()\n  }, {\n    key: "loadHeadwear",\n    value: function () {\n      var _loadHeadwear = headwear_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(AssetURL) {\n        var bbox, size, radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, geometry, material;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (hasGlobalAssetKey(this.URL)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 3;\n                return headwear_loadModel(this.URL);\n\n              case 3:\n                this.Headwear = _context3.sent;\n                _context3.next = 7;\n                break;\n\n              case 6:\n                this.Headwear = getGlobalCacheAsset(this.URL);\n\n              case 7:\n                hideLoadingModelPanel();\n                emitSKUApplied(); // scale glasses\n\n                bbox = new three_module/* Box3 */.ZzF().setFromObject(this.Headwear);\n                size = bbox.getSize(new three_module/* Vector3 */.Pa4());\n                this.scaleFactor = 2;\n                this.Headwear.name = "Headwear";\n                this.Headwear.traverse(function (child) {\n                  if (child.isMesh) {\n                    // Check if the material has metallicness property\n                    if (child.material) {\n                      // if (child.material.metalness > 1)\n                      //   child.material.metalness = 1; // Set metallicness to 0\n                      // if (child.material.metalness > 1) child.material.metalness = 1;\n                      // child.material.envMapIntensity = 1;\n                      child.renderOrder = 2; // if (child.material.normalMap) {\n                      //   // Adjust other normal map properties if needed\n                      //   child.material.normalScale.set(5, 5); // Adjust the strength of the normals\n                      // }\n                    }\n                  }\n                });\n                radiusTop = 0.029; // Adjust the top radius\n\n                radiusBottom = 0.029; // Adjust the bottom radius\n\n                height = 0.1; // Adjust the height\n\n                radialSegments = 16; // Adjust the number of radial segments\n\n                heightSegments = 1; // Adjust the number of height segments\n\n                openEnded = false; // Set to true for an open-ended cylinder\n\n                geometry = new three_module/* SphereGeometry */.xo$(1);\n                material = new three_module/* MeshBasicMaterial */.vBJ({\n                  color: 0xff0000\n                });\n                this.fill = new three_module/* Mesh */.Kj0(geometry, material);\n                this.fill.renderOrder = 1;\n                this.fill.material.colorWrite = false;\n\n                if (this.sceneManager.isVideo) {\n                  this.flickerSmoother.currentvector.y = 6;\n                } else {\n                  this.flickerSmoother.currentvector.y = 6;\n                }\n\n              case 26:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadHeadwear(_x2) {\n        return _loadHeadwear.apply(this, arguments);\n      }\n\n      return loadHeadwear;\n    }()\n  }, {\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateHeadwear",\n    value: function updateHeadwear() {\n      if (!this.landmarks) return;\n\n      if (this.sceneManager) {\n        if (this.sceneManager.isVideo) {\n          this.flickerSmoother.currentvector.y = 6;\n        } else {\n          this.flickerSmoother.currentvector.y = 0;\n        }\n      }\n\n      this.flickerSmoother.currentvector.z = 100;\n      var midEyes = scaleLandmark(this.landmarks[168], this.width, this.height); // These points seem appropriate 446, 265, 372, 264\n\n      var leftEyeUpper1 = scaleLandmark(this.landmarks[264], this.width, this.height); // These points seem appropriate 226, 35, 143, 34\n\n      var rightEyeUpper1 = scaleLandmark(this.landmarks[34], this.width, this.height);\n      var midEyes5 = scaleLandmark(this.landmarks[197], this.width, this.height);\n      var rightEyeInnerCorner5 = scaleLandmark(this.landmarks[196], this.width, this.height);\n      var noseBottom5 = scaleLandmark(this.landmarks[195], this.width, this.height);\n      var tempPrevlandmark = new three_module/* Vector3 */.Pa4(midEyes5.x, midEyes5.y, midEyes5.z);\n      var difference = this.Prevlandmark.distanceTo(tempPrevlandmark);\n\n      if (difference > 0 || this.PrevScale !== getScaleSliderValue() || this.PrevXValue !== getXSliderValue() || this.PrevYValue !== getYSliderValue()) {\n        if (this.Headwear) {\n          this.show();\n          var tempbase = new three_module/* Vector3 */.Pa4(midEyes5.x, midEyes5.y, midEyes5.z);\n          var tempmid1 = new three_module/* Vector3 */.Pa4(rightEyeInnerCorner5.x, rightEyeInnerCorner5.y, rightEyeInnerCorner5.z);\n          var tempmid2 = new three_module/* Vector3 */.Pa4(noseBottom5.x, noseBottom5.y, noseBottom5.z);\n          midEyes5 = this.flickerSmoother.smoothAndFilterLandmarks(this.prevbase, tempbase);\n          rightEyeInnerCorner5 = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid, tempmid1);\n          noseBottom5 = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid2, tempmid2);\n          this.prevbase = tempbase;\n          this.prevmid = tempmid1;\n          this.prevmid2 = tempmid2;\n          var eyeDist = Math.sqrt(Math.pow(leftEyeUpper1.x - rightEyeUpper1.x, 2) + Math.pow(leftEyeUpper1.y - rightEyeUpper1.y, 2) + Math.pow(leftEyeUpper1.z - rightEyeUpper1.z, 2));\n          var scale = eyeDist / this.scaleFactor * 1.2 * getScaleSliderValue();\n          this.root.scale.set(scale, scale, scale);\n          this.root.position.set(midEyes.x + getXSliderValue() * 1.2 * scale, midEyes.y - getYSliderValue() * 1.2 * scale, midEyes.z); // this.fill.position.set(0.02, 0.3, -0.95);\n          // this.fill.rotation.set(0, 0, 0);\n          // this.fill.scale.set(0.95, 1.2, 1.2);\n\n          var forwardDirection = new three_module/* Vector3 */.Pa4().subVectors(noseBottom5, midEyes5);\n          var rightDirection = new three_module/* Vector3 */.Pa4().subVectors(rightEyeInnerCorner5, midEyes5);\n          var upDirection = new three_module/* Vector3 */.Pa4().crossVectors(forwardDirection, rightDirection).normalize();\n          var quaternion = new three_module/* Quaternion */._fP();\n          quaternion.setFromRotationMatrix(new three_module/* Matrix4 */.yGw().lookAt(forwardDirection, new three_module/* Vector3 */.Pa4(0, 0, 0), upDirection)); // quaternion.set(quaternion.x, quaternion.y, quaternion.z);\n          //const finalrot = new THREE.Quaternion().slerp(rotateRoot.quaternion, quaternion, animationCurve.evaluate(speedcal * time.deltaTime));\n\n          this.root.quaternion.copy(quaternion);\n\n          if (rightDirection.z < -13.5 || rightDirection.z > 8) {\n            setAlignMsg("Turn on your camera and keep your face align to it.");\n            setAlignIcon("face");\n            showAlignMessagePanel(); // setTrackingMsg("Tracking lost. <br>Point your hand towards camera.");\n            // showTrackingMsg();\n\n            if (!this.is2d) this.Headwear.visible = false; //else this.planeMesh.visible = false;\n          } else {\n            hideAlignMessagePanel();\n            if (!this.is2d) this.Headwear.visible = true; //else this.planeMesh.visible = true;\n          }\n\n          this.Prevlandmark = tempPrevlandmark;\n          this.PrevScale = getScaleSliderValue();\n          this.PrevXValue = getXSliderValue();\n          this.PrevYValue = getYSliderValue();\n        }\n      }\n    }\n  }, {\n    key: "addHeadwear",\n    value: function addHeadwear() {\n      if (this.Headwear) {\n        this.scene.add(this.root);\n        this.root.add(this.Headwear);\n        this.Headwear.add(this.fill);\n        this.Headwear.rotation.set(1, -0.29, 2.95);\n        this.Headwear.position.set(0.08, 0.24, -0.17);\n        this.fill.position.set(0.02, 0.3, -0.95);\n        this.fill.rotation.set(0, 0, 0);\n        this.fill.scale.set(0.95, 1.2, 1.2);\n      }\n    }\n  }, {\n    key: "remove",\n    value: function remove() {\n      if (this.Headwear) {\n        this.Headwear.remove(this.fill);\n\n        while (this.root.children.length > 0) {\n          this.root.remove(this.root.children[0]);\n        }\n\n        this.scene.remove(this.root);\n        this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n        this.PrevScale = 1;\n      }\n    }\n  }, {\n    key: "hide",\n    value: function hide() {\n      if (this.root) {\n        this.root.visible = false;\n      }\n    }\n  }, {\n    key: "show",\n    value: function show() {\n      if (this.root) {\n        this.root.visible = true;\n      }\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        var inScene = !!this.scene.getObjectByName("Headwear");\n        var shouldShow = !!this.landmarks;\n\n        if (inScene) {\n          shouldShow ? this.updateHeadwear() : this.remove();\n        } else {\n          if (shouldShow) {\n            this.addHeadwear();\n            this.updateHeadwear();\n          }\n        }\n      }\n    }\n  }]);\n\n  return Headwear;\n}(StyleFactory);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.number.constructor.js\nvar es6_number_constructor = __webpack_require__(1246);\n;// CONCATENATED MODULE: ./src/js/three_components/bracelet.js\nfunction bracelet_typeof(obj) { "@babel/helpers - typeof"; return bracelet_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, bracelet_typeof(obj); }\n\n\n\nfunction bracelet_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction bracelet_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { bracelet_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { bracelet_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction bracelet_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction bracelet_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction bracelet_createClass(Constructor, protoProps, staticProps) { if (protoProps) bracelet_defineProperties(Constructor.prototype, protoProps); if (staticProps) bracelet_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction bracelet_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) bracelet_setPrototypeOf(subClass, superClass); }\n\nfunction bracelet_setPrototypeOf(o, p) { bracelet_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return bracelet_setPrototypeOf(o, p); }\n\nfunction bracelet_createSuper(Derived) { var hasNativeReflectConstruct = bracelet_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = bracelet_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = bracelet_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return bracelet_possibleConstructorReturn(this, result); }; }\n\nfunction bracelet_possibleConstructorReturn(self, call) { if (call && (bracelet_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return bracelet_assertThisInitialized(self); }\n\nfunction bracelet_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction bracelet_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction bracelet_getPrototypeOf(o) { bracelet_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return bracelet_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction bracelet_loadModel(file) {\n  return new Promise(function (res, rej) {\n    var loader = new GLTFLoader/* GLTFLoader */.E();\n    loader.load(file, function (gltf) {\n      res(gltf.scene);\n    }, undefined, function (error) {\n      rej(error);\n    });\n  });\n}\n\nvar Bracelet = /*#__PURE__*/function (_StyleFactory) {\n  bracelet_inherits(Bracelet, _StyleFactory);\n\n  var _super = bracelet_createSuper(Bracelet);\n\n  function Bracelet(scene, width, height, sceneManager) {\n    var _this;\n\n    bracelet_classCallCheck(this, Bracelet);\n\n    _this = _super.call(this);\n    _this.sceneManager = sceneManager;\n    _this.scene = scene;\n    _this.width = width;\n    _this.height = height;\n    _this.needsUpdate = false;\n    _this.landmarks = null;\n    _this.handedness = null;\n    _this.flickerSmoother = new FlickerSmoother();\n    _this.localURL = "".concat(PUBLIC_PATH, "/3d/bracelets/01.png");\n    _this.URL = "".concat(PUBLIC_PATH, "/3d/bracelets/01.png"); // this.worldLandmarks = null;\n    //this.loadBracelet();\n\n    _this.geometry = new three_module/* SphereGeometry */.xo$(5); // Adjust the size of the sphere as needed\n\n    _this.material = new three_module/* MeshBasicMaterial */.vBJ({\n      color: 0xff0000,\n      transparent: true,\n      // Enable transparency\n      opacity: 0 // Set the opacity level (0.0 - fully transparent, 1.0 - fully opaque)\n\n    }); // this.material = new THREE.MeshBasicMaterial({ color: 0xff0000 }); // Adjust the color as needed\n    // this.sphere = new THREE.Mesh(this.geometry, this.material);\n    //this.scene.add(this.sphere);\n\n    _this.root;\n    _this.fill;\n    _this.refobj;\n    _this.spheres = []; // for (let i = 0; i < 21; i++) {\n    //   const sphere = new THREE.Mesh(this.geometry, this.material);\n    //   this.scene.add(sphere);\n    //   this.spheres.push(sphere);\n    // }\n\n    _this.root = new three_module/* Mesh */.Kj0(_this.geometry, _this.material);\n    _this.refobj = new three_module/* Mesh */.Kj0(_this.geometry, _this.material);\n\n    _this.refobj.position.set(1, 1, 1); // // Set the position of the sphere based on the pose landmark coordinates\n    // sphere.position.set(x, y, z);\n\n\n    _this.filter = 0.0;\n    _this.Prevlandmark;\n    _this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevbase = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid2 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.SpriteMesh = null;\n    _this.imageWidth = null;\n    _this.imageHeight = null;\n    _this.PrevScale = 1;\n    _this.PrevXValue = 0;\n    _this.PrevYValue = 0;\n    _this.is2d = true; //const gui = new GUI();\n    // this.currentvector = new THREE.Vector3(0.1, 0.1, 1);\n    // const vectorFolder2 = gui.addFolder(\'Vector Controls\');\n    // vectorFolder2.add(this.currentvector, \'x\', -Math.PI, Math.PI).step(0.001);\n    // vectorFolder2.add(this.currentvector, \'y\', -Math.PI, Math.PI).step(0.001);\n    // vectorFolder2.add(this.currentvector, \'z\', -Math.PI, Math.PI).step(0.001);\n    // // Add a controller to the GUI\n    // const smooth = gui.add(this.flickerSmoother.params, \'floatValue\', -1, 1).step(0.001);\n\n    _this.timeoutId;\n    return _this;\n  }\n\n  bracelet_createClass(Bracelet, [{\n    key: "debounceLoad",\n    value: function () {\n      var _debounceLoad = bracelet_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(AssetURL, is2d) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //AssetURL = null;\n                if (is2d !== undefined && is2d !== null) this.is2d = is2d;\n\n                if (!AssetURL) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.URL = AssetURL;\n                _context2.next = 7;\n                break;\n\n              case 5:\n                return _context2.abrupt("return");\n\n              case 7:\n                showLoadingModelPanel("bracelet"); // Clear the previous timeout (if any) to cancel the previous call\n\n                clearTimeout(this.timeoutId); // Set a new timeout to trigger the function after a delay\n\n                this.timeoutId = setTimeout( /*#__PURE__*/bracelet_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _this2.loadBracelet(AssetURL);\n\n                        case 2:\n                          _this2.update();\n\n                        case 3:\n                        case "end":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 0); // Adjust the delay as needed (e.g., 500 milliseconds)\n\n              case 10:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function debounceLoad(_x, _x2) {\n        return _debounceLoad.apply(this, arguments);\n      }\n\n      return debounceLoad;\n    }()\n  }, {\n    key: "loadBracelet",\n    value: function () {\n      var _loadBracelet = bracelet_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(AssetURL) {\n        var _this3 = this;\n\n        var imageTexture, material2d, planeGeometry, bbox, size, radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, cylinderGeometry, material;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.is2d) {\n                  _context3.next = 30;\n                  break;\n                }\n\n                //if (AssetURL) this.URL = AssetURL; else this.URL = this.localURL;\n                imageTexture = null;\n\n                if (hasGlobalAssetKey(this.URL)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 5;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL, resolve);\n                });\n\n              case 5:\n                imageTexture = _context3.sent;\n                addToGlobalCache(this.URL, imageTexture);\n                _context3.next = 10;\n                break;\n\n              case 9:\n                imageTexture = getGlobalCacheAsset(this.URL);\n\n              case 10:\n                hideLoadingModelPanel();\n                emitSKUApplied();\n                this.scaleFactor = 0.0371;\n                imageTexture.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                imageTexture.needsUpdate = true; //imageTexture.generateMipmaps = false;\n\n                this.imageWidth = imageTexture.image.width;\n                this.imageHeight = imageTexture.image.height;\n                material2d = new three_module/* MeshBasicMaterial */.vBJ({\n                  map: imageTexture,\n                  // Assign the loaded texture\n                  transparent: true,\n                  // Enable transparency\n                  side: three_module/* DoubleSide */.ehD // Make the material visible from both sides of the plane (if needed)\n\n                });\n                material2d.metalness = 1;\n                material2d.envMapIntensity = 1;\n                material2d.needsUpdate = true;\n                material2d.toneMapped = false;\n                planeGeometry = new three_module/* PlaneGeometry */._12(1, 1);\n                this.SpriteMesh = new three_module/* Mesh */.Kj0(planeGeometry, material2d);\n                this.SpriteMesh.renderOrder = 2;\n                this.SpriteMesh.name = "Bracelet";\n                _context3.next = 54;\n                break;\n\n              case 30:\n                //if (AssetURL) this.URL = AssetURL; else this.URL = this.localURL;\n                this.Bracelet = null;\n                _context3.next = 33;\n                return bracelet_loadModel(this.URL);\n\n              case 33:\n                this.Bracelet = _context3.sent;\n                hideLoadingModelPanel();\n                emitSKUApplied(); // scale glasses\n\n                bbox = new three_module/* Box3 */.ZzF().setFromObject(this.Bracelet);\n                size = bbox.getSize(new three_module/* Vector3 */.Pa4());\n                this.scaleFactor = 100;\n                this.Bracelet.name = "Bracelet";\n                this.Bracelet.traverse(function (child) {\n                  if (child.isMesh) {\n                    // Check if the material has metallicness property\n                    if (child.material) {\n                      if (child.material.metalness > 1) child.material.metalness = 1;\n                      child.material.envMapIntensity = 1;\n                      child.renderOrder = 2;\n                    }\n                  }\n                });\n                radiusTop = 0.023; // Adjust the top radius\n\n                radiusBottom = 0.023; // Adjust the bottom radius\n\n                height = 0.1; // Adjust the height\n\n                radialSegments = 16; // Adjust the number of radial segments\n\n                heightSegments = 1; // Adjust the number of height segments\n\n                openEnded = false; // Set to true for an open-ended cylinder\n\n                cylinderGeometry = new three_module/* CylinderGeometry */.fHI(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded); // let geometry = new THREE.SphereGeometry(0.03); // Adjust the size of the sphere as needed\n\n                material = new three_module/* MeshBasicMaterial */.vBJ({\n                  color: 0xff0000\n                });\n                this.fill = new three_module/* Mesh */.Kj0(cylinderGeometry, material);\n                this.fill.renderOrder = 1;\n                this.fill.receiveShadow = true;\n                this.fill.envMapIntensity = 1;\n                this.fill.material.colorWrite = false;\n\n              case 54:\n                if (this.sceneManager.isVideo) {\n                  this.flickerSmoother.currentvector.y = 6;\n                } else {\n                  this.flickerSmoother.currentvector.y = 12;\n                }\n\n                this.Prevlandmark = new three_module/* Vector3 */.Pa4(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n                this.PrevScale = 1;\n\n              case 57:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBracelet(_x3) {\n        return _loadBracelet.apply(this, arguments);\n      }\n\n      return loadBracelet;\n    }()\n  }, {\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; // this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks, handedness) {\n      this.landmarks = landmarks;\n      if (handedness.length > 0) this.handedness = handedness[0];\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateBracelet",\n    value: function updateBracelet() {\n      //this.trackingmsg.style.display = "none";\n      if (this.filter < this.flickerSmoother.currentvector.x) {\n        this.filter += 1;\n        return;\n      }\n\n      this.filter = 0;\n      if (!this.landmarks) return;\n\n      if (this.sceneManager) {\n        if (this.sceneManager.isVideo) {\n          this.flickerSmoother.currentvector.y = 8;\n        } else {\n          this.flickerSmoother.currentvector.y = 0;\n        }\n      } // Points for reference\n      // https://raw.githubusercontent.com/google/mediapipe/master/mediapipe/modules/face_geometry/data/canonical_face_model_uv_visualization.png\n\n\n      var base = hand_landmarks_helpers_scaleLandmark(this.landmarks[0], this.width, this.height);\n      var indexbase = hand_landmarks_helpers_scaleLandmark(this.landmarks[9], this.width, this.height);\n      var middlebase = hand_landmarks_helpers_scaleLandmark(this.landmarks[13], this.width, this.height);\n      var tempPrevlandmark = new three_module/* Vector3 */.Pa4(base.x, base.y, base.z);\n      var difference = this.Prevlandmark.distanceTo(tempPrevlandmark);\n\n      if (difference > this.flickerSmoother.currentvector.y || this.PrevScale !== getScaleSliderValue() || this.PrevXValue !== getXSliderValue() || this.PrevYValue !== getYSliderValue()) {\n        if (this.Bracelet || this.SpriteMesh) {\n          this.show();\n          var tempbase = new three_module/* Vector3 */.Pa4(base.x, base.y, base.z);\n          var tempmid1 = new three_module/* Vector3 */.Pa4(indexbase.x, indexbase.y, indexbase.z);\n          var tempmid2 = new three_module/* Vector3 */.Pa4(middlebase.x, middlebase.y, middlebase.z);\n          base = this.flickerSmoother.smoothAndFilterLandmarks(this.prevbase, tempbase);\n          indexbase = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid, tempmid1);\n          middlebase = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid2, tempmid2);\n          this.prevbase = tempbase;\n          this.prevmid = tempmid1;\n          this.prevmid2 = tempmid2;\n          var shoulderDist;\n          var shoulderDist2;\n          shoulderDist = Math.sqrt(Math.pow(base.x - indexbase.x, 2) + Math.pow(base.y - indexbase.y, 2) + Math.pow(base.z - indexbase.z, 2));\n          shoulderDist2 = Math.sqrt(Math.pow(middlebase.x - base.x, 2) + Math.pow(middlebase.y - base.y, 2) + Math.pow(middlebase.z - base.z, 2));\n\n          if (this.is2d) {\n            shoulderDist = Math.sqrt(Math.pow(base.x - indexbase.x, 2) + Math.pow(base.y - indexbase.y, 2) + 0);\n            shoulderDist2 = Math.sqrt(Math.pow(middlebase.x - base.x, 2) + Math.pow(middlebase.y - base.y, 2) + 0);\n          }\n\n          var val = base.z - this.refobj.position.z;\n          var val2 = indexbase.z - this.refobj.position.z;\n          var avg2;\n          var avg2offset; // if (val > val2)\n\n          avg2 = (val + val2) / 2;\n          avg2offset = avg2 / 10;\n\n          if (this.is2d) {// avg2offset = 0;\n          } // else\n          //   avg2 = ((val + val2) / 2) / 10;\n\n\n          var avg = (shoulderDist2 + shoulderDist) / 2;\n          var prescale = avg / this.scaleFactor / 130 + avg2offset; //let rotThresold = (prescale / 10) * 2000;\n\n          var rotThresold = prescale / 1.2;\n          var handRotation = rotThresold;\n          var xdistnace = 0;\n          var ydistnace = 0;\n          var handorientation = indexbase.y - base.y; // handorientation = handorientation - handorientation / 2;\n\n          if (this.is2d) {\n            if (this.handedness[0].categoryName === "Left") {\n              if (handorientation > 0) xdistnace = indexbase.x - middlebase.x;else {\n                xdistnace = middlebase.x - indexbase.x;\n              }\n            } else {\n              if (handorientation > 0) xdistnace = middlebase.x - indexbase.x;else {\n                xdistnace = indexbase.x - middlebase.x;\n              }\n            }\n\n            ydistnace = indexbase.y - middlebase.y;\n\n            if (Math.abs(xdistnace) >= Math.abs(ydistnace)) {\n              handRotation = xdistnace;\n            } else {\n              handRotation = ydistnace;\n            }\n\n            if (handRotation > rotThresold) {\n              handRotation = rotThresold;\n            }\n\n            if (handRotation < 0) {\n              handRotation = 0;\n            }\n\n            base.z = 0;\n            indexbase.z = 0;\n            middlebase.z = 0;\n          }\n\n          var scale = (avg / this.scaleFactor / 130 + avg2offset) * 0.0059 * (handRotation / rotThresold) * getScaleSliderValue();\n          this.root.scale.set(scale, scale, scale);\n          this.root.position.set(base.x + getXSliderValue() * 300 * scale, base.y - getYSliderValue() * 300 * scale, 0);\n          var forwardDirection = new three_module/* Vector3 */.Pa4().subVectors(indexbase, base);\n          var rightDirection = new three_module/* Vector3 */.Pa4().subVectors(middlebase, base);\n          var upDirection = new three_module/* Vector3 */.Pa4().crossVectors(forwardDirection, rightDirection).normalize();\n          var quaternion = new three_module/* Quaternion */._fP();\n          quaternion.setFromRotationMatrix(new three_module/* Matrix4 */.yGw().lookAt(forwardDirection, new three_module/* Vector3 */.Pa4(0, 0, 0), upDirection));\n          this.root.quaternion.copy(quaternion);\n\n          if (!this.is2d) {\n            this.fill.position.set(0, 0.0005, -0.001);\n            this.fill.rotation.set(0, 0, -1.57);\n            this.fill.scale.set(1.35, 1, 1);\n          }\n\n          if (this.handedness[0].categoryName === "Left") {\n            if (!this.is2d) this.Bracelet.rotation.set(-1.5, 0, -1.57);else this.SpriteMesh.rotation.set(1.57, 0, -0.05);\n\n            if (!this.is2d) {\n              if (this.root.rotation.z > 1.57 || this.root.rotation.z < -1.57) {\n                if (this.root.rotation.x < 0) {\n                  this.Bracelet.position.set(0, 0.005, -0.01);\n                } else {\n                  this.Bracelet.position.set(0, 0.005, -0.01);\n                }\n              } else {\n                if (this.root.rotation.x < 0) {\n                  this.Bracelet.position.set(0, 0.005, -0.01);\n                } else {\n                  this.Bracelet.position.set(0, 0.005, -0.01);\n                }\n              }\n            }\n          } else {\n            if (this.is2d) {\n              this.SpriteMesh.rotation.set(1.57, 0, 0.05);\n            } else {\n              this.Bracelet.rotation.set(1.5, 0, -1.57);\n            }\n\n            if (!this.is2d) {\n              if (this.root.rotation.z > 1.57 || this.root.rotation.z < -1.57) {\n                if (this.root.rotation.x < 0) {\n                  this.Bracelet.position.set(0, -0.005, -0.01);\n                } else {\n                  this.Bracelet.position.set(0, -0.005, -0.01);\n                }\n              } else {\n                if (this.root.rotation.x < 0) {\n                  this.Bracelet.position.set(0, -0.005, -0.01);\n                } else {\n                  this.Bracelet.position.set(0, -0.005, -0.01);\n                }\n              }\n            }\n          }\n\n          if (this.is2d) {\n            if (this.handedness[0].categoryName === "Left") {\n              this.SpriteMesh.position.set(0, 0, -150);\n            } else {\n              this.SpriteMesh.position.set(20, 0, -250);\n            }\n          }\n\n          var forwardDirectionNormalized = new three_module/* Vector3 */.Pa4();\n          forwardDirectionNormalized.copy(forwardDirection).normalize();\n\n          if (forwardDirectionNormalized.z > 0.65 || forwardDirectionNormalized.z < -0.5 || this.is2d && handRotation < 2) {\n            setAlignIcon("hand");\n            setAlignMsg("Point your camera towards your wrist and hand for tryon.");\n            showAlignMessagePanel();\n            if (!this.is2d) this.Bracelet.visible = false;else this.SpriteMesh.visible = false;\n          } else {\n            hideAlignMessagePanel();\n            if (!this.is2d) this.Bracelet.visible = true;else this.SpriteMesh.visible = true;\n          }\n\n          var s = scale / 1000;\n\n          if (this.is2d) {\n            this.SpriteMesh.scale.set(this.imageWidth + s, this.imageHeight + s, 1);\n          }\n\n          this.Prevlandmark = tempPrevlandmark;\n          this.PrevScale = getScaleSliderValue();\n          this.PrevXValue = getXSliderValue();\n          this.PrevYValue = getYSliderValue();\n        }\n      }\n    }\n  }, {\n    key: "addBracelet",\n    value: function addBracelet() {\n      if (this.is2d) {\n        if (this.SpriteMesh) {\n          this.scene.add(this.root);\n          this.root.add(this.SpriteMesh);\n          this.SpriteMesh.position.set(0, 0, 0);\n        }\n      } else {\n        if (this.Bracelet) {\n          this.scene.add(this.root);\n          this.root.add(this.Bracelet); // this.root.add(this.SpriteMesh);\n\n          this.Bracelet.add(this.fill);\n          this.Bracelet.rotation.set(1.5, 0, -1.57);\n          this.Bracelet.position.set(0, 0.005, -0.01);\n          this.fill.position.set(0, 0.0005, -0.001);\n          this.fill.rotation.set(0, 0, -1.57);\n          this.fill.scale.set(1.35, 1, 1);\n        }\n      }\n    }\n  }, {\n    key: "clamp",\n    value: function clamp(num, min, max) {\n      return num <= min ? min : num >= max ? max : num;\n    }\n  }, {\n    key: "remove",\n    value: function remove() {\n      if (this.is2d) {\n        if (this.SpriteMesh) {\n          while (this.root.children.length > 0) {\n            this.root.remove(this.root.children[0]);\n          }\n\n          this.scene.remove(this.root);\n        }\n      } else {\n        if (this.Bracelet) {\n          this.Bracelet.remove(this.fill);\n          this.root.remove(this.Bracelet);\n\n          while (this.root.children.length > 0) {\n            this.root.remove(this.root.children[0]);\n          } //this.root.remove(this.SpriteMesh);\n\n\n          this.scene.remove(this.root);\n        }\n      }\n\n      this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n      this.PrevScale = 1;\n      this.SpriteMesh = null;\n    }\n  }, {\n    key: "hide",\n    value: function hide() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = false;\n      }\n\n      if (this.Bracelet) {\n        this.Bracelet.visible = false;\n      }\n    }\n  }, {\n    key: "show",\n    value: function show() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = true;\n      }\n\n      if (this.Bracelet) {\n        this.Bracelet.visible = true;\n      }\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        var inScene = !!this.scene.getObjectByName("Bracelet");\n        var shouldShow = !!this.landmarks;\n\n        if (inScene) {\n          shouldShow ? this.updateBracelet() : this.remove();\n        } else {\n          if (shouldShow) {\n            this.addBracelet();\n            this.updateBracelet();\n          }\n        }\n      }\n    }\n  }]);\n\n  return Bracelet;\n}(StyleFactory);\n;// CONCATENATED MODULE: ./src/js/three_components/mangtika.js\nfunction mangtika_typeof(obj) { "@babel/helpers - typeof"; return mangtika_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, mangtika_typeof(obj); }\n\n\n\nfunction mangtika_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction mangtika_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { mangtika_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { mangtika_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction mangtika_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction mangtika_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction mangtika_createClass(Constructor, protoProps, staticProps) { if (protoProps) mangtika_defineProperties(Constructor.prototype, protoProps); if (staticProps) mangtika_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction mangtika_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) mangtika_setPrototypeOf(subClass, superClass); }\n\nfunction mangtika_setPrototypeOf(o, p) { mangtika_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return mangtika_setPrototypeOf(o, p); }\n\nfunction mangtika_createSuper(Derived) { var hasNativeReflectConstruct = mangtika_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = mangtika_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = mangtika_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return mangtika_possibleConstructorReturn(this, result); }; }\n\nfunction mangtika_possibleConstructorReturn(self, call) { if (call && (mangtika_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return mangtika_assertThisInitialized(self); }\n\nfunction mangtika_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction mangtika_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction mangtika_getPrototypeOf(o) { mangtika_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return mangtika_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction mangtika_loadModel(file) {\n  return new Promise(function (res, rej) {\n    var loader = new GLTFLoader/* GLTFLoader */.E();\n    loader.load(file, function (gltf) {\n      res(gltf.scene);\n    }, undefined, function (error) {\n      rej(error);\n    });\n  });\n}\n\nvar Mangtika = /*#__PURE__*/function (_StyleFactory) {\n  mangtika_inherits(Mangtika, _StyleFactory);\n\n  var _super = mangtika_createSuper(Mangtika);\n\n  function Mangtika(scene, width, height, sceneManager) {\n    var _this;\n\n    mangtika_classCallCheck(this, Mangtika);\n\n    _this = _super.call(this);\n    _this.sceneManager = sceneManager;\n    _this.scene = scene;\n    _this.width = width;\n    _this.height = height;\n    _this.needsUpdate = false;\n    _this.landmarks = null;\n    _this.geometry = new three_module/* SphereGeometry */.xo$(0.1); // Adjust the size of the sphere as needed\n\n    _this.material = new three_module/* MeshBasicMaterial */.vBJ({\n      color: 0xff0000,\n      transparent: true,\n      opacity: 0\n    });\n    _this.root = new three_module/* Mesh */.Kj0(_this.geometry, _this.material);\n    _this.flickerSmoother = new FlickerSmoother();\n    _this.flickerSmoother.currentvector.y = 1; // if (AssetURL)\n    //   this.URL = AssetURL;\n    // else\n\n    _this.localURL = "".concat(PUBLIC_PATH, "/3d/mangtika/01.png");\n    _this.URL = "".concat(PUBLIC_PATH, "/3d/mangtika/01.png");\n    _this.Prevlandmark;\n    _this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevbase = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid2 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid3 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid4 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid5 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.SpriteMeshLeft = null;\n    _this.imageWidthLeft = null;\n    _this.imageHeightleft = null;\n    _this.is2d = true;\n    _this.Scale = 1;\n    _this.PrevScale = 1;\n    _this.PrevXValue = 0;\n    _this.PrevYValue = 0;\n    _this.timeoutId;\n    return _this;\n  }\n\n  mangtika_createClass(Mangtika, [{\n    key: "debounceLoad",\n    value: function () {\n      var _debounceLoad = mangtika_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(AssetURL, is2d) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (is2d !== undefined && is2d !== null) this.is2d = is2d;\n\n                if (!AssetURL) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.URL = AssetURL;\n                _context2.next = 7;\n                break;\n\n              case 5:\n                return _context2.abrupt("return");\n\n              case 7:\n                showLoadingModelPanel("mangtika"); // Clear the previous timeout (if any) to cancel the previous call\n\n                clearTimeout(this.timeoutId); // Set a new timeout to trigger the function after a delay\n\n                this.timeoutId = setTimeout( /*#__PURE__*/mangtika_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _this2.loadEarrings(AssetURL);\n\n                        case 2:\n                          _this2.update();\n\n                        case 3:\n                        case "end":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 0); // Adjust the delay as needed (e.g., 500 milliseconds)\n\n              case 10:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function debounceLoad(_x, _x2) {\n        return _debounceLoad.apply(this, arguments);\n      }\n\n      return debounceLoad;\n    }()\n  }, {\n    key: "loadEarrings",\n    value: function () {\n      var _loadEarrings = mangtika_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(AssetURL) {\n        var _this3 = this;\n\n        var imageTexture1, material2d, planeGeometry, bbox, size;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.is2d) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                // if (AssetURL) this.URL = AssetURL; else this.URL = this.localURL;\n                this.scaleFactor = 0.5;\n                imageTexture1 = null;\n\n                if (hasGlobalAssetKey(this.URL)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                _context3.next = 6;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL, resolve);\n                });\n\n              case 6:\n                imageTexture1 = _context3.sent;\n                addToGlobalCache(this.URL, imageTexture1);\n                _context3.next = 11;\n                break;\n\n              case 10:\n                imageTexture1 = getGlobalCacheAsset(this.URL);\n\n              case 11:\n                hideLoadingModelPanel();\n                emitSKUApplied();\n                imageTexture1.generateMipmaps = false; //imageTexture1.minFilter = THREE.LinearMipMapNearestFilter;\n\n                imageTexture1.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture1.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture1.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                imageTexture1.needsUpdate = true; //imageTexture.generateMipmaps = false;\n\n                this.imageWidthLeft = imageTexture1.image.width;\n                this.imageHeightLeft = imageTexture1.image.height; //imageTexture.colorSpace = THREE.SRGBColorSpace;\n\n                material2d = new three_module/* MeshBasicMaterial */.vBJ({\n                  map: imageTexture1,\n                  // Assign the loaded texture\n                  transparent: true,\n                  // Enable transparency\n                  side: three_module/* DoubleSide */.ehD // Make the material visible from both sides of the plane (if needed)\n\n                });\n                material2d.metalness = 1;\n                material2d.envMapIntensity = 1;\n                material2d.needsUpdate = true;\n                material2d.toneMapped = false;\n                planeGeometry = new three_module/* PlaneGeometry */._12(1, 1);\n                this.SpriteMeshLeft = new three_module/* Mesh */.Kj0(planeGeometry, material2d);\n                this.SpriteMeshLeft.renderOrder = 2;\n                this.SpriteMeshLeft.name = "Mangtika";\n                _context3.next = 40;\n                break;\n\n              case 31:\n                //if (AssetURL) this.URL = AssetURL; else this.URL = this.localURL;\n                this.Mangtika = null;\n                _context3.next = 34;\n                return mangtika_loadModel(this.URL);\n\n              case 34:\n                this.Mangtika = _context3.sent;\n                // scale glasses\n                bbox = new three_module/* Box3 */.ZzF().setFromObject(this.Mangtika);\n                size = bbox.getSize(new three_module/* Vector3 */.Pa4());\n                this.scaleFactor = size.x;\n                this.Mangtika.name = "Mangtika";\n                this.Mangtika.traverse(function (child) {\n                  if (child.isMesh) {\n                    // Check if the material has metallicness property\n                    if (child.material) {\n                      if (child.material.metalness > 1) child.material.metalness = 1;\n                      child.material.envMapIntensity = 1;\n                    }\n                  }\n                });\n\n              case 40:\n                if (this.sceneManager.isVideo) {\n                  this.flickerSmoother.currentvector.y = 1.5;\n                } else {\n                  this.flickerSmoother.currentvector.y = 6;\n                }\n\n              case 41:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadEarrings(_x3) {\n        return _loadEarrings.apply(this, arguments);\n      }\n\n      return loadEarrings;\n    }()\n  }, {\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks) {\n      this.landmarks = landmarks;\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateEarrings",\n    value: function updateEarrings() {\n      // Points for reference\n      // https://raw.githubusercontent.com/google/mediapipe/master/mediapipe/modules/face_geometry/data/canonical_face_model_uv_visualization.png\n      if (!this.landmarks) return;\n\n      if (this.sceneManager) {\n        if (this.sceneManager.isVideo) {\n          this.flickerSmoother.currentvector.y = 2;\n        } else {\n          this.flickerSmoother.currentvector.y = 0;\n        }\n      }\n\n      var midEyes = scaleLandmark(this.landmarks[10], this.width, this.height);\n      var chin = scaleLandmark(this.landmarks[152], this.width, this.height);\n      var leftEyeInnerCorner = scaleLandmark(this.landmarks[463], this.width, this.height);\n      var rightEyeInnerCorner = scaleLandmark(this.landmarks[243], this.width, this.height);\n      var noseBottom = scaleLandmark(this.landmarks[2], this.width, this.height); // // These points seem appropriate 446, 265, 372, 264\n\n      var leftEyeUpper1 = scaleLandmark(this.landmarks[264], this.width, this.height); // These points seem appropriate 226, 35, 143, 34\n\n      var rightEyeUpper1 = scaleLandmark(this.landmarks[34], this.width, this.height);\n      var tempPrevlandmark = new three_module/* Vector3 */.Pa4(midEyes.x, midEyes.y, midEyes.z);\n      var difference = this.Prevlandmark.distanceTo(tempPrevlandmark);\n\n      if (difference > this.flickerSmoother.currentvector.y || this.PrevScale !== getScaleSliderValue() || this.PrevXValue !== getXSliderValue() || this.PrevYValue !== getYSliderValue()) {\n        if (this.Mangtika || this.SpriteMeshLeft) {\n          this.show();\n          var tempbase = new three_module/* Vector3 */.Pa4(midEyes.x, midEyes.y, midEyes.z);\n          var tempmid1 = new three_module/* Vector3 */.Pa4(chin.x, chin.y, chin.z);\n          var tempmid2 = new three_module/* Vector3 */.Pa4(leftEyeInnerCorner.x, leftEyeInnerCorner.y, leftEyeInnerCorner.z);\n          var tempmid3 = new three_module/* Vector3 */.Pa4(rightEyeInnerCorner.x, rightEyeInnerCorner.y, rightEyeInnerCorner.z);\n          var tempmid4 = new three_module/* Vector3 */.Pa4(leftEyeUpper1.x, leftEyeUpper1.y, leftEyeUpper1.z);\n          var tempmid5 = new three_module/* Vector3 */.Pa4(rightEyeUpper1.x, rightEyeUpper1.y, rightEyeUpper1.z);\n          midEyes = this.flickerSmoother.smoothAndFilterLandmarks(this.prevbase, tempbase);\n          chin = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid, tempmid1);\n          leftEyeInnerCorner = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid2, tempmid2);\n          rightEyeInnerCorner = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid3, tempmid3);\n          leftEyeUpper1 = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid4, tempmid4);\n          rightEyeUpper1 = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid5, tempmid5);\n          this.prevbase = tempbase;\n          this.prevmid = tempmid1;\n          this.prevmid2 = tempmid2;\n          this.prevmid3 = tempmid3;\n          this.prevmid4 = tempmid4;\n          this.prevmid5 = tempmid5;\n          var eyeDist = Math.sqrt(Math.pow(leftEyeUpper1.x - rightEyeUpper1.x, 2) + Math.pow(leftEyeUpper1.y - rightEyeUpper1.y, 2) + Math.pow(leftEyeUpper1.z - rightEyeUpper1.z, 2));\n          var upVector = new three_module/* Vector3 */.Pa4(midEyes.x - chin.x, midEyes.y - chin.y, midEyes.z - chin.z).normalize();\n          var sideVector = new three_module/* Vector3 */.Pa4(leftEyeInnerCorner.x - rightEyeInnerCorner.x, leftEyeInnerCorner.y - rightEyeInnerCorner.y, leftEyeInnerCorner.z - rightEyeInnerCorner.z).normalize();\n          var zRot = new three_module/* Vector3 */.Pa4(1, 0, 0).angleTo(upVector.clone().projectOnPlane(new three_module/* Vector3 */.Pa4(0, 0, 1))) - Math.PI / 2;\n          var xRot = Math.PI / 2 - new three_module/* Vector3 */.Pa4(0, 0, 1).angleTo(upVector.clone().projectOnPlane(new three_module/* Vector3 */.Pa4(1, 0, 0)));\n          var yRot = new three_module/* Vector3 */.Pa4(sideVector.x, 0, sideVector.z).angleTo(new three_module/* Vector3 */.Pa4(0, 0, 1)) - Math.PI / 2;\n          this.Scale = eyeDist / this.scaleFactor / 1.2 * getScaleSliderValue() * (Math.PI / 3 - Math.abs(yRot / 1.7));\n\n          if (!this.is2d) {\n            this.Mangtika.scale.set(this.Scale, this.Scale, this.Scale);\n          } else {\n            this.SpriteMeshLeft.scale.set(this.imageWidthLeft / 1350 * this.Scale, this.imageHeightLeft / 1350 * this.Scale, 1);\n          }\n\n          if (Math.abs(yRot) > 0.5) {\n            setAlignIcon("face");\n            setAlignMsg("Keep your face straight and aligned with camera.");\n            showAlignMessagePanel();\n            this.SpriteMeshLeft.visible = false;\n          } else {\n            hideAlignMessagePanel();\n            this.SpriteMeshLeft.visible = true;\n          }\n\n          var clampedYRot = this.clamp(yRot, -0.5, 0.5);\n          var clampedZRot = this.clamp(zRot, -0.1, 0.1);\n          if (!this.is2d) this.Mangtika.rotation.set(-0.3, clampedYRot, clampedZRot);\n          this.SpriteMeshLeft.rotation.set(0, 0, zRot);\n          var ypos; //console.log(5 + (scale / 1.1));\n\n          ypos = chin.y + (5 + this.Scale / 1.1 + (5 + this.Scale / 1.1) * xRot); // position\n\n          if (!this.is2d) {\n            this.Mangtika.position.set(chin.x - (20 + this.Scale) * yRot + (10 - this.Scale) * zRot, ypos - this.Scale / 2, 0);\n          } else {\n            this.SpriteMeshLeft.position.set(midEyes.x - // -(0.3 - zRot / 2) * this.Scale * yRot +\n            0.07 * this.Scale * zRot + //this.Scale * 0.05\n            getXSliderValue() * 0.1 * this.Scale, midEyes.y + //0.4 * this.Scale * xRot +\n            //0.4 * this.Scale * yRot -\n            -0.1 * this.Scale * Math.abs(zRot) + this.Scale / 14 - getYSliderValue() * 0.1 * this.Scale, 0);\n          }\n\n          this.Prevlandmark = tempPrevlandmark;\n          this.PrevScale = getScaleSliderValue();\n          this.PrevXValue = getXSliderValue();\n          this.PrevYValue = getYSliderValue(); //*/\n        }\n      }\n    }\n  }, {\n    key: "addEarrings",\n    value: function addEarrings() {\n      if (this.Mangtika) {\n        //this.scene.add(this.root);\n        this.scene.add(this.Mangtika); // this.scene.add(this.planeMesh);\n      } else if (this.SpriteMeshLeft) {\n        this.scene.add(this.SpriteMeshLeft);\n        this.SpriteMeshLeft.scale.set(this.imageWidthLeft / 1350 * this.Scale, this.imageHeightLeft / 1350 * this.Scale, 1);\n      }\n    }\n  }, {\n    key: "clamp",\n    value: function clamp(num, min, max) {\n      return num <= min ? min : num >= max ? max : num;\n    }\n  }, {\n    key: "remove",\n    value: function remove() {\n      if (this.Mangtika) {\n        this.scene.remove(this.Mangtika); // this.scene.remove(this.planeMesh);\n      } else if (this.SpriteMeshLeft) {\n        while (!!this.scene.getObjectByName("Mangtika")) {\n          this.scene.remove(this.scene.getObjectByName("Mangtika"));\n        } //this.scene.remove(this.SpriteMeshLeft);\n\n      }\n\n      this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n      this.PrevScale = 1;\n      this.SpriteMeshLeft = null;\n    }\n  }, {\n    key: "hide",\n    value: function hide() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = false;\n      }\n\n      if (this.Mangtika) {\n        this.Mangtika.visible = false;\n      }\n    }\n  }, {\n    key: "show",\n    value: function show() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = true;\n      }\n\n      if (this.Mangtika) {\n        this.Mangtika.visible = true;\n      }\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        var inScene = !!this.scene.getObjectByName("Mangtika");\n        var shouldShow = !!this.landmarks;\n\n        if (inScene) {\n          shouldShow ? this.updateEarrings() : this.remove();\n        } else {\n          if (shouldShow) {\n            this.addEarrings();\n            this.updateEarrings();\n          }\n        }\n      }\n    }\n  }]);\n\n  return Mangtika;\n}(StyleFactory);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.typed.int32-array.js\nvar es6_typed_int32_array = __webpack_require__(1303);\n// EXTERNAL MODULE: ./node_modules/three.meshline/src/THREE.MeshLine.js\nvar THREE_MeshLine = __webpack_require__(7591);\n;// CONCATENATED MODULE: ./src/js/three_components/Ring.js\n\n\nfunction Ring_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction Ring_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { Ring_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { Ring_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction Ring_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Ring_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Ring_createClass(Constructor, protoProps, staticProps) { if (protoProps) Ring_defineProperties(Constructor.prototype, protoProps); if (staticProps) Ring_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction Ring_loadModel(file) {\n  return new Promise(function (res, rej) {\n    var loader = new GLTFLoader/* GLTFLoader */.E();\n    loader.load(file, function (gltf) {\n      res(gltf.scene);\n      addToGlobalCache(file, gltf.scene);\n    }, undefined, function (error) {\n      rej(error);\n    });\n  });\n}\n\nvar Ring = /*#__PURE__*/function () {\n  function Ring(scene, width, height, sceneManager) {\n    Ring_classCallCheck(this, Ring);\n\n    this.scene = scene;\n    this.width = width;\n    this.height = height;\n    this.needsUpdate = false;\n    this.landmarks = null;\n    this.handedness = null;\n    this.localURL = "".concat(PUBLIC_PATH, "/3d/rings/01.png");\n    this.URL = "".concat(PUBLIC_PATH, "/3d/rings/01.png");\n    this.sceneManager = sceneManager; //this.loadRing();\n\n    this.geometry = new three_module/* SphereGeometry */.xo$(0.001); // Adjust the size of the sphere as needed\n\n    this.material = new three_module/* MeshBasicMaterial */.vBJ({\n      color: 0xff0000,\n      transparent: true,\n      opacity: 0 // Set opacity to 0 (completely transparent)\n\n    });\n    this.root;\n    this.fill;\n    this.SpriteMesh = null;\n    this.imageWidth = null;\n    this.imageHeight = null;\n    this.PrevScale = 1;\n    this.PrevXValue = 0;\n    this.PrevYValue = 0;\n    this.is2d = true;\n    this.root = new three_module/* Mesh */.Kj0(this.geometry, this.material);\n    this.flickerSmoother = new FlickerSmoother();\n    this.flickerSmoother.currentvector.y = 3;\n    this.filter = 0;\n    this.Prevlandmark;\n    this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    this.prevbase = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    this.prevmid = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    this.prevmid2 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    this.geom = new three_module/* BufferGeometry */.u9r();\n    this.linemesh;\n    this.ringFing = new Int32Array([17, 18, 19, 20]);\n    this.line = new THREE_MeshLine.MeshLine();\n    this.timeoutId;\n    this.fingerIndex = 2;\n  }\n\n  Ring_createClass(Ring, [{\n    key: "debounceLoad",\n    value: function () {\n      var _debounceLoad = Ring_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(AssetURL, is2d) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // AssetURL = null;\n                if (is2d !== undefined && is2d !== null) this.is2d = is2d;\n\n                if (!AssetURL) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.URL = AssetURL;\n                _context2.next = 7;\n                break;\n\n              case 5:\n                return _context2.abrupt("return");\n\n              case 7:\n                showLoadingModelPanel("ring"); // Clear the previous timeout (if any) to cancel the previous call\n\n                clearTimeout(this.timeoutId); // Set a new timeout to trigger the function after a delay\n\n                this.timeoutId = setTimeout( /*#__PURE__*/Ring_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _this.loadRing(AssetURL);\n\n                        case 2:\n                          _this.update();\n\n                        case 3:\n                        case "end":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 0); // Adjust the delay as needed (e.g., 500 milliseconds)\n\n              case 10:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function debounceLoad(_x, _x2) {\n        return _debounceLoad.apply(this, arguments);\n      }\n\n      return debounceLoad;\n    }()\n  }, {\n    key: "loadRing",\n    value: function () {\n      var _loadRing = Ring_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(AssetURL) {\n        var _this2 = this;\n\n        var imageTexture, material2d, planeGeometry, bbox, size, radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, cylinderGeometry, material, linemat;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.is2d) {\n                  _context3.next = 30;\n                  break;\n                }\n\n                imageTexture = null;\n\n                if (hasGlobalAssetKey(this.URL)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 5;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this2.URL, resolve);\n                });\n\n              case 5:\n                imageTexture = _context3.sent;\n                addToGlobalCache(this.URL, imageTexture);\n                _context3.next = 10;\n                break;\n\n              case 9:\n                imageTexture = getGlobalCacheAsset(this.URL);\n\n              case 10:\n                hideLoadingModelPanel();\n                emitSKUApplied();\n                this.scaleFactor = 0.041;\n                imageTexture.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                imageTexture.needsUpdate = true; //imageTexture.generateMipmaps = false;\n\n                this.imageWidth = imageTexture.image.width;\n                this.imageHeight = imageTexture.image.height;\n                material2d = new three_module/* MeshBasicMaterial */.vBJ({\n                  map: imageTexture,\n                  // Assign the loaded texture\n                  transparent: true,\n                  // Enable transparency\n                  side: three_module/* DoubleSide */.ehD // Make the material visible from both sides of the plane (if needed)\n\n                });\n                material2d.metalness = 1;\n                material2d.envMapIntensity = 1;\n                material2d.needsUpdate = true;\n                material2d.toneMapped = false;\n                planeGeometry = new three_module/* PlaneGeometry */._12(1, 1);\n                this.SpriteMesh = new three_module/* Mesh */.Kj0(planeGeometry, material2d);\n                this.SpriteMesh.renderOrder = 2;\n                this.SpriteMesh.name = "Ring";\n                _context3.next = 61;\n                break;\n\n              case 30:\n                if (AssetURL) this.URL = AssetURL;else this.URL = this.localURL;\n\n                if (hasGlobalAssetKey(this.URL)) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                _context3.next = 34;\n                return Ring_loadModel(this.URL);\n\n              case 34:\n                this.Ring = _context3.sent;\n                _context3.next = 38;\n                break;\n\n              case 37:\n                this.Ring = getGlobalCacheAsset(this.URL);\n\n              case 38:\n                hideLoadingModelPanel();\n                emitSKUApplied(); // scale glasses\n\n                bbox = new three_module/* Box3 */.ZzF().setFromObject(this.Ring);\n                size = bbox.getSize(new three_module/* Vector3 */.Pa4());\n                this.scaleFactor = 0.041;\n                this.Ring.name = "Ring";\n                this.Ring.traverse(function (child) {\n                  if (child.isMesh) {\n                    if (child.material.metalness > 1) child.material.metalness = 1;\n                    child.material.envMapIntensity = 1;\n                    child.renderOrder = 3;\n                  }\n                });\n                radiusTop = 0.029; // Adjust the top radius\n\n                radiusBottom = 0.029; // Adjust the bottom radius\n\n                height = 0.1; // Adjust the height\n\n                radialSegments = 16; // Adjust the number of radial segments\n\n                heightSegments = 1; // Adjust the number of height segments\n\n                openEnded = false; // Set to true for an open-ended cylinder\n\n                cylinderGeometry = new three_module/* CylinderGeometry */.fHI(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded); // let geometry = new THREE.SphereGeometry(0.03); // Adjust the size of the sphere as needed\n\n                material = new three_module/* MeshBasicMaterial */.vBJ({\n                  color: 0xff0000\n                });\n                this.fill = new three_module/* Mesh */.Kj0(cylinderGeometry, material);\n                this.fill.renderOrder = 2;\n                this.fill.material.colorWrite = false; // this.line.setPoints(vertices);\n\n                linemat = new THREE_MeshLine.MeshLineMaterial({\n                  color: 0xff0000,\n                  // Line color\n                  lineWidth: 30 // Line thickness\n\n                });\n                this.linemesh = new three_module/* Mesh */.Kj0(this.line.geometry, linemat); // Scale the line as needed\n\n                this.linemesh.scale.set(this.width, this.height, this.width);\n                this.linemesh.renderOrder = 1;\n                this.linemesh.material.colorWrite = false;\n\n              case 61:\n                if (this.sceneManager.isVideo) {\n                  this.flickerSmoother.currentvector.y = 5;\n                } else {\n                  this.flickerSmoother.currentvector.y = 10;\n                }\n\n              case 62:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadRing(_x3) {\n        return _loadRing.apply(this, arguments);\n      }\n\n      return loadRing;\n    }()\n  }, {\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks, handedness) {\n      this.landmarks = landmarks;\n      if (handedness.length > 0) this.handedness = handedness[0];\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updateRing",\n    value: function updateRing() {\n      // if (this.filter < this.flickerSmoother.currentvector.x) {\n      //   this.filter += 1;\n      //   return;\n      // }\n      // this.filter = 0;\n      if (!this.landmarks) return;\n\n      if (this.sceneManager) {\n        if (this.sceneManager.isVideo) {\n          this.flickerSmoother.currentvector.y = 5;\n        } else {\n          this.flickerSmoother.currentvector.y = 0;\n        }\n      }\n\n      this.fingerIndex = getRingIndex();\n      var base = hand_landmarks_helpers_scaleLandmark(this.landmarks[fingerConfig[this.fingerIndex].base], this.width, this.height);\n      var indexbase = hand_landmarks_helpers_scaleLandmark(this.landmarks[fingerConfig[this.fingerIndex].index], this.width, this.height);\n      var middlebase = hand_landmarks_helpers_scaleLandmark(this.landmarks[fingerConfig[this.fingerIndex].middle], this.width, this.height);\n      var tempPrevlandmark = new three_module/* Vector3 */.Pa4(base.x, base.y, base.z);\n      var difference = this.Prevlandmark.distanceTo(tempPrevlandmark);\n\n      if (difference > this.flickerSmoother.currentvector.y || this.PrevScale !== getScaleSliderValue() || this.PrevXValue !== getXSliderValue() || this.PrevYValue !== getYSliderValue()) {\n        if (this.Ring || this.SpriteMesh) {\n          this.show();\n          var tempbase = new three_module/* Vector3 */.Pa4(base.x, base.y, base.z);\n          var tempmid1 = new three_module/* Vector3 */.Pa4(indexbase.x, indexbase.y, indexbase.z);\n          var tempmid2 = new three_module/* Vector3 */.Pa4(middlebase.x, middlebase.y, middlebase.z);\n          base = this.flickerSmoother.smoothAndFilterLandmarks(this.prevbase, tempbase);\n          indexbase = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid, tempmid1);\n          middlebase = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid2, tempmid2);\n          this.prevbase = tempbase;\n          this.prevmid = tempmid1;\n          this.prevmid2 = tempmid2;\n          var shoulderDist = Math.sqrt(Math.pow(base.x - indexbase.x, 2) + Math.pow(base.y - indexbase.y, 2) + Math.pow(base.z - indexbase.z, 2));\n          var shoulderDist2 = Math.sqrt(Math.pow(middlebase.x - base.x, 2) + Math.pow(middlebase.y - base.y, 2) + Math.pow(middlebase.z - base.z, 2));\n          var avg = (shoulderDist2 + shoulderDist) / 2;\n          var prescale = avg / this.scaleFactor / 3.2;\n          var rotThresold = prescale / 24;\n          var handRotation = rotThresold;\n          var xdistnace = 0;\n          var ydistnace = 0;\n          var handorientation = base.y - indexbase.y;\n\n          if (this.is2d) {\n            if (this.handedness[0].categoryName === "Left") {\n              if (handorientation > 0) xdistnace = indexbase.x - middlebase.x;else {\n                xdistnace = middlebase.x - indexbase.x;\n              }\n            } else {\n              if (handorientation > 0) xdistnace = middlebase.x - indexbase.x;else {\n                xdistnace = indexbase.x - middlebase.x;\n              }\n            }\n\n            ydistnace = indexbase.y - middlebase.y;\n\n            if (Math.abs(xdistnace) >= Math.abs(ydistnace)) {\n              handRotation = xdistnace;\n            } else {\n              handRotation = ydistnace;\n            }\n\n            if (handRotation > rotThresold) {\n              handRotation = rotThresold;\n            }\n\n            if (handRotation < 0) {\n              handRotation = 0;\n            }\n\n            base.z = 0;\n            indexbase.z = 0;\n            middlebase.z = 0;\n          }\n\n          var scale = avg / this.scaleFactor / 3.2 * 0.00008 * (handRotation / rotThresold) * fingerConfig[this.fingerIndex].scaleAdjust * getScaleSliderValue();\n          var forwardDirection = new three_module/* Vector3 */.Pa4().subVectors(base, indexbase);\n          var rightDirection = new three_module/* Vector3 */.Pa4().subVectors(base, middlebase);\n          var upDirection = new three_module/* Vector3 */.Pa4().crossVectors(forwardDirection, rightDirection).normalize();\n          var quaternion = new three_module/* Quaternion */._fP();\n          quaternion.setFromRotationMatrix(new three_module/* Matrix4 */.yGw().lookAt(forwardDirection, new three_module/* Vector3 */.Pa4(0, 0, 0), upDirection));\n          this.root.quaternion.copy(quaternion);\n          this.root.scale.set(scale, scale, scale);\n          this.root.position.set(base.x + getXSliderValue() * 500 * scale, base.y - getYSliderValue() * 500 * scale, 0);\n          var vertices = [];\n\n          if (this.is2d) {\n            this.SpriteMesh.rotation.set(1.57, 0, fingerConfig[this.fingerIndex].zRot);\n          }\n\n          if (!this.is2d) {\n            if (this.handedness[0].categoryName === "Left") {\n              this.Ring.rotation.set(Math.PI / 2, 0, -(Math.PI / 2)); // let mappedPosition = this.mapRange(this.root.rotation.z, -Math.PI, Math.PI, 0.001, -0.001);\n              // let mappedPositionx = this.mapRange(this.root.rotation.z, -Math.PI, Math.PI, 0.01, -0.01);\n              // this.Ring.position.set(mappedPositionx, mappedPosition, -0.03);\n\n              if (this.root.rotation.z > Math.PI / 2 || this.root.rotation.z < -(Math.PI / 2)) {\n                if (this.root.rotation.x < 0) {\n                  this.Ring.position.set(-0.005, -0.001, -0.03);\n\n                  for (var i = 0; i < this.ringFing.length; i++) {\n                    var _this$landmarks$this$ = this.landmarks[this.ringFing[i]],\n                        x = _this$landmarks$this$.x,\n                        y = _this$landmarks$this$.y,\n                        z = _this$landmarks$this$.z;\n                    var vertex = [x, y, z + 1];\n                    vertices.push.apply(vertices, vertex);\n                  }\n                } else {\n                  this.Ring.position.set(0.005, -0.001, -0.03);\n\n                  for (var _i = 0; _i < this.ringFing.length; _i++) {\n                    var _this$landmarks$this$2 = this.landmarks[this.ringFing[_i]],\n                        _x4 = _this$landmarks$this$2.x,\n                        _y = _this$landmarks$this$2.y,\n                        _z = _this$landmarks$this$2.z;\n                    var _vertex = [_x4, _y, _z - 1];\n                    vertices.push.apply(vertices, _vertex);\n                  }\n                }\n              } else {\n                if (this.root.rotation.x < 0) {\n                  this.Ring.position.set(0.005, 0.001, -0.03);\n\n                  for (var _i2 = 0; _i2 < this.ringFing.length; _i2++) {\n                    var _this$landmarks$this$3 = this.landmarks[this.ringFing[_i2]],\n                        _x5 = _this$landmarks$this$3.x,\n                        _y2 = _this$landmarks$this$3.y,\n                        _z2 = _this$landmarks$this$3.z;\n                    var _vertex2 = [_x5, _y2, _z2 + 1];\n                    vertices.push.apply(vertices, _vertex2);\n                  }\n                } else {\n                  this.Ring.position.set(-0.005, 0.001, -0.03);\n\n                  for (var _i3 = 0; _i3 < this.ringFing.length; _i3++) {\n                    var _this$landmarks$this$4 = this.landmarks[this.ringFing[_i3]],\n                        _x6 = _this$landmarks$this$4.x,\n                        _y3 = _this$landmarks$this$4.y,\n                        _z3 = _this$landmarks$this$4.z;\n                    var _vertex3 = [_x6, _y3, _z3 - 1];\n                    vertices.push.apply(vertices, _vertex3);\n                  }\n                }\n              }\n            } else {\n              this.Ring.rotation.set(-(Math.PI / 2), 0, -(Math.PI / 2));\n\n              if (this.root.rotation.z >= Math.PI / 2 || this.root.rotation.z < -(Math.PI / 2)) {\n                if (this.root.rotation.x < 0) {\n                  this.Ring.position.set(-0.005, -0.001, -0.03);\n\n                  for (var _i4 = 0; _i4 < this.ringFing.length; _i4++) {\n                    var _this$landmarks$this$5 = this.landmarks[this.ringFing[_i4]],\n                        _x7 = _this$landmarks$this$5.x,\n                        _y4 = _this$landmarks$this$5.y,\n                        _z4 = _this$landmarks$this$5.z;\n                    var _vertex4 = [_x7, _y4, _z4 + 1];\n                    vertices.push.apply(vertices, _vertex4);\n                  }\n                } else {\n                  this.Ring.position.set(0.005, -0.001, -0.03);\n\n                  for (var _i5 = 0; _i5 < this.ringFing.length; _i5++) {\n                    var _this$landmarks$this$6 = this.landmarks[this.ringFing[_i5]],\n                        _x8 = _this$landmarks$this$6.x,\n                        _y5 = _this$landmarks$this$6.y,\n                        _z5 = _this$landmarks$this$6.z;\n                    var _vertex5 = [_x8, _y5, _z5 - 1];\n                    vertices.push.apply(vertices, _vertex5);\n                  }\n                }\n              } else {\n                if (this.root.rotation.x < 0) {\n                  this.Ring.position.set(0.005, 0.001, -0.03);\n\n                  for (var _i6 = 0; _i6 < this.ringFing.length; _i6++) {\n                    var _this$landmarks$this$7 = this.landmarks[this.ringFing[_i6]],\n                        _x9 = _this$landmarks$this$7.x,\n                        _y6 = _this$landmarks$this$7.y,\n                        _z6 = _this$landmarks$this$7.z;\n                    var _vertex6 = [_x9, _y6, _z6 + 1];\n                    vertices.push.apply(vertices, _vertex6);\n                  }\n                } else {\n                  this.Ring.position.set(-0.005, 0.001, -0.03);\n\n                  for (var _i7 = 0; _i7 < this.ringFing.length; _i7++) {\n                    var _this$landmarks$this$8 = this.landmarks[this.ringFing[_i7]],\n                        _x10 = _this$landmarks$this$8.x,\n                        _y7 = _this$landmarks$this$8.y,\n                        _z7 = _this$landmarks$this$8.z;\n                    var _vertex7 = [_x10, _y7, _z7 - 1];\n                    vertices.push.apply(vertices, _vertex7);\n                  }\n                }\n              }\n            }\n\n            this.fill.position.set(0, 0, 0);\n            this.fill.rotation.set(0, 0, -(Math.PI / 2));\n          } else {\n            if (this.handedness[0].categoryName === "Left") {\n              this.SpriteMesh.position.set(fingerConfig[this.fingerIndex].xPosRight, 0, fingerConfig[this.fingerIndex].zPosRight);\n            } else {\n              this.SpriteMesh.position.set(fingerConfig[this.fingerIndex].xPosLeft, 0, fingerConfig[this.fingerIndex].zPosLeft);\n            }\n          }\n\n          var forwardDirectionNormalized = new three_module/* Vector3 */.Pa4();\n          forwardDirectionNormalized.copy(forwardDirection).normalize();\n\n          if (forwardDirectionNormalized.z > 0.65 || forwardDirectionNormalized.z < -0.5 || this.is2d && handRotation < 2) {\n            setAlignIcon("ring");\n            setAlignMsg("Point your camera towards your fingers and back of the hand for tryon.");\n            showAlignMessagePanel();\n            if (!this.is2d) this.Ring.visible = false;else this.SpriteMesh.visible = false;\n          } else {\n            hideAlignMessagePanel();\n            if (!this.is2d) this.Ring.visible = true;else this.SpriteMesh.visible = true;\n          }\n\n          var s = scale / 1000;\n\n          if (this.is2d) {\n            this.SpriteMesh.scale.set(this.imageWidth + s, this.imageHeight + s, 1);\n          }\n\n          if (!this.is2d) this.line.setPoints(vertices, function (p) {\n            return 1 - p / 2;\n          });\n          this.Prevlandmark = tempPrevlandmark;\n          this.PrevScale = getScaleSliderValue();\n          this.PrevXValue = getXSliderValue();\n          this.PrevYValue = getYSliderValue();\n        }\n      }\n    }\n  }, {\n    key: "mapRange",\n    value: function mapRange(value, fromMin, fromMax, toMin, toMax) {\n      return (value - fromMin) * (toMax - toMin) / (fromMax - fromMin) + toMin;\n    }\n  }, {\n    key: "addRing",\n    value: function addRing() {\n      if (this.is2d) {\n        if (this.SpriteMesh) {\n          this.scene.add(this.root);\n          this.root.add(this.SpriteMesh);\n          this.SpriteMesh.position.set(fingerConfig[this.fingerIndex].xPosLeft, 0, fingerConfig[this.fingerIndex].zPosLeft);\n        }\n      } else {\n        if (this.Ring) {\n          this.scene.add(this.root);\n          this.root.add(this.Ring);\n          this.Ring.add(this.fill);\n          this.scene.add(this.linemesh);\n        }\n      }\n    }\n  }, {\n    key: "clamp",\n    value: function clamp(num, min, max) {\n      return num <= min ? min : num >= max ? max : num;\n    }\n  }, {\n    key: "remove",\n    value: function remove() {\n      if (this.is2d) {\n        if (this.SpriteMesh) {\n          while (this.root.children.length > 0) {\n            this.root.remove(this.root.children[0]);\n          }\n\n          this.scene.remove(this.root);\n        }\n      } else {\n        if (this.Ring) {\n          this.Ring.remove(this.fill);\n\n          while (this.root.children.length > 0) {\n            this.root.remove(this.root.children[0]);\n          }\n\n          this.scene.remove(this.root);\n          this.scene.remove(this.linemesh);\n        }\n      }\n\n      this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n      this.PrevScale = 1;\n      this.SpriteMesh = null;\n    }\n  }, {\n    key: "hide",\n    value: function hide() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = false;\n      }\n\n      if (this.Ring) {\n        this.Ring.visible = false;\n      }\n    }\n  }, {\n    key: "show",\n    value: function show() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = true;\n      }\n\n      if (this.Ring) {\n        this.Ring.visible = true;\n      }\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        var inScene = !!this.scene.getObjectByName("Ring");\n        var shouldShow = !!this.landmarks;\n\n        if (inScene) {\n          shouldShow ? this.updateRing() : this.remove();\n        } else {\n          if (shouldShow) {\n            this.addRing();\n            this.updateRing();\n          }\n        }\n      }\n    }\n  }]);\n\n  return Ring;\n}();\nvar fingerConfig = [{\n  base: 6,\n  index: 5,\n  middle: 9,\n  zRot: 0,\n  xPosRight: 20,\n  xPosLeft: -20,\n  zPosLeft: -700,\n  zPosRight: -700,\n  scaleAdjust: 1\n}, {\n  base: 10,\n  index: 9,\n  middle: 13,\n  zRot: 0,\n  xPosRight: 0,\n  xPosLeft: -20,\n  zPosLeft: -750,\n  zPosRight: -750,\n  scaleAdjust: 0.98\n}, {\n  base: 14,\n  index: 13,\n  middle: 17,\n  zRot: 0.07,\n  xPosRight: 20,\n  xPosLeft: -20,\n  zPosLeft: -630,\n  zPosRight: -630,\n  scaleAdjust: 1\n}, {\n  base: 18,\n  index: 13,\n  middle: 17,\n  zRot: -0.45,\n  xPosRight: -280,\n  xPosLeft: -350,\n  zPosLeft: -550,\n  zPosRight: -520,\n  scaleAdjust: 1.2\n}];\n;// CONCATENATED MODULE: ./src/js/three_components/video_bg.js\n\n\n\nfunction video_bg_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction video_bg_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction video_bg_createClass(Constructor, protoProps, staticProps) { if (protoProps) video_bg_defineProperties(Constructor.prototype, protoProps); if (staticProps) video_bg_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\nvar VideoBackground = /*#__PURE__*/function () {\n  function VideoBackground(scene, width, height) {\n    video_bg_classCallCheck(this, VideoBackground);\n\n    this.scene = scene;\n    this.image = null;\n    this.plane = null;\n    this.width = width;\n    this.height = height;\n    this.imageUpdated = false;\n    this.sizeUpdated = false;\n    this.isVideo = true;\n    this.flipCanvas = false;\n    this.video;\n    this.log;\n    this.texture;\n  }\n\n  video_bg_createClass(VideoBackground, [{\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      if (this.plane) {\n        this.plane.scale.x = width;\n        this.plane.scale.y = height;\n      }\n    }\n  }, {\n    key: "setImage",\n    value: function setImage(image, isvideo_, flip) {\n      this.image = image;\n      this.imageUpdated = true;\n      this.isVideo = isvideo_;\n    }\n  }, {\n    key: "createNewPlane",\n    value: function createNewPlane(video) {\n      this.video = video;\n      var geometry = this.createGeometry();\n\n      if (video) {\n        this.texture = new three_module/* VideoTexture */.fO1(video);\n        this.texture.generateMipmaps = false;\n        this.texture.minFilter = three_module/* LinearFilter */.wem;\n        this.texture.magFilter = three_module/* LinearFilter */.wem;\n        this.texture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n      }\n\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        map: this.texture,\n        depthWrite: false,\n        toneMapped: false\n      });\n      this.plane = new three_module/* Mesh */.Kj0(geometry, material); //this.plane.scale.set(1, 1, 1);\n      // this.updateDimensions();\n\n      this.addPlaneToScene();\n    }\n  }, {\n    key: "updatePlaneWithImage",\n    value: function updatePlaneWithImage(texture) {\n      if (this.plane) {\n        texture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n        this.plane.material.map = texture;\n        this.plane.material.needsUpdate = true;\n      } else {\n        texture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n        var geometry = this.createGeometry();\n        var material = new three_module/* MeshBasicMaterial */.vBJ({\n          map: texture,\n          depthWrite: false,\n          toneMapped: false\n        });\n        this.plane = new three_module/* Mesh */.Kj0(geometry, material);\n        this.addPlaneToScene();\n      }\n    } // createNewPlane() {\n    //   const geometry = this.createGeometry();\n    //   const material = this.createMaterial();\n    //   this.plane = new THREE.Mesh(geometry, material);\n    //   if (this.flipCanvas) {\n    //     //  console.log(this.flipCanvas);\n    //     this.plane.scale.set(-1, 1, 1);\n    //   } else this.plane.scale.set(1, 1, 1);\n    //   // this.updateDimensions();\n    //   this.addPlaneToScene();\n    //   if (this.isVideo) this.plane.material = this.createMaterial();\n    //   else this.plane.material = this.createMaterialImage();\n    // }\n\n  }, {\n    key: "addPlaneToScene",\n    value: function addPlaneToScene() {\n      if (this.plane != null) {\n        // this.updateDimensions();\n        this.scene.add(this.plane);\n        this.plane.position.set(0, 0, 0);\n      }\n    }\n  }, {\n    key: "createGeometry",\n    value: function createGeometry() {\n      return new three_module/* PlaneGeometry */._12(1, 1);\n    }\n  }, {\n    key: "createMaterial",\n    value: function createMaterial() {\n      if (this.image == null) {\n        return new three_module/* MeshBasicMaterial */.vBJ({\n          color: new three_module/* Color */.Ilk(0xcccccc)\n        });\n      } // console.log(this.image);\n\n\n      var texture = new three_module/* VideoTexture */.fO1(this.image); // texture.colorSpace = THREE.SRGBColorSpace;\n\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        map: texture //new THREE.CanvasTexture(this.image),\n        // depthWrite: false,\n        //color: 0xffff00,\n\n      });\n      return material;\n    }\n  }, {\n    key: "createMaterialImage",\n    value: function createMaterialImage() {\n      if (this.image == null) {\n        return new three_module/* MeshBasicMaterial */.vBJ({\n          color: new three_module/* Color */.Ilk(0xcccccc)\n        });\n      }\n\n      var material = new three_module/* MeshBasicMaterial */.vBJ({\n        map: this.image //color: 0xffff00,\n\n      }); // material.needsUpdate = true;\n\n      return material;\n    }\n  }, {\n    key: "removePlaneFromScene",\n    value: function removePlaneFromScene() {// this.scene.remove(this.plane);\n      // this.plane = null;\n    }\n  }, {\n    key: "update",\n    value: function update(trueVideoWidth, trueVideoHeight) {\n      if (this.plane) {\n        /*\n        let windowAspect = window.innerWidth / window.innerHeight;\n        var mql = window.matchMedia("(orientation: portrait)");\n        let cw = this.video.videoWidth;\n        let ch = this.video.videoHeight;\n         let videoAspect;\n         if (mql.matches && isMobileDevice()) videoAspect = ch / cw;\n        else videoAspect = cw / ch;\n         let offset = 1;\n        let diff = 0;\n        let boundry = 0;\n         if (mql.matches && isMobileDevice()) {\n          offset = videoAspect;\n        } else {\n          if (windowAspect < videoAspect) {\n            diff = videoAspect - windowAspect;\n            offset = videoAspect - diff;\n            if (windowAspect < 1) offset = 1;\n          } else {\n            offset = videoAspect;\n          }\n        }\n         // this.log.innerHTML = `v9+${windowAspect} + ${videoAspect} + ${offset}\n        // + ${this.video.videoWidth}+ ${this.video.videoHeight} +${window.innerWidth}+${window.innerHeight}\n        // +${mql.matches}+  ${trueVideoWidth}+ ${trueVideoHeight} +  ${diff}`;\n         this.plane.scale.x = cw / offset;\n        this.plane.scale.y = ch / offset;\n        */\n        this.plane.scale.x = trueVideoWidth;\n        this.plane.scale.y = trueVideoHeight;\n      } // if (this.plane == null) {\n      //   this.createNewPlane();\n      // }\n      // if (this.sizeUpdated) {\n      //   this.removePlaneFromScene();\n      //   this.createNewPlane();\n      //   this.sizeUpdated = false;\n      //   this.imageUpdated = false;\n      // }\n      // if (this.imageUpdated) {\n      //   if (this.isVideo) null; //this.plane.material = this.createMaterial();\n      //   else this.plane.material = this.createMaterialImage();\n      //   this.imageUpdated = false;\n      // }\n\n    }\n  }]);\n\n  return VideoBackground;\n}();\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(9365);\n;// CONCATENATED MODULE: ./src/js/three_components/posetest.js\nfunction posetest_typeof(obj) { "@babel/helpers - typeof"; return posetest_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, posetest_typeof(obj); }\n\n\n\nfunction posetest_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction posetest_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { posetest_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { posetest_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction posetest_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction posetest_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction posetest_createClass(Constructor, protoProps, staticProps) { if (protoProps) posetest_defineProperties(Constructor.prototype, protoProps); if (staticProps) posetest_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction posetest_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) posetest_setPrototypeOf(subClass, superClass); }\n\nfunction posetest_setPrototypeOf(o, p) { posetest_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return posetest_setPrototypeOf(o, p); }\n\nfunction posetest_createSuper(Derived) { var hasNativeReflectConstruct = posetest_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = posetest_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = posetest_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return posetest_possibleConstructorReturn(this, result); }; }\n\nfunction posetest_possibleConstructorReturn(self, call) { if (call && (posetest_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return posetest_assertThisInitialized(self); }\n\nfunction posetest_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction posetest_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction posetest_getPrototypeOf(o) { posetest_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return posetest_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction posetest_loadModel(file) {\n  return new Promise(function (res, rej) {\n    var loader = new GLTFLoader/* GLTFLoader */.E();\n    loader.load(file, function (gltf) {\n      res(gltf.scene);\n      addToGlobalCache(file, gltf.scene);\n    }, undefined, function (error) {\n      rej(error);\n    });\n  });\n}\n\nvar Posetest = /*#__PURE__*/function (_StyleFactory) {\n  posetest_inherits(Posetest, _StyleFactory);\n\n  var _super = posetest_createSuper(Posetest);\n\n  function Posetest(scene, width, height, sceneManager) {\n    var _this;\n\n    posetest_classCallCheck(this, Posetest);\n\n    _this = _super.call(this);\n    _this.sceneManager = sceneManager;\n    _this.scene = scene;\n    _this.width = width;\n    _this.height = height;\n    _this.needsUpdate = false;\n    _this.landmarks = null;\n    _this.handedness = null;\n    _this.flickerSmoother = new FlickerSmoother();\n    _this.localURL = "".concat(PUBLIC_PATH, "/3d/watches/01.glb");\n    _this.localURL2d = "".concat(PUBLIC_PATH, "/3d/watches/01.png");\n    _this.URL = "".concat(PUBLIC_PATH, "/3d/watches/01.glb"); // this.worldLandmarks = null;\n    //this.loadPosetest();\n\n    _this.geometry = new three_module/* SphereGeometry */.xo$(5); // Adjust the size of the sphere as needed\n\n    _this.material = new three_module/* MeshBasicMaterial */.vBJ({\n      color: 0xff0000,\n      transparent: true,\n      // Enable transparency\n      opacity: 0 // Set the opacity level (0.0 - fully transparent, 1.0 - fully opaque)\n\n    }); // this.material = new THREE.MeshBasicMaterial({ color: 0xff0000 }); // Adjust the color as needed\n    // this.sphere = new THREE.Mesh(this.geometry, this.material);\n    //this.scene.add(this.sphere);\n\n    _this.root;\n    _this.fill;\n    _this.refobj;\n    _this.spheres = []; // for (let i = 0; i < 21; i++) {\n    //   const sphere = new THREE.Mesh(this.geometry, this.material);\n    //   this.scene.add(sphere);\n    //   this.spheres.push(sphere);\n    // }\n\n    _this.root = new three_module/* Mesh */.Kj0(_this.geometry, _this.material);\n    _this.refobj = new three_module/* Mesh */.Kj0(_this.geometry, _this.material);\n\n    _this.refobj.position.set(1, 1, 1); // // Set the position of the sphere based on the pose landmark coordinates\n    // sphere.position.set(x, y, z);\n\n\n    _this.filter = 0.0;\n    _this.Prevlandmark;\n    _this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevbase = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.prevmid2 = new three_module/* Vector3 */.Pa4(0, 0, 0);\n    _this.SpriteMesh = null;\n    _this.Posetest1 = null;\n    _this.imageWidth = null;\n    _this.imageHeight = null;\n    _this.PrevScale = 1;\n    _this.PrevXValue = 0;\n    _this.PrevYValue = 0;\n    _this.is2d = true; //const gui = new GUI();\n    // this.currentvector = new THREE.Vector3(0.1, 0.1, 1);\n    // const vectorFolder2 = gui.addFolder(\'Vector Controls\');\n    // vectorFolder2.add(this.currentvector, \'x\', -Math.PI, Math.PI).step(0.001);\n    // vectorFolder2.add(this.currentvector, \'y\', -Math.PI, Math.PI).step(0.001);\n    // vectorFolder2.add(this.currentvector, \'z\', -Math.PI, Math.PI).step(0.001);\n    // // Add a controller to the GUI\n    // const smooth = gui.add(this.flickerSmoother.params, \'floatValue\', -1, 1).step(0.001);\n\n    _this.timeoutId;\n    return _this;\n  }\n\n  posetest_createClass(Posetest, [{\n    key: "debounceLoad",\n    value: function () {\n      var _debounceLoad = posetest_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(AssetURL, is2d) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //AssetURL = null;\n                if (is2d !== undefined && is2d !== null) this.is2d = is2d;\n\n                if (!AssetURL) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.URL = AssetURL;\n                _context2.next = 7;\n                break;\n\n              case 5:\n                return _context2.abrupt("return");\n\n              case 7:\n                showLoadingModelPanel("watch");\n                this.Posetest = null;\n                this.SpriteMesh = null;\n                this.filter = Number.MAX_VALUE; // Clear the previous timeout (if any) to cancel the previous call\n\n                clearTimeout(this.timeoutId); // Set a new timeout to trigger the function after a delay\n\n                this.timeoutId = setTimeout( /*#__PURE__*/posetest_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _this2.loadPosetest(AssetURL);\n\n                        case 2:\n                          _this2.update();\n\n                        case 3:\n                        case "end":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 0); // Adjust the delay as needed (e.g., 500 milliseconds)\n\n              case 13:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function debounceLoad(_x, _x2) {\n        return _debounceLoad.apply(this, arguments);\n      }\n\n      return debounceLoad;\n    }()\n  }, {\n    key: "loadPosetest",\n    value: function () {\n      var _loadPosetest = posetest_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(AssetURL) {\n        var _this3 = this;\n\n        var imageTexture, material2d, planeGeometry, bbox, size, radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, cylinderGeometry, material;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.is2d) {\n                  _context3.next = 30;\n                  break;\n                }\n\n                //if (AssetURL) this.URL = AssetURL; else this.URL = this.localURL;\n                imageTexture = null;\n\n                if (hasGlobalAssetKey(this.URL)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 5;\n                return new Promise(function (resolve) {\n                  new three_module/* TextureLoader */.dpR().load(_this3.URL, resolve);\n                });\n\n              case 5:\n                imageTexture = _context3.sent;\n                addToGlobalCache(this.URL, imageTexture);\n                _context3.next = 10;\n                break;\n\n              case 9:\n                imageTexture = getGlobalCacheAsset(this.URL);\n\n              case 10:\n                hideLoadingModelPanel();\n                emitSKUApplied();\n                this.scaleFactor = 0.0385;\n                imageTexture.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture.colorSpace = three_module/* SRGBColorSpace */.KI_;\n                imageTexture.needsUpdate = true; //imageTexture.generateMipmaps = false;\n\n                this.imageWidth = imageTexture.image.width;\n                this.imageHeight = imageTexture.image.height;\n                material2d = new three_module/* MeshBasicMaterial */.vBJ({\n                  map: imageTexture,\n                  // Assign the loaded texture\n                  transparent: true,\n                  // Enable transparency\n                  side: three_module/* DoubleSide */.ehD // Make the material visible from both sides of the plane (if needed)\n\n                });\n                material2d.metalness = 1;\n                material2d.envMapIntensity = 1;\n                material2d.needsUpdate = true;\n                material2d.toneMapped = false;\n                planeGeometry = new three_module/* PlaneGeometry */._12(1, 1);\n                this.SpriteMesh = new three_module/* Mesh */.Kj0(planeGeometry, material2d);\n                this.SpriteMesh.renderOrder = 2;\n                this.SpriteMesh.name = "Posetest";\n                _context3.next = 58;\n                break;\n\n              case 30:\n                //if (AssetURL) this.URL = AssetURL; else this.URL = this.localURL;\n                this.Posetest = null;\n\n                if (hasGlobalAssetKey(this.URL)) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                _context3.next = 34;\n                return posetest_loadModel(this.URL);\n\n              case 34:\n                this.Posetest = _context3.sent;\n                _context3.next = 38;\n                break;\n\n              case 37:\n                this.Posetest = getGlobalCacheAsset(this.URL);\n\n              case 38:\n                hideLoadingModelPanel();\n                emitSKUApplied(); // scale glasses\n\n                bbox = new three_module/* Box3 */.ZzF().setFromObject(this.Posetest);\n                size = bbox.getSize(new three_module/* Vector3 */.Pa4());\n                this.scaleFactor = 0.0385;\n                this.Posetest.name = "Posetest";\n                this.Posetest.traverse(function (child) {\n                  if (child.isMesh) {\n                    // Check if the material has metallicness property\n                    if (child.material) {\n                      // if (child.material.metalness > 1) child.material.metalness = 1;\n                      //child.material.envMapIntensity = 1;\n                      child.renderOrder = 2;\n                    }\n                  }\n                });\n                radiusTop = 0.022; // Adjust the top radius\n\n                radiusBottom = 0.022; // Adjust the bottom radius\n\n                height = 0.1; // Adjust the height\n\n                radialSegments = 16; // Adjust the number of radial segments\n\n                heightSegments = 1; // Adjust the number of height segments\n\n                openEnded = false; // Set to true for an open-ended cylinder\n\n                cylinderGeometry = new three_module/* CylinderGeometry */.fHI(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded); // let geometry = new THREE.SphereGeometry(0.03); // Adjust the size of the sphere as needed\n\n                material = new three_module/* MeshBasicMaterial */.vBJ({\n                  color: 0xff0000\n                });\n                this.fill = new three_module/* Mesh */.Kj0(cylinderGeometry, material);\n                this.fill.renderOrder = 1;\n                this.fill.receiveShadow = true;\n                this.fill.envMapIntensity = 1;\n                this.fill.material.colorWrite = false;\n\n              case 58:\n                if (this.sceneManager.isVideo) {\n                  this.flickerSmoother.currentvector.y = 6;\n                } else {\n                  this.flickerSmoother.currentvector.y = 0;\n                }\n\n              case 59:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadPosetest(_x3) {\n        return _loadPosetest.apply(this, arguments);\n      }\n\n      return loadPosetest;\n    }()\n  }, {\n    key: "updateDimensions",\n    value: function updateDimensions(width, height) {\n      this.width = width;\n      this.height = height; //this.needsUpdate = true;\n    }\n  }, {\n    key: "updateLandmarks",\n    value: function updateLandmarks(landmarks, handedness) {\n      this.landmarks = landmarks;\n      if (handedness.length > 0) this.handedness = handedness[0];\n      this.needsUpdate = true;\n    }\n  }, {\n    key: "updatePosetest",\n    value: function updatePosetest() {\n      //this.trackingmsg.style.display = "none";\n      //this.flickerSmoother.currentvector.x = 4;\n      var isVideo;\n\n      if (this.sceneManager) {\n        if (this.sceneManager.isVideo) {\n          isVideo = this.sceneManager.isVideo;\n          this.flickerSmoother.currentvector.y = 8;\n          this.flickerSmoother.currentvector.x = 0;\n        } else {\n          this.flickerSmoother.currentvector.y = 10;\n          this.flickerSmoother.currentvector.x = 15;\n        }\n      } //this.flickerSmoother.currentvector.z = 5;\n      // if (this.filter < this.flickerSmoother.currentvector.x) {\n      //   this.filter += 1;\n      //   return;\n      // }\n      // this.filter = 0;\n\n\n      if (!this.landmarks) return; // Points for reference\n      // https://raw.githubusercontent.com/google/mediapipe/master/mediapipe/modules/face_geometry/data/canonical_face_model_uv_visualization.png\n\n      var base = hand_landmarks_helpers_scaleLandmark(this.landmarks[0], this.width, this.height);\n      var base1 = hand_landmarks_helpers_scaleLandmark(this.landmarks[10], this.width, this.height);\n      var indexbase = hand_landmarks_helpers_scaleLandmark(this.landmarks[9], this.width, this.height);\n      var middlebase = hand_landmarks_helpers_scaleLandmark(this.landmarks[13], this.width, this.height);\n      var tempPrevlandmark = new three_module/* Vector3 */.Pa4(base.x, base.y, base.z);\n      var difference = this.Prevlandmark.distanceTo(tempPrevlandmark);\n\n      if (difference > 0 || this.PrevScale !== getScaleSliderValue() || this.PrevXValue !== getXSliderValue() || this.PrevYValue !== getYSliderValue()) {\n        if (this.Posetest || this.SpriteMesh) {\n          this.show();\n\n          if (isVideo) {\n            var tempbase = new three_module/* Vector3 */.Pa4(base.x, base.y, base.z);\n            var tempmid1 = new three_module/* Vector3 */.Pa4(indexbase.x, indexbase.y, indexbase.z);\n            var tempmid2 = new three_module/* Vector3 */.Pa4(middlebase.x, middlebase.y, middlebase.z);\n            base = this.flickerSmoother.smoothAndFilterLandmarks(this.prevbase, tempbase);\n            indexbase = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid, tempmid1);\n            middlebase = this.flickerSmoother.smoothAndFilterLandmarks(this.prevmid2, tempmid2);\n            this.prevbase = tempbase;\n            this.prevmid = tempmid1;\n            this.prevmid2 = tempmid2;\n          }\n\n          var shoulderDist = Math.sqrt(Math.pow(base.x - indexbase.x, 2) + Math.pow(base.y - indexbase.y, 2) + Math.pow(base.z - indexbase.z, 2));\n          var shoulderDist2 = Math.sqrt(Math.pow(middlebase.x - base.x, 2) + Math.pow(middlebase.y - base.y, 2) + Math.pow(middlebase.z - base.z, 2));\n\n          if (this.is2d) {\n            shoulderDist = Math.sqrt(Math.pow(base.x - indexbase.x, 2) + Math.pow(base.y - indexbase.y, 2) + 0);\n            shoulderDist2 = Math.sqrt(Math.pow(middlebase.x - base.x, 2) + Math.pow(middlebase.y - base.y, 2) + 0);\n          }\n\n          var val = base.z - this.refobj.position.z;\n          var val2 = indexbase.z - this.refobj.position.z;\n          var avg2;\n          var avg2offset; // if (val > val2)\n\n          avg2 = (val + val2) / 2;\n          avg2offset = avg2 / 10; // else\n          //   avg2 = ((val + val2) / 2) / 10;\n\n          var avg = (shoulderDist2 + shoulderDist) / 2;\n          var prescale = avg / this.scaleFactor / 130 + avg2offset;\n          var rotThresold = prescale / 1.2;\n          var handRotation = rotThresold;\n          var xdistnace = 0;\n          var ydistnace = 0;\n          var handorientation = indexbase.y - base.y;\n\n          if (this.is2d) {\n            if (this.handedness[0].categoryName === "Left") {\n              if (handorientation > 0) xdistnace = indexbase.x - middlebase.x;else {\n                xdistnace = middlebase.x - indexbase.x;\n              }\n            } else {\n              if (handorientation > 0) xdistnace = middlebase.x - indexbase.x;else {\n                xdistnace = indexbase.x - middlebase.x;\n              }\n            }\n\n            ydistnace = indexbase.y - middlebase.y;\n\n            if (Math.abs(xdistnace) >= Math.abs(ydistnace)) {\n              handRotation = xdistnace;\n            } else {\n              handRotation = ydistnace;\n            }\n\n            if (handRotation > rotThresold) {\n              handRotation = rotThresold;\n            }\n\n            if (handRotation < 0) {\n              handRotation = 0;\n            }\n\n            base.z = 0;\n            indexbase.z = 0;\n            middlebase.z = 0;\n          }\n\n          var scale;\n\n          if (this.is2d) {\n            scale = (avg / this.scaleFactor / 130 + avg2offset) * 0.0059 * (handRotation / rotThresold) * getScaleSliderValue();\n            this.root.scale.set(scale, scale, scale);\n            this.root.position.set(base.x + getXSliderValue() * 300 * scale, base.y - getYSliderValue() * 300 * scale, 0);\n          } else {\n            scale = avg / (this.scaleFactor / 0.52) * //(handRotation / rotThresold) *\n            getScaleSliderValue();\n            this.root.scale.set(scale, scale, scale);\n            this.root.position.set(base.x + getXSliderValue() * 0.02 * scale, base.y - getYSliderValue() * 0.02 * scale, base.z);\n          }\n\n          var forwardDirection = new three_module/* Vector3 */.Pa4().subVectors(indexbase, base);\n          var rightDirection = new three_module/* Vector3 */.Pa4().subVectors(middlebase, base);\n          var upDirection = new three_module/* Vector3 */.Pa4().crossVectors(forwardDirection, rightDirection).normalize();\n          var quaternion = new three_module/* Quaternion */._fP();\n          quaternion.setFromRotationMatrix(new three_module/* Matrix4 */.yGw().lookAt(forwardDirection, new three_module/* Vector3 */.Pa4(0, 0, 0), upDirection));\n          this.root.quaternion.copy(quaternion);\n\n          if (!this.is2d) {\n            this.fill.position.set(0, 0.0, -0.003);\n            this.fill.rotation.set(0, 0, -1.57);\n            this.fill.scale.set(1.39, 1, 0.86);\n          }\n\n          if (this.handedness[0].categoryName === "Left") {\n            if (!this.is2d) {\n              this.Posetest.rotation.set(-1.4, 0, -1.55); //this.Posetest1.rotation.set(-1.4, 0, -1.5);\n            } else {\n              this.SpriteMesh.rotation.set(1.57, 0, 0);\n            }\n\n            if (!this.is2d) {\n              this.Posetest.position.set(0, 0.004, -0.01); //this.Posetest1.position.set(0, 0.004, -0.01);\n            }\n          } else {\n            if (!this.is2d) {\n              this.Posetest.rotation.set(1.4, 0, -1.6); //this.Posetest1.rotation.set(1.4, 0, -1.7);\n            } else {\n              this.SpriteMesh.rotation.set(1.57, 0, 0);\n            }\n\n            if (!this.is2d) {\n              this.Posetest.position.set(0, -0.004, -0.01); // this.Posetest1.position.set(0, -0.004, -0.01);\n            }\n          }\n\n          if (this.is2d) {\n            if (this.handedness[0].categoryName === "Left") {\n              this.SpriteMesh.position.set(-20, 0, -250);\n            } else {\n              this.SpriteMesh.position.set(20, 0, -250);\n            }\n          }\n\n          var forwardDirectionNormalized = new three_module/* Vector3 */.Pa4();\n          forwardDirectionNormalized.copy(forwardDirection).normalize();\n          /*if (this.sceneManager.shouldForceHideTryons()) {\n            if (!this.is2d) this.Posetest.visible = false;\n            else this.SpriteMesh.visible = false;\n          } else*/\n\n          if (forwardDirectionNormalized.z > 0.65 || forwardDirectionNormalized.z < -0.5 || this.is2d && handRotation < 2) {\n            setAlignIcon("hand");\n            setAlignMsg("Point your camera towards your wrist and back of the hand for tryon.");\n            showAlignMessagePanel(); // setTrackingMsg("Tracking lost. <br>Point your hand towards camera.");\n            // showTrackingMsg();\n\n            if (!this.is2d) this.Posetest.visible = false;else this.SpriteMesh.visible = false;\n          } else {\n            hideAlignMessagePanel();\n            if (!this.is2d) this.Posetest.visible = true;else this.SpriteMesh.visible = true;\n          } // if (this.Posetest1) this.Posetest1.visible = false;\n\n\n          var s = scale / 1000;\n\n          if (this.is2d) {\n            this.SpriteMesh.scale.set(this.imageWidth + s, this.imageHeight + s, 1);\n          }\n\n          this.Prevlandmark = tempPrevlandmark;\n          this.PrevScale = getScaleSliderValue();\n          this.PrevXValue = getXSliderValue();\n          this.PrevYValue = getYSliderValue();\n        }\n      }\n    }\n  }, {\n    key: "addPosetest",\n    value: function addPosetest() {\n      if (this.is2d) {\n        if (this.SpriteMesh) {\n          this.scene.add(this.root);\n          this.root.add(this.SpriteMesh);\n          this.SpriteMesh.position.set(0, 0, 0);\n        }\n      } else {\n        if (this.Posetest) {\n          this.scene.add(this.root);\n          this.root.add(this.Posetest); // this.root.add(this.Posetest1);\n          // this.root.add(this.SpriteMesh);\n\n          this.Posetest.add(this.fill); // this.Posetest.rotation.set(1.5, 0, -1.57);\n          // this.Posetest.position.set(0, 0.005, -0.01);\n\n          this.fill.position.set(0, 0.0005, -0.001);\n          this.fill.rotation.set(0, 0, -1.57);\n          this.fill.scale.set(1.35, 1, 1);\n        }\n      }\n    }\n  }, {\n    key: "clamp",\n    value: function clamp(num, min, max) {\n      return num <= min ? min : num >= max ? max : num;\n    }\n  }, {\n    key: "remove",\n    value: function remove() {\n      //if (this.is2d) {\n      if (this.SpriteMesh) {\n        while (this.root.children.length > 0) {\n          this.root.remove(this.root.children[0]);\n        }\n\n        this.scene.remove(this.root);\n      } // } else {\n\n\n      if (this.Posetest) {\n        this.Posetest.remove(this.fill);\n        this.root.remove(this.Posetest);\n\n        while (this.root.children.length > 0) {\n          this.root.remove(this.root.children[0]);\n        } //this.root.remove(this.SpriteMesh);\n\n\n        this.scene.remove(this.root);\n      } // }\n\n\n      this.Prevlandmark = new three_module/* Vector3 */.Pa4(0, 0, 0);\n      this.PrevScale = 1;\n    }\n  }, {\n    key: "hide",\n    value: function hide() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = false;\n      }\n\n      if (this.Posetest) {\n        this.Posetest.visible = false;\n      }\n    }\n  }, {\n    key: "show",\n    value: function show() {\n      if (this.SpriteMesh) {\n        this.SpriteMesh.visible = true;\n      }\n\n      if (this.Posetest) {\n        this.Posetest.visible = true;\n      }\n    }\n  }, {\n    key: "update",\n    value: function update() {\n      if (this.needsUpdate) {\n        var inScene = !!this.scene.getObjectByName("Posetest");\n        var shouldShow = !!this.landmarks;\n\n        if (inScene) {\n          shouldShow ? this.updatePosetest() : this.remove();\n        } else {\n          if (shouldShow) {\n            this.addPosetest();\n            this.updatePosetest();\n          }\n        }\n      }\n    }\n  }]);\n\n  return Posetest;\n}(StyleFactory);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/loaders/RGBELoader.js\nvar RGBELoader = __webpack_require__(2666);\n;// CONCATENATED MODULE: ./src/js/model-data/modelDataProvider.js\n\n\nfunction modelDataProvider_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction modelDataProvider_createClass(Constructor, protoProps, staticProps) { if (protoProps) modelDataProvider_defineProperties(Constructor.prototype, protoProps); if (staticProps) modelDataProvider_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction modelDataProvider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar modelDataProvider = /*#__PURE__*/modelDataProvider_createClass(function modelDataProvider(data) {\n  modelDataProvider_classCallCheck(this, modelDataProvider);\n\n  this.category = data.category;\n  this.subCategory = data.subCategory;\n  this.imageUrl = data.imageUrl;\n  this.isActive = data.isActive;\n});\n;// CONCATENATED MODULE: ./src/js/utils/trackingMessage.js\nvar trackingmsg = null;\nfunction trackingMessage_setTrackingMsg(message) {\n  trackingmsg.innerHTML = message;\n}\nfunction hideTrackingMsg() {\n  trackingmsg.style.display = "none";\n}\nfunction showTrackingMsg() {\n  trackingmsg.style.display = "block";\n}\nfunction setTrackingMessageElement() {\n  trackingmsg = document.querySelector(".Trackingmsg");\n}\n;// CONCATENATED MODULE: ./src/htmlService/getHtmlElements.js\nvar loaderContainer = null;\nvar videoContainer = null;\nvar video_Container = null;\nvar canavas_container = null;\nvar imageInput = null;\nvar canvas = null;\nvar fpsEle = null;\nvar optionsContainer = null;\nvar configurationContainer = null;\nvar configurationSubContainer = null;\nvar modelsContainer = null;\nvar ringContainer = null;\nvar moveBtnsContainer = null;\nvar zoomBtnsContainer = null;\nvar dragContainer = null;\nvar dragLineSpan = null;\nvar dragIcon = null;\nvar tryOnScreen = null;\nvar settingOptions = null;\nvar statusPill = null;\nvar popupModal = null;\nvar configSettings = null;\nvar screenShotTag = null;\nvar lottieLoader = null;\nvar gltfModelInput,\n    hdrImageInput = null;\nfunction setHtmlElements() {\n  loaderContainer = document.querySelector(".loader-container"); // loaderContainer.style.display = "flex";\n\n  videoContainer = document.querySelector(".video-container");\n  video_Container = document.querySelector(".video_container");\n  canavas_container = document.querySelector(".canavas_container");\n  imageInput = document.getElementById("imageInput");\n  canvas = document.querySelector(".output_canvas");\n  canvas.style.display = "none";\n  fpsEle = document.querySelector(".fps_text");\n  optionsContainer = document.querySelector(".options-conatiner");\n  configurationContainer = document.querySelector(".configuration-container");\n  configurationSubContainer = document.querySelector(".configuration-sub-container");\n  modelsContainer = document.querySelector(".models-container");\n  ringContainer = document.querySelector(".ring-container");\n  moveBtnsContainer = document.querySelector(".move-btns-container");\n  zoomBtnsContainer = document.querySelector(".zoom-btns-container");\n  dragContainer = document.querySelector(".drag-container");\n  dragLineSpan = document.querySelector(".drag-line-container");\n  dragIcon = document.querySelector(".drag-btn");\n  tryOnScreen = document.querySelector(".tryon-screen");\n  settingOptions = document.querySelector(".setting-options");\n  statusPill = document.querySelector(".status-pill");\n  popupModal = document.querySelector(".popup-modal");\n  configSettings = document.querySelector(".config-settings");\n  screenShotTag = document.querySelector(".screenshot-tag");\n  lottieLoader = document.querySelector("#lottie");\n  gltfModelInput = document.getElementById("gltfModelInput");\n  hdrImageInput = document.getElementById("hdrInput");\n}\nfunction getHtmlElements() {\n  return {\n    loaderContainer: loaderContainer,\n    videoContainer: videoContainer,\n    video_Container: video_Container,\n    canavas_container: canavas_container,\n    imageInput: imageInput,\n    canvas: canvas,\n    fpsEle: fpsEle,\n    optionsContainer: optionsContainer,\n    configurationContainer: configurationContainer,\n    configurationSubContainer: configurationSubContainer,\n    modelsContainer: modelsContainer,\n    ringContainer: ringContainer,\n    moveBtnsContainer: moveBtnsContainer,\n    zoomBtnsContainer: zoomBtnsContainer,\n    dragContainer: dragContainer,\n    dragLineSpan: dragLineSpan,\n    dragIcon: dragIcon,\n    tryOnScreen: tryOnScreen,\n    settingOptions: settingOptions,\n    statusPill: statusPill,\n    popupModal: popupModal,\n    configSettings: configSettings,\n    screenShotTag: screenShotTag,\n    lottieLoader: lottieLoader,\n    gltfModelInput: gltfModelInput,\n    hdrImageInput: hdrImageInput\n  };\n}\n;// CONCATENATED MODULE: ./src/assets/env.hdr\n/* harmony default export */ const assets_env = (__webpack_require__.p + "assets/models/src/assets/env.hdr");\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.index-of.js\nvar es6_array_index_of = __webpack_require__(3369);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.slice.js\nvar es6_array_slice = __webpack_require__(110);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.from.js\nvar es6_array_from = __webpack_require__(522);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.is-array.js\nvar es6_array_is_array = __webpack_require__(774);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(3379);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(7795);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(569);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(3565);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(9216);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(4589);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/settingOptions.css\nvar styles_settingOptions = __webpack_require__(991);\n;// CONCATENATED MODULE: ./src/htmlService/styles/settingOptions.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, "head");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(styles_settingOptions/* default */.Z, options);\n\n\n\n\n       /* harmony default export */ const htmlService_styles_settingOptions = (styles_settingOptions/* default */.Z && styles_settingOptions/* default */.Z.locals ? styles_settingOptions/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/assets/svg/settingIcon.svg\n/* harmony default export */ const settingIcon = (__webpack_require__.p + "assets/models/src/assets/svg/settingIcon.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/zoomIn.svg\n/* harmony default export */ const zoomIn = (__webpack_require__.p + "assets/models/src/assets/svg/zoomIn.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/zoomOut.svg\n/* harmony default export */ const zoomOut = (__webpack_require__.p + "assets/models/src/assets/svg/zoomOut.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/compareIcon.svg\n/* harmony default export */ const compareIcon = (__webpack_require__.p + "assets/models/src/assets/svg/compareIcon.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/sliderSelected.svg\n/* harmony default export */ const sliderSelected = (__webpack_require__.p + "assets/models/src/assets/svg/sliderSelected.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/settingsIconSelected.svg\n/* harmony default export */ const settingsIconSelected = (__webpack_require__.p + "assets/models/src/assets/svg/settingsIconSelected.svg");\n;// CONCATENATED MODULE: ./src/htmlService/settingOptions.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar SettingOptionsConfig = [{\n  tag: "configSettings",\n  icon: settingIcon,\n  selectedIcon: settingsIconSelected,\n  isSelected: false,\n  isDisabled: false,\n  show: true,\n  toggleRequired: true\n}, {\n  tag: "comparison",\n  icon: compareIcon,\n  selectedIcon: sliderSelected,\n  isSelected: false,\n  isDisabled: false,\n  show: true,\n  toggleRequired: true\n}, {\n  tag: "zoomIn",\n  icon: zoomIn,\n  selectedIcon: zoomIn,\n  isSelected: false,\n  isDisabled: false,\n  show: true,\n  toggleRequired: false\n}, {\n  tag: "zoomOut",\n  icon: zoomOut,\n  selectedIcon: zoomOut,\n  isSelected: false,\n  isDisabled: true,\n  show: true,\n  toggleRequired: false\n}, {\n  tag: "capture",\n  icon: "",\n  selectedIcon: "",\n  isSelected: false,\n  isDisabled: false,\n  show: true,\n  toggleRequired: false,\n  customIcon: true\n}];\nvar ElementsList = [];\nfunction buildSettingOptions(handler) {\n  var _getHtmlElements = getHtmlElements(),\n      settingOptions = _getHtmlElements.settingOptions;\n\n  var container = document.createElement("div");\n  container.classList.add("settingOptions-container");\n  SettingOptionsConfig.forEach(function (item, index) {\n    if (item !== null && item !== void 0 && item.show) {\n      var iconContainer = document.createElement("div");\n      iconContainer.classList.add("settingOptions-icon-container");\n\n      if (item !== null && item !== void 0 && item.isDisabled) {\n        iconContainer.classList.add("settingOptions-icon-disabled");\n      }\n\n      if (!(item !== null && item !== void 0 && item.customIcon)) {\n        var iconWrapperDiv = document.createElement("div");\n        iconWrapperDiv.classList.add("settingOptions-icon-wrapper");\n        var icon = document.createElement("img");\n        icon.id = "settingIcon-".concat(item.tag);\n        icon.src = item.icon;\n        iconWrapperDiv.appendChild(icon);\n        iconContainer.appendChild(iconWrapperDiv);\n      } else {\n        var _iconWrapperDiv = document.createElement("div");\n\n        _iconWrapperDiv.classList.add("settingOptions-custom-icon-wrapper");\n\n        var customIcon = document.createElement("div");\n        customIcon.classList.add("settingOptions-custom-icon");\n\n        _iconWrapperDiv.appendChild(customIcon);\n\n        iconContainer.appendChild(_iconWrapperDiv);\n      }\n\n      container.appendChild(iconContainer);\n      ElementsList.push(iconContainer);\n      iconContainer.addEventListener("click", function () {\n        handleSettingIconClick(item, index, handler);\n      });\n    }\n  });\n  settingOptions.appendChild(container);\n}\n\nfunction handleSettingIconClick(configItem, ClickedIndex, handler) {\n  if (configItem.isDisabled) return;\n\n  if (configItem !== null && configItem !== void 0 && configItem.toggleRequired) {\n    handleToggle(configItem, ClickedIndex);\n  }\n\n  handler(configItem, ClickedIndex, ElementsList);\n}\n\nfunction handleToggle(configItem, ClickedIndex) {\n  // handle clicked item first\n  var icon = document.getElementById("settingIcon-".concat(configItem.tag));\n\n  if (configItem.isSelected && !(configItem !== null && configItem !== void 0 && configItem.customIcon)) {\n    ElementsList[ClickedIndex].classList.remove("settingOptions-icon-selected");\n    configItem.isSelected = false;\n    icon.src = configItem.icon;\n  } else if (!configItem.isSelected && !(configItem !== null && configItem !== void 0 && configItem.customIcon)) {\n    ElementsList[ClickedIndex].classList.add("settingOptions-icon-selected");\n    configItem.isSelected = true;\n    icon.src = configItem.selectedIcon;\n  } // toggle icon that requires to be toggled\n\n\n  var _iterator = _createForOfIteratorHelper(SettingOptionsConfig.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          eachConfig = _step$value[1];\n\n      if (index !== ClickedIndex && eachConfig !== null && eachConfig !== void 0 && eachConfig.toggleRequired && !(eachConfig !== null && eachConfig !== void 0 && eachConfig.customIcon)) {\n        if (eachConfig !== null && eachConfig !== void 0 && eachConfig.isSelected) {\n          ElementsList[index].classList.remove("settingOptions-icon-selected");\n          eachConfig.isSelected = false;\n          var prevSelectedIcon = document.getElementById("settingIcon-".concat(eachConfig.tag));\n          prevSelectedIcon.src = eachConfig.icon;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction unSelectAllSettings() {\n  SettingOptionsConfig.forEach(function (item, indx) {\n    item.isSelected = false;\n    ElementsList[indx].classList.remove("settingOptions-icon-selected");\n    var prevSelectedIcon = document.getElementById("settingIcon-".concat(item.tag));\n    if (prevSelectedIcon !== null && prevSelectedIcon !== void 0 && prevSelectedIcon.src) prevSelectedIcon.src = item.icon;\n  });\n}\nfunction disableSettingIcon(tag) {\n  var idxToBeDisabled = SettingOptionsConfig.map(function (item) {\n    return item.tag;\n  }).indexOf(tag);\n\n  if (!SettingOptionsConfig[idxToBeDisabled].isDisabled) {\n    ElementsList[idxToBeDisabled].classList.add("settingOptions-icon-disabled");\n    SettingOptionsConfig[idxToBeDisabled].isDisabled = true;\n  }\n}\nfunction enableSettingIcon(tag) {\n  var idxToBeEnabled = SettingOptionsConfig.map(function (item) {\n    return item.tag;\n  }).indexOf(tag);\n\n  if (SettingOptionsConfig[idxToBeEnabled].isDisabled) {\n    ElementsList[idxToBeEnabled].classList.remove("settingOptions-icon-disabled");\n    SettingOptionsConfig[idxToBeEnabled].isDisabled = false;\n  }\n}\nfunction enableBothZoomIcons() {\n  enableSettingIcon("zoomIn");\n  enableSettingIcon("zoomOut");\n}\nfunction showSettingOptions() {\n  var _getHtmlElements2 = getHtmlElements(),\n      settingOptions = _getHtmlElements2.settingOptions;\n\n  settingOptions.classList.remove("hide-settingOptions");\n  settingOptions.style.visibility = "visible";\n}\nfunction hideSettingOptions() {\n  var _getHtmlElements3 = getHtmlElements(),\n      settingOptions = _getHtmlElements3.settingOptions;\n\n  settingOptions.classList.add("hide-settingOptions");\n  settingOptions.style.visibility = "hidden";\n}\n;// CONCATENATED MODULE: ./src/js/three_components/scene_manager.js\n\n\n\n\n\n\n\nfunction scene_manager_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction scene_manager_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { scene_manager_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { scene_manager_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction scene_manager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction scene_manager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction scene_manager_createClass(Constructor, protoProps, staticProps) { if (protoProps) scene_manager_defineProperties(Constructor.prototype, protoProps); if (staticProps) scene_manager_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\n\n // import Texture from "../../assets/model.png";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n *\n * Finds distance to position perspective camera\n *\n * @param {Number} height height of video\n * @param {Number} fov fov of perspective camera\n */\n\nvar cameraDistance = function cameraDistance(height, fov) {\n  return height / 2 / Math.tan(fov / 2 * Math.PI / 180);\n};\n\nvar response = null;\n/**\n *\n * Call these methods.\n *\n * 1) animate inside request animation frame\n * 2) resize inside request animation frame\n * 3) onLandmarks on recieving new face landmarks\n *\n */\n\nfunction getenvtexture() {\n  return envtexture;\n}\nvar envtexture;\nvar scene_manager_SceneManager = /*#__PURE__*/function () {\n  function SceneManager(canvas) {\n    var _this = this;\n\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var useOrtho = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    scene_manager_classCallCheck(this, SceneManager);\n\n    this.canvas = canvas;\n    this.scene = new three_module/* Scene */.xsS(); // this.ambientLight;\n    // this.directionalLight;\n    // this.ambientLight = new THREE.AmbientLight(0xffffff, 1);\n    //this.scene.add(this.ambientLight);\n    // this.directionalLight = new THREE.DirectionalLight(0xffffff, 2);\n    // this.directionalLight.position.set(5, 10, 7.5);\n    //this.scene.add(this.directionalLight);\n\n    this.scene.fog = null;\n    this.debug = debug;\n    this.useOrtho = true;\n    this.renderer = new three_module/* WebGLRenderer */.CP7({\n      canvas: this.canvas,\n      devicePixelRation: window.devicePixelRatio || 1,\n      antialias: true,\n      antialiasSampleCount: 8,\n      preserveDrawingBuffer: true\n    }); //console.log("pixel" + window.devicePixelRation);\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setClearColor(0xffffff);\n    var loader = new RGBELoader/* RGBELoader */.x();\n    loader.load(assets_env, function (texture) {\n      texture.mapping = three_module/* EquirectangularReflectionMapping */.dSO;\n      var pmremGenerator = new three_module/* PMREMGenerator */.anP(_this.renderer);\n      var envMap = pmremGenerator.fromEquirectangular(texture).texture;\n      texture.needsUpdate = true;\n      _this.scene.background = envMap;\n      _this.scene.environment = envMap; //this.scene.environmentIntensity = 0.8;\n      // this.scene.environmentRotation = new THREE.Euler(0, -0.1, 0);\n      //envtexture = texture;\n\n      texture.dispose();\n      pmremGenerator.dispose();\n    });\n    this.renderer.toneMapping = three_module/* ACESFilmicToneMapping */.LY2; //TODO\n\n    this.renderer.toneMappingExposure = 1;\n    this.CurrentTryon = "";\n    this.fov = 63;\n    this.videoBg = null;\n    this.styles = [];\n    this.factories = [];\n    this.modelsData = [];\n    this.currentStyle = [];\n    this.buildCamera();\n    this.buildControls();\n    this.buildVideoBg();\n    this.SpriteMesh = null;\n    this.loadlogo();\n    this.isVideo = true;\n    this.isForceHideTryon = false;\n    this.lastLandmarks;\n    this.lastHandLandmarks;\n    this.lastHandedness;\n    this.lastImageFrame;\n    this.trueVideoWidth = 640;\n    this.trueVideoHeight = 480;\n    this.calculatedWidth = 640;\n    this.calculatedHeight = 480;\n    this.cameraZoom = 1;\n    this.cameraZoomFactor = 0.1;\n    this.cameraZoomMax = 1.3;\n    this.modelsMap = {}; //setCanvasContainerChild(this.renderer.domElement);\n    //https://cdn.pixelbin.io/v2/glamar-fynd-835885/ajIVXx/original/assets/website/icons/cxrlogo_web.svg\n  }\n\n  scene_manager_createClass(SceneManager, [{\n    key: "UpdateHDRImage",\n    value: function UpdateHDRImage(url) {\n      var _this2 = this;\n\n      var loader = new RGBELoader/* RGBELoader */.x();\n      loader.load(url, function (texture) {\n        texture.mapping = three_module/* EquirectangularReflectionMapping */.dSO;\n        var pmremGenerator = new three_module/* PMREMGenerator */.anP(_this2.renderer);\n        var envMap = pmremGenerator.fromEquirectangular(texture).texture;\n        texture.needsUpdate = true;\n        _this2.scene.background = envMap;\n        _this2.scene.environment = envMap;\n        texture.dispose();\n        pmremGenerator.dispose();\n      });\n    }\n  }, {\n    key: "loadlogo",\n    value: function () {\n      var _loadlogo = scene_manager_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var textureLoader, imageTexture, materialSprite;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                textureLoader = new three_module/* TextureLoader */.dpR();\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  textureLoader.load("".concat(env/* default */.Z.ASSET_URL, "icons/cxr_logo_w.svg"), resolve);\n                });\n\n              case 3:\n                imageTexture = _context.sent;\n                imageTexture.generateMipmaps = false;\n                imageTexture.minFilter = three_module/* LinearFilter */.wem;\n                imageTexture.magFilter = three_module/* LinearFilter */.wem;\n                imageTexture.needsUpdate = true;\n                this.imageWidth = imageTexture.image.width;\n                this.imageHeight = imageTexture.image.height;\n                materialSprite = new three_module/* SpriteMaterial */.xeV({\n                  map: imageTexture,\n                  transparent: true,\n                  side: three_module/* DoubleSide */.ehD\n                }); // materialSprite.precision = \'highp\';\n\n                materialSprite.depthWrite = false;\n                materialSprite.needsUpdate = true;\n                materialSprite.toneMapped = false; // Create a sprite and set its material\n\n                this.SpriteMesh = new three_module/* Sprite */.jyi(materialSprite);\n                this.SpriteMesh.scale.set(this.imageWidth, this.imageHeight, 1); // Set the sprite\'s size\n\n                this.SpriteMesh.position.set(200, -300, 0); // Set the sprite\'s position in the scene\n\n                this.scene.add(this.SpriteMesh);\n                this.SpriteMesh.visible = false;\n\n              case 19:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadlogo() {\n        return _loadlogo.apply(this, arguments);\n      }\n\n      return loadlogo;\n    }()\n  }, {\n    key: "onTryonAPI",\n    value: function onTryonAPI(config) {\n      this.buildStyles(this.CurrentTryon, config);\n    }\n  }, {\n    key: "setModelAPIResponse",\n    value: function setModelAPIResponse(apiResponse) {\n      response = apiResponse;\n\n      if (response && response.length > 0) {\n        this.buildModels(response);\n      } else {}\n    }\n  }, {\n    key: "removeCurrentTryon",\n    value: function removeCurrentTryon() {\n      if (this.currentStyle !== null && this.currentStyle !== undefined) {\n        this.currentStyle.forEach(function (style) {\n          style.remove();\n        });\n        this.currentStyle = [];\n        if (this.faceMask !== null && this.faceMask !== undefined) this.faceMask.removeFaces();\n      }\n    }\n  }, {\n    key: "forceUpdateTryon",\n    value: function forceUpdateTryon() {\n      if (this.currentStyle !== null && this.currentStyle !== undefined) {\n        this.currentStyle.forEach(function (style) {\n          style.update();\n        });\n      }\n\n      if (this.faceMask !== null && this.faceMask !== undefined) this.faceMask.forceUpdate();\n    }\n  }, {\n    key: "buildStyles",\n    value: function buildStyles(styleFactory, config) {\n      // console.log("ow eytoyqewortyowert" + styleFactory);\n      this.removeCurrentTryon(); // console.log("Build style " + styleFactory);\n\n      if (styleFactory === StyleFactories.Glasses) {\n        if (this.glasses === null || this.glasses === undefined) {\n          // console.log("create glasses");\n          this.styles.push(this.glasses = new Glasses(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2, this));\n          this.buildFaceMask();\n        }\n\n        if (config) this.glasses.debounceLoad(config.attributes[0].effectAssets, config.subCategory === "2d" ? true : false);else this.glasses.debounceLoad(null, true);\n        this.currentStyle.push(this.glasses);\n        this.faceMask.setConfigOffset(0.13); // showRecognizeUI();\n      } else if (styleFactory === StyleFactories.Caps) {\n        if (this.headwear === null || this.headwear === undefined) {\n          this.styles.push(this.headwear = new Headwear(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2, this));\n          this.buildFaceMask();\n        }\n\n        if (config) this.headwear.debounceLoad(config.attributes[0].effectAssets[0]);else this.headwear.debounceLoad(null);\n        this.currentStyle.push(this.headwear);\n        this.faceMask.setConfigOffset(0.7);\n      } else if (styleFactory === StyleFactories.Earrings) {\n        if (this.earrings === null || this.earrings === undefined) {\n          this.styles.push(this.earrings = new Earrings(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2, this));\n          this.buildFaceMask();\n        }\n\n        if (config) this.earrings.debounceLoad(config.attributes[0].effectAssets[0]);else this.earrings.debounceLoad(null);\n        this.currentStyle.push(this.earrings);\n        this.faceMask.setConfigOffset(0.29);\n      } else if (styleFactory === StyleFactories.Necklace) {\n        if (this.necklace === null || this.necklace === undefined) {\n          this.styles.push(this.necklace = new Necklace(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2, this)); // this.styles.push(\n          //   this.earrings = new Earrings(\n          //     this.scene,\n          //     this.renderer.domElement.width / 2,\n          //     this.renderer.domElement.height / 2,\n          //     null,\n          //     this.renderer\n          //   )\n          // );\n\n          this.buildFaceMask();\n        }\n\n        if (config) this.necklace.debounceLoad(config.attributes[0].effectAssets[0]);else this.necklace.debounceLoad(null); //this.earrings.loadEarrings(null);\n\n        this.currentStyle.push(this.necklace); //this.currentStyle.push(this.earrings);\n\n        this.faceMask.setConfigOffset(0.29);\n      } else if (styleFactory === StyleFactories.Watches) {\n        if (this.posewear === null || this.posewear === undefined) {\n          this.styles.push(this.posewear = new Posetest(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2, this));\n        }\n\n        if (config) this.posewear.debounceLoad(config.attributes[0].effectAssets, config.subCategory === "2d" ? true : false);else this.posewear.debounceLoad(null, true);\n        this.currentStyle.push(this.posewear);\n      } else if (styleFactory === StyleFactories.Mangtika) {\n        if (this.mangtika === null || this.mangtika === undefined) {\n          this.styles.push(this.mangtika = new Mangtika(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2, this));\n        }\n\n        if (config) this.mangtika.debounceLoad(config.attributes[0].effectAssets[0]);else this.mangtika.debounceLoad(null);\n        this.currentStyle.push(this.mangtika);\n      } else if (styleFactory === StyleFactories.Bracelet) {\n        if (this.bracelet === null || this.bracelet === undefined) {\n          this.styles.push(this.bracelet = new Bracelet(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2, this));\n        }\n\n        if (config) this.bracelet.debounceLoad(config.attributes[0].effectAssets[0]);else this.bracelet.debounceLoad(null);\n        this.currentStyle.push(this.bracelet);\n      } else if (styleFactory === StyleFactories.Rings) {\n        if (this.Ring === null || this.Ring === undefined) {\n          this.styles.push(this.Ring = new Ring(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2, this));\n        }\n\n        if (config) this.Ring.debounceLoad(config.attributes[0].effectAssets[0]);else this.Ring.debounceLoad(null);\n        this.currentStyle.push(this.Ring); // resetRingIndex();\n        // showRingContainer();\n      }\n\n      if (!this.isVideo) {\n        if (getCurrentTryon() === StyleFactories.Watches || getCurrentTryon() === StyleFactories.Bracelet || getCurrentTryon() === StyleFactories.Rings) {\n          this.onHandsLandmarks(null, this.lastHandLandmarks, null, this.lastHandedness, this.isVideo);\n        } else {\n          // console.log("sadlhflsdhflshgl");\n          this.onLandmarks(null, this.lastLandmarks, this.isVideo);\n        }\n\n        this.setImageTryonSettings(this.videoWidth, this.videoHeight);\n      }\n    }\n  }, {\n    key: "buildVideoBg",\n    value: function buildVideoBg() {\n      // video background for canvas\n      this.videoBg = new VideoBackground(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2);\n    }\n  }, {\n    key: "buildFaceMask",\n    value: function buildFaceMask() {\n      // this component draws faces\n      this.faceMask = new FaceMask(this.scene, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2);\n    }\n  }, {\n    key: "buildControls",\n    value: function buildControls() {\n      if (this.debug) {\n        this.controls = new OrbitControls/* OrbitControls */.z(this.camera, this.renderer.domElement);\n        this.controls.update();\n      }\n    }\n  }, {\n    key: "buildCamera",\n    value: function buildCamera() {\n      this.useOrtho ? this.buildOrthoCamera() : this.buildPerspectiveCamera();\n    }\n  }, {\n    key: "buildOrthoCamera",\n    value: function buildOrthoCamera() {\n      this.camera = new three_module/* OrthographicCamera */.iKG(-this.renderer.domElement.width / 2, this.renderer.domElement.width / 2, this.renderer.domElement.height / 2, -this.renderer.domElement.height / 2, -2000, 2000);\n      this.camera.position.z = 1;\n    }\n  }, {\n    key: "buildPerspectiveCamera",\n    value: function buildPerspectiveCamera() {\n      this.camera = new three_module/* PerspectiveCamera */.cPb(this.fov, this.renderer.domElement.width / this.renderer.domElement.height, 1.0, // near\n      10000 // far\n      );\n      this.camera.position.z = cameraDistance(this.renderer.domElement.height, this.fov);\n    }\n  }, {\n    key: "buildModels",\n    value: function buildModels(_models) {\n      var _this3 = this;\n\n      _models.forEach(function (modelElements, i) {\n        // const modelType = element.items.modelType;\n        _this3.modelsMap[ModelsCategories[i]] = modelElements.items;\n        var modelAssets = modelElements.items;\n        modelAssets.forEach(function (itemsElements) {\n          var provider = new modelDataProvider(itemsElements);\n\n          _this3.modelsData.push(provider);\n        });\n      });\n    }\n  }, {\n    key: "getModelData",\n    value: function getModelData() {\n      return this.modelsData.filter(function (model) {\n        return model.category === (0,globalVariables/* getCategory */.n3)();\n      });\n    }\n  }, {\n    key: "getModelsByCategories",\n    value: function getModelsByCategories(category) {\n      return this.modelsMap[category];\n    }\n  }, {\n    key: "addToScene",\n    value: function addToScene(obj) {//this.planeMesh.map = obj;\n    }\n  }, {\n    key: "takeScreenShot",\n    value: function takeScreenShot() {\n      // Make the sprite mesh visible\n      // this.SpriteMesh.visible = true;\n      // this.SpriteMesh.position.set(\n      //   this.videoWidth / 3,\n      //   -this.videoHeight / 2.5,\n      //   0\n      // );\n      // Render the scene with the updated visibility\n      this.renderer.render(this.scene, this.camera); // Take the screenshot\n\n      var screenshotDataURL = this.renderer.domElement.toDataURL("image/jpeg"); // Disable the sprite mesh\n      // this.SpriteMesh.visible = false;\n\n      return screenshotDataURL;\n    }\n  }, {\n    key: "disableLogo",\n    value: function disableLogo() {\n      this.SpriteMesh.visible = false;\n    }\n  }, {\n    key: "getCurrentWidth",\n    value: function getCurrentWidth() {\n      return this.videoWidth;\n    }\n  }, {\n    key: "getCurrentHeight",\n    value: function getCurrentHeight() {\n      return this.videoHeight;\n    }\n  }, {\n    key: "updateCamera",\n    value: function updateCamera() {\n      var aspect = window.innerWidth / window.innerHeight;\n      var width, height;\n      var scale;\n      if (this.trueVideoHeight < this.trueVideoWidth) scale = this.trueVideoHeight;else scale = this.trueVideoWidth;\n\n      if (window.innerWidth > window.innerHeight) {\n        width = scale / 2;\n        height = scale / aspect / 2;\n      } else {\n        width = scale * aspect / 2;\n        height = scale / 2;\n      } // Orthographic\'s way\n\n\n      this.camera.right = width;\n      this.camera.left = -width;\n      this.camera.top = height;\n      this.camera.bottom = -height;\n    }\n  }, {\n    key: "updateCameraZoom",\n    value: function updateCameraZoom(state) {\n      var video = getVideo();\n      var img = sdkEngine_getInputImage();\n      var isVideoMode = getIsVideo();\n\n      var _getHtmlElements = getHtmlElements(),\n          canvas = _getHtmlElements.canvas;\n\n      if (state === "up") {\n        var _ref;\n\n        var currenZoom = this.cameraZoom;\n        var total = parseFloat((_ref = currenZoom + this.cameraZoomFactor) === null || _ref === void 0 ? void 0 : _ref.toPrecision(2));\n\n        if (total <= this.cameraZoomMax) {\n          enableSettingIcon("zoomOut");\n\n          if (total === this.cameraZoomMax) {\n            disableSettingIcon("zoomIn");\n          }\n\n          if (isVideoMode) {\n            video.style.transform = "scale(".concat(total, ")");\n            canvas.style.transform = "scaleX(-1) scale(".concat(total, ")");\n            this.cameraZoom = total;\n          } else {\n            img.style.transform = "scale(".concat(total, ")");\n            canvas.style.transform = "scaleX(1) scale(".concat(total, ")");\n            this.cameraZoom = total;\n          }\n        } else {\n          disableSettingIcon("zoomIn");\n        }\n      } else if (state === "down") {\n        var _ref2;\n\n        var _currenZoom = this.cameraZoom;\n\n        var _total = parseFloat((_ref2 = _currenZoom - this.cameraZoomFactor) === null || _ref2 === void 0 ? void 0 : _ref2.toPrecision(2));\n\n        if (_total >= 1) {\n          enableSettingIcon("zoomIn");\n\n          if (_total === 1) {\n            disableSettingIcon("zoomOut");\n          }\n\n          if (isVideoMode) {\n            video.style.transform = "scale(".concat(_total, ")");\n            canvas.style.transform = "scaleX(-1) scale(".concat(_total, ")");\n            this.cameraZoom = _total;\n          } else {\n            img.style.transform = "scale(".concat(_total, ")");\n            canvas.style.transform = "scaleX(1) scale(".concat(_total, ")");\n            this.cameraZoom = _total;\n          }\n        } else {\n          disableSettingIcon("zoomOut");\n        }\n      }\n    }\n  }, {\n    key: "resetZoomChanges",\n    value: function resetZoomChanges() {\n      this.camera.zoom = 1;\n      this.cameraZoom = this.camera.zoom;\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: "updateCameraForImage",\n    value: function updateCameraForImage() {\n      if (!this.videoWidth || !this.videoHeight) return;\n      this.camera.aspect = this.videoWidth / this.videoHeight;\n\n      if (this.camera.type === "OrthographicCamera") {\n        this.camera.top = this.videoHeight / 2;\n        this.camera.bottom = -this.videoHeight / 2;\n        this.camera.left = -this.videoWidth / 2;\n        this.camera.right = this.videoWidth / 2;\n      } else {\n        this.camera.position.z = cameraDistance(this.videoHeight, this.fov);\n      } // this.camera.updateProjectionMatrix();\n\n    }\n  }, {\n    key: "animate",\n    value: function animate(isVideo) {\n      this.isVideo = isVideo;\n      if (!isVideo) this.updateCameraForImage();\n\n      if (this.scene && this.camera) {\n        this.renderer.render(this.scene, this.camera);\n      }\n\n      if (this.controls) {\n        this.controls.update();\n      }\n    }\n  }, {\n    key: "changeTryon",\n    value: function changeTryon(state, config) {\n      hideTrackingMsg(); // hideRingContainer();\n      //resetRingIndex();\n      // hideRecognizeUI();\n      // ResetSliders();\n\n      sliderHandler_resetSliderValues();\n      this.CurrentTryon = state;\n      this.onTryonAPI(config);\n    }\n  }, {\n    key: "resize",\n    value: function resize(videoWidth, videoHeight) {\n      // console.log("videoWidth1", videoWidth);\n      this.videoWidth = videoWidth;\n      this.videoHeight = videoHeight;\n    }\n  }, {\n    key: "createNewPlane",\n    value: function createNewPlane(video) {\n      this.videoBg.createNewPlane(video);\n      this.videoBg.update();\n    }\n  }, {\n    key: "updatePlaneWithImage",\n    value: function updatePlaneWithImage(texture) {\n      this.videoBg.updatePlaneWithImage(texture);\n      this.videoBg.updateDimensions(this.videoWidth, this.videoHeight);\n      if (this.scene && this.camera) this.camera.updateProjectionMatrix();\n      this.renderer.render(this.scene, this.camera);\n    }\n  }, {\n    key: "onLandmarks",\n    value: function onLandmarks(image, landmarks, isvideo) {\n      var _this4 = this;\n\n      this.isVideo = isvideo;\n\n      if (landmarks) {\n        this.lastLandmarks = landmarks;\n        if (this.CurrentTryon !== 7) hideAlignMessagePanel();\n\n        if (getCurrentTryon() === StyleFactories.Glasses || getCurrentTryon() === StyleFactories.Necklace || getCurrentTryon() === StyleFactories.Caps || getCurrentTryon() === StyleFactories.Earrings || getCurrentTryon() === StyleFactories.Mangtika) {\n          if (this.CurrentTryon !== StyleFactories.Mangtika) {\n            if (this.faceMask) {\n              this.faceMask.updateLandmarks(landmarks);\n              if (isvideo) this.faceMask.updateDimensions(this.calculatedWidth, this.calculatedHeight);else this.faceMask.updateDimensions(this.videoWidth, this.videoHeight);\n              this.faceMask.update();\n            }\n          }\n\n          if (this.styles !== undefined && this.styles.length > 0) {\n            this.styles.forEach(function (style) {\n              _this4.currentStyle.forEach(function (tryon) {\n                if (style === tryon) {\n                  style.updateLandmarks(landmarks); // style.setVisibility(true);\n\n                  if (isvideo) style.updateDimensions(_this4.calculatedWidth, _this4.calculatedHeight);else style.updateDimensions(_this4.videoWidth, _this4.videoHeight);\n                  style.update();\n                }\n              });\n            });\n          }\n        }\n      } else {\n        if (getCurrentTryon() === StyleFactories.Glasses || getCurrentTryon() === StyleFactories.Necklace || getCurrentTryon() === StyleFactories.Caps || getCurrentTryon() === StyleFactories.Earrings || getCurrentTryon() === StyleFactories.Mangtika) {\n          if (this.styles !== undefined && this.styles.length > 0) {\n            this.styles.forEach(function (style) {\n              _this4.currentStyle.forEach(function (tryon) {\n                if (style === tryon) {\n                  style.hide();\n                }\n              });\n            });\n          }\n        }\n\n        if (isvideo) {\n          updateAlignUI("face", globalVariables/* errorMessages */.Qj.invisbileLiveFace);\n          showAlignMessagePanel();\n        } else {\n          updateAlignUI("face", globalVariables/* errorMessages */.Qj.invalidFaceUpload);\n          showAlignMessagePanel();\n        }\n      }\n    }\n  }, {\n    key: "onPoseLandmarks",\n    value: function onPoseLandmarks(image, landmarks, segmentationMask, Worldlandmarks) {\n      if (image && landmarks) {//this.videoBg.setImage(image);\n        //this.posewear.updateLandmarks(landmarks);\n        //this.posewear.updateWorldLandmarks(Worldlandmarks);\n      }\n    }\n  }, {\n    key: "onHandsLandmarks",\n    value: function onHandsLandmarks(image, landmarks, worldlandmarks, handedness, isVideo) {\n      var _this5 = this;\n\n      this.isVideo = isVideo;\n\n      if (landmarks) {\n        if (getCurrentTryon() === StyleFactories.Watches || getCurrentTryon() === StyleFactories.Bracelet || getCurrentTryon() === StyleFactories.Rings) {\n          hideAlignMessagePanel();\n          this.lastHandLandmarks = landmarks;\n          this.lastHandedness = handedness;\n\n          if (this.styles !== undefined && this.styles.length > 0) {\n            this.styles.forEach(function (style) {\n              _this5.currentStyle.forEach(function (tryon) {\n                if (style === tryon) {\n                  style.updateLandmarks(landmarks, handedness); // style.setVisibility(true);\n\n                  if (isVideo) style.updateDimensions(_this5.calculatedWidth, _this5.calculatedHeight);else style.updateDimensions(_this5.videoWidth, _this5.videoHeight);\n                  style.update();\n                }\n              });\n            });\n          }\n        }\n      } else {\n        // if (image) this.videoBg.setImage(image, isVideo);\n        if (getCurrentTryon() === StyleFactories.Watches || getCurrentTryon() === StyleFactories.Bracelet || getCurrentTryon() === StyleFactories.Rings) {\n          if (this.styles !== undefined && this.styles.length > 0) {\n            this.styles.forEach(function (style) {\n              _this5.currentStyle.forEach(function (tryon) {\n                if (style === tryon) {\n                  style.hide();\n                }\n              });\n            });\n          }\n        }\n\n        if (isVideo) {\n          if (getCurrentTryon() === StyleFactories.Watches || getCurrentTryon() === StyleFactories.Bracelet) {\n            updateAlignUI("hand", globalVariables/* errorMessages */.Qj.invisbileLiveHand);\n          } else {\n            updateAlignUI("ring", globalVariables/* errorMessages */.Qj.invisbileLiveRing);\n          }\n\n          showAlignMessagePanel();\n        } else {\n          if (getCurrentTryon() === StyleFactories.Watches || getCurrentTryon() === StyleFactories.Bracelet) {\n            updateAlignUI("hand", globalVariables/* errorMessages */.Qj.invalidHandUpload);\n          } else {\n            updateAlignUI("ring", globalVariables/* errorMessages */.Qj.invalidRingUpload);\n          }\n\n          showAlignMessagePanel();\n        }\n      }\n    }\n  }, {\n    key: "setImageTryonSettings",\n    value: function setImageTryonSettings(width, height) {\n      var _this6 = this;\n\n      //console.log("videoWidth2", width);\n      this.videoWidth = width;\n      this.videoHeight = height;\n      this.calculatedWidth = width;\n      this.calculatedHeight = width;\n      this.renderer.setSize(width, height);\n      this.styles.forEach(function (style) {\n        _this6.currentStyle.forEach(function (tryon) {\n          if (style === tryon) {\n            style.updateDimensions(width, height);\n          }\n        });\n      });\n\n      if (getCurrentTryon() === StyleFactories.Glasses || getCurrentTryon() === StyleFactories.Necklace || getCurrentTryon() === StyleFactories.Caps || getCurrentTryon() === StyleFactories.Earrings) {\n        if (this.faceMask) this.faceMask.updateDimensions(width, height);\n      }\n\n      this.updateCameraForImage();\n      this.renderer.setSize(width, height);\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: "setVideoTryonSettings",\n    value: function setVideoTryonSettings(width, height) {\n      var _this7 = this;\n\n      this.trueVideoWidth = width;\n      this.trueVideoHeight = height; //console.log("videoWidth3", window.innerWidth);\n\n      this.videoWidth = window.innerWidth;\n      this.videoHeight = window.innerHeight;\n      this.updateCamera();\n      this.calculatedVidoeDimensions();\n      this.styles.forEach(function (style) {\n        _this7.currentStyle.forEach(function (tryon) {\n          if (style === tryon) {\n            style.updateDimensions(_this7.calculatedWidth, _this7.calculatedHeight);\n          }\n        });\n      });\n      this.camera.updateProjectionMatrix();\n      this.videoBg.update(this.calculatedWidth, this.calculatedHeight);\n      this.renderer.setSize(window.innerWidth, window.innerHeight, true);\n    }\n  }, {\n    key: "Clear",\n    value: function Clear() {\n      this.removeCurrentTryon();\n    }\n  }, {\n    key: "setForceHideTryons",\n    value: function setForceHideTryons(state) {\n      var _this8 = this;\n\n      this.isForceHideTryon = state;\n\n      if (state === true) {\n        if (this.styles !== undefined && this.styles.length > 0) {\n          this.styles.forEach(function (style) {\n            _this8.currentStyle.forEach(function (tryon) {\n              if (style === tryon) {\n                style.hide();\n              }\n            });\n          });\n        }\n      } else if (state === false) {\n        this.styles.forEach(function (style) {\n          _this8.currentStyle.forEach(function (tryon) {\n            if (style === tryon) {\n              style.show();\n            }\n          });\n        });\n      }\n    }\n  }, {\n    key: "shouldForceHideTryons",\n    value: function shouldForceHideTryons() {\n      return this.isForceHideTryon;\n    }\n  }, {\n    key: "resizeCamera",\n    value: function resizeCamera() {\n      var _this9 = this;\n\n      if (this.isVideo) {\n        this.videoWidth = window.innerWidth;\n        this.videoHeight = window.innerHeight;\n        this.updateCamera();\n        this.calculatedVidoeDimensions();\n        this.styles.forEach(function (style) {\n          _this9.currentStyle.forEach(function (tryon) {\n            if (style === tryon) {\n              style.updateDimensions(_this9.calculatedWidth, _this9.calculatedHeight);\n            }\n          });\n        });\n        this.camera.updateProjectionMatrix();\n        this.videoBg.update(this.calculatedWidth, this.calculatedHeight);\n        this.renderer.setSize(window.innerWidth, window.innerHeight, true);\n      }\n    }\n  }, {\n    key: "calculatedVidoeDimensions",\n    value: function calculatedVidoeDimensions() {\n      //let { log } = getHtmlElements();\n      //this.log = log;\n      var windowAspect;\n      var mql = window.matchMedia("(orientation: portrait)");\n      var cw = this.trueVideoWidth;\n      var ch = this.trueVideoHeight;\n      var videoAspect;\n\n      if (mql.matches && (0,globalVariables/* isMobileDevice */.s2)()) {\n        windowAspect = window.innerHeight / window.innerWidth;\n        videoAspect = ch / cw;\n      } else {\n        windowAspect = window.innerWidth / window.innerHeight;\n        videoAspect = cw / ch;\n      } // videoAspect = ch / cw;\n\n\n      var offset = 1;\n      var diff = 0;\n\n      if (mql.matches && (0,globalVariables/* isMobileDevice */.s2)()) {\n        offset = videoAspect;\n\n        if (videoAspect > windowAspect) {\n          offset = windowAspect;\n        }\n      } else {\n        if (windowAspect < videoAspect) {\n          diff = videoAspect - windowAspect;\n          offset = videoAspect - diff;\n          if (windowAspect < 1) offset = 1;\n        } else {\n          offset = videoAspect;\n        }\n      } // this.log.innerHTML = `v30+${windowAspect} + ${videoAspect} + ${offset}\n      // + ${this.trueVideoWidth}+ ${this.trueVideoHeight} +${window.innerWidth}+${\n      //   window.innerHeight\n      // }\n      // +${mql.matches}+${diff}+${isMobileDevice()}`;\n\n\n      this.calculatedWidth = cw / offset;\n      this.calculatedHeight = ch / offset;\n    }\n  }]);\n\n  return SceneManager;\n}();\n;// CONCATENATED MODULE: ./src/js/Tracking_Mode.js\n\n\nfunction Tracking_Mode_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Tracking_Mode_createClass(Constructor, protoProps, staticProps) { if (protoProps) Tracking_Mode_defineProperties(Constructor.prototype, protoProps); if (staticProps) Tracking_Mode_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction Tracking_Mode_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Tracking_Mode_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar TrackingMode = /*#__PURE__*/Tracking_Mode_createClass(function TrackingMode() {\n  Tracking_Mode_classCallCheck(this, TrackingMode);\n});\n\nTracking_Mode_defineProperty(TrackingMode, "None", "none");\n\nTracking_Mode_defineProperty(TrackingMode, "Face", "face");\n\nTracking_Mode_defineProperty(TrackingMode, "Hand", "hand");\n\nTracking_Mode_defineProperty(TrackingMode, "pose", "pose");\n;// CONCATENATED MODULE: ./src/js/api_response_data.js\n\n\nfunction api_response_data_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction api_response_data_createClass(Constructor, protoProps, staticProps) { if (protoProps) api_response_data_defineProperties(Constructor.prototype, protoProps); if (staticProps) api_response_data_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction api_response_data_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n//let config;\nvar APIResponseData = /*#__PURE__*/api_response_data_createClass(function APIResponseData(response, isOld) {\n  api_response_data_classCallCheck(this, APIResponseData);\n\n  if (isOld) {\n    var _response$config, _response$config2;\n\n    //console.log("res" + response.config);\n    // config = response?.config || {\n    //   categoryName: response.config?.categoryName,\n    //   baseAsset: response?.config?.baseAsset,\n    // };\n    // this.hash = response?.hash || "";\n    // this.requestId = response?.requestId || "";\n    this.config = {\n      skuid: 1,\n      categoryName: (_response$config = response.config) === null || _response$config === void 0 ? void 0 : _response$config.categoryName,\n      assetType: "2d",\n      assetIcon: "url",\n      assets: [response === null || response === void 0 ? void 0 : (_response$config2 = response.config) === null || _response$config2 === void 0 ? void 0 : _response$config2.baseAsset]\n    };\n  } else {\n    this.data = response;\n  }\n}); // export function getTryonConfig() {\n//   return config;\n// }\n// Method to check data type and return the appropriate data\n\nfunction mapToJSONData(inputData) {\n  if (!inputData) {\n    return null;\n  } //console.log("mapToJSONData " + inputData);\n\n\n  if (inputData !== null && inputData !== void 0 && inputData.config) {\n    return inputData;\n  }\n}\n;// CONCATENATED MODULE: ./src/constants/authConstants.js\nvar apiKey = "";\nfunction setAPIKey(key) {\n  apiKey = key;\n}\nfunction getAPIKey() {\n  //return "ff4146c9-386a-463d-9b7d-4191bfa35c7f"; //glamarz0 decoded key\n  //return "93009942-7912-462c-a688-90e6aa8b5b81";\n  return apiKey;\n}\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(9669);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.trim.js\nvar es6_string_trim = __webpack_require__(4564);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.starts-with.js\nvar es6_string_starts_with = __webpack_require__(7732);\n;// CONCATENATED MODULE: ./src/apiService/interceptors/index.js\n\n\n\n\n\nvar _excluded = ["common", "delete", "get", "head", "post", "put", "patch"];\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction interceptors_typeof(obj) { "@babel/helpers - typeof"; return interceptors_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, interceptors_typeof(obj); }\n\n\n\n\n\n\n\n\n\n\n\n\nvar combineURLs = __webpack_require__(7303);\n\nvar isAbsoluteURL = __webpack_require__(1793);\n\nvar _require = __webpack_require__(8272),\n    isBrowser = _require.isBrowser;\n\nvar _require2 = __webpack_require__(\n/* webpackChunkName: "buffer" */\n8764),\n    Buffer = _require2.Buffer; // const { transformRequestOptions } = require("./../../../helper/utils");\n\n\nvar _require3 = __webpack_require__(168),\n    sign = _require3.sign;\n\nfunction transformRequestOptions(params) {\n  var options = "";\n\n  var _loop = function _loop(key) {\n    if (interceptors_typeof(params[key]) !== "object" && typeof params[key] !== "undefined") {\n      var encodeVal = encodeURIComponent(params[key]);\n      options += "".concat(key, "=").concat(encodeVal, "&");\n    } else if (Array.isArray(params[key])) {\n      // eslint-disable-next-line no-loop-func\n      params[key].forEach(function (el) {\n        var encodeVal = encodeURIComponent(params[key]);\n        options += "".concat(key, "=").concat(encodeVal, "&");\n      });\n    } else if (interceptors_typeof(params[key]) === "object" && params[key]) {\n      options += transformRequestOptions(params[key]);\n    }\n  };\n\n  for (var key in params) {\n    _loop(key);\n  }\n\n  return options ? options.slice(0, -1) : options;\n}\n\nfunction getTransformer(config) {\n  var transformRequest = config.transformRequest;\n\n  if (transformRequest) {\n    if (typeof transformRequest === "function") {\n      return transformRequest;\n    } else if (transformRequest.length) {\n      return transformRequest[0];\n    }\n  }\n\n  throw new Error("Could not get default transformRequest function from Axios defaults");\n}\n\nfunction processQueryParams(_ref) {\n  var params = _ref.params,\n      search = _ref.search;\n  var queryParam = "";\n\n  if (params && Object.keys(params).length) {\n    if (search && search.trim() !== "") {\n      queryParam = "&".concat(transformRequestOptions(params));\n    } else {\n      queryParam = "?".concat(transformRequestOptions(params));\n    }\n  }\n\n  return queryParam;\n}\n\nfunction base64Encode(text) {\n  return Buffer.from(text).toString("base64");\n}\n\nfunction interceptorFn(options) {\n  return function (config) {\n    if (!config.url) {\n      throw new Error("No URL present in request config, unable to sign request");\n    }\n\n    var url = config.url;\n\n    if (config.baseURL && !isAbsoluteURL(config.url)) {\n      url = combineURLs(config.baseURL, config.url);\n    }\n\n    if (url.startsWith("/api") && isBrowser) {\n      url = "https://".concat(window.location.host).concat(url);\n    }\n\n    var _URL = new URL(url),\n        host = _URL.host,\n        pathname = _URL.pathname,\n        search = _URL.search; //console.log(pathname);\n\n\n    if (pathname.startsWith("/service/panel") || pathname.startsWith("/api/service/panel") || pathname.startsWith("/service/platform") || pathname.startsWith("/service/private")) {\n      var data = config.data,\n          headers = config.headers,\n          method = config.method,\n          params = config.params;\n      var queryParam = processQueryParams({\n        params: params,\n        search: search\n      });\n      var transformRequest = getTransformer(config);\n      var transformedData = transformRequest(data, headers); //console.log(63, queryParam, headers, transformedData);\n      // Remove all the default Axios headers\n\n      var common = headers.common,\n          _delete = headers["delete"],\n          get = headers.get,\n          head = headers.head,\n          post = headers.post,\n          put = headers.put,\n          patch = headers.patch,\n          headersToSign = _objectWithoutProperties(headers, _excluded);\n\n      var signingOptions = {\n        method: method && method.toUpperCase(),\n        host: host,\n        path: pathname + search + queryParam,\n        body: transformedData,\n        headers: headersToSign\n      };\n\n      if (signingOptions["body"] && signingOptions["body"] instanceof FormData) {\n        delete signingOptions["body"];\n      }\n\n      sign(signingOptions); //console.log(signingOptions);\n\n      config.headers["x-ebg-param"] = base64Encode(signingOptions.headers["x-ebg-param"]);\n      config.headers["x-ebg-signature"] = signingOptions.headers["x-ebg-signature"];\n    } //console.log(config);\n\n\n    return config;\n  };\n}\n\nvar addSignatureFn = interceptorFn;\n;// CONCATENATED MODULE: ./src/apiService/api.js\n\n\n\n\n\nvar API = axios_default().create({\n  baseURL: "".concat(env/* default */.Z.HIDAN_MAIN_URL),\n  headers: {\n    "Content-Type": "application/json" // Source: "web",\n\n  }\n});\nfunction updateAPIURL() {\n  API.defaults.baseURL = "".concat(env/* default */.Z.HIDAN_MAIN_URL);\n  setAuthorization();\n}\nAPI.interceptors.request.use(addSignatureFn({}));\nAPI.defaults.withCredentials = true;\nvar setAuthorization = function setAuthorization() {\n  if ((0,globalVariables/* getPlatformMode */.TM)() === "platform") {\n    API.defaults.headers["Authorization"] = "Bearer ".concat(getAPIKey());\n    API.defaults.headers["Authorization"] = "Bearer ODkzZmU1ZGItZDg5ZS00Yzc3LTk2NjktYTM2OTZhZjRlNGVi";\n  } else {\n    API.defaults.headers["Authorization"] = "Bearer ".concat(btoa(getAPIKey()));\n  }\n};\nvar getModuleConfig = function getModuleConfig(modelType) {\n  return API.get("/accessory/modelconfig/".concat(modelType));\n};\nvar getModelsConfig = function getModelsConfig(categoryType, platformType) {\n  return API.get("/models?category=".concat(categoryType, "&platform=").concat(platformType));\n};\nvar sendMeta = function sendMeta(requestId, tryOnType) {\n  return API.post("/meta", null, {\n    headers: {\n      "x-request-id": requestId,\n      "x-try-on-type": tryOnType\n    }\n  })["catch"]();\n};\nvar getSKUData = function getSKUData(id, apiKey) {\n  return API.get("/skus/".concat(id)).then(function (response) {\n    // console.log(response);\n    return response;\n  })["catch"](function (error) {\n    //console.error("Error fetching SKU data:", error);\n    throw error;\n  });\n};\n;// CONCATENATED MODULE: ./src/js/utils/canvasContainer.js\nvar canvascontainer = null;\nfunction setCanvasContainerChild(child) {\n  canvascontainer.appendChild(child);\n}\nfunction getCanvasContainer() {\n  canvascontainer = document.querySelector(".canavas_container");\n}\n;// CONCATENATED MODULE: ./src/htmlService/modelService.js\nfunction modelService_slicedToArray(arr, i) { return modelService_arrayWithHoles(arr) || modelService_iterableToArrayLimit(arr, i) || modelService_unsupportedIterableToArray(arr, i) || modelService_nonIterableRest(); }\n\nfunction modelService_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction modelService_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction modelService_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction modelService_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = modelService_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction modelService_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return modelService_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return modelService_arrayLikeToArray(o, minLen); }\n\nfunction modelService_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar models;\nvar isPortrait = false;\nvar modelsContainerDiv = null;\nvar modelsElementsList = [];\nvar modelsElementsSelectedList = [];\nvar modelsElementsDiv = [];\nvar initModelContainer = function initModelContainer(container) {\n  modelsContainerDiv = container;\n};\nvar modelService_createModels = function createModels(modelsList, handler) {\n  var mql = window.matchMedia("(orientation: portrait)");\n  isPortrait = mql.matches;\n  modelsContainerDiv.innerHTML = "";\n  models = modelsList;\n\n  var _iterator = modelService_createForOfIteratorHelper(modelsList.entries()),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var _step$value = modelService_slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          value = _step$value[1];\n\n      var modelIconDiv = document.createElement("div");\n\n      if (isPortrait) {\n        modelIconDiv.style.width = "50px";\n        modelIconDiv.style.height = "65.5px";\n      } else {\n        modelIconDiv.style.width = "70px";\n        modelIconDiv.style.height = "92px";\n      }\n\n      modelsContainerDiv.appendChild(modelIconDiv);\n      var imgElement = document.createElement("img");\n      imgElement.id = "model" + index.toString();\n      imgElement.style.width = "100%";\n      imgElement.style.height = "100%";\n\n      if (hasGlobalAssetKey(value.imageUrl)) {\n        var cachedImgsrc = getGlobalCacheAsset(value.imageUrl);\n        imgElement.src = cachedImgsrc;\n      } else {\n        imgElement.src = value.imageUrl;\n        addToGlobalCache(value.imageUrl, imgElement.src); // document.body.appendChild(imgElement);\n      } //imgElement.src = value.imageUrl;\n\n\n      modelIconDiv.appendChild(imgElement);\n      var imgEyeElement = document.createElement("img");\n      imgEyeElement.style.position = "relative";\n      imgEyeElement.style.top = "-75%";\n      imgEyeElement.style.left = "25%";\n      imgEyeElement.style.width = "50%";\n      imgEyeElement.style.height = "50%";\n      imgEyeElement.src = modelSelectionIcons.selected;\n      modelIconDiv.appendChild(imgEyeElement);\n      imgEyeElement.style.display = "none";\n      imgElement.addEventListener("click", function () {\n        handleClickEvent(value, index, handler); //handler(value);\n      });\n      modelsElementsDiv.push(modelIconDiv);\n      modelsElementsList.push(imgElement);\n      modelsElementsSelectedList.push(imgEyeElement);\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n\nvar handleClickEvent = function handleClickEvent(value, index, handler) {\n  toggleModelsSelectedImage(index);\n  handler(value);\n};\n\nvar toggleModelsSelectedImage = function toggleModelsSelectedImage(index) {\n  //console.log("index" + index);\n  modelsElementsSelectedList[index].style.display = "block";\n  modelsElementsList[index].style.filter = "brightness(0.5)";\n  models.forEach(function (each, idx) {\n    if (index !== idx) {\n      modelsElementsSelectedList[idx].style.display = "none";\n      modelsElementsList[idx].style.filter = "none";\n    }\n  });\n};\nvar setVisibilityOfModels = function setVisibilityOfModels(modelsList, type) {\n  for (var i = 0; i < modelsList.length; i++) {\n    if (modelsList[i].category === type) {\n      //let model = document.getElementById(`model${i}`);\n      var model = modelsElementsDiv[i];\n      if (model) model.style.display = "block";\n    } else {\n      var _model = modelsElementsDiv[i]; //let model = document.getElementById(`model${i}`);\n\n      if (_model) _model.style.display = "none";\n    }\n  }\n};\nvar imageTrackingWithDefaultModel = function imageTrackingWithDefaultModel(modelsList, type) {\n  //console.log(modelsList, type);\n  if (modelsList.length > 0) {\n    for (var i = 0; i < modelsList.length; i++) {\n      if (modelsList[i].category === type) {\n        toggleModelsSelectedImage(i);\n        return modelsList[i].imageUrl;\n      }\n    }\n  }\n};\nvar showModelContainer = function showModelContainer() {\n  if (isShouldHideInternalUI()) return;\n  if (modelsContainerDiv) modelsContainerDiv.style.display = "flex";\n};\nvar hideModelContainer = function hideModelContainer() {\n  if (modelsContainerDiv) modelsContainerDiv.style.display = "none";\n};\n;// CONCATENATED MODULE: ./src/htmlService/optionsService.js\nfunction optionsService_slicedToArray(arr, i) { return optionsService_arrayWithHoles(arr) || optionsService_iterableToArrayLimit(arr, i) || optionsService_unsupportedIterableToArray(arr, i) || optionsService_nonIterableRest(); }\n\nfunction optionsService_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction optionsService_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction optionsService_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction optionsService_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = optionsService_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction optionsService_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return optionsService_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return optionsService_arrayLikeToArray(o, minLen); }\n\nfunction optionsService_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar iconBaseUrl = "".concat(env/* default */.Z.ASSET_URL, "icons/");\nvar selectedImage = null;\nvar optionsConfig = [{\n  selectedImage: "imagetryon_n.svg",\n  unselectedImage: "imagetryon_s.svg",\n  isSelected: false\n}, {\n  selectedImage: "livetryon_n.svg",\n  unselectedImage: "livetryon_s.svg",\n  isSelected: true\n}, {\n  selectedImage: "modeltryon_n.svg",\n  unselectedImage: "modeltryon_s.svg",\n  isSelected: false\n}, {\n  selectedImage: "config_n.svg",\n  unselectedImage: "config_s.svg",\n  isSelected: false\n}];\nvar optionsContainerDiv = null;\nvar optionsElementsList = (/* unused pure expression or super */ null && ([]));\nvar initOptions = function initOptions(container) {\n  optionsContainerDiv = container;\n};\nvar createOptions = function createOptions(handler) {\n  var _iterator = optionsService_createForOfIteratorHelper(iconConfig.entries()),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var _step$value = optionsService_slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          value = _step$value[1];\n\n      var iconDiv = document.createElement("div");\n      var iconImg = document.createElement("img");\n      iconImg.src = value.normalIconLink;\n      iconImg.width = 50;\n      iconImg.id = "options-img-".concat(index);\n      iconImg.classList.add("icon-options-svg");\n      iconImg.title = value.toolTip;\n      iconDiv.appendChild(iconImg);\n      iconDiv.addEventListener("click", function () {\n        handleOptionClickEvent(value, index, handler);\n      }); // if (value.tag === "imgTryOn") {\n      //   const iconImg = document.createElement("img");\n      // }\n\n      optionsElementsList.push(iconImg);\n      optionsContainerDiv.appendChild(iconDiv);\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  toggleOptionsSelectedImage(1);\n};\n\nvar handleOptionClickEvent = function handleOptionClickEvent(value, index, handler) {\n  if (value.mutuallyConnected) toggleOptionsSelectedImage(index);else toggleOptionsButton(index);\n  handler(value.tag);\n};\n\nvar showOptionsContainer = function showOptionsContainer() {\n  if (isShouldHideInternalUI()) return;\n  optionsContainerDiv.style.display = "flex";\n};\nvar hideOptionsContainer = function hideOptionsContainer() {\n  optionsContainerDiv.style.display = "none";\n};\nvar toggleOptionsButton = function toggleOptionsButton(index) {\n  optionsElementsList[index].src = iconConfig[index].isSelected ? iconConfig[index].normalIconLink : iconConfig[index].selectIconLink;\n  iconConfig[index].isSelected = !iconConfig[index].isSelected;\n};\nvar toggleOptionsSelectedImage = function toggleOptionsSelectedImage(index) {\n  if (selectedImage === index) return;\n\n  if (iconConfig[index].mutuallyConnected) {\n    toggleOptionsButton(index);\n    selectedImage = index;\n    iconConfig.forEach(function (each, idx) {\n      if (selectedImage !== idx && each.mutuallyConnected) {\n        each.isSelected = false;\n        optionsElementsList[idx].src = iconConfig[idx].normalIconLink;\n      }\n    });\n  }\n};\n;// CONCATENATED MODULE: ./src/js/utils/screenshotPanel.js\nvar panel = null;\nvar screenshotPanel_parent = null;\nvar container = null;\nvar screenshotPanel_img = null;\nvar download = null;\nfunction setScreenshotImage(url, maxWidth, maxHeight) {\n  screenshotPanel_img.src = url;\n  panel.style.maxWidth = maxWidth + "px"; // panel.style.maxHeight = maxHeight + "px";\n\n  panel.style.height = "100%";\n}\nfunction downloadScreenshotImage() {\n  var downloadLink = document.createElement("a");\n  downloadLink.href = screenshotPanel_img.src;\n  downloadLink.download = "screenshot.png"; // Specify the desired filename\n\n  downloadLink.style.display = "none"; // Hide the link\n\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n  document.body.removeChild(downloadLink);\n}\nfunction hideScreenshotPanel() {\n  container.style.display = "none";\n}\nfunction showScreenshotPanel() {\n  container.style.display = "flex";\n}\nfunction setScreenShotElement() {\n  container = document.querySelector(".screenshot-container");\n  screenshotPanel_parent = document.querySelector(".screenshot-panel-parent");\n  panel = document.querySelector(".screenshot-panel");\n  screenshotPanel_img = document.querySelector(".screenshotimg");\n  screenshotPanel_img.style.width = "100%";\n  screenshotPanel_img.style.height = "-webkit-fill-available";\n  screenshotPanel_img.style.borderRadius = "8px";\n  var closeButton = document.getElementById("screenshot-close-btn");\n  closeButton.addEventListener("click", function (event) {\n    hideScreenshotPanel();\n  });\n  download = document.getElementById("reload-btn");\n  download.addEventListener("click", function (event) {\n    downloadScreenshotImage();\n  });\n  hideScreenshotPanel();\n}\n;// CONCATENATED MODULE: ./src/apiService/api2.js\n\n\n\n\n //let API2;\n// export const createAPI = (url) => {\n//   API2 = axios.create({\n//     baseURL: `${url}`,\n//     headers: {\n//       "Content-Type": "multipart/form-data",\n//       Source: "web",\n//     },\n//   });\n// };\n\nvar API2 = axios_default().create({\n  baseURL: "https://arview.glamarz0.de",\n  headers: {\n    //"Content-Type": "multipart/form-data",\n    Source: "web"\n  }\n});\nAPI2.interceptors.request.use(function (request) {\n  //console.log("Starting Request", request);\n  return request;\n}); // Response interceptor\n\nAPI2.interceptors.response.use(function (response) {\n  // console.log("Response:", response);\n  return response;\n}, function (error) {\n  //console.error("Error Response:", error);\n  return Promise.reject(error);\n});\nvar api2_setAuthorization = function setAuthorization() {//API2.defaults.headers["Authorization"] = getAPIKey();\n  // API.defaults.headers["X-Skip-Cors"] = true;\n};\nvar sendImage = function sendImage(image_) {\n  var formData = new FormData();\n  formData.append("image", image_); // return API2.post("/predict_size", formData, {\n  //   headers: {\n  //     "Content-Type": "multipart/form-data", // Set appropriate content type\n  //   },\n  // })\n  //   .then((response) => {\n  //     console.log(response);\n  //     return response;\n  //   })\n  //   .catch((error) => {\n  //     console.error("Error:", error);\n  //     throw error; // Ensure errors are properly handled\n  //   });\n  //   const headers = {\n  //     \'Content-Type\': \'multipart/form-data\'\n  //   };\n\n  var headers = {\n    "Content-Type": "multipart/form-data"\n  }; //console.log(API2.baseURL + "/predict_size");\n\n  return API2.post("/predict_size", formData, {\n    headers: headers\n  }).then(function (response) {\n    return response;\n  }) // return API.post(\'/allmask\',formData,{ headers: headers }).then(response => {\n  //   return response;\n  // })\n  ["catch"](function (error) {\n    //console.error("Error fetching helth data:", error);\n    throw error;\n  });\n};\nvar gethealthData = function gethealthData(id, apiKey) {\n  //console.log(API2.baseURL + "/_healthz");\n  return API2.get("/_healthz").then(function (response) {\n    //console.log(response);\n    return response;\n  })["catch"](function (error) {\n    //console.error("Error fetching SKU data:", error);\n    throw error;\n  });\n};\n;// CONCATENATED MODULE: ./src/js/utils/recognizationUI.js\nvar recognizeUI = null;\nfunction hideRecognizeUI() {\n  recognizeUI.style.display = "none";\n}\nfunction showRecognizeUI() {\n  recognizeUI.style.display = "block";\n}\nfunction setRecognizeUIElement() {\n  recognizeUI = document.querySelector(".close-btn");\n}\n;// CONCATENATED MODULE: ./src/assets/svg/error_panel.svg\n/* harmony default export */ const error_panel = (__webpack_require__.p + "assets/models/src/assets/svg/error_panel.svg");\n;// CONCATENATED MODULE: ./src/js/utils/billingPanel.js\n\n\n\nvar billingPanel_Panel = null;\nvar billingPanel_msg = null;\nvar billingPanel_img = null;\nvar billingPanel_btn = null;\nfunction hideBillingPanel() {\n  billingPanel_Panel.style.display = "none";\n}\nfunction showBillingPanel() {\n  var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : globalVariables/* errorMessages */.Qj.billingIssue;\n  billingPanel_Panel.style.display = "flex";\n  billingPanel_msg.innerHTML = message;\n}\nfunction setBillingElement(handler) {\n  billingPanel_Panel = document.querySelector(".billing-panel");\n  billingPanel_msg = document.querySelector(".billing-message");\n  billingPanel_img = document.getElementById("billing-icon");\n  billingPanel_btn = document.getElementById("billing-btn");\n  billingPanel_img.src = error_panel;\n  billingPanel_msg.innerHTML = globalVariables/* errorMessages */.Qj.cameraPermissionNotGranted;\n  billingPanel_btn.addEventListener("click", function () {\n    handleBillingClickEvent(handler);\n  });\n}\n\nvar handleBillingClickEvent = function handleBillingClickEvent(handler) {\n  handler();\n};\n;// CONCATENATED MODULE: ./src/assets/svg/compare_icon1.svg\n/* harmony default export */ const compare_icon1 = (__webpack_require__.p + "assets/models/src/assets/svg/compare_icon1.svg");\n;// CONCATENATED MODULE: ./src/htmlService/comparisonSlider.js\n\n // import comparisonIcon from "../assets/svg/compare_icon.svg";\n\n\nvar isDragging = false;\nvar comparisonSlider_dragContainer = null;\nvar comparisonSlider_dragLineSpan = null;\nvar comparisonSlider_video_Container = null;\nvar isSliderVisible = false;\nvar dragBtnIcon = null;\nfunction addComparisonSliderEvents(video_container) {\n  comparisonSlider_dragContainer = document.querySelector(".drag-container");\n  comparisonSlider_dragLineSpan = document.querySelector(".drag-line-container");\n  dragBtnIcon = document.querySelector(".drag-btn-icon");\n  dragBtnIcon.style.backgroundImage = "url(".concat(compare_icon1, ")");\n  comparisonSlider_video_Container = video_container;\n  comparisonSlider_dragLineSpan.addEventListener("mousedown", function (e) {\n    isDragging = true;\n  });\n  comparisonSlider_dragLineSpan.addEventListener("touchstart", function (e) {\n    isDragging = true;\n  });\n  comparisonSlider_dragContainer.addEventListener("mousemove", function (e) {\n    if (isDragging) {\n      if (getIsVideo()) {\n        var _dragContainer2;\n\n        // console.log(e.clientX, dragContainer?.clientWidth);\n        if ((e === null || e === void 0 ? void 0 : e.clientX) <= 64) {\n          var _dragContainer;\n\n          //restricting dragging in left\n          comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(((_dragContainer = comparisonSlider_dragContainer) === null || _dragContainer === void 0 ? void 0 : _dragContainer.clientWidth) - 64, "px)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(64, "px");\n        } else if ((e === null || e === void 0 ? void 0 : e.clientX) >= ((_dragContainer2 = comparisonSlider_dragContainer) === null || _dragContainer2 === void 0 ? void 0 : _dragContainer2.clientWidth) - 78) {\n          var _dragContainer3;\n\n          //restricting dragging in right\n          comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(78, "px)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(((_dragContainer3 = comparisonSlider_dragContainer) === null || _dragContainer3 === void 0 ? void 0 : _dragContainer3.clientWidth) - 78, "px");\n        } else {\n          var _dragContainer4;\n\n          comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(((_dragContainer4 = comparisonSlider_dragContainer) === null || _dragContainer4 === void 0 ? void 0 : _dragContainer4.clientWidth) - (e === null || e === void 0 ? void 0 : e.clientX), "px)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(e === null || e === void 0 ? void 0 : e.clientX, "px");\n        }\n      } else {\n        var _dragContainer6;\n\n        if ((e === null || e === void 0 ? void 0 : e.clientX) <= 64) {\n          var _dragContainer5;\n\n          //restricting dragging in left\n          comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(((_dragContainer5 = comparisonSlider_dragContainer) === null || _dragContainer5 === void 0 ? void 0 : _dragContainer5.clientWidth) - 64, "px 0 0)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(64, "px");\n        } else if ((e === null || e === void 0 ? void 0 : e.clientX) >= ((_dragContainer6 = comparisonSlider_dragContainer) === null || _dragContainer6 === void 0 ? void 0 : _dragContainer6.clientWidth) - 78) {\n          var _dragContainer7;\n\n          //restricting dragging in right\n          comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(78, "px 0 0)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(((_dragContainer7 = comparisonSlider_dragContainer) === null || _dragContainer7 === void 0 ? void 0 : _dragContainer7.clientWidth) - 78, "px");\n        } else {\n          var _dragContainer8;\n\n          comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(((_dragContainer8 = comparisonSlider_dragContainer) === null || _dragContainer8 === void 0 ? void 0 : _dragContainer8.clientWidth) - (e === null || e === void 0 ? void 0 : e.clientX), "px 0 0)");\n          comparisonSlider_dragLineSpan.style.left = "".concat(e === null || e === void 0 ? void 0 : e.clientX, "px");\n        }\n      }\n    }\n  });\n  comparisonSlider_dragContainer.addEventListener("touchmove", function (e) {\n    if (isDragging) {\n      if (e.touches && e.touches.length) {\n        if (getIsVideo()) {\n          var _e$touches$, _e$touches$2, _dragContainer10;\n\n          if ((e === null || e === void 0 ? void 0 : (_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX) <= 64) {\n            var _dragContainer9;\n\n            //restricting dragging in left\n            comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(((_dragContainer9 = comparisonSlider_dragContainer) === null || _dragContainer9 === void 0 ? void 0 : _dragContainer9.clientWidth) - 64, "px)");\n            comparisonSlider_dragLineSpan.style.left = "".concat(64, "px");\n          } else if ((e === null || e === void 0 ? void 0 : (_e$touches$2 = e.touches[0]) === null || _e$touches$2 === void 0 ? void 0 : _e$touches$2.clientX) >= ((_dragContainer10 = comparisonSlider_dragContainer) === null || _dragContainer10 === void 0 ? void 0 : _dragContainer10.clientWidth) - 78) {\n            var _dragContainer11;\n\n            //restricting dragging in right\n            comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(78, "px)");\n            comparisonSlider_dragLineSpan.style.left = "".concat(((_dragContainer11 = comparisonSlider_dragContainer) === null || _dragContainer11 === void 0 ? void 0 : _dragContainer11.clientWidth) - 78, "px");\n          } else {\n            var _dragContainer12, _e$touches$3, _e$touches$4;\n\n            comparisonSlider_video_Container.style.clipPath = "inset(0 0 0 ".concat(((_dragContainer12 = comparisonSlider_dragContainer) === null || _dragContainer12 === void 0 ? void 0 : _dragContainer12.clientWidth) - (e === null || e === void 0 ? void 0 : (_e$touches$3 = e.touches[0]) === null || _e$touches$3 === void 0 ? void 0 : _e$touches$3.clientX), "px)");\n            comparisonSlider_dragLineSpan.style.left = "".concat(e === null || e === void 0 ? void 0 : (_e$touches$4 = e.touches[0]) === null || _e$touches$4 === void 0 ? void 0 : _e$touches$4.clientX, "px");\n          }\n        } else {\n          var _e$touches$5, _e$touches$6, _dragContainer14;\n\n          if ((e === null || e === void 0 ? void 0 : (_e$touches$5 = e.touches[0]) === null || _e$touches$5 === void 0 ? void 0 : _e$touches$5.clientX) <= 64) {\n            var _dragContainer13;\n\n            //restricting dragging in left\n            comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(((_dragContainer13 = comparisonSlider_dragContainer) === null || _dragContainer13 === void 0 ? void 0 : _dragContainer13.clientWidth) - 64, "px 0 0)");\n            comparisonSlider_dragLineSpan.style.left = "".concat(64, "px");\n          } else if ((e === null || e === void 0 ? void 0 : (_e$touches$6 = e.touches[0]) === null || _e$touches$6 === void 0 ? void 0 : _e$touches$6.clientX) >= ((_dragContainer14 = comparisonSlider_dragContainer) === null || _dragContainer14 === void 0 ? void 0 : _dragContainer14.clientWidth) - 78) {\n            var _dragContainer15;\n\n            //restricting dragging in right\n            comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(78, "px 0 0)");\n            comparisonSlider_dragLineSpan.style.left = "".concat(((_dragContainer15 = comparisonSlider_dragContainer) === null || _dragContainer15 === void 0 ? void 0 : _dragContainer15.clientWidth) - 78, "px");\n          } else {\n            var _dragContainer16, _e$touches$7, _e$touches$8;\n\n            comparisonSlider_video_Container.style.clipPath = "inset(0 ".concat(((_dragContainer16 = comparisonSlider_dragContainer) === null || _dragContainer16 === void 0 ? void 0 : _dragContainer16.clientWidth) - (e === null || e === void 0 ? void 0 : (_e$touches$7 = e.touches[0]) === null || _e$touches$7 === void 0 ? void 0 : _e$touches$7.clientX), "px 0 0)");\n            comparisonSlider_dragLineSpan.style.left = "".concat(e === null || e === void 0 ? void 0 : (_e$touches$8 = e.touches[0]) === null || _e$touches$8 === void 0 ? void 0 : _e$touches$8.clientX, "px");\n          }\n        }\n      }\n    }\n  });\n  comparisonSlider_dragContainer.addEventListener("mouseup", function (e) {\n    isDragging = false;\n  });\n  comparisonSlider_dragContainer.addEventListener("mouseleave", function (e) {\n    isDragging = false;\n  });\n  comparisonSlider_dragContainer.addEventListener("touchend", function (e) {\n    isDragging = false;\n  });\n  comparisonSlider_dragContainer.addEventListener("touchcancel", function (e) {\n    isDragging = false;\n  });\n}\nfunction showComparisonSlider() {\n  var initialSliderPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "50%";\n  var showDrag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "block";\n  isSliderVisible = true;\n  comparisonSlider_dragContainer.style.display = showDrag;\n  comparisonSlider_video_Container.style.visibility = "visible";\n  resetComparisonSlider();\n}\nfunction resetComparisonSlider() {\n  var initialSliderPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "50%";\n\n  var _getHtmlElements = getHtmlElements(),\n      video_Container = _getHtmlElements.video_Container,\n      dragLineSpan = _getHtmlElements.dragLineSpan;\n\n  if (getComparisonState() === 1) initialSliderPos = "0%";\n\n  if (getIsVideo()) {\n    video_Container.style.clipPath = "inset(0 0 0 ".concat(initialSliderPos, ")");\n    dragLineSpan.style.left = "".concat(initialSliderPos); // video_Container.style.transform = "scaleX(-1)";\n  } else {\n    video_Container.style.clipPath = "inset(0 ".concat(initialSliderPos, " 0 0)");\n    dragLineSpan.style.left = "".concat(initialSliderPos); // video_Container.style.transform = "scaleX(1)";\n  }\n}\nfunction hideComparisonSlider() {\n  isSliderVisible = false;\n  resetComparisonSlider();\n  comparisonSlider_dragContainer.style.display = "none";\n  comparisonSlider_video_Container.style.visibility = "hidden";\n}\nfunction toggleComparisonSlider() {\n  if (isSliderVisible) {\n    hideComparisonSlider();\n  } else {\n    showComparisonSlider();\n  }\n}\n;// CONCATENATED MODULE: ./src/assets/lottie/loader.json\nconst loader_namespaceObject = JSON.parse(\'{"v":"4.8.0","meta":{"g":"LottieFiles AE 3.5.7","a":"","k":"","d":"","tc":""},"fr":24,"ip":0,"op":60,"w":300,"h":300,"nm":"Glam AR Loader","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"four","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":22.9,"s":[20]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":40,"s":[30]},{"t":57,"s":[20]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,152,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[120,120,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-1.283,0],[0,0],[-0.682,-1.366],[0,0],[0,0],[1.213,-1.402],[0,0],[0,0],[1.444,1.67],[0,0],[-0.871,1.745],[0,0]],"o":[[0,0],[0.682,-1.366],[0,0],[1.283,0],[0,0],[0,0],[0.871,1.743],[0,0],[0,0],[-1.444,1.67],[0,0],[-1.212,-1.402],[0,0],[0,0]],"v":[[-61.403,-91.778],[-61.403,-91.778],[-58.206,-93.938],[58.648,-93.938],[61.845,-91.778],[96.924,-21.497],[96.924,-21.497],[96.322,-16.152],[96.322,-16.152],[2.221,92.685],[-2.971,92.685],[-96.323,-15.28],[-96.924,-20.627],[-96.924,-20.627]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":1.125,"ix":10},"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":8}},"s":{"a":0,"k":[-34.75,-85.873],"ix":4},"e":{"a":0,"k":[46.156,40.537],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"three","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":16,"s":[30]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":33.9,"s":[60]},{"t":51,"s":[30]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-1.283,0],[0,0],[-0.682,-1.366],[0,0],[0,0],[1.213,-1.402],[0,0],[0,0],[1.444,1.67],[0,0],[-0.871,1.745],[0,0]],"o":[[0,0],[0.682,-1.366],[0,0],[1.283,0],[0,0],[0,0],[0.871,1.743],[0,0],[0,0],[-1.444,1.67],[0,0],[-1.212,-1.402],[0,0],[0,0]],"v":[[-61.403,-91.778],[-61.403,-91.778],[-58.206,-93.938],[58.648,-93.938],[61.845,-91.778],[96.924,-21.497],[96.924,-21.497],[96.322,-16.152],[96.322,-16.152],[2.221,92.685],[-2.971,92.685],[-96.323,-15.28],[-96.924,-20.627],[-96.924,-20.627]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":1.125,"ix":10},"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":8}},"s":{"a":0,"k":[-34.75,-85.873],"ix":4},"e":{"a":0,"k":[46.156,40.537],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"two","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":9,"s":[40]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":26.601,"s":[80]},{"t":44,"s":[40]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-0.964,0],[0,0],[-0.521,-1.041],[0,0],[0,0],[0.926,-1.066],[0,0],[0,0],[1.094,1.262],[0,0],[-0.667,1.333],[0,0]],"o":[[0,0],[0.521,-1.041],[0,0],[0.964,0],[0,0],[0,0],[0.668,1.331],[0,0],[0,0],[-1.094,1.262],[0,0],[-0.924,-1.066],[0,0],[0,0]],"v":[[-48.477,-76.427],[-48.477,-76.427],[-46.055,-78.062],[46.28,-78.062],[48.701,-76.427],[76.419,-21.067],[76.419,-21.067],[75.96,-16.989],[75.96,-16.989],[1.604,68.741],[-2.321,68.741],[-76.086,-16.302],[-76.544,-20.381],[-76.544,-20.381]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":1.125,"ix":10},"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":8}},"s":{"a":0,"k":[-34.75,-85.873],"ix":4},"e":{"a":0,"k":[46.156,40.537],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"one","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":2,"s":[50]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":15.828,"s":[100]},{"t":30,"s":[50]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-0.678,0],[0,0],[-0.379,-0.756],[0,0],[0,0],[0.669,-0.771],[0,0],[0,0],[0.781,0.902],[0,0],[0,0],[0,0],[-0.486,0.971],[0,0]],"o":[[0,0],[0.378,-0.756],[0,0],[0.678,0],[0,0],[0,0],[0.486,0.97],[0,0],[0,0],[-0.781,0.902],[0,0],[0,0],[0,0],[-0.668,-0.771],[0,0],[0,0]],"v":[[-36.869,-61.888],[-36.869,-61.888],[-35.142,-63.062],[35.283,-63.062],[37.011,-61.888],[58.152,-19.636],[58.152,-19.636],[57.82,-16.67],[57.82,-16.67],[1.108,48.761],[-1.684,48.761],[-2.109,49.13],[-1.684,48.761],[-57.946,-16.146],[-58.277,-19.113],[-58.277,-19.113]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gs","o":{"a":0,"k":100,"ix":9},"w":{"a":0,"k":1.125,"ix":10},"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":8}},"s":{"a":0,"k":[-34.75,-85.873],"ix":4},"e":{"a":0,"k":[46.156,40.537],"ix":5},"t":1,"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":13},"bm":0,"nm":"Gradient Stroke 1","mn":"ADBE Vector Graphic - G-Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"logo center","parent":6,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[0,0,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0.328,-0.572],[0,0],[-0.591,-0.591],[0,0],[0,0],[-0.725,0.72],[0,0],[0.415,0.725],[0,0],[0.656,0]],"o":[[0,0],[-0.66,0],[0,0],[-0.42,0.725],[0,0],[0,0],[0.72,0.72],[0,0],[0.591,-0.591],[0,0],[-0.327,-0.572],[0,0]],"v":[[6.529,-12.24],[-4.332,-12.24],[-5.93,-11.317],[-8.03,-7.68],[-7.734,-5.45],[-4.559,-2.275],[-0.206,2.078],[2.407,2.078],[9.935,-5.45],[10.231,-7.68],[8.13,-11.317],[6.533,-12.24]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10},"r":1,"bm":0,"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":9}},"s":{"a":0,"k":[-42.176,-66.036],"ix":5},"e":{"a":0,"k":[22.915,21.512],"ix":6},"t":1,"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"logo","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.113,0.113,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":0,"s":[100,100,100]},{"i":{"x":[0.184,0.184,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":30,"s":[104,104,100]},{"t":60,"s":[100,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0.66,0],[0,0],[0.328,-0.572],[0,0],[-0.591,-0.591],[0,0],[-0.605,1.052],[0,0],[-0.66,0],[0,0],[-0.328,-0.572],[0,0],[0,0],[1.421,0],[0,0],[0.332,0.572],[0,0],[0,0],[0.66,0],[0,0],[0.328,-0.572],[0,0],[-0.591,-0.591],[0,0],[-0.724,0.72],[0,0],[1.648,0],[0,0],[0.346,-0.346],[0,0],[0.725,0.72],[0,0],[-0.415,0.725],[0,0],[-0.655,0],[0,0],[-0.328,-0.572],[0,0],[-0.66,0],[0,0],[-0.346,0.346],[0,0],[0.416,0.725]],"o":[[0,0],[-0.328,-0.572],[0,0],[-0.66,0],[0,0],[-0.42,0.725],[0,0],[0.859,0.859],[0,0],[0.328,-0.572],[0,0],[0.66,0],[0,0],[0,0],[0.711,1.232],[0,0],[-0.66,0],[0,0],[0,0],[-0.327,-0.572],[0,0],[-0.66,0],[0,0],[-0.42,0.725],[0,0],[0.72,0.72],[0,0],[1.163,-1.163],[0,0],[-0.489,0],[0,0],[-0.72,0.72],[0,0],[-0.591,-0.591],[0,0],[0.328,-0.572],[0,0],[0.66,0],[0,0],[0.328,0.572],[0,0],[0.489,0],[0,0],[0.591,-0.591],[0,0]],"v":[[45.546,-18.712],[29.188,-47.04],[27.591,-47.963],[-25.39,-47.963],[-26.988,-47.04],[-43.346,-18.712],[-43.051,-16.483],[-39.169,-12.601],[-36.265,-12.984],[-21.813,-38.016],[-20.216,-38.939],[22.407,-38.939],[24.004,-38.02],[34.879,-19.178],[35.174,-18.666],[33.573,-15.896],[27.498,-15.896],[25.897,-16.82],[24.535,-19.178],[18.82,-29.07],[17.223,-29.993],[-15.046,-29.993],[-16.643,-29.07],[-30.209,-5.575],[-29.914,-3.346],[-0.206,26.362],[2.406,26.362],[26.769,1.999],[25.463,-1.153],[17.92,-1.153],[16.614,-0.613],[2.402,13.594],[-0.211,13.594],[-18.665,-4.86],[-18.96,-7.089],[-11.483,-20.046],[-9.886,-20.969],[12.067,-20.969],[13.665,-20.046],[18.871,-11.027],[20.468,-10.104],[38.092,-10.104],[39.398,-10.644],[45.242,-16.487],[45.537,-18.717]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10},"r":1,"bm":0,"g":{"p":3,"k":{"a":0,"k":[0,0.902,0.373,0.431,0.5,0.878,0.214,0.412,1,0.855,0.055,0.392],"ix":9}},"s":{"a":0,"k":[-42.176,-66.036],"ix":5},"e":{"a":0,"k":[22.915,21.512],"ix":6},"t":1,"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":240,"st":0,"bm":0}],"markers":[]}\');\n;// CONCATENATED MODULE: ./src/htmlService/lottieLoader.js\n\n\nvar animation = null;\nfunction showLottieLoader() {\n  var _getHtmlElements = getHtmlElements(),\n      lottieLoader = _getHtmlElements.lottieLoader;\n\n  if (!animation) {\n    initLottieLoader();\n  }\n\n  lottieLoader.style.display = "flex";\n}\nfunction hideLottieLoader() {\n  var _getHtmlElements2 = getHtmlElements(),\n      lottieLoader = _getHtmlElements2.lottieLoader;\n\n  if (animation) animation.destroy();\n  animation = null;\n  lottieLoader.style.display = "none";\n}\nfunction initLottieLoader() {\n  if (!animation) {\n    animation = lottie.loadAnimation({\n      container: document.getElementById("lottie"),\n      // the DOM element\n      renderer: "svg",\n      loop: true,\n      autoplay: true,\n      animationData: loader_namespaceObject // the path to the animation json\n\n    });\n  }\n}\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.includes.js\nvar es6_string_includes = __webpack_require__(2850);\n;// CONCATENATED MODULE: ./src/assets/svg/Angle Right.svg\n/* harmony default export */ const Angle_Right = (__webpack_require__.p + "assets/models/src/assets/svg/Angle Right.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/resetBig.svg\n/* harmony default export */ const resetBig = (__webpack_require__.p + "assets/models/src/assets/svg/resetBig.svg");\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/configSettings.css\nvar styles_configSettings = __webpack_require__(8194);\n;// CONCATENATED MODULE: ./src/htmlService/styles/configSettings.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar configSettings_options = {};\n\nconfigSettings_options.styleTagTransform = (styleTagTransform_default());\nconfigSettings_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      configSettings_options.insert = insertBySelector_default().bind(null, "head");\n    \nconfigSettings_options.domAPI = (styleDomAPI_default());\nconfigSettings_options.insertStyleElement = (insertStyleElement_default());\n\nvar configSettings_update = injectStylesIntoStyleTag_default()(styles_configSettings/* default */.Z, configSettings_options);\n\n\n\n\n       /* harmony default export */ const htmlService_styles_configSettings = (styles_configSettings/* default */.Z && styles_configSettings/* default */.Z.locals ? styles_configSettings/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/htmlService/configSettings.js\nfunction configSettings_slicedToArray(arr, i) { return configSettings_arrayWithHoles(arr) || configSettings_iterableToArrayLimit(arr, i) || configSettings_unsupportedIterableToArray(arr, i) || configSettings_nonIterableRest(); }\n\nfunction configSettings_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction configSettings_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction configSettings_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction configSettings_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = configSettings_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction configSettings_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return configSettings_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return configSettings_arrayLikeToArray(o, minLen); }\n\nfunction configSettings_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\nvar configSheetHeaderElements = []; // {pillDiv,pillIcon,subComponent}\n\nvar ringElements = [];\nvar sliderElements = {};\nvar selectedTab = null;\nvar activeTab = null;\nvar defaultRingIndex = configBottomSheetConfig.tabs[0].subComponent[0].defaultValue;\nfunction createConfigSettings(settingsHeaderHandler, settingsContentHandler, actionsHandler) {\n  var _getHtmlElements = getHtmlElements(),\n      configSettings = _getHtmlElements.configSettings;\n\n  hideConfigSettingBottomSheet();\n  var configBottomSheetFragment = document.createDocumentFragment();\n  var configBottomSheetDiv = document.createElement("div");\n  var configBottomSheetHeaderDiv = document.createElement("div");\n  var configBottomSheetDividerDiv = document.createElement("div");\n  var configBottomSheetContentDiv = document.createElement("div");\n  var configBottomSheetActionsDiv = document.createElement("div");\n  configBottomSheetDiv.classList.add("config-bottom-sheet-container");\n  configBottomSheetHeaderDiv.classList.add("config-bottom-sheet-header");\n  configBottomSheetDividerDiv.classList.add("config-bottom-sheet-divider");\n  configBottomSheetContentDiv.classList.add("config-bottom-sheet-content");\n  configBottomSheetActionsDiv.classList.add("config-bottom-sheet-actions");\n  var HeaderElements = getHeaderElements(settingsHeaderHandler);\n  configBottomSheetHeaderDiv.append(HeaderElements);\n  var SheetContent = getSheetTabContent(settingsContentHandler);\n  configBottomSheetContentDiv.append(SheetContent);\n  var SheetActionsElements = getSheetActionsContent(actionsHandler, settingsContentHandler);\n  configBottomSheetActionsDiv.append(SheetActionsElements);\n  configBottomSheetDiv.append(configBottomSheetHeaderDiv, configBottomSheetDividerDiv, configBottomSheetContentDiv, configBottomSheetActionsDiv);\n  configBottomSheetFragment.append(configBottomSheetDiv);\n  configSettings.appendChild(configBottomSheetFragment); //to auto select the first allowed tab\n\n  var initialDisplayTabIndex = 0; // console.log("category from UI", getCategory());\n\n  var _iterator = configSettings_createForOfIteratorHelper(configBottomSheetConfig.tabs.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _config$allowedCatego;\n\n      var _step$value = configSettings_slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          config = _step$value[1];\n\n      if ((_config$allowedCatego = config.allowedCategory) !== null && _config$allowedCatego !== void 0 && _config$allowedCatego.includes((0,globalVariables/* getCategory */.n3)())) {\n        initialDisplayTabIndex = index;\n        break;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  activeTab = initialDisplayTabIndex;\n  configSheetHeaderElements[initialDisplayTabIndex].pillDiv.click();\n}\n\nfunction getHeaderElements(settingsHeaderHandler) {\n  var headerFragment = document.createDocumentFragment();\n\n  var _iterator2 = configSettings_createForOfIteratorHelper(configBottomSheetConfig.tabs.entries()),\n      _step2;\n\n  try {\n    var _loop = function _loop() {\n      var _config$allowedCatego2;\n\n      var _step2$value = configSettings_slicedToArray(_step2.value, 2),\n          index = _step2$value[0],\n          config = _step2$value[1];\n\n      var pillDiv = document.createElement("div");\n      pillDiv.classList.add("config-bottom-sheet-pill");\n\n      if (!((_config$allowedCatego2 = config.allowedCategory) !== null && _config$allowedCatego2 !== void 0 && _config$allowedCatego2.includes((0,globalVariables/* getCategory */.n3)()))) {\n        pillDiv.classList.add("hide-pill");\n      }\n\n      var pillIconWrapper = document.createElement("div");\n      pillIconWrapper.classList.add("config-bottom-sheet-pill-icon-wrapper");\n      var pillIcon = document.createElement("img");\n      pillIcon.src = config.unSelectedIcon;\n      pillIconWrapper.appendChild(pillIcon);\n      var pillTextDiv = document.createElement("div");\n      pillTextDiv.innerText = config.label;\n      pillTextDiv.classList.add("config-bottom-sheet-pill-text");\n      pillDiv.append(pillIconWrapper, pillTextDiv);\n      pillDiv.addEventListener("click", function () {\n        pillClickHandler(index);\n        settingsHeaderHandler(index, config);\n      });\n      headerFragment.append(pillDiv);\n      configSheetHeaderElements.push({\n        pillDiv: pillDiv,\n        pillIcon: pillIcon\n      });\n    };\n\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return headerFragment;\n}\n\nfunction getSheetTabContent(handler) {\n  var sheetTabContentfrag = document.createDocumentFragment();\n\n  var _iterator3 = configSettings_createForOfIteratorHelper(configBottomSheetConfig.tabs.entries()),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _step3$value = configSettings_slicedToArray(_step3.value, 2),\n          index = _step3$value[0],\n          config = _step3$value[1];\n\n      var subComponentElement = getSubComponent(config.subComponent, handler);\n      sheetTabContentfrag.append(subComponentElement);\n      configSheetHeaderElements[index].subComponent = subComponentElement;\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return sheetTabContentfrag;\n}\n\nfunction getSubComponent(subComponentConfig, handler) {\n  var subComponentDiv = document.createElement("div");\n\n  var _iterator4 = configSettings_createForOfIteratorHelper(subComponentConfig.entries()),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var _step4$value = configSettings_slicedToArray(_step4.value, 2),\n          index = _step4$value[0],\n          eachSubComponentConfig = _step4$value[1];\n\n      switch (eachSubComponentConfig.type) {\n        case "fingers":\n          subComponentDiv.classList.add("ring-row-container");\n          subComponentDiv.style.display = "none";\n          subComponentDiv.append(getRings(handler));\n          return subComponentDiv;\n\n        case "slider":\n          subComponentDiv.classList.add("slider-main-container");\n          subComponentDiv.style.display = "none";\n          subComponentDiv.append(getSliderDiv(eachSubComponentConfig, handler));\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  return subComponentDiv;\n}\n\nfunction getRings(handler) {\n  var ringRowContainer = document.createDocumentFragment(); //   ringRowContainer.classList.add("ring-row-container");\n\n  var _iterator5 = configSettings_createForOfIteratorHelper(ringIconConfig.entries()),\n      _step5;\n\n  try {\n    var _loop2 = function _loop2() {\n      var _step5$value = configSettings_slicedToArray(_step5.value, 2),\n          index = _step5$value[0],\n          eachRingConfig = _step5$value[1];\n\n      var ringDiv = document.createElement("div");\n      ringDiv.classList.add("config-bottom-sheet-ring-divs");\n      var ringIconDiv = document.createElement("div");\n      ringIconDiv.classList.add("config-bottom-sheet-ringicon-divs");\n      var ringIcon = document.createElement("img");\n      ringIcon.src = eachRingConfig.unSelectedIcon;\n      ringIconDiv.appendChild(ringIcon);\n      var ringLabelDiv = document.createElement("div");\n      ringLabelDiv.classList.add("config-bottom-sheet-ringicon-label");\n      ringLabelDiv.innerText = eachRingConfig.label; // to handle and toggle clicks and change icon\n\n      ringElements.push({\n        ringIconDiv: ringIconDiv,\n        ringIcon: ringIcon\n      });\n      ringIconDiv.addEventListener("click", function () {\n        return handleRingClick(index, handler);\n      });\n      ringDiv.appendChild(ringIconDiv);\n      ringDiv.appendChild(ringLabelDiv);\n      ringRowContainer.append(ringDiv);\n    };\n\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      _loop2();\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  return ringRowContainer;\n}\n\nfunction handleRingClick(index, handler) {\n  ringElements.forEach(function (element, idx) {\n    element.ringIcon.src = ringIconConfig[idx].unSelectedIcon;\n    element.ringIconDiv.classList.remove("ring-selected");\n  });\n  ringElements[index].ringIcon.src = ringIconConfig[index].selectedIcon;\n  ringElements[index].ringIconDiv.classList.add("ring-selected");\n  handler("fingers", index);\n}\n\nfunction getSliderDiv(eachSubComponentConfig, handler) {\n  var sliderContainer = document.createElement("div");\n  sliderContainer.classList.add("slider-container");\n  var leftText = document.createElement("div");\n  leftText.classList.add("slider-left-text");\n  leftText.innerText = eachSubComponentConfig.leftText;\n  var rightText = document.createElement("div");\n  rightText.classList.add("slider-right-text");\n\n  if (eachSubComponentConfig.rightText) {\n    rightText.innerText = eachSubComponentConfig.rightText;\n  } else {\n    rightText.innerText = formula(eachSubComponentConfig.defaultValue, eachSubComponentConfig);\n  }\n\n  var sliderInputDiv = document.createElement("div");\n  sliderInputDiv.classList.add("slider-input-div");\n  var sliderInput = document.createElement("input");\n  sliderInput.type = "range";\n  sliderInput.defaultValue = "".concat(eachSubComponentConfig.defaultValue);\n  sliderInput.step = "".concat(eachSubComponentConfig.step);\n  sliderInput.min = "".concat(eachSubComponentConfig.min);\n  sliderInput.max = "".concat(eachSubComponentConfig.max); // to change the slide value\n\n  sliderElements[eachSubComponentConfig.tag] = {\n    sliderInput: sliderInput,\n    rightText: rightText\n  };\n  sliderInput.addEventListener("input", function () {\n    if (!eachSubComponentConfig.rightText) {\n      handleSliderInput(eachSubComponentConfig.tag, sliderInput.value, eachSubComponentConfig);\n    }\n\n    handleSliderCss(eachSubComponentConfig.tag, sliderInput.value, eachSubComponentConfig);\n    handler(eachSubComponentConfig.tag, sliderInput.value);\n  });\n  sliderInputDiv.appendChild(sliderInput);\n  sliderContainer.append(leftText, sliderInputDiv, rightText);\n  return sliderContainer;\n}\n\nfunction handleSliderInput(tag, value, config) {\n  sliderElements[tag].rightText.innerText = formula(value, config);\n}\n\nfunction handleSliderCss(tag, value, config) {\n  var finalValue = formula(value, config);\n  sliderElements[tag].sliderInput.style.background = "linear-gradient(to right, white 0%, white ".concat(finalValue, "%, rgba(255, 255, 255, 0.4) ").concat(finalValue, "%, rgba(255, 255, 255, 0.4) 100%)");\n}\n\nfunction formula(value, config) {\n  var finalValue = (value - (config === null || config === void 0 ? void 0 : config.min)) / ((config === null || config === void 0 ? void 0 : config.max) - (config === null || config === void 0 ? void 0 : config.min)) * 100;\n  return parseInt(finalValue);\n}\n\nfunction pillClickHandler(index) {\n  activeTab = index;\n  configSheetHeaderElements.forEach(function (element, idx) {\n    element.pillDiv.classList.remove("active-config-bottom-sheet-pill-active");\n    element.pillIcon.src = configBottomSheetConfig.tabs[idx].unSelectedIcon;\n  });\n  configSheetHeaderElements[index].pillDiv.classList.add("active-config-bottom-sheet-pill-active");\n  var selectedTab = configBottomSheetConfig.tabs[index];\n  configSheetHeaderElements[index].pillIcon.src = configBottomSheetConfig.tabs[index].selectedIcon;\n  showSubComponent(index); // ring case, click the 1st icon to select itself\n\n  if (index === 0) {\n    ringElements[defaultRingIndex].ringIconDiv.click();\n  }\n}\n\nfunction showSubComponent(index) {\n  configSheetHeaderElements.forEach(function (_ref) {\n    var subComponent = _ref.subComponent;\n    subComponent.style.display = "none";\n  });\n  configSheetHeaderElements[index].subComponent.style.display = "flex";\n}\n\nfunction getSheetActionsContent(actionsHandler, settingsContentHandler) {\n  var SheetActionFragment = document.createDocumentFragment();\n  var ResetIconDiv = document.createElement("div");\n  var CloseIconDiv = document.createElement("div");\n  ResetIconDiv.classList.add("config-bottom-sheet-reset-button");\n  CloseIconDiv.classList.add("config-bottom-sheet-close-button");\n  ResetIconDiv.addEventListener("click", function () {\n    resetSubComponent(settingsContentHandler);\n    actionsHandler("", "reset");\n  });\n  CloseIconDiv.addEventListener("click", function () {\n    actionsHandler("", "close");\n    hideConfigSettingBottomSheet();\n  });\n  var ResetIcon = document.createElement("img");\n  var CloseIcon = document.createElement("img");\n  ResetIcon.src = resetBig;\n  CloseIcon.src = Angle_Right;\n  ResetIconDiv.append(ResetIcon);\n  CloseIconDiv.append(CloseIcon);\n  SheetActionFragment.append(ResetIconDiv, CloseIconDiv);\n  return SheetActionFragment;\n}\n\nfunction resetSubComponent(handler, idx) {\n  var currentTabConfig = configBottomSheetConfig.tabs[idx || activeTab];\n  currentTabConfig === null || currentTabConfig === void 0 ? void 0 : currentTabConfig.subComponent.forEach(function (eachSubComponent) {\n    if (eachSubComponent.type === "fingers") {\n      resetFinger(handler);\n    } else if (eachSubComponent.type === "slider") {\n      configSettings_resetSliderValues(eachSubComponent.tag, eachSubComponent.defaultValue, handler, eachSubComponent);\n    }\n  });\n}\n\nfunction resetFinger(handler) {\n  handleRingClick(defaultRingIndex, handler);\n}\n\nfunction configSettings_resetSliderValues(tag, defaultValue, handler, config) {\n  sliderElements[tag].sliderInput.value = defaultValue;\n  handleSliderCss(tag, defaultValue, config);\n\n  if (!(config !== null && config !== void 0 && config.rightText)) {\n    handleSliderInput(tag, defaultValue, config);\n  }\n\n  handler(tag, defaultValue);\n}\n\nfunction showConfigSettingBottomSheet() {\n  var _getHtmlElements2 = getHtmlElements(),\n      configSettings = _getHtmlElements2.configSettings;\n\n  configSettings.classList.add("show-config-settings");\n}\nfunction hideConfigSettingBottomSheet() {\n  var _getHtmlElements3 = getHtmlElements(),\n      configSettings = _getHtmlElements3.configSettings;\n\n  configSettings.classList.remove("show-config-settings");\n}\nfunction updateConfigSettingsUi() {\n  var initialDisplayTabIndex;\n\n  var _iterator6 = configSettings_createForOfIteratorHelper(configBottomSheetConfig.tabs.entries()),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var _config$allowedCatego3;\n\n      var _step6$value = configSettings_slicedToArray(_step6.value, 2),\n          index = _step6$value[0],\n          config = _step6$value[1];\n\n      if ((_config$allowedCatego3 = config.allowedCategory) !== null && _config$allowedCatego3 !== void 0 && _config$allowedCatego3.includes((0,globalVariables/* getCategory */.n3)())) {\n        initialDisplayTabIndex = index;\n        configSheetHeaderElements[index].pillDiv.classList.remove("hide-pill");\n        break;\n      } else {\n        configSheetHeaderElements[index].pillDiv.classList.add("hide-pill");\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  activeTab = initialDisplayTabIndex;\n  pillClickHandler(activeTab);\n}\nfunction resetEverySubComponent() {\n  var _configBottomSheetCon;\n\n  (_configBottomSheetCon = configBottomSheetConfig.tabs) === null || _configBottomSheetCon === void 0 ? void 0 : _configBottomSheetCon.forEach(function (eachTab, idx) {\n    resetSubComponent(function () {}, idx);\n  });\n}\n;// CONCATENATED MODULE: ./src/sdkService/tryOnModes.js\n\n\n\n\n\nfunction tryOnModes_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction tryOnModes_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { tryOnModes_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { tryOnModes_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar texture;\nvar loadImage = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {\n  var _ref = tryOnModes_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt("return", new Promise(function (resolve, reject) {\n              var img = getInputImage();\n\n              if (img.complete) {\n                texture = new THREE.Texture(img);\n                texture.needsUpdate = true;\n                resolve(texture);\n              } else {\n                img.onload = function () {\n                  texture = new THREE.Texture(img);\n                  texture.needsUpdate = true;\n                  resolve(texture);\n                };\n\n                img.onerror = function (err) {\n                  return reject(err);\n                };\n              }\n            }));\n\n          case 1:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadImage() {\n    return _ref.apply(this, arguments);\n  };\n}()));\n\nfunction loadImageTag(src) {\n  return new Promise(function (resolve, reject) {\n    var img = document.createElement("img");\n    img.alt = "boy in a jacket";\n    img.classList.add("input_Image"); // Add the class "input_Image"\n\n    img.crossOrigin = "Anonymous";\n    img.src = src;\n\n    img.onload = function () {\n      resolve(img);\n    };\n\n    img.onerror = function (err) {\n      reject(err);\n    };\n  });\n}\n\nvar onImageMode = /*#__PURE__*/function () {\n  var _ref2 = tryOnModes_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(URL) {\n    var _getHtmlElements, canavas_container, video_Container, canvas, tracks, img, vw, vh, imgWidth, imgHeight, aspectRatio;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setSDKState(3);\n            hideCameraPermissionPanel();\n            setInputImageTexture(null);\n            _getHtmlElements = getHtmlElements(), canavas_container = _getHtmlElements.canavas_container, video_Container = _getHtmlElements.video_Container;\n            video_Container.style.transform = "scaleX(1)"; // loaderContainer.style.display = "flex";\n\n            showLottieLoader();\n            canavas_container.style.display = "flex";\n            canavas_container.style.justifyContent = "center";\n            canvas = document.querySelector(".output_canvas");\n            canvas.style.display = "block";\n            canvas.style.transform = "scaleX(1)";\n            cancelAnimationFrame(getAnimationFrameId());\n\n            if (getCurrentStream()) {\n              tracks = getCurrentStream().getTracks();\n              tracks.forEach(function (track) {\n                return track.stop();\n              }); // Stop all tracks\n            }\n\n            if (!getVideoFrameProvider()) {\n              _context2.next = 17;\n              break;\n            }\n\n            _context2.next = 16;\n            return getVideoFrameProvider().stop();\n\n          case 16:\n            setVideoFrameProvider(null);\n\n          case 17:\n            if (getVideo()) {\n              getVideo().pause();\n              video_Container.removeChild(getVideo());\n              setVideo(null);\n            }\n\n            if (sdkEngine_getInputImage()) {\n              video_Container.removeChild(sdkEngine_getInputImage());\n              setInputImage(null);\n            }\n\n            resetComparisonSlider();\n            _context2.next = 22;\n            return loadImageTag(URL);\n\n          case 22:\n            img = _context2.sent;\n            setInputImage(img);\n            video_Container.appendChild(sdkEngine_getInputImage());\n            addToGlobalCache(URL, sdkEngine_getInputImage().src);\n            texture = new three_module/* Texture */.xEZ(img);\n            texture.needsUpdate = true; //inputImage.src = URL; //sceneManager.getModelData()[5].imageUrl;\n            //getInputImage().crossOrigin = "Anonymous";\n            //await new Promise((resolve) => setTimeout(resolve, 500));\n\n            canvas.width = sdkEngine_getInputImage().width;\n            canvas.height = sdkEngine_getInputImage().height;\n            canvas.style.margin = "auto";\n            video_Container.style.width = "100%";\n            video_Container.style.height = "100%";\n            setIsVideo(false);\n            vw = window.innerWidth;\n            vh = window.innerHeight;\n            imgWidth = sdkEngine_getInputImage().width;\n            imgHeight = sdkEngine_getInputImage().height;\n            aspectRatio = imgWidth / imgHeight; // console.log(inputImage.width, inputImage.height, aspectRatio);\n\n            if (vw / vh > aspectRatio) {\n              sdkEngine_getInputImage().style.width = vw + "px";\n              sdkEngine_getInputImage().style.height = vw / aspectRatio + "px"; // If the height is still larger than the viewport height, adjust width and height\n\n              if (parseInt(sdkEngine_getInputImage().style.height) > vh) {\n                sdkEngine_getInputImage().style.height = vh + "px";\n                sdkEngine_getInputImage().style.width = vh * aspectRatio + "px";\n              }\n            } else {\n              sdkEngine_getInputImage().style.height = vh + "px";\n              sdkEngine_getInputImage().style.width = vh * aspectRatio + "px"; // If the width is still larger than the viewport width, adjust width and height\n\n              if (parseInt(sdkEngine_getInputImage().style.width) > vw) {\n                sdkEngine_getInputImage().style.width = vw + "px";\n                sdkEngine_getInputImage().style.height = vw / aspectRatio + "px";\n              }\n            }\n\n            getSceneManagerInstance().setImageTryonSettings(sdkEngine_getInputImage().width, sdkEngine_getInputImage().height);\n\n            if (!(getNowTrackingMode() === TrackingMode.Hand)) {\n              _context2.next = 56;\n              break;\n            }\n\n            if (getHandsLandmarkProvider()) {\n              _context2.next = 51;\n              break;\n            }\n\n            setHandsLandmarkProvider(new HandsLandmarkProvider(onHandLandsmarks));\n            _context2.next = 46;\n            return getHandsLandmarkProvider().initialize();\n\n          case 46:\n            getHandsLandmarkProvider().setSelfieMode(getIsVideo());\n            _context2.next = 49;\n            return getHandsLandmarkProvider().send(sdkEngine_getInputImage(), getIsVideo());\n\n          case 49:\n            _context2.next = 54;\n            break;\n\n          case 51:\n            getHandsLandmarkProvider().setSelfieMode(getIsVideo());\n            _context2.next = 54;\n            return getHandsLandmarkProvider().send(sdkEngine_getInputImage(), getIsVideo());\n\n          case 54:\n            _context2.next = 69;\n            break;\n\n          case 56:\n            if (!(getNowTrackingMode() === TrackingMode.Face)) {\n              _context2.next = 69;\n              break;\n            }\n\n            if (getFacemeshLandmarksProvider()) {\n              _context2.next = 66;\n              break;\n            }\n\n            setFacemeshLandmarksProvider(new FacemeshLandmarksProvider(onLandmarks));\n            _context2.next = 61;\n            return getFacemeshLandmarksProvider().initialize();\n\n          case 61:\n            getFacemeshLandmarksProvider().setSelfieMode(getIsVideo());\n            _context2.next = 64;\n            return getFacemeshLandmarksProvider().send(sdkEngine_getInputImage(), false, getIsVideo());\n\n          case 64:\n            _context2.next = 69;\n            break;\n\n          case 66:\n            getFacemeshLandmarksProvider().setSelfieMode(getIsVideo());\n            _context2.next = 69;\n            return getFacemeshLandmarksProvider().send(sdkEngine_getInputImage(), false, getIsVideo());\n\n          case 69:\n            if (!getSceneManagerInstance()) {\n              setSceneManagerInstance(new scene_manager_SceneManager(canvas, getDebug(), getUseOrtho()));\n            }\n\n            setVideoEL(sdkEngine_getInputImage()); //await new Promise((resolve) => setTimeout(resolve, 500));\n\n            getSceneManagerInstance().updatePlaneWithImage(texture);\n            _context2.next = 74;\n            return initialize(0);\n\n          case 74:\n            hideAlignMessagePanel();\n\n          case 75:\n          case "end":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function onImageMode(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar onVideoMode = /*#__PURE__*/function () {\n  var _ref3 = tryOnModes_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var _getHtmlElements2, canavas_container, video_Container, canvas;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (getIsVideo()) {\n              _context3.next = 48;\n              break;\n            }\n\n            setSDKState(2);\n            _getHtmlElements2 = getHtmlElements(), canavas_container = _getHtmlElements2.canavas_container, video_Container = _getHtmlElements2.video_Container;\n            if (getSceneManagerInstance()) getSceneManagerInstance().setForceHideTryons(false); // loaderContainer.style.display = "flex";\n\n            showLottieLoader();\n            setTempWidth(-1);\n            setImageSource(null);\n            canavas_container.style.display = "flex";\n            canavas_container.style.justifyContent = "center";\n            canvas = document.querySelector(".output_canvas");\n            canvas.style.margin = "unset";\n            canvas.style.transform = "scaleX(-1)";\n            video_Container.style.transform = "scaleX(-1)";\n            cancelAnimationFrame(getAnimationFrameId());\n\n            if (sdkEngine_getInputImage()) {\n              video_Container.removeChild(sdkEngine_getInputImage());\n              setInputImage(null);\n            } // resetComparisonSlider();\n\n\n            setVideo(document.createElement("video"));\n            getVideo().controls = true; // Show video controls\n\n            getVideo().setAttribute("muted", "");\n            getVideo().defaultMuted = true;\n            getVideo().autoplay = false;\n            getVideo().playsInline = true; // Play inline (important for mobile)\n\n            getVideo().style.width = "100%";\n            getVideo().style.height = "100%";\n            getVideo().style.objectFit = "cover";\n            video_Container.appendChild(getVideo());\n            setIsVideo(true);\n\n            if (!(getNowTrackingMode() === TrackingMode.Hand)) {\n              _context3.next = 36;\n              break;\n            }\n\n            if (getHandsLandmarkProvider()) {\n              _context3.next = 33;\n              break;\n            }\n\n            setHandsLandmarkProvider(new HandsLandmarkProvider(onHandLandsmarks));\n            _context3.next = 31;\n            return getHandsLandmarkProvider().initialize();\n\n          case 31:\n            _context3.next = 34;\n            break;\n\n          case 33:\n            getHandsLandmarkProvider().setSelfieMode(getIsVideo());\n\n          case 34:\n            _context3.next = 44;\n            break;\n\n          case 36:\n            if (!(getNowTrackingMode() === TrackingMode.Face)) {\n              _context3.next = 44;\n              break;\n            }\n\n            if (getFacemeshLandmarksProvider()) {\n              _context3.next = 43;\n              break;\n            }\n\n            setFacemeshLandmarksProvider(new FacemeshLandmarksProvider(onLandmarks));\n            _context3.next = 41;\n            return getFacemeshLandmarksProvider().initialize();\n\n          case 41:\n            _context3.next = 44;\n            break;\n\n          case 43:\n            getFacemeshLandmarksProvider().setSelfieMode(getIsVideo());\n\n          case 44:\n            if (!getSceneManagerInstance()) {\n              setSceneManagerInstance(new scene_manager_SceneManager(canvas, getDebug(), getUseOrtho()));\n            }\n\n            _context3.next = 47;\n            return initialize();\n\n          case 47:\n            setVideoEL(getVideo());\n\n          case 48:\n          case "end":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function onVideoMode() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar onWatchMode = /*#__PURE__*/function () {\n  var _ref4 = tryOnModes_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(state) {\n    var PrevTryon;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            PrevTryon = getCurrentTryon();\n            setCurrentTryon(state);\n            if (getSceneManagerInstance()) getSceneManagerInstance().removeCurrentTryon();\n\n            if (!(getCurrentTryon() === StyleFactories.Bracelet || getCurrentTryon() === StyleFactories.Watches || getCurrentTryon() === StyleFactories.Rings)) {\n              _context4.next = 18;\n              break;\n            }\n\n            if (getHandsLandmarkProvider()) {\n              _context4.next = 11;\n              break;\n            }\n\n            setHandsLandmarkProvider(new HandsLandmarkProvider(onHandLandsmarks));\n            _context4.next = 8;\n            return getHandsLandmarkProvider().initialize();\n\n          case 8:\n            getHandsLandmarkProvider().setSelfieMode(getIsVideo());\n            _context4.next = 12;\n            break;\n\n          case 11:\n            getHandsLandmarkProvider().setSelfieMode(getIsVideo());\n\n          case 12:\n            if (!(!getIsVideo() && sdkEngine_getInputImage())) {\n              _context4.next = 15;\n              break;\n            }\n\n            _context4.next = 15;\n            return getHandsLandmarkProvider().send(sdkEngine_getInputImage(), getIsVideo());\n\n          case 15:\n            setNowTrackingMode(TrackingMode.Hand);\n            _context4.next = 30;\n            break;\n\n          case 18:\n            if (getFacemeshLandmarksProvider()) {\n              _context4.next = 25;\n              break;\n            }\n\n            setFacemeshLandmarksProvider(new FacemeshLandmarksProvider(onLandmarks));\n            _context4.next = 22;\n            return getFacemeshLandmarksProvider().initialize();\n\n          case 22:\n            getFacemeshLandmarksProvider().setSelfieMode(getIsVideo());\n            _context4.next = 26;\n            break;\n\n          case 25:\n            getFacemeshLandmarksProvider().setSelfieMode(getIsVideo());\n\n          case 26:\n            if (!(!getIsVideo() && sdkEngine_getInputImage())) {\n              _context4.next = 29;\n              break;\n            }\n\n            _context4.next = 29;\n            return getFacemeshLandmarksProvider().send(sdkEngine_getInputImage(), false, getIsVideo());\n\n          case 29:\n            setNowTrackingMode(TrackingMode.Face);\n\n          case 30:\n            resetEverySubComponent();\n            if (getSceneManagerInstance()) getSceneManagerInstance().changeTryon(getCurrentTryon(), getTryOnConfig());\n            setVisibalityOfModels();\n\n            if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n              if (getSDKState() === 3 && PrevTryon !== getCurrentTryon() && !getUserUploadMode()) {}\n            } else {// if (PrevTryon !== getCurrentTryon()) {\n              //   tryOnEventHandler("live");\n              // } else {\n              //   if (\n              //     getSDKState() === 3 &&\n              //     PrevTryon === getCurrentTryon() &&\n              //     !getUserUploadMode()\n              //   ) {\n              //     // optionsEventHandler("modelTryOn");\n              //     // toggleOptionsSelectedImage(2);\n              //   } else if (PrevTryon === getCurrentTryon() && !getUserUploadMode()) {\n              //     tryOnEventHandler("live");\n              //   }\n              // }\n            }\n\n          case 34:\n          case "end":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function onWatchMode(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/chooseTryOn.css\nvar chooseTryOn = __webpack_require__(1691);\n;// CONCATENATED MODULE: ./src/htmlService/styles/chooseTryOn.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar chooseTryOn_options = {};\n\nchooseTryOn_options.styleTagTransform = (styleTagTransform_default());\nchooseTryOn_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      chooseTryOn_options.insert = insertBySelector_default().bind(null, "head");\n    \nchooseTryOn_options.domAPI = (styleDomAPI_default());\nchooseTryOn_options.insertStyleElement = (insertStyleElement_default());\n\nvar chooseTryOn_update = injectStylesIntoStyleTag_default()(chooseTryOn/* default */.Z, chooseTryOn_options);\n\n\n\n\n       /* harmony default export */ const styles_chooseTryOn = (chooseTryOn/* default */.Z && chooseTryOn/* default */.Z.locals ? chooseTryOn/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/htmlService/chooseTryOn.js\n\n\n\n\nvar chooseTryOnConfig = {\n  tryOnScreen: {\n    hideTryOnScreen: false,\n    mode: "light",\n    tryOnTypeConfig: {\n      hideLiveCamera: false,\n      hideModelTryOn: false,\n      hideUploadMode: false\n    }\n  }\n};\nfunction overrideChooseTryOnConfig(config) {\n  chooseTryOnConfig = config;\n}\nfunction getChooseTryOnConfig() {\n  return chooseTryOnConfig;\n}\nvar ModelsList = [{\n  url: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/HJkINV/original/cxr_assets/models/makeup/05.png",\n  isActive: true\n}, {\n  url: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/HJkINV/original/cxr_assets/models/makeup/05.png",\n  isActive: true\n}, {\n  url: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/HJkINV/original/cxr_assets/models/makeup/05.png",\n  isActive: true\n}, {\n  url: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/HJkINV/original/cxr_assets/models/makeup/05.png",\n  isActive: true\n}, {\n  url: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/HJkINV/original/cxr_assets/models/makeup/05.png",\n  isActive: true\n}];\nvar modeMap = {\n  dark: "dark",\n  light: "light"\n};\nvar themeStyles = {\n  dark: {\n    heading_text: "#fff",\n    heading_subtext: "#DBDBDB",\n    live_tryon: "#404141",\n    live_tryon_left_text: "#DBDBDB",\n    arrow_right: "white",\n    choose_model_heading: "#fff",\n    model_tryon_upload: "#343536",\n    model_tryon_upload_icon: "#E7E7E7",\n    model_tryon_text: "#B7B8B8",\n    model_tryon_upload_border: "0.6px dashed #707071",\n    upload_image: "#404141",\n    upload_image_left_text: "#DBDBDB"\n  },\n  light: {\n    heading_text: "#101112",\n    heading_subtext: "#888889",\n    live_tryon: "#F1F1F1",\n    live_tryon_left_text: "#4C4D4D",\n    arrow_right: "#4C4D4D",\n    choose_model_heading: "#101112",\n    model_tryon_upload: "#E7E7E7",\n    model_tryon_upload_icon: "#4C4D4D",\n    model_tryon_text: "#888889",\n    model_tryon_upload_border: "1px dashed #9FA0A0",\n    upload_image: "#F1F1F1",\n    upload_image_left_text: "#4C4D4D"\n  },\n  "default": {\n    heading_text: "#101112",\n    heading_subtext: "#888889",\n    live_tryon: "#F1F1F1",\n    live_tryon_left_text: "#4C4D4D",\n    arrow_right: "#4C4D4D",\n    choose_model_heading: "#101112",\n    model_tryon_upload: "#E7E7E7",\n    model_tryon_upload_icon: "#4C4D4D",\n    model_tryon_text: "#888889",\n    model_tryon_upload_border: "1px dashed #9FA0A0",\n    upload_image: "#F1F1F1",\n    upload_image_left_text: "#4C4D4D"\n  }\n};\n\nfunction getLiveTryOnHtml(mode) {\n  var _themeStyles, _themeStyles2, _themeStyles3;\n\n  return "<div style=\\"background:".concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles = themeStyles[mode || "default"]) === null || _themeStyles === void 0 ? void 0 : _themeStyles.live_tryon, ";\\" class=\\"tryon_container_live_tryon\\">\\n            <div class=\\"tryon_container_live_tryon_left\\">\\n                <div class=\\"tryon_container_live_tryon_left_camera\\">\\n                    <svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"24\\" height=\\"25\\" viewBox=\\"0 0 24 25\\" fill=\\"none\\">\\n                        <path d=\\"M19 6.99994H17.72L17.4 5.99994C17.1926 5.41317 16.8077 4.90544 16.2989 4.5471C15.7901 4.18876 15.1824 3.99754 14.56 3.99994H9.44C8.81155 4.00111 8.19933 4.19962 7.68977 4.56744C7.1802 4.93527 6.79901 5.45383 6.6 6.04994L6.28 7.04994H5C4.20435 7.04994 3.44129 7.36601 2.87868 7.92862C2.31607 8.49123 2 9.25429 2 10.0499V18.0499C2 18.8456 2.31607 19.6087 2.87868 20.1713C3.44129 20.7339 4.20435 21.0499 5 21.0499H19C19.7956 21.0499 20.5587 20.7339 21.1213 20.1713C21.6839 19.6087 22 18.8456 22 18.0499V10.0499C22.0066 9.65179 21.9339 9.2563 21.7862 8.88653C21.6384 8.51676 21.4184 8.18011 21.1392 7.89622C20.86 7.61233 20.527 7.38687 20.1597 7.23299C19.7924 7.07911 19.3982 6.99988 19 6.99994ZM20 17.9999C20 18.2652 19.8946 18.5195 19.7071 18.707C19.5196 18.8946 19.2652 18.9999 19 18.9999H5C4.73478 18.9999 4.48043 18.8946 4.29289 18.707C4.10536 18.5195 4 18.2652 4 17.9999V9.99994C4 9.73472 4.10536 9.48037 4.29289 9.29283C4.48043 9.1053 4.73478 8.99994 5 8.99994H7C7.21807 9.01132 7.43386 8.95101 7.61443 8.82822C7.795 8.70544 7.93042 8.52692 8 8.31994L8.54 6.67994C8.60709 6.48132 8.7349 6.3088 8.90537 6.18678C9.07584 6.06476 9.28036 5.9994 9.49 5.99994H14.61C14.8196 5.9994 15.0242 6.06476 15.1946 6.18678C15.3651 6.3088 15.4929 6.48132 15.56 6.67994L16.1 8.31994C16.1642 8.51068 16.2844 8.67763 16.445 8.79895C16.6055 8.92027 16.799 8.99032 17 8.99994H19C19.2652 8.99994 19.5196 9.1053 19.7071 9.29283C19.8946 9.48037 20 9.73472 20 9.99994V17.9999ZM12 8.99994C11.2089 8.99994 10.4355 9.23453 9.77772 9.67406C9.11992 10.1136 8.60723 10.7383 8.30448 11.4692C8.00173 12.2001 7.92252 13.0044 8.07686 13.7803C8.2312 14.5562 8.61216 15.269 9.17157 15.8284C9.73098 16.3878 10.4437 16.7687 11.2196 16.9231C11.9956 17.0774 12.7998 16.9982 13.5307 16.6955C14.2616 16.3927 14.8864 15.88 15.3259 15.2222C15.7654 14.5644 16 13.7911 16 12.9999C16 11.9391 15.5786 10.9217 14.8284 10.1715C14.0783 9.42137 13.0609 8.99994 12 8.99994ZM12 14.9999C11.6044 14.9999 11.2178 14.8826 10.8889 14.6629C10.56 14.4431 10.3036 14.1308 10.1522 13.7653C10.0009 13.3999 9.96126 12.9977 10.0384 12.6098C10.1156 12.2218 10.3061 11.8654 10.5858 11.5857C10.8655 11.306 11.2219 11.1155 11.6098 11.0384C11.9978 10.9612 12.3999 11.0008 12.7654 11.1522C13.1308 11.3036 13.4432 11.5599 13.6629 11.8888C13.8827 12.2177 14 12.6044 14 12.9999C14 13.5304 13.7893 14.0391 13.4142 14.4142C13.0391 14.7892 12.5304 14.9999 12 14.9999Z\\" fill=\\"#DA0E64\\"/>\\n                    </svg>\\n                </div>\\n                <div style=\\"color:").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles2 = themeStyles[mode || "default"]) === null || _themeStyles2 === void 0 ? void 0 : _themeStyles2.live_tryon_left_text, ";\\" class=\\"tryon_container_live_tryon_left_text\\">\\n                     Live Camera\\n                </div>\\n            </div>\\n            <div class=\\"tryon_container_live_tryon_right\\">\\n                <svg width=\\"24\\" height=\\"25\\" viewBox=\\"0 0 24 25\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n                    <g clip-path=\\"url(#clip0_10465_112862)\\">\\n                    <path fill-rule=\\"evenodd\\" clip-rule=\\"evenodd\\" d=\\"M14.7071 13.207C15.0976 12.8165 15.0976 12.1833 14.7071 11.7928L9.70711 6.79278C9.31658 6.40225 8.68342 6.40225 8.29289 6.79278C7.90237 7.1833 7.90237 7.81647 8.29289 8.20699L12.5858 12.4999L8.29289 16.7928C7.90237 17.1833 7.90237 17.8165 8.29289 18.207C8.68342 18.5975 9.31658 18.5975 9.70711 18.207L14.7071 13.207Z\\" fill=").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles3 = themeStyles[mode || "default"]) === null || _themeStyles3 === void 0 ? void 0 : _themeStyles3.arrow_right, " />\\n                    </g>\\n                    <defs>\\n                    <clipPath id=\\"clip0_10465_112862\\">\\n                    <rect width=\\"24\\" height=\\"24\\" fill=\\"white\\" transform=\\"translate(0 0.499939)\\"/>\\n                    </clipPath>\\n                    </defs>\\n                </svg>\\n            </div>\\n          </div>");\n}\n\nfunction getModelTryOnHtml(models, hideUploadTryOn, mode) {\n  var _themeStyles4, _themeStyles5, _themeStyles6, _themeStyles7, _themeStyles8;\n\n  var ModelsHtml = "<div>\\n            <div style=\\"color:".concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles4 = themeStyles[mode || "default"]) === null || _themeStyles4 === void 0 ? void 0 : _themeStyles4.choose_model_heading, ";\\" class=\\"tryon_container_choose_model_heading\\">\\n                Choose A Model\\n            </div>\\n            <div class=\\"tryon_container_model_tryon\\">\\n                        ").concat(models === null || models === void 0 ? void 0 : models.map(function (eachModel, index) {\n    return "\\n                                    ".concat(eachModel !== null && eachModel !== void 0 && eachModel.isActive ? "<div class=\\"tryon_container_model_tryon_container\\">\\n                                                <img class=\\"tryon_container_model_tryon_image\\" id=\\"".concat(index, "\\" src=\\"").concat(eachModel === null || eachModel === void 0 ? void 0 : eachModel.imageUrl, "\\" />\\n                                           </div>") : null, "\\n                                ");\n  }).filter(function (eachModel) {\n    return Boolean(eachModel);\n  }).join(""), "\\n                        ").concat(!hideUploadTryOn ? "\\n                                <div style=\\"\\n                                    background:".concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles5 = themeStyles[mode || "default"]) === null || _themeStyles5 === void 0 ? void 0 : _themeStyles5.model_tryon_upload, ";\\n                                    border:").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles6 = themeStyles[mode || "default"]) === null || _themeStyles6 === void 0 ? void 0 : _themeStyles6.model_tryon_upload_border, ";\\" id=\\"tryon_container_model_tryon_upload\\" class=\\"tryon_container_model_tryon_upload\\">\\n                                    <div>\\n                                        <svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"24\\" height=\\"24\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\">\\n                                        <path d=\\"M8.71 7.71L11 5.41V15C11 15.2652 11.1054 15.5196 11.2929 15.7071C11.4804 15.8946 11.7348 16 12 16C12.2652 16 12.5196 15.8946 12.7071 15.7071C12.8946 15.5196 13 15.2652 13 15V5.41L15.29 7.71C15.383 7.80372 15.4936 7.87812 15.6154 7.92889C15.7373 7.97966 15.868 8.00579 16 8.00579C16.132 8.00579 16.2627 7.97966 16.3846 7.92889C16.5064 7.87812 16.617 7.80372 16.71 7.71C16.8037 7.61703 16.8781 7.50643 16.9289 7.38457C16.9797 7.26271 17.0058 7.13201 17.0058 7C17.0058 6.86798 16.9797 6.73728 16.9289 6.61542C16.8781 6.49356 16.8037 6.38296 16.71 6.29L12.71 2.29C12.6149 2.19895 12.5028 2.12759 12.38 2.08C12.1365 1.97998 11.8635 1.97998 11.62 2.08C11.4972 2.12759 11.3851 2.19895 11.29 2.29L7.29 6.29C7.19676 6.38323 7.1228 6.49392 7.07234 6.61575C7.02188 6.73757 6.99591 6.86814 6.99591 7C6.99591 7.13186 7.02188 7.26242 7.07234 7.38424C7.1228 7.50607 7.19676 7.61676 7.29 7.71C7.38324 7.80323 7.49393 7.87719 7.61575 7.92766C7.73757 7.97812 7.86814 8.00409 8 8.00409C8.13186 8.00409 8.26243 7.97812 8.38425 7.92766C8.50607 7.87719 8.61676 7.80323 8.71 7.71ZM21 14C20.7348 14 20.4804 14.1054 20.2929 14.2929C20.1054 14.4804 20 14.7348 20 15V19C20 19.2652 19.8946 19.5196 19.7071 19.7071C19.5196 19.8946 19.2652 20 19 20H5C4.73478 20 4.48043 19.8946 4.29289 19.7071C4.10536 19.5196 4 19.2652 4 19V15C4 14.7348 3.89464 14.4804 3.70711 14.2929C3.51957 14.1054 3.26522 14 3 14C2.73478 14 2.48043 14.1054 2.29289 14.2929C2.10536 14.4804 2 14.7348 2 15V19C2 19.7956 2.31607 20.5587 2.87868 21.1213C3.44129 21.6839 4.20435 22 5 22H19C19.7957 22 20.5587 21.6839 21.1213 21.1213C21.6839 20.5587 22 19.7956 22 19V15C22 14.7348 21.8946 14.4804 21.7071 14.2929C21.5196 14.1054 21.2652 14 21 14Z\\" fill=").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles7 = themeStyles[mode || "default"]) === null || _themeStyles7 === void 0 ? void 0 : _themeStyles7.model_tryon_upload_icon, " />\\n                                        </svg>\\n                                        </div>\\n                                    <div style=\\"color:").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles8 = themeStyles[mode || "default"]) === null || _themeStyles8 === void 0 ? void 0 : _themeStyles8.model_tryon_text, ";\\">\\n                                        Upload Image\\n                                    </div>\\n                                </div>\\n                            ") : "", "\\n            </div>\\n        </div>\\n        ");\n  return ModelsHtml;\n}\n\nfunction getUploadTryOnHtml(mode) {\n  var _themeStyles9, _themeStyles10, _themeStyles11;\n\n  return "<div style=\\"background:".concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles9 = themeStyles[mode || "default"]) === null || _themeStyles9 === void 0 ? void 0 : _themeStyles9.upload_image, ";\\" class=\\"tryon_container_upload_tryon\\">\\n            <div class=\\"tryon_container_upload_tryon_left\\">\\n                <div class=\\"tryon_container_upload_tryon_left_camera\\">\\n                    <svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"24\\" height=\\"25\\" viewBox=\\"0 0 24 25\\" fill=\\"none\\">\\n                        <path d=\\"M19 6.99994H17.72L17.4 5.99994C17.1926 5.41317 16.8077 4.90544 16.2989 4.5471C15.7901 4.18876 15.1824 3.99754 14.56 3.99994H9.44C8.81155 4.00111 8.19933 4.19962 7.68977 4.56744C7.1802 4.93527 6.79901 5.45383 6.6 6.04994L6.28 7.04994H5C4.20435 7.04994 3.44129 7.36601 2.87868 7.92862C2.31607 8.49123 2 9.25429 2 10.0499V18.0499C2 18.8456 2.31607 19.6087 2.87868 20.1713C3.44129 20.7339 4.20435 21.0499 5 21.0499H19C19.7956 21.0499 20.5587 20.7339 21.1213 20.1713C21.6839 19.6087 22 18.8456 22 18.0499V10.0499C22.0066 9.65179 21.9339 9.2563 21.7862 8.88653C21.6384 8.51676 21.4184 8.18011 21.1392 7.89622C20.86 7.61233 20.527 7.38687 20.1597 7.23299C19.7924 7.07911 19.3982 6.99988 19 6.99994ZM20 17.9999C20 18.2652 19.8946 18.5195 19.7071 18.707C19.5196 18.8946 19.2652 18.9999 19 18.9999H5C4.73478 18.9999 4.48043 18.8946 4.29289 18.707C4.10536 18.5195 4 18.2652 4 17.9999V9.99994C4 9.73472 4.10536 9.48037 4.29289 9.29283C4.48043 9.1053 4.73478 8.99994 5 8.99994H7C7.21807 9.01132 7.43386 8.95101 7.61443 8.82822C7.795 8.70544 7.93042 8.52692 8 8.31994L8.54 6.67994C8.60709 6.48132 8.7349 6.3088 8.90537 6.18678C9.07584 6.06476 9.28036 5.9994 9.49 5.99994H14.61C14.8196 5.9994 15.0242 6.06476 15.1946 6.18678C15.3651 6.3088 15.4929 6.48132 15.56 6.67994L16.1 8.31994C16.1642 8.51068 16.2844 8.67763 16.445 8.79895C16.6055 8.92027 16.799 8.99032 17 8.99994H19C19.2652 8.99994 19.5196 9.1053 19.7071 9.29283C19.8946 9.48037 20 9.73472 20 9.99994V17.9999ZM12 8.99994C11.2089 8.99994 10.4355 9.23453 9.77772 9.67406C9.11992 10.1136 8.60723 10.7383 8.30448 11.4692C8.00173 12.2001 7.92252 13.0044 8.07686 13.7803C8.2312 14.5562 8.61216 15.269 9.17157 15.8284C9.73098 16.3878 10.4437 16.7687 11.2196 16.9231C11.9956 17.0774 12.7998 16.9982 13.5307 16.6955C14.2616 16.3927 14.8864 15.88 15.3259 15.2222C15.7654 14.5644 16 13.7911 16 12.9999C16 11.9391 15.5786 10.9217 14.8284 10.1715C14.0783 9.42137 13.0609 8.99994 12 8.99994ZM12 14.9999C11.6044 14.9999 11.2178 14.8826 10.8889 14.6629C10.56 14.4431 10.3036 14.1308 10.1522 13.7653C10.0009 13.3999 9.96126 12.9977 10.0384 12.6098C10.1156 12.2218 10.3061 11.8654 10.5858 11.5857C10.8655 11.306 11.2219 11.1155 11.6098 11.0384C11.9978 10.9612 12.3999 11.0008 12.7654 11.1522C13.1308 11.3036 13.4432 11.5599 13.6629 11.8888C13.8827 12.2177 14 12.6044 14 12.9999C14 13.5304 13.7893 14.0391 13.4142 14.4142C13.0391 14.7892 12.5304 14.9999 12 14.9999Z\\" fill=\\"#DA0E64\\"/>\\n                    </svg>\\n                </div>\\n                <div style=\\"color:").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles10 = themeStyles[mode || "default"]) === null || _themeStyles10 === void 0 ? void 0 : _themeStyles10.upload_image_left_text, ";\\" class=\\"tryon_container_upload_tryon_left_text\\">\\n                     Upload Image\\n                </div>\\n            </div>\\n            <div class=\\"tryon_container_upload_tryon_right\\">\\n                <svg width=\\"24\\" height=\\"25\\" viewBox=\\"0 0 24 25\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n                    <g clip-path=\\"url(#clip0_10465_112862)\\">\\n                    <path fill-rule=\\"evenodd\\" clip-rule=\\"evenodd\\" d=\\"M14.7071 13.207C15.0976 12.8165 15.0976 12.1833 14.7071 11.7928L9.70711 6.79278C9.31658 6.40225 8.68342 6.40225 8.29289 6.79278C7.90237 7.1833 7.90237 7.81647 8.29289 8.20699L12.5858 12.4999L8.29289 16.7928C7.90237 17.1833 7.90237 17.8165 8.29289 18.207C8.68342 18.5975 9.31658 18.5975 9.70711 18.207L14.7071 13.207Z\\" fill=").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles11 = themeStyles[mode || "default"]) === null || _themeStyles11 === void 0 ? void 0 : _themeStyles11.arrow_right, " />\\n                    </g>\\n                    <defs>\\n                    <clipPath id=\\"clip0_10465_112862\\">\\n                    <rect width=\\"24\\" height=\\"24\\" fill=\\"white\\" transform=\\"translate(0 0.499939)\\"/>\\n                    </clipPath>\\n                    </defs>\\n                </svg>\\n            </div>\\n          </div>");\n}\n\nfunction buildTryOnScreen(ModelsList, handler) {\n  var _getHtmlElements = getHtmlElements(),\n      tryOnScreen = _getHtmlElements.tryOnScreen;\n\n  var hideTryOnScreen = chooseTryOnConfig.tryOnScreen.hideTryOnScreen;\n  var hideLiveTryOn = chooseTryOnConfig.tryOnScreen.tryOnTypeConfig.hideLiveCamera;\n  var hideModelTryOn = chooseTryOnConfig.tryOnScreen.tryOnTypeConfig.hideModelTryOn;\n  var hideUploadTryOn = chooseTryOnConfig.tryOnScreen.tryOnTypeConfig.hideUploadMode;\n  var mode = chooseTryOnConfig.tryOnScreen.mode === "dark" ? "dark" : "light";\n  var TryOnHtml = "";\n  tryOnScreen.classList.add("tryon_screen_".concat(modeMap[mode || "light"]));\n\n  if (!hideTryOnScreen) {\n    var _themeStyles12, _themeStyles13;\n\n    TryOnHtml = "\\n            <div class=\\"tryon_container\\">\\n                <div class=\\"tryon_container_heading\\">\\n                    <div style=\\"color:".concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles12 = themeStyles[mode || "default"]) === null || _themeStyles12 === void 0 ? void 0 : _themeStyles12.heading_text, ";\\" class=\\"tryon_container_heading_text\\">\\n                        Choose a Try-on Mode\\n                    </div>\\n                    <div style=\\"color:").concat(themeStyles === null || themeStyles === void 0 ? void 0 : (_themeStyles13 = themeStyles[mode || "default"]) === null || _themeStyles13 === void 0 ? void 0 : _themeStyles13.heading_subtext, ";\\" class=\\"tryon_container_heading_subtext\\">\\n                        Select and immerse yourself in personalized try-on experiences with ease.\\n                    </div>\\n                </div>\\n                ").concat(!hideLiveTryOn ? getLiveTryOnHtml(mode) : "", "\\n                ").concat(!hideModelTryOn ? getModelTryOnHtml(ModelsList, hideUploadTryOn, mode) : "", " \\n                ").concat(hideModelTryOn ? !hideUploadTryOn ? getUploadTryOnHtml(mode) : "" : "", "\\n\\n            </div>\\n        ");\n  } // add html to div\n\n\n  tryOnScreen.innerHTML += TryOnHtml; // attach eventhandlers\n\n  var liveTryOnContainer = document.querySelector(".tryon_container_live_tryon");\n  liveTryOnContainer === null || liveTryOnContainer === void 0 ? void 0 : liveTryOnContainer.addEventListener("click", function () {\n    handler("live");\n  });\n  var modelTryOnContainer = document.querySelector(".tryon_container_model_tryon");\n  modelTryOnContainer === null || modelTryOnContainer === void 0 ? void 0 : modelTryOnContainer.addEventListener("click", function (e) {\n    var _e$target;\n\n    var ModelId = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.id;\n    if (!ModelId) return;\n    if (ModelId !== "tryon_container_model_tryon_upload") handler("modelTryOn", ModelId, null);\n  });\n  var uploadTryOnContainer = document.querySelector(".tryon_container_model_tryon_upload");\n  uploadTryOnContainer === null || uploadTryOnContainer === void 0 ? void 0 : uploadTryOnContainer.addEventListener("click", function () {\n    handler("upload");\n  });\n  var uploadTryOnContainerSeparate = document.querySelector(".tryon_container_upload_tryon");\n  uploadTryOnContainerSeparate === null || uploadTryOnContainerSeparate === void 0 ? void 0 : uploadTryOnContainerSeparate.addEventListener("click", function () {\n    handler("upload");\n  });\n}\nfunction showTryOnScreen() {\n  var _getHtmlElements2 = getHtmlElements(),\n      tryOnScreen = _getHtmlElements2.tryOnScreen;\n\n  tryOnScreen.style.display = "flex";\n}\nfunction hideTryOnScreen() {\n  var _getHtmlElements3 = getHtmlElements(),\n      tryOnScreen = _getHtmlElements3.tryOnScreen;\n\n  tryOnScreen.style.display = "none";\n}\n;// CONCATENATED MODULE: ./src/assets/svg/arrowLeft.svg\n/* harmony default export */ const arrowLeft = (__webpack_require__.p + "assets/models/src/assets/svg/arrowLeft.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/crossIcon.svg\n/* harmony default export */ const crossIcon = (__webpack_require__.p + "assets/models/src/assets/svg/crossIcon.svg");\n;// CONCATENATED MODULE: ./src/assets/svg/crossIconBlack.svg\n/* harmony default export */ const crossIconBlack = (__webpack_require__.p + "assets/models/src/assets/svg/crossIconBlack.svg");\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/navigationButtons.css\nvar navigationButtons = __webpack_require__(6029);\n;// CONCATENATED MODULE: ./src/htmlService/styles/navigationButtons.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar navigationButtons_options = {};\n\nnavigationButtons_options.styleTagTransform = (styleTagTransform_default());\nnavigationButtons_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      navigationButtons_options.insert = insertBySelector_default().bind(null, "head");\n    \nnavigationButtons_options.domAPI = (styleDomAPI_default());\nnavigationButtons_options.insertStyleElement = (insertStyleElement_default());\n\nvar navigationButtons_update = injectStylesIntoStyleTag_default()(navigationButtons/* default */.Z, navigationButtons_options);\n\n\n\n\n       /* harmony default export */ const styles_navigationButtons = (navigationButtons/* default */.Z && navigationButtons/* default */.Z.locals ? navigationButtons/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/htmlService/navigationButtons.js\n\n\n\n\n\nvar LeftIconContainer = null;\nvar CrossIconContainer = null;\nvar LeftIcon = null;\nvar CrossIcon = null;\nvar disableLeftIcon = false;\nvar disableCrossIcon = false;\nfunction setPrevIconState(state) {\n  disableLeftIcon = state;\n}\nfunction setCrossIconState(state) {\n  disableCrossIcon = state;\n}\nfunction createNavigationButtons(onPrevIconClick, onCrossIconClick) {\n  var _getHtmlElements = getHtmlElements(),\n      videoContainer = _getHtmlElements.videoContainer;\n\n  LeftIconContainer = document.createElement("div");\n  CrossIconContainer = document.createElement("div");\n  LeftIcon = document.createElement("img");\n  CrossIcon = document.createElement("img");\n  LeftIcon.src = arrowLeft;\n  CrossIcon.src = crossIcon;\n  LeftIconContainer.appendChild(LeftIcon);\n  CrossIconContainer.appendChild(CrossIcon);\n  LeftIconContainer.addEventListener("click", onPrevIconClick);\n  CrossIconContainer.addEventListener("click", onCrossIconClick); // using fragment for performance gain\n\n  var iconContainerFragment = document.createDocumentFragment();\n  LeftIconContainer.classList.add("left-nav-icon", "icon-blur-bg");\n  CrossIconContainer.classList.add("cross-nav-icon", "icon-blur-bg");\n  iconContainerFragment.appendChild(LeftIconContainer);\n  iconContainerFragment.appendChild(CrossIconContainer);\n  videoContainer.appendChild(iconContainerFragment);\n}\nfunction showPrevIcon() {\n  if (LeftIconContainer && !disableLeftIcon) {\n    LeftIconContainer.style.display = "flex";\n  }\n}\nfunction showCrossIcon(_ref) {\n  var _ref$blurredBg = _ref.blurredBg,\n      blurredBg = _ref$blurredBg === void 0 ? false : _ref$blurredBg,\n      _ref$blackIcon = _ref.blackIcon,\n      blackIcon = _ref$blackIcon === void 0 ? false : _ref$blackIcon;\n\n  if (CrossIconContainer && !disableCrossIcon) {\n    CrossIconContainer.style.display = "flex";\n\n    if (!blurredBg) {\n      CrossIconContainer.classList.remove("icon-blur-bg");\n    } else {\n      CrossIconContainer.classList.add("icon-blur-bg");\n    }\n\n    if (blackIcon) {\n      CrossIcon.src = crossIconBlack;\n    } else {\n      CrossIcon.src = crossIcon;\n    }\n  }\n}\nfunction hidePrevIcon() {\n  if (LeftIconContainer) {\n    LeftIconContainer.style.display = "none";\n  }\n}\nfunction hideCrossIcon() {\n  if (CrossIconContainer) {\n    CrossIconContainer.style.display = "none";\n  }\n}\n;// CONCATENATED MODULE: ./src/assets/svg/Error.svg\n/* harmony default export */ const svg_Error = (__webpack_require__.p + "assets/models/src/assets/svg/Error.svg");\n;// CONCATENATED MODULE: ./src/js/utils/errorPanel.js\n // import { errorMessages } from "./globalVariables";\n\n\nvar errorPanel_Panel = null;\nvar errorPanel_msg = null;\nvar errorPanel_img = null;\nvar errorPanel_btn = null;\nfunction hideErrorPermissionPanel() {\n  errorPanel_Panel.style.display = "none";\n}\nfunction showErrorPermissionPanel(msgText) {\n  errorPanel_msg.innerHTML = msgText || "Something Went Wrong";\n  errorPanel_Panel.style.display = "flex";\n}\nfunction setErrorElement(handler) {\n  errorPanel_Panel = document.querySelector(".error-panel");\n  errorPanel_msg = document.querySelector(".error-message");\n  errorPanel_img = document.getElementById("error-icon");\n  errorPanel_btn = document.getElementById("error-btn");\n  errorPanel_img.src = svg_Error;\n  errorPanel_msg.innerHTML = "Something Went Wrong";\n  hideErrorPermissionPanel();\n  errorPanel_btn.addEventListener("click", function () {\n    handleErrorPermissionClickEvent(handler);\n  });\n}\n\nvar handleErrorPermissionClickEvent = function handleErrorPermissionClickEvent(handler) {\n  handler();\n};\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.some.js\nvar es6_array_some = __webpack_require__(6773);\n;// CONCATENATED MODULE: ./src/ModuleConfig/moduleConfig.js\n\n\n\n\n\n\n\n\n\n\nfunction moduleConfig_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction moduleConfig_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { moduleConfig_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { moduleConfig_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\nvar fetchModuleConfig = /*#__PURE__*/function () {\n  var _ref = moduleConfig_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var modelsname, errorOccurred, subscriptionIssueOccurred, currentmessage, modelApiArray, res, _res$find, _res$find2, _res$find2$data, errorMessage, modelsdata;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            modelsname = ModelsCategories;\n            errorOccurred = false; // Flag to track if an error occurred\n\n            subscriptionIssueOccurred = false;\n            modelApiArray = modelsname === null || modelsname === void 0 ? void 0 : modelsname.map(function (eachModel) {\n              return getModelsConfig(eachModel, "desktop")["catch"](function (error) {\n                if (error.response && error.response.status && error.response.status === 403) {\n                  emitSubscriptionIssue(error.response.data);\n                  subscriptionIssueOccurred = true;\n                } else {\n                  if (error.response && error.response.data && error.response.data.error) currentmessage = error.response.data.error;else currentmessage = error.message;\n                } //emitSubscriptionIssue(error.response.data); // Emitting issue r\n                // showSnackbar(currentmessage).then(() => {\n                //   setTimeout(() => {\n                //     //CloseModule();\n                //     hideSnackbar();\n                //   }, 2000);\n                // });\n\n\n                errorOccurred = true; // Set flag to true indicating an error occurred\n              });\n            });\n            _context.next = 6;\n            return Promise.all(modelApiArray);\n\n          case 6:\n            res = _context.sent;\n\n            if (!errorOccurred) {\n              _context.next = 10;\n              break;\n            }\n\n            if (subscriptionIssueOccurred) showBillingPanel(errorMessages.billingIssue); // showSnackbar(currentmessage).then(() => {\n            //   setTimeout(() => {\n            //     hideSnackbar();\n            //   }, 2000);\n            // });\n            else showErrorPermissionPanel(currentmessage);\n            return _context.abrupt("return");\n\n          case 10:\n            if (res.some(function (response) {\n              var _response$data;\n\n              return (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.status) === "403";\n            })) {\n              emitInitComplete();\n              emitSKUFailed();\n              emitSubscriptionIssue((_res$find = res.find(function (response) {\n                var _response$data2;\n\n                return (response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.status) === "403";\n              })) === null || _res$find === void 0 ? void 0 : _res$find.data); // Emitting issue related to first occurrence of 403 status\n\n              errorMessage = ((_res$find2 = res.find(function (response) {\n                var _response$data3;\n\n                return (response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.status) === "403";\n              })) === null || _res$find2 === void 0 ? void 0 : (_res$find2$data = _res$find2.data) === null || _res$find2$data === void 0 ? void 0 : _res$find2$data.message) || "SKU configuration failed due to an error.";\n              showBillingPanel(errorMessage.billingIssue);\n            } else {\n              modelsdata = res === null || res === void 0 ? void 0 : res.map(function (eachResponse) {\n                return eachResponse === null || eachResponse === void 0 ? void 0 : eachResponse.data;\n              });\n              getSceneManagerInstance().setModelAPIResponse(modelsdata);\n              modelService_createModels(getSceneManagerInstance().getModelData(), modelsEventHandler);\n              buildTryOnScreen(getSceneManagerInstance().getModelData(), tryOnEventHandler);\n              emitInitComplete();\n            } // } catch {\n            //   console.error("Error fetching model data:");\n            //   onModelApiSubmit();\n            // }\n\n\n          case 11:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchModuleConfig() {\n    return _ref.apply(this, arguments);\n  };\n}();\n;// CONCATENATED MODULE: ./src/messageEvents.js\n\n\n\n\nfunction messageEvents_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction messageEvents_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { messageEvents_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { messageEvents_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar methods = {\n  applyMakeupBySDK: function () {\n    var _applyMakeupBySDK = messageEvents_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(skuId) {\n      var skuConfig, errorMessage;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              "sku" + skuId;\n              _context.prev = 1;\n              _context.next = 4;\n              return getSKUData(skuId, getAPIKey);\n\n            case 4:\n              skuConfig = _context.sent;\n\n              if (skuConfig.data.status && skuConfig.data.status === "403") {\n                if (!getSceneManagerInstance()) {\n                  getSceneManagerInstance().removeCurrentTryon();\n                }\n\n                emitSKUFailed();\n                emitSubscriptionIssue(skuConfig.data);\n                showBillingPanel(globalVariables/* errorMessages */.Qj.billingIssue);\n              } else {\n                onApiSubmitResponse(skuConfig.data, false);\n              } // emitSKUApplied();\n\n\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context["catch"](1);\n              emitSKUFailed();\n\n              if (_context.t0.response && _context.t0.response.status && _context.t0.response.status === 403) {\n                showBillingPanel(globalVariables/* errorMessages */.Qj.billingIssue);\n                emitSubscriptionIssue(_context.t0.response.data);\n              } else {\n                if (_context.t0.response && _context.t0.response.data && _context.t0.response.data.error) errorMessage = _context.t0.response.data.error;else errorMessage = _context.t0.message; // showSnackbar(errorMessage).then(() => {\n                //   setTimeout(() => {\n                //     // CloseModule();\n                //     hideSnackbar();\n                //   }, 2000);\n                // });\n\n                showErrorPermissionPanel(errorMessage);\n              }\n\n            case 12:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    function applyMakeupBySDK(_x) {\n      return _applyMakeupBySDK.apply(this, arguments);\n    }\n\n    return applyMakeupBySDK;\n  }(),\n  applyVTOByConfig: function applyVTOByConfig(skuConfig) {\n    //skuConfig = defaultSkuConfig;\n    // console.log("applyVTOByConfig");\n    if (!skuConfig) {\n      emitSKUFailed();\n      return;\n    }\n\n    onApiSubmitResponse(skuConfig, false);\n  },\n  clearSku: function clearSku() {\n    if (getSceneManagerInstance()) {\n      setTryOnConfig(null);\n      getSceneManagerInstance().Clear();\n      emitReset();\n    }\n  },\n  snapshot: function snapshot() {\n    if (getSceneManagerInstance()) {\n      var ss = getSceneManagerInstance().takeScreenShot();\n      var base64Data = btoa(ss); // const imageBlob = new Blob([base64Data], { type: "image/jpeg" });\n\n      emitPhotoLoaded(base64Data);\n    }\n  },\n  closePreview: function closePreview() {\n    if (getIsInitialized()) CloseModule();\n  },\n  openLivePreview: function openLivePreview(payload) {\n    // console.log("openLivePreview", payload);\n    setIsPause(false);\n\n    if (payload && payload.mode === "modelTryOn") {\n      if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n        if (payload.imgURL) {\n          hideCameraPermissionPanel(); // optionsEventHandler("modelTryOn", payload.imgURL);\n        } else {\n          // showSnackbar("Invalid Image URL").then(() => {\n          //   setTimeout(() => {\n          //     emitModuleClosed();\n          //     hideSnackbar();\n          //   }, 2000);\n          // });\n          showErrorPermissionPanel("Invalid Image URL");\n        }\n      } else {\n        tryOnEventHandler("modelTryOn", null, payload.imgURL);\n      }\n    } else if (payload && payload.mode === "imgTryOn") {\n      if (payload.imgURL) {\n        hideCameraPermissionPanel(); // optionsEventHandler("imgTryOn", payload.imgURL);\n\n        tryOnEventHandler("modelTryOn", null, payload.imgURL);\n        emitUploadStarted();\n      } else {\n        // showSnackbar("Invalid Image URL").then(() => {\n        //   setTimeout(() => {\n        //     emitModuleClosed();\n        //     hideSnackbar();\n        //   }, 2000);\n        // });\n        showErrorPermissionPanel("Invalid Image URL");\n      }\n    } else {\n      tryOnEventHandler("live");\n    }\n  },\n  resumePreview: function resumePreview(payload) {\n    setIsPause(false);\n\n    if (payload && payload.mode === "liveTryOn") {\n      tryOnEventHandler("live");\n    }\n\n    emitModuleResume();\n  },\n  pausePreview: function pausePreview() {\n    setIsPause(true);\n    emitModulePause();\n  },\n  initializeSDK: function initializeSDK(payload) {\n    if (payload) {\n      // if (payload.platform)\n      //   console.log("sdk platform set to", payload.platform?.toLowerCase());\n      // else console.log("platform recieved empty");\n      setWrapperType(payload.platform);\n      if (payload.apiKey) setAPIKey(payload.apiKey);\n\n      if (payload.chooseTryOnConfig) {\n        overrideChooseTryOnConfig(payload.chooseTryOnConfig);\n      }\n\n      if (payload.category) {\n        (0,globalVariables/* setCategory */.PR)(payload.category);\n        setCurrentTryon(payload.category.toLowerCase());\n        updateConfigSettingsUi();\n      }\n\n      if (payload.openLiveOnInit) {\n        (0,globalVariables/* setOpenLiveOnInit */.Hf)(true);\n      }\n\n      if (payload.openImageOnInit) {\n        (0,globalVariables/* setOpenImageOnInit */.$J)(payload.openImageOnInit);\n      }\n\n      if (payload.disableCrossIcon) {\n        setCrossIconState(true);\n        hideCrossIcon();\n      }\n\n      if (payload.disablePrevIcon) {\n        setPrevIconState(true);\n        hidePrevIcon();\n      }\n\n      if (payload.mode) {\n        if (payload.mode === "platform") {\n          (0,globalVariables/* setPlatformMode */.G7)("platform");\n        }\n\n        if (payload.mode === "console") {\n          (0,globalVariables/* setPlatformMode */.G7)("panel");\n        }\n\n        if (payload.mode === "private") {\n          (0,globalVariables/* setPlatformMode */.G7)("private");\n        }\n      } else {\n        (0,globalVariables/* setPlatformMode */.G7)("platform");\n      }\n\n      (0,env/* updateEnvironmentURL */.W)();\n      updateAPIURL();\n      if (!(0,globalVariables/* isShouldHideInternalUI */.iT)()) fetchModuleConfig();else emitInitComplete();\n      loadML();\n    }\n  },\n  onConfigChange: function onConfigChange(payload) {\n    if (payload) {\n      if (payload.options) {\n        configSettingContentHandlerForce(payload.options, payload.value); //configSliderHandler(payload.options);\n      }\n    }\n  },\n  disableInternalUI: function disableInternalUI() {// setShouldHideInternalUI(true);\n    // hideModelContainer();\n    // hideSettingOptions();\n    // hideConfigSettingBottomSheet();\n  },\n  onRecognizationCapture: function () {\n    var _onRecognizationCapture = messageEvents_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(data) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              "onRecognizationDataRecieve called" + data;\n              recognizationCaptureAPI(data);\n\n            case 2:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function onRecognizationCapture(_x2) {\n      return _onRecognizationCapture.apply(this, arguments);\n    }\n\n    return onRecognizationCapture;\n  }(),\n  onRecognizationClose: function () {\n    var _onRecognizationClose = messageEvents_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(data) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // console.log("onRecognizationClose called" + data);\n              if (getSceneManagerInstance()) getSceneManagerInstance().setForceHideTryons(false);\n\n            case 1:\n            case "end":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function onRecognizationClose(_x3) {\n      return _onRecognizationClose.apply(this, arguments);\n    }\n\n    return onRecognizationClose;\n  }(),\n  onRecognizationRetry: function () {\n    var _onRecognizationRetry = messageEvents_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(data) {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              //console.log("onRecognizationRetry called" + data);\n              if (getSceneManagerInstance()) getSceneManagerInstance().setForceHideTryons(true);\n\n            case 1:\n            case "end":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function onRecognizationRetry(_x4) {\n      return _onRecognizationRetry.apply(this, arguments);\n    }\n\n    return onRecognizationRetry;\n  }(),\n  onComparisonEvents: function onComparisonEvents(payload) {\n    if (payload) {\n      if (payload.options == "sliderUI") {\n        setComparisonState(0);\n\n        if (payload.value == "show") {\n          showComparisonSlider();\n        } else {\n          hideComparisonSlider();\n        }\n      } else if (payload.options == "touch") {\n        setComparisonState(1);\n\n        if (payload.value == "show") {\n          showComparisonSlider("0%", "none");\n        } else {\n          hideComparisonSlider();\n        }\n      }\n    }\n  }\n};\n\nfunction webDemoSettings(payload) {\n  //onVideoMode();\n  var _getHtmlElements = getHtmlElements(),\n      configurationContainer = _getHtmlElements.configurationContainer;\n\n  if (payload && payload) {\n    configurationContainer.style.bottom = "".concat(payload, "px");\n  } else {\n    configurationContainer.style.bottom = "187.5px";\n  }\n}\n\nfunction addMessageListener() {\n  window.addEventListener("message", function (e) {\n    var _e$data = e.data,\n        type = _e$data.type,\n        payload = _e$data.payload,\n        origin = e.origin;\n    "from parent" + type; // if (origin !== parentOrigin) {\n    //   return;\n    // }\n\n    switch (type) {\n      case "initialize":\n        methods.initializeSDK(payload);\n        return;\n\n      case "applyBySku":\n        methods.applyMakeupBySDK(payload.skuId);\n        return;\n\n      case "applyByConfig":\n        // console.log("applyVTOByConfig");\n        methods.applyVTOByConfig(payload);\n        return;\n\n      case "clearSku":\n        methods.clearSku();\n        return;\n\n      case "snapshot":\n        methods.snapshot();\n        return;\n\n      case "webDemo":\n        webDemoSettings(payload);\n        return;\n\n      case "closePreview":\n        methods.closePreview();\n        return;\n\n      case "openLivePreview":\n        methods.openLivePreview(payload);\n        return;\n\n      case "pausePreview":\n        methods.pausePreview();\n        return;\n\n      case "resumePreview":\n        methods.resumePreview(payload);\n        return;\n\n      case "screenShot":\n        // console.log("screenshotrecieved");\n        if (getSceneManagerInstance()) {\n          setScreenshotImage(getSceneManagerInstance().takeScreenShot(), getSceneManagerInstance().getCurrentWidth(), getSceneManagerInstance().getCurrentHeight());\n          showScreenshotPanel();\n        } // testtext.textContent = JSON.stringify(e.data);\n\n\n        return;\n\n      case "onRecognizationSDKClose":\n        methods.onRecognizationClose(payload);\n        return;\n\n      case "onRecognizationCapture":\n        methods.onRecognizationCapture(payload);\n        return;\n\n      case "onRecognizationRetry":\n        methods.onRecognizationRetry(payload);\n        return;\n\n      case "disableInternalUI":\n        methods.disableInternalUI();\n        return;\n\n      case "configChange":\n        methods.onConfigChange(payload);\n        return;\n\n      case "comparison":\n        methods.onComparisonEvents(payload);\n        return;\n\n      default:\n        return;\n    }\n  }, false);\n}\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/popupModal.css\nvar styles_popupModal = __webpack_require__(5974);\n;// CONCATENATED MODULE: ./src/htmlService/styles/popupModal.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar popupModal_options = {};\n\npopupModal_options.styleTagTransform = (styleTagTransform_default());\npopupModal_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      popupModal_options.insert = insertBySelector_default().bind(null, "head");\n    \npopupModal_options.domAPI = (styleDomAPI_default());\npopupModal_options.insertStyleElement = (insertStyleElement_default());\n\nvar popupModal_update = injectStylesIntoStyleTag_default()(styles_popupModal/* default */.Z, popupModal_options);\n\n\n\n\n       /* harmony default export */ const htmlService_styles_popupModal = (styles_popupModal/* default */.Z && styles_popupModal/* default */.Z.locals ? styles_popupModal/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/htmlService/popupModal.js\n\n\nfunction createPopupModal(positiveHandler, negativeHandler) {\n  var _getHtmlElements = getHtmlElements(),\n      popupModal = _getHtmlElements.popupModal;\n\n  var modalContainerDiv = document.createElement("div");\n  modalContainerDiv.classList.add("modal-container");\n  var modalHeading = document.createElement("div");\n  modalHeading.classList.add("modal-heading");\n  modalHeading.innerText = "Are you sure you want to stop using Virtual Try-on?";\n  var separatorDiv = document.createElement("div");\n  separatorDiv.classList.add("modal-separator");\n  var actionsContainer = document.createElement("div");\n  actionsContainer.classList.add("modal-actions-container");\n\n  var _getActionButtons = getActionButtons(positiveHandler, negativeHandler),\n      NegativeActionButton = _getActionButtons.NegativeActionButton,\n      PositiveActionButton = _getActionButtons.PositiveActionButton;\n\n  actionsContainer.appendChild(NegativeActionButton);\n  actionsContainer.appendChild(PositiveActionButton);\n  modalContainerDiv.appendChild(modalHeading);\n  modalContainerDiv.appendChild(separatorDiv);\n  modalContainerDiv.appendChild(actionsContainer);\n  popupModal.appendChild(modalContainerDiv);\n}\n\nfunction getActionButtons(positiveHandler, negativeHandler) {\n  var PositiveActionButton = document.createElement("button");\n  var NegativeActionButton = document.createElement("button");\n  PositiveActionButton.classList.add("modal-positive-action");\n  NegativeActionButton.classList.add("modal-negative-action");\n  PositiveActionButton.addEventListener("click", function () {\n    positiveHandler();\n  });\n  NegativeActionButton.addEventListener("click", function () {\n    negativeHandler();\n  });\n  NegativeActionButton.innerText = "Close";\n  PositiveActionButton.innerText = "Confirm";\n  return {\n    PositiveActionButton: PositiveActionButton,\n    NegativeActionButton: NegativeActionButton\n  };\n}\n\nfunction showPopupModal() {\n  var _getHtmlElements2 = getHtmlElements(),\n      popupModal = _getHtmlElements2.popupModal;\n\n  popupModal.style.display = "flex";\n}\nfunction hidePopupModal() {\n  var _getHtmlElements3 = getHtmlElements(),\n      popupModal = _getHtmlElements3.popupModal;\n\n  popupModal.style.display = "none";\n}\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/htmlService/styles/statusPill.css\nvar styles_statusPill = __webpack_require__(1786);\n;// CONCATENATED MODULE: ./src/htmlService/styles/statusPill.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar statusPill_options = {};\n\nstatusPill_options.styleTagTransform = (styleTagTransform_default());\nstatusPill_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      statusPill_options.insert = insertBySelector_default().bind(null, "head");\n    \nstatusPill_options.domAPI = (styleDomAPI_default());\nstatusPill_options.insertStyleElement = (insertStyleElement_default());\n\nvar statusPill_update = injectStylesIntoStyleTag_default()(styles_statusPill/* default */.Z, statusPill_options);\n\n\n\n\n       /* harmony default export */ const htmlService_styles_statusPill = (styles_statusPill/* default */.Z && styles_statusPill/* default */.Z.locals ? styles_statusPill/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/htmlService/statusPill.js\n\n\n\nvar StatusPills = {\n  pillTypes: [{\n    type: "lighting",\n    index: 0,\n    text: "Lighting"\n  }, {\n    type: "position",\n    index: 1,\n    text: "Face Position"\n  }, {\n    type: "look",\n    index: 2,\n    text: "Look Straight"\n  }],\n  statusTypes: {\n    good: {\n      tag: "good",\n      color: "#06F93B"\n    },\n    notGood: {\n      tag: "notGood",\n      color: "#FFC122"\n    },\n    bad: {\n      tag: "good",\n      color: "#FF1A1A"\n    }\n  }\n};\nvar statusPill_ElementsList = [];\nfunction createStatusPill() {\n  var _getHtmlElements = getHtmlElements(),\n      statusPill = _getHtmlElements.statusPill;\n\n  StatusPills.pillTypes.forEach(function (statusPillType) {\n    var ContainerDiv = document.createElement("div");\n    ContainerDiv.style.display = "none";\n    ContainerDiv.classList.add("pill-container");\n    var PillTextDiv = document.createElement("div");\n    PillTextDiv.classList.add("pill-text");\n    var PillStatusTextDiv = document.createElement("div");\n    PillStatusTextDiv.classList.add("pill-status-text");\n    ContainerDiv.appendChild(PillTextDiv);\n    ContainerDiv.appendChild(PillStatusTextDiv);\n    statusPill_ElementsList.push({\n      container: ContainerDiv,\n      pillText: PillTextDiv,\n      statusText: PillStatusTextDiv\n    });\n    statusPill.appendChild(ContainerDiv);\n  });\n}\nfunction showPills(pills) {\n  pills === null || pills === void 0 ? void 0 : pills.forEach(function (_ref) {\n    var pillId = _ref.pillId,\n        pillText = _ref.pillText,\n        pillStatus = _ref.pillStatus,\n        statusText = _ref.statusText;\n    statusPill_ElementsList[pillId].container.style.display = "flex";\n    statusPill_ElementsList[pillId].pillText.innerText = pillText;\n    statusPill_ElementsList[pillId].statusText.innerText = statusText;\n    statusPill_ElementsList[pillId].container.style.border = "1px solid ".concat(StatusPills.statusTypes[pillStatus].color);\n    statusPill_ElementsList[pillId].statusText.style.color = "".concat(StatusPills.statusTypes[pillStatus].color);\n  });\n}\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/libs/lil-gui.module.min.js\nvar lil_gui_module_min = __webpack_require__(3659);\n;// CONCATENATED MODULE: ./src/sdkService/GltfModelGuiHandler.js\n\n\n\nfunction GltfModelGuiHandler_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction GltfModelGuiHandler_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction GltfModelGuiHandler_createClass(Constructor, protoProps, staticProps) { if (protoProps) GltfModelGuiHandler_defineProperties(Constructor.prototype, protoProps); if (staticProps) GltfModelGuiHandler_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\n\n\nvar GltfModelGUIHandler = /*#__PURE__*/function () {\n  function GltfModelGUIHandler(scene, renderer) {\n    GltfModelGuiHandler_classCallCheck(this, GltfModelGUIHandler);\n\n    this.scene = scene;\n    this.renderer = renderer;\n  }\n\n  GltfModelGuiHandler_createClass(GltfModelGUIHandler, [{\n    key: "CreatePanel",\n    value: function CreatePanel() {\n      var panel = new lil_gui_module_min/* GUI */.XS({\n        width: 310\n      });\n      var folder1 = panel.addFolder("Scene Settings");\n      var settings = {\n        "Background Blurriness": 0,\n        "Background Intensity": 1,\n        "Environment Intensity": 1\n      };\n      folder1.add(settings, "Background Blurriness", 0.0, 1.0, 0.01).onChange(ModifyBackgroundBluriness.bind(this));\n      folder1.add(settings, "Background Intensity", 0.0, 1.0, 0.01).onChange(ModifyBackgroundIntensity.bind(this));\n      folder1.add(settings, "Environment Intensity", 0.0, 1.0, 0.01).onChange(ModifyEnvironmentIntensity.bind(this));\n\n      function ModifyBackgroundBluriness(blur) {\n        this.scene.backgroundBlurriness = blur;\n      }\n\n      function ModifyBackgroundIntensity(intesity) {\n        this.scene.backgroundIntensity = intesity;\n      }\n\n      function ModifyEnvironmentIntensity(intesity) {\n        this.scene.environmentIntensity = intesity;\n      }\n\n      folder1.open();\n    }\n  }]);\n\n  return GltfModelGUIHandler;\n}();\n;// CONCATENATED MODULE: ./src/sdkService/sdkEngine.js\n\n\n\n\n\n\n\n\n\n\n\nfunction sdkEngine_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction sdkEngine_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { sdkEngine_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { sdkEngine_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar videoEl; // emitModuleLoading();\n\nvar isPause = false;\nvar isInitialized = false;\nvar comparisonState = 0;\nvar currentTryon = "";\nvar TryonConfig = null;\nvar fps = 0;\nvar SDKState = 0;\nvar UserUploadSrc = null;\nvar UserUploadMode = false;\nvar isvideo = false;\nvar video = null;\nvar inputImage = null;\nvar inputImageTexture = null;\nvar imageSource = null;\nvar currentReconizationData = "data not set yet";\nimageSource = null;\nvar nowTrackingMode = TrackingMode.Face;\nvar currentStream = null;\nvar sdkEngine_isDragging = false;\nvar useOrtho = true;\nvar debug = false;\nvar sceneManager; // for managing the threejs scenes\n\nvar facemeshLandmarksProvider = null; // for managing mediapipe facemesh\n\nvar handsLandmarkProvider;\nvar videoFrameProvider;\nvar animationFrameId;\nvar tempWidth = -1;\nvar ModelGuiHandler;\nsetHtmlElements();\n\nvar _getHtmlElements = getHtmlElements(),\n    sdkEngine_loaderContainer = _getHtmlElements.loaderContainer,\n    sdkEngine_videoContainer = _getHtmlElements.videoContainer,\n    sdkEngine_video_Container = _getHtmlElements.video_Container,\n    sdkEngine_canavas_container = _getHtmlElements.canavas_container,\n    sdkEngine_imageInput = _getHtmlElements.imageInput,\n    sdkEngine_canvas = _getHtmlElements.canvas,\n    sdkEngine_fpsEle = _getHtmlElements.fpsEle,\n    sdkEngine_modelsContainer = _getHtmlElements.modelsContainer,\n    sdkEngine_ringContainer = _getHtmlElements.ringContainer,\n    sdkEngine_gltfModelInput = _getHtmlElements.gltfModelInput,\n    sdkEngine_hdrImageInput = _getHtmlElements.hdrImageInput;\n\nshowLottieLoader();\nsdkEngine_canvas.style.display = "none";\nsdkEngine_canavas_container.style.display = "none";\nvar prevTime = performance.now();\nvar sdkEngine_frames = 0;\nfunction SdkEngine() {\n  addMessageListener();\n  emitModuleLoading();\n  addComparisonSliderEvents(sdkEngine_video_Container);\n  setSnackbarElement();\n  setScreenShotElement();\n  initModelContainer(sdkEngine_modelsContainer);\n  hideModelContainer();\n  setLoadingModelPanelElement("glasses");\n  setTrackingMessageElement();\n  setAlignMessageElement();\n  setAlignMsg(globalVariables/* errorMessages */.Qj.invisbileLiveFace);\n  hideTrackingMsg();\n  hideLoadingModelPanel();\n  setRecognizeUIElement();\n  getCanvasContainer();\n  setCameraPermissionElement(cameraPermissionHandler);\n  setBillingElement(billingHandler);\n  hideCameraPermissionPanel();\n  hideBillingPanel();\n  setErrorElement(errorBtnHandler); // buildTryOnScreen(tryOnEventHandler);\n\n  buildSettingOptions(settingsEventHandler);\n  createNavigationButtons(onPrevIconClick, onCrossIconClick);\n  showCrossIcon({\n    blurredBg: false,\n    blackIcon: true\n  });\n  createPopupModal(onConfirmClick, onCloseClick);\n  createStatusPill();\n  createConfigSettings(configSettingHeaderHandler, configSettingContentHandler, configSettingActionsHanlder); // console.log(videoContainer);\n\n  SetCallbackToGtlfUploadButton();\n  SetCallbackToHDRUploadButton();\n\n  if (isvideo) {\n    videoEl = video;\n  } else {\n    videoEl = inputImage;\n  }\n\n  fakeInit();\n}\nfunction getIsVideo() {\n  return isvideo;\n}\nfunction getSceneManagerInstance() {\n  return sceneManager;\n}\nfunction getTryOnConfig() {\n  return TryonConfig;\n}\nfunction getIsInitialized() {\n  return isInitialized;\n}\nfunction getSDKState() {\n  return SDKState;\n}\nfunction getComparisonState() {\n  return comparisonState;\n}\nfunction getAnimationFrameId() {\n  return animationFrameId;\n}\nfunction getVideoFrameProvider() {\n  return videoFrameProvider;\n}\nfunction getVideo() {\n  return video;\n}\nfunction sdkEngine_getInputImage() {\n  return inputImage;\n}\nfunction getNowTrackingMode() {\n  return nowTrackingMode;\n}\nfunction getDebug() {\n  return debug;\n}\nfunction getUseOrtho() {\n  return useOrtho;\n}\nfunction getHandsLandmarkProvider() {\n  return handsLandmarkProvider;\n}\nfunction getFacemeshLandmarksProvider() {\n  return facemeshLandmarksProvider;\n}\nfunction getCurrentTryon() {\n  return currentTryon;\n}\nfunction getUserUploadMode() {\n  return UserUploadMode;\n}\nfunction getCurrentStream() {\n  return currentStream;\n}\nfunction setCurrentTryon(value) {\n  currentTryon = value;\n}\nfunction setHandsLandmarkProvider(value) {\n  handsLandmarkProvider = value;\n}\nfunction setFacemeshLandmarksProvider(value) {\n  facemeshLandmarksProvider = value;\n}\nfunction setSceneManagerInstance(value) {\n  sceneManager = value;\n}\nfunction setInputImage(value) {\n  inputImage = value;\n}\nfunction setVideoFrameProvider(value) {\n  videoFrameProvider = value;\n}\nfunction setVideo(value) {\n  video = value;\n}\nfunction setVideoEL(value) {\n  videoEl = value;\n}\nfunction setIsVideo(value) {\n  isvideo = value;\n}\nfunction setSDKState(value) {\n  SDKState = value;\n}\nfunction setTryOnConfig(value) {\n  TryonConfig = value;\n}\nfunction setComparisonState(value) {\n  comparisonState = value;\n}\nfunction setInputImageTexture(value) {\n  inputImageTexture = value;\n}\nfunction setIsPause(value) {\n  isPause = value;\n}\nfunction setTempWidth(value) {\n  tempWidth = value;\n}\nfunction setImageSource(value) {\n  imageSource = value;\n}\nfunction setNowTrackingMode(value) {\n  nowTrackingMode = value;\n}\nvar onLandmarks = function onLandmarks(_ref) {\n  var image = _ref.image,\n      landmarks = _ref.landmarks;\n  if (isvideo) sceneManager.onLandmarks(image, landmarks, isvideo);else sceneManager.onLandmarks(inputImageTexture, landmarks, isvideo);\n};\n\nvar onPoseLandmarks = function onPoseLandmarks(_ref2) {\n  var image = _ref2.image,\n      landmarks = _ref2.landmarks,\n      segmentationmask = _ref2.segmentationmask,\n      worldlandmarks = _ref2.worldlandmarks;\n  sceneManager.onPoseLandmarks(image, landmarks, segmentationmask, worldlandmarks);\n};\n\nvar onHandLandsmarks = function onHandLandsmarks(_ref3) {\n  var image = _ref3.image,\n      landmarks = _ref3.landmarks,\n      worldlandmarks = _ref3.worldlandmarks,\n      handedness = _ref3.handedness;\n  if (isvideo) sceneManager.onHandsLandmarks(image, landmarks, worldlandmarks, handedness, isvideo);else sceneManager.onHandsLandmarks(inputImageTexture, landmarks, worldlandmarks, handedness, isvideo);\n};\nvar onFrame = null; //if (isvideo) {\n\nonFrame = /*#__PURE__*/function () {\n  var _ref4 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(video) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (isPause) {\n              _context.next = 12;\n              break;\n            }\n\n            if (!(nowTrackingMode === TrackingMode.Hand)) {\n              _context.next = 8;\n              break;\n            }\n\n            if (!(handsLandmarkProvider && handsLandmarkProvider.IsInit())) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 6;\n            return handsLandmarkProvider.send(video);\n\n          case 6:\n            _context.next = 12;\n            break;\n\n          case 8:\n            if (!(nowTrackingMode === TrackingMode.Face)) {\n              _context.next = 12;\n              break;\n            }\n\n            if (!(facemeshLandmarksProvider && facemeshLandmarksProvider.IsInit())) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 12;\n            return facemeshLandmarksProvider.send(video);\n\n          case 12:\n            _context.next = 20;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context["catch"](0);\n\n            if (!videoFrameProvider) {\n              _context.next = 20;\n              break;\n            }\n\n            _context.next = 19;\n            return videoFrameProvider.stop();\n\n          case 19:\n            videoFrameProvider = null;\n\n          case 20:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n\n  return function onFrame(_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nfunction setVisibalityOfModels() {\n  for (var i = 0; i < sceneManager.getModelData().length; i++) {\n    if (sceneManager.getModelData()[i].category === getRelevantModels()) {\n      var model = document.getElementById("model".concat(i));\n      if (model) model.style.display = "block";\n    } else {\n      var _model = document.getElementById("model".concat(i));\n\n      if (_model) _model.style.display = "none";\n    }\n  }\n\n  setVisibilityOfModels(sceneManager.getModelData(), getRelevantModels());\n}\nfunction tryOnEventHandler(type, modelId, imgURL) {\n  sceneManager.resetZoomChanges();\n  enableBothZoomIcons();\n  disableSettingIcon("zoomOut");\n\n  switch (type) {\n    case "live":\n      if (isCameraPermissionGranted()) {\n        //  console.log("CURRENT_ENVIRONMENT CHECK_INTRO: " + "click");\n        UserUploadMode = false;\n        hideTryOnScreen();\n        showPrevIcon();\n        showCrossIcon({\n          blurredBg: true\n        });\n        showSettingOptions();\n        onVideoMode();\n      } else {\n        sdkEngine_canavas_container.style.display = "flex";\n        sdkEngine_canavas_container.style.justifyContent = "center";\n        sdkEngine_canvas.style.display = "none";\n        cameraPermissionPanel_showCameraPermissionPanel();\n      }\n\n      break;\n\n    case "modelTryOn":\n      if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n        UserUploadMode = false;\n        onImageMode(imgURL);\n      } else {\n        if (imgURL) {\n          onImageMode(imgURL);\n          showPrevIcon();\n          showSettingOptions();\n          showCrossIcon({\n            blurredBg: true\n          });\n        } else {\n          showPrevIcon();\n          showSettingOptions();\n          showCrossIcon({\n            blurredBg: true\n          });\n          UserUploadMode = false; // replace glass by current category\n\n          onImageMode(sceneManager.getModelsByCategories((0,globalVariables/* getCategory */.n3)())[modelId].imageUrl);\n        }\n      }\n\n      break;\n\n    case "upload":\n      if ((0,globalVariables/* isShouldHideInternalUI */.iT)()) {\n        if (imgURL) {\n          UserUploadSrc = imgURL;\n          UserUploadMode = true;\n          onImageMode(UserUploadSrc);\n        }\n      } else {\n        if (UserUploadSrc !== null) {// showPrevIcon();\n          // showCrossIcon({ blurredBg: true });\n          // showSettingOptions();\n          // hideModelContainer();\n          // UserUploadMode = true;\n          // onImageMode(UserUploadSrc);\n        } // emitUploadModeStarted();\n\n\n        sdkEngine_imageInput.click();\n      }\n\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction configSettingHeaderHandler(pillIndex, config) {\n  if (config.tag === "fingers") {\n    sliderHandler_setRingIndex(2);\n  }\n}\n\nfunction configSettingContentHandlerForce(type, value) {\n  configSettingContentHandler(type, value);\n}\n\nfunction configSettingContentHandler(type, value) {\n  //console.log(type, value);\n  switch (type) {\n    case "fingers":\n      sliderHandler_setRingIndex(value);\n      sceneManager.forceUpdateTryon();\n      break;\n\n    case "horizontal":\n      setHorizontalValue(value);\n      sceneManager.forceUpdateTryon();\n      break;\n\n    case "vertical":\n      setVerticalValue(value);\n      sceneManager.forceUpdateTryon();\n      break;\n\n    case "scale":\n      setScaleValue(value);\n      sceneManager.forceUpdateTryon();\n      break;\n  }\n}\n\nfunction errorBtnHandler() {\n  hideErrorPermissionPanel();\n  onPrevIconClick();\n}\n\nfunction onPrevIconClick() {\n  stopTracking();\n  onReset();\n}\n\nfunction onReset() {\n  hideSettingOptions();\n  hidePrevIcon();\n  hideComparisonSlider();\n  hideAlignMessagePanel();\n  hideConfigSettingBottomSheet();\n  unSelectAllSettings();\n  showCrossIcon({\n    blurredBg: false,\n    blackIcon: true\n  });\n  showTryOnScreen();\n}\n\nfunction onCrossIconClick() {\n  showPopupModal();\n}\n\nfunction onConfirmClick() {\n  onReset();\n  CloseModule();\n  onCloseClick();\n}\n\nfunction onCloseClick() {\n  hidePopupModal();\n}\n\nfunction configSettingActionsHanlder(tag, type) {\n  switch (type) {\n    case "close":\n      unSelectAllSettings();\n      showSettingOptions();\n  }\n}\n\nfunction CaptureSnapShot() {\n  var _getHtmlElements2 = getHtmlElements(),\n      screenShotTag = _getHtmlElements2.screenShotTag;\n\n  if (getSceneManagerInstance()) {\n    try {\n      var ss = getSceneManagerInstance().takeScreenShot();\n      var base64Data = btoa(ss);\n      screenShotTag.href = "".concat(atob(base64Data));\n      screenShotTag.download = "NewScreenshot.jpeg";\n      screenShotTag.click(); // Create a Blob object using the base64 encoded data\n      // const imageBlob = new Blob([base64Data], { type: "image/jpeg" });\n\n      emitPhotoLoaded(base64Data);\n    } catch (_unused) {// emitPhotoLoadedFailed(base64Data);\n    }\n  }\n}\n\nfunction settingsEventHandler(data) {\n  switch (data.tag) {\n    case "configSettings":\n      showConfigSettingBottomSheet();\n      hideSettingOptions();\n      hideComparisonSlider();\n      break;\n\n    case "comparison":\n      // hideConfigContainer();\n      toggleComparisonSlider();\n      break;\n\n    case "zoomIn":\n      sceneManager.updateCameraZoom("up");\n      break;\n\n    case "zoomOut":\n      sceneManager.updateCameraZoom("down");\n      break;\n\n    case "capture":\n      CaptureSnapShot();\n      break;\n  }\n}\n\nfunction getRelevantModels() {\n  return currentTryon;\n}\n\nvar animate = function animate() {\n  updateFPS();\n  animationFrameId = requestAnimationFrame(animate);\n\n  if (!isPause) {\n    if (isvideo && video && (nowTrackingMode === TrackingMode.Face && facemeshLandmarksProvider && facemeshLandmarksProvider.IsInit() || nowTrackingMode === TrackingMode.Hand && handsLandmarkProvider && handsLandmarkProvider.IsInit())) {\n      if (video.readyState >= HTMLMediaElement.HAVE_METADATA) {\n        if (nowTrackingMode === TrackingMode.Face) {\n          facemeshLandmarksProvider.send(video);\n        }\n\n        if (nowTrackingMode === TrackingMode.Hand) {\n          handsLandmarkProvider.send(video);\n        } // if (videoFrameProvider) videoFrameProvider.handleWindowResize();\n        // sceneManager.resize(window.innerWidth, window.innerHeight);\n\n\n        if (tempWidth !== video.videoWidth) {\n          sceneManager.setVideoTryonSettings(video.videoWidth, video.videoHeight);\n          tempWidth = video.videoWidth;\n        }\n\n        sceneManager.animate(isvideo);\n      }\n    } else {\n      if (inputImage.complete) {\n        sceneManager.animate(isvideo);\n      }\n    }\n  }\n};\n\nfunction updateFPS() {\n  var currentTime = performance.now();\n  var deltaTime = currentTime - prevTime;\n  sdkEngine_frames++; // Update FPS every second\n\n  if (deltaTime >= 1000) {\n    var _fps = Math.round(sdkEngine_frames * 1000 / deltaTime);\n\n    if (sdkEngine_fpsEle) sdkEngine_fpsEle.textContent = _fps; // Reset values for the next second\n\n    prevTime = currentTime;\n    sdkEngine_frames = 0;\n  }\n}\n\nfunction SetAPIKey() {\n  var urlParams = new URLSearchParams(window.location.search);\n  var apiKey = urlParams.get("API_KEY");\n  var width = urlParams.get("WIDTH");\n  setAPIKey(apiKey); // setAPIKey("1234");\n  //setWidthKey(parseInt(width));\n\n  setAuthorization(apiKey);\n} // Handles API response\n\n\nfunction loadTexture() {\n  return _loadTexture.apply(this, arguments);\n}\n\nfunction _loadTexture() {\n  _loadTexture = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            inputImageTexture = new three_module/* TextureLoader */.dpR();\n            _context9.prev = 1;\n            _context9.next = 4;\n            return new Promise(function (resolve, reject) {\n              inputImageTexture.load(inputImage.src, function (texture) {\n                resolve(texture);\n                inputImageTexture.generateMipmaps = false;\n                inputImageTexture.minFilter = three_module/* LinearFilter */.wem;\n                inputImageTexture.magFilter = three_module/* LinearFilter */.wem;\n                inputImageTexture.needsUpdate = true;\n              }, // Resolve with the loaded texture\n              undefined, // No progress callback\n              function (error) {\n                return reject(error);\n              } // Reject with the error if loading fails\n              );\n            });\n\n          case 4:\n            inputImageTexture = _context9.sent;\n            _context9.next = 9;\n            break;\n\n          case 7:\n            _context9.prev = 7;\n            _context9.t0 = _context9["catch"](1);\n\n          case 9:\n          case "end":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[1, 7]]);\n  }));\n  return _loadTexture.apply(this, arguments);\n}\n\nvar stopTracking = /*#__PURE__*/function () {\n  var _ref5 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var tracks;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // loaderContainer.style.display = "none";\n            tempWidth = -1;\n            SDKState = 0;\n            isvideo = false;\n            UserUploadMode = false; // loaderContainer.style.display = "none";\n\n            hideLottieLoader();\n            imageSource = null;\n            sdkEngine_canavas_container.style.display = "none";\n            cancelAnimationFrame(animationFrameId);\n\n            if (inputImage) {\n              sdkEngine_video_Container.removeChild(inputImage);\n              inputImage = null;\n            }\n\n            if (getCurrentStream()) {\n              tracks = getCurrentStream().getTracks();\n              tracks.forEach(function (track) {\n                return track.stop();\n              }); // Stop all tracks\n            }\n\n            if (getVideo()) {\n              getVideo().pause();\n              getVideo().srcObject = null; // Disconnect the video source\n\n              sdkEngine_video_Container.removeChild(getVideo()); // Remove the video element from DOM\n\n              setVideo(null);\n            }\n\n            tempWidth = -1;\n\n          case 12:\n          case "end":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function stopTracking() {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar initialize = /*#__PURE__*/function () {\n  var _ref6 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var loaderTime,\n        constraints,\n        _args3 = arguments;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            loaderTime = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : 2000;\n\n            if (!isvideo) {\n              _context3.next = 12;\n              break;\n            }\n\n            video.pause();\n\n            if (video.querySelector("source")) {\n              video.querySelector("source").remove();\n            }\n\n            video.removeAttribute("src");\n            video.load();\n\n            if (!videoFrameProvider) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 9;\n            return videoFrameProvider.stop();\n\n          case 9:\n            videoFrameProvider = null;\n\n          case 10:\n            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n              constraints = {\n                video: {\n                  facingMode: "user",\n                  width: {\n                    ideal: 640\n                  },\n                  advanced: [{\n                    facingMode: {\n                      exact: "user"\n                    }\n                  }, {\n                    width: {\n                      max: 2560\n                    }\n                  }, {\n                    width: {\n                      min: 320\n                    }\n                  }]\n                }\n              };\n              navigator.mediaDevices.getUserMedia(constraints) //{ video: { facingMode: "user" } })\n              .then(function (stream) {\n                currentStream = stream;\n                video.srcObject = stream;\n                video.play();\n                if (sdkEngine_canvas) sdkEngine_canvas.style.display = "block";\n                emitCameraOpened();\n              })["catch"](function (error) {\n                //console.log(error);\n                cameraPermissionPanel_showCameraPermissionPanel();\n                emitCameraAccessIssue(); // console.error("Unable to access the camera/webcam.", error);\n              });\n            }\n\n            sceneManager.createNewPlane(video);\n\n          case 12:\n            animate();\n            emitModuleOpened();\n            sdkEngine_videoContainer.classList.remove("loading");\n            if (!isInitialized) setTimeout(disableInitLoading, 2000);else setTimeout(disableInitLoading, loaderTime);\n\n          case 16:\n          case "end":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function initialize() {\n    return _ref6.apply(this, arguments);\n  };\n}();\nfunction CloseModule() {\n  stopTracking();\n  emitModuleClosed();\n}\n\nfunction disableInitLoading() {\n  // console.log("aslfhalshflashflahflhaslfa");\n  // loaderContainer.style.display = "none";\n  hideLottieLoader();\n  isInitialized = true;\n} // imageInput.addEventListener("click", () => {\n//   optionsEventHandler("imgTryOn");\n// });\n\n\nsdkEngine_imageInput.addEventListener("cancel", function (event) {\n  if (!UserUploadSrc) {\n    emitUploadCancelled();\n  }\n});\nsdkEngine_imageInput.addEventListener("change", function (event) {\n  var selectedFile = event.target.files[0];\n\n  function displayError(message) {\n    showErrorPermissionPanel(message);\n  }\n\n  function downscaleImage(img, maxWidth, maxHeight, callback) {\n    var width = img.width;\n    var height = img.height;\n    var newWidth = width;\n    var newHeight = height;\n\n    if (width > maxWidth || height > maxHeight) {\n      var aspectRatio = width / height;\n\n      if (width > height) {\n        newWidth = maxWidth;\n        newHeight = Math.round(maxWidth / aspectRatio);\n      } else {\n        newHeight = maxHeight;\n        newWidth = Math.round(maxHeight * aspectRatio);\n      }\n    }\n\n    var canvas = document.createElement("canvas");\n    canvas.width = newWidth;\n    canvas.height = newHeight;\n    var ctx = canvas.getContext("2d");\n    ctx.drawImage(img, 0, 0, newWidth, newHeight);\n    callback(canvas.toDataURL());\n  }\n\n  try {\n    if (selectedFile) {\n      var fileType = selectedFile.type;\n      var validTypes = ["image/jpeg", "image/png", "image/avif", "image/webp", "image/vnd.wap.wbmp", "image/svg+xml"];\n\n      if (!validTypes.includes(fileType)) {\n        displayError("Invalid file type. Supported types are JPEG, PNG, AVIF, WEBP, WBMP, SVG.");\n        return;\n      }\n\n      var MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB\n\n      if (selectedFile.size > MAX_FILE_SIZE) {\n        displayError("File is too large. Please select a file smaller than 10MB.");\n        return;\n      }\n\n      if (selectedFile.size === 0) {\n        displayError("Selected file is empty.");\n        return;\n      }\n\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        var imageURL = event.target.result;\n        var img = new Image();\n\n        img.onload = function () {\n          var MAX_WIDTH = 2048; // 2k resolution width\n\n          var MAX_HEIGHT = 2048; // 2k resolution height\n\n          if (img.width > MAX_WIDTH || img.height > MAX_HEIGHT) {\n            downscaleImage(img, MAX_WIDTH, MAX_HEIGHT, function (downscaledImageURL) {\n              imageSource = downscaledImageURL;\n              UserUploadSrc = downscaledImageURL;\n              UserUploadMode = true;\n              showPrevIcon();\n              showCrossIcon({\n                blurredBg: true\n              });\n              showSettingOptions();\n              onImageMode(imageSource);\n              hideModelContainer();\n            });\n          } else {\n            imageSource = imageURL;\n            UserUploadSrc = imageURL;\n            UserUploadMode = true;\n            showPrevIcon();\n            showCrossIcon({\n              blurredBg: true\n            });\n            showSettingOptions();\n            onImageMode(imageSource);\n            hideModelContainer();\n          }\n        };\n\n        img.onerror = function () {\n          displayError("Error loading the image.");\n        };\n\n        img.src = imageURL;\n      };\n\n      reader.onerror = function () {\n        displayError("Error reading the file.");\n      };\n\n      reader.readAsDataURL(selectedFile);\n    } else {\n      displayError("No file selected.");\n    }\n  } catch (error) {\n    displayError("An error occurred while processing the file: " + error.message);\n  }\n\n  sdkEngine_imageInput.value = "";\n}); //#region Update GLTF Model and HDR configuration\n\nfunction SetCallbackToGtlfUploadButton() {\n  console.log("gltfModelInput ", sdkEngine_gltfModelInput);\n  sdkEngine_gltfModelInput.addEventListener("change", function (event) {\n    var selectedFile = event.target.files[0];\n    var url = URL.createObjectURL(selectedFile);\n    window.postMessage({\n      type: "applyByConfig",\n      payload: {\n        sku: {\n          _id: generateUUID(),\n          orgId: -99,\n          category: "glasses",\n          subCategory: "3d",\n          productName: "Test glasses1",\n          productImage: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/6Dzoxo/original/cxr_assets/2d/bracelet/01.png",\n          vendor: "vogue",\n          isActive: true,\n          itemCode: "BRUNT-1709637495061",\n          styleVariant: null,\n          styleIcon: "https://notavailabledummy.com",\n          attributes: [{\n            icons: [],\n            colors: [],\n            effectAssets: [url]\n          }],\n          meta: {\n            material: "Polycarbonate",\n            dimension: "14x15x70"\n          },\n          createdAt: "2024-03-07T11:03:11.373Z",\n          updatedAt: "2024-05-20T07:40:31.757Z"\n        }\n      }\n    });\n  });\n}\n\nfunction generateUUID() {\n  var dt = new Date().getTime();\n  var uuid = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {\n    var r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c === "x" ? r : r & 0x3 | 0x8).toString(16);\n  });\n  return uuid;\n}\n\nfunction SetCallbackToHDRUploadButton() {\n  sdkEngine_hdrImageInput.addEventListener("change", function (event) {\n    var selectedFile = event.target.files[0];\n    var url = URL.createObjectURL(selectedFile);\n    console.log("Selected HDR file ", url);\n\n    if (sceneManager) {\n      sceneManager.UpdateHDRImage(url);\n      ModelGuiHandler.CreatePanel();\n    }\n  });\n} //#endregion\n\n\nif (!sceneManager) {\n  sceneManager = new scene_manager_SceneManager(sdkEngine_canvas, debug, useOrtho);\n  ModelGuiHandler = new GltfModelGUIHandler(sceneManager.scene, sceneManager.renderer);\n}\n\nSetAPIKey(); //fpsEle.textContent = fps;\n\nvar onApiSubmitResponse = /*#__PURE__*/function () {\n  var _ref7 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(response, isOld) {\n    var responseText, apiResponse, responseData, categoryName, block;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            responseText = response;\n\n            if (responseText) {\n              _context4.next = 5;\n              break;\n            }\n\n            // showSnackbar("Invalid input. Please retry.").then(() => {\n            //   setTimeout(() => {\n            //     emitModuleClosed();\n            //     hideSnackbar();\n            //   }, 2000);\n            // });\n            showErrorPermissionPanel("Invalid input. Please retry.");\n            emitModuleClosed();\n            return _context4.abrupt("return");\n\n          case 5:\n            apiResponse = responseText;\n            _context4.prev = 6;\n            responseData = responseText;\n            apiResponse = new APIResponseData(responseData, isOld);\n            _context4.next = 14;\n            break;\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4["catch"](6);\n            return _context4.abrupt("return");\n\n          case 14:\n            categoryName = apiResponse.data.sku.category.toLowerCase();\n            block = false; //console.log(categoryName);\n\n            if ( //apiResponse.data.sku._id &&\n            apiResponse.data.sku.attributes && apiResponse.data.sku.attributes.length > 0 && apiResponse.data.sku.attributes[0].effectAssets && apiResponse.data.sku.attributes[0].effectAssets.length > 0) {\n              if (!apiResponse.data.sku.attributes[0].effectAssets[0]) block = true;\n            } else {\n              block = true;\n            }\n\n            if (!block) {\n              _context4.next = 20;\n              break;\n            }\n\n            if (sceneManager) {\n              sceneManager.removeCurrentTryon();\n            }\n\n            return _context4.abrupt("return");\n\n          case 20:\n            if (!(TryonConfig && TryonConfig._id && TryonConfig._id === apiResponse.data.sku._id)) {\n              _context4.next = 23;\n              break;\n            }\n\n            emitSKUApplied();\n            return _context4.abrupt("return");\n\n          case 23:\n            //stopTracking();\n            TryonConfig = null;\n            TryonConfig = apiResponse.data.sku;\n            console.log("##### ", categoryName);\n            console.log("##### ", TryonConfig);\n            onWatchMode(categoryName); // Create the SceneManager instance\n\n            if (!sceneManager) {\n              sceneManager = new scene_manager_SceneManager(sdkEngine_canvas, debug, useOrtho);\n            }\n\n            if (!(sceneManager && apiResponse.type != "webpackOk")) {\n              _context4.next = 32;\n              break;\n            }\n\n            _context4.next = 33;\n            break;\n\n          case 32:\n            return _context4.abrupt("return");\n\n          case 33:\n          case "end":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[6, 11]]);\n  }));\n\n  return function onApiSubmitResponse(_x2, _x3) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nvar onModelApiSubmit = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {\n  var _ref8 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n    var modelsdata, reponseCollection, i, responseData;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            modelsdata = [faceText, bodyText, wristText, fingerText, mangtikaText]; //let apiResponse = responseText;\n\n            reponseCollection = [];\n            _context5.prev = 2;\n\n            for (i = 0; i < modelsdata.length; i++) {\n              responseData = JSON.parse(modelsdata[i]);\n              reponseCollection.push(responseData);\n            }\n\n            _context5.next = 9;\n            break;\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5["catch"](2);\n            return _context5.abrupt("return");\n\n          case 9:\n            // Create the SceneManager instance\n            if (!sceneManager) {\n              sceneManager = new SceneManager(sdkEngine_canvas, debug, useOrtho);\n            }\n\n            if (!(sceneManager && modelsdata[0].type != "webpackOk")) {\n              _context5.next = 15;\n              break;\n            }\n\n            sceneManager.setModelAPIResponse(reponseCollection); // console.log(sceneManager.getModelData());\n\n            createModels(sceneManager.getModelData(), modelsEventHandler);\n            _context5.next = 16;\n            break;\n\n          case 15:\n            return _context5.abrupt("return");\n\n          case 16:\n          case "end":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 6]]);\n  }));\n\n  return function onModelApiSubmit() {\n    return _ref8.apply(this, arguments);\n  };\n}()));\n\nvar openReconiaztionScreen = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {\n  var _ref9 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (sceneManager) sceneManager.setForceHideTryons(true);\n\n            if (SDKState !== 2) {\n              tryOnEventHandler("live");\n            }\n\n          case 2:\n            if (video) {\n              _context6.next = 7;\n              break;\n            }\n\n            _context6.next = 5;\n            return new Promise(function (resolve) {\n              return setTimeout(resolve, 100);\n            });\n\n          case 5:\n            _context6.next = 2;\n            break;\n\n          case 7:\n            if (sceneManager) sceneManager.setForceHideTryons(true); //await new Promise((resolve) => setTimeout(resolve, 1000));\n\n            emitRecognizationOpen("open recognize sdk"); //recognizationCaptureAPI();\n\n          case 9:\n          case "end":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function openReconiaztionScreen() {\n    return _ref9.apply(this, arguments);\n  };\n}()));\n\nvar recognizationCaptureAPI = /*#__PURE__*/function () {\n  var _ref10 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(url) {\n    var screenshot, blasd;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (sceneManager) sceneManager.setForceHideTryons(true);\n            _context7.next = 3;\n            return sceneManager.takeScreenShot();\n\n          case 3:\n            screenshot = _context7.sent;\n            blasd = dataURLtoBlob(screenshot);\n\n            if (!sceneManager) {\n              _context7.next = 10;\n              break;\n            }\n\n            _context7.next = 8;\n            return sendImage(blasd);\n\n          case 8:\n            currentReconizationData = _context7.sent;\n            emitRecognizationData(currentReconizationData.data);\n\n          case 10:\n          case "end":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function recognizationCaptureAPI(_x4) {\n    return _ref10.apply(this, arguments);\n  };\n}();\n\nfunction dataURLtoBlob(dataURL) {\n  var byteCharacters = atob(dataURL.split(",")[1]);\n  var byteNumbers = new Array(byteCharacters.length);\n\n  for (var i = 0; i < byteCharacters.length; i++) {\n    byteNumbers[i] = byteCharacters.charCodeAt(i);\n  }\n\n  var byteArray = new Uint8Array(byteNumbers);\n  return new Blob([byteArray], {\n    type: "image/jpeg"\n  });\n} //onModelApiSubmit();\n//   const scriptElement = document.createElement(\'script\');\n\n\ndocument.addEventListener("apiResponseReceived", function (event) {\n  var apiResponse = event.detail;\n  onApiSubmitResponse(apiResponse);\n});\nfunction modelsEventHandler(modelObj) {\n  UserUploadMode = false;\n  onImageMode(modelObj.imageUrl);\n}\nfunction configSliderHandler(tag) {\n  //console.log(tag);\n  switch (tag) {\n    case "right":\n      (0,sliderHandler_namespaceObject.setXSliderValue)(true);\n      break;\n\n    case "left":\n      (0,sliderHandler_namespaceObject.setXSliderValue)(false);\n      break;\n\n    case "up":\n      (0,sliderHandler_namespaceObject.setYSliderValue)(false);\n      break;\n\n    case "down":\n      (0,sliderHandler_namespaceObject.setYSliderValue)(true);\n      break;\n\n    case "zoom_in":\n      (0,sliderHandler_namespaceObject.setScaleSliderValue)(true);\n      break;\n\n    case "zoom_out":\n      (0,sliderHandler_namespaceObject.setScaleSliderValue)(false);\n      break;\n\n    case "reset":\n      sliderHandler_resetSliderValues();\n      break;\n\n    default:\n      sliderHandler_resetSliderValues();\n  }\n}\n\nfunction cameraPermissionHandler() {\n  emitCameraFailed();\n  hideCameraPermissionPanel();\n  onPrevIconClick(); // if (!isShouldHideInternalUI()) tryOnEventHandler("live");\n}\n\nfunction billingHandler() {\n  emitModuleClosed();\n  CloseModule();\n  hideBillingPanel();\n}\n\nfunction ringChangeEventHandler(indexOfRing) {\n  // console.log(indexOfRing);\n  setRingIndex(indexOfRing);\n}\n\nfunction applyEventHandler() {// toggleOptionsButton(3);\n  // if (isvideo) toggleOptionsSelectedImage(1);\n  // else toggleOptionsSelectedImage(2);\n}\n\nfunction resetEventHandler() {\n  resetSliderValues();\n}\n\nsdkEngine_ringContainer.addEventListener("click", function () {//console.log("click");\n});\n\nfunction fakeSKU() {\n  window.postMessage({\n    type: "applyByConfig",\n    payload: {\n      sku: {\n        _id: "aee9c42a-ef4f-4283-9a7a-b6363dc2f4da",\n        orgId: -99,\n        category: "glasses",\n        subCategory: "3d",\n        productName: "Test glasses1",\n        productImage: "https://cdn.pixelbin.io/v2/glamar-fynd-835885/6Dzoxo/original/cxr_assets/2d/bracelet/01.png",\n        vendor: "vogue",\n        isActive: true,\n        itemCode: "BRUNT-1709637495061",\n        styleVariant: null,\n        styleIcon: "https://notavailabledummy.com",\n        attributes: [{\n          icons: [],\n          colors: [],\n          effectAssets: ["https://cdn.pixelbin.io/v2/glamar-fynd-835885/original/glamar-3d-models/sunglasses/sunglasses_04.glb"]\n        }],\n        meta: {\n          material: "Polycarbonate",\n          dimension: "14x15x70"\n        },\n        createdAt: "2024-03-07T11:03:11.373Z",\n        updatedAt: "2024-05-20T07:40:31.757Z"\n      }\n    }\n  });\n}\n\nfunction fakeInit() {\n  window.postMessage({\n    type: "initialize",\n    payload: {\n      mode: "platform",\n      category: "glasses"\n    }\n  });\n}\n\nvar toastElement = document.getElementById("snackbar");\ntoastElement.addEventListener("click", function (e) {\n  var _e$target;\n\n  if ((e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.id) === "snackbar-close-icon") {\n    hideSnackbar();\n  }\n}); // emitInitComplete();\n\nvar loadML = /*#__PURE__*/function () {\n  var _ref11 = sdkEngine_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            if ((0,globalVariables/* getCategory */.n3)() === StyleFactories.Watches || (0,globalVariables/* getCategory */.n3)() === StyleFactories.Rings || (0,globalVariables/* getCategory */.n3)() === StyleFactories.Bracelet) {\n              nowTrackingMode = TrackingMode.Hand;\n            } else {\n              nowTrackingMode = TrackingMode.Face;\n            }\n\n            if (!(nowTrackingMode === TrackingMode.Face)) {\n              _context8.next = 8;\n              break;\n            }\n\n            if (facemeshLandmarksProvider) {\n              _context8.next = 6;\n              break;\n            }\n\n            facemeshLandmarksProvider = new FacemeshLandmarksProvider(onLandmarks, sdkEngine_canvas);\n            _context8.next = 6;\n            return facemeshLandmarksProvider.initialize();\n\n          case 6:\n            _context8.next = 13;\n            break;\n\n          case 8:\n            if (!(nowTrackingMode === TrackingMode.Hand)) {\n              _context8.next = 13;\n              break;\n            }\n\n            if (getHandsLandmarkProvider()) {\n              _context8.next = 13;\n              break;\n            }\n\n            setHandsLandmarkProvider(new HandsLandmarkProvider(onHandLandsmarks));\n            _context8.next = 13;\n            return getHandsLandmarkProvider().initialize();\n\n          case 13:\n            emitModuleLoaded();\n\n            if (!(0,globalVariables/* getOpenLiveOnInit */.md)()) {\n              if ((0,globalVariables/* getOpenImageOnInit */.q5)()) {\n                tryOnEventHandler("modelTryOn", null, (0,globalVariables/* getOpenImageOnInit */.q5)());\n              } else {\n                disableInitLoading();\n              }\n            } else {\n              tryOnEventHandler("live");\n            }\n\n            fakeSKU();\n\n          case 16:\n          case "end":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function loadML() {\n    return _ref11.apply(this, arguments);\n  };\n}();\nwindow.addEventListener("resize", function () {\n  if (sceneManager) {\n    sceneManager.resizeCamera();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5213\n')},1691:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".tryon-screen {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  display: flex;\\n  z-index: -1000;\\n  /* display: none; */\\n  justify-content: center;\\n}\\n\\n.tryon_container {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 0 auto;\\n  padding-top: 64px;\\n  gap: 24px;\\n  max-width: 344px;\\n}\\n\\n.tryon_screen_light {\\n  background: white;\\n}\\n.tryon_screen_dark {\\n  background: #1c1d1e;\\n}\\n\\n.tryon_container_heading {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  color: #101112;\\n}\\n\\n.tryon_container_heading_text {\\n  font-size: 20px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 120%;\\n}\\n\\n.tryon_container_heading_subtext {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 140%;\\n  color: #4c4d4d;\\n}\\n\\n.tryon_container_live_tryon {\\n  padding: 16px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: #f1f1f1;\\n  border-radius: 8px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_live_tryon_left {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  color: #4c4d4d;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n\\n.tryon_container_live_tryon_left_camera {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.tryon_container_live_tryon_right path {\\n  /* fill: #4c4d4d; */\\n}\\n\\n.tryon_container_upload_tryon {\\n  padding: 16px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: #f1f1f1;\\n  border-radius: 8px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_upload_tryon_left {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  color: #4c4d4d;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n\\n.tryon_container_upload_tryon_left_camera {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.tryon_container_live_tryon_right path {\\n  /* fill: #4c4d4d; */\\n}\\n\\n.tryon_container_choose_model_heading {\\n  color: #101112;\\n  font-size: 18px;\\n  font-style: normal;\\n  line-height: 140%;\\n  margin-bottom: 4px;\\n}\\n\\n.tryon_container_model_tryon {\\n  display: grid;\\n  grid-template-columns: auto auto auto;\\n  gap: 8px;\\n}\\n\\n.tryon_container_model_tryon_container {\\n  width: 108px;\\n  height: 108px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_model_tryon_container img {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n  border-radius: 8px;\\n}\\n.tryon_container_model_tryon_upload {\\n  width: 108px;\\n  height: 108px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  background: #e7e7e7;\\n  border-radius: 8px;\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: normal;\\n  color: #b7b8b8;\\n  cursor: pointer;\\n  gap: 8px;\\n}\\n\\n.tryon_container_footer {\\n  height: 100px;\\n  padding: 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, #000000 100%);\\n  /* opacity: 0.3; */\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .tryon_container {\\n    max-width: 296px;\\n  }\\n  .tryon_container_heading_subtext {\\n    display: none;\\n  }\\n  .tryon_container_heading_text {\\n    font-size: 18px;\\n    position: relative;\\n    top: 12px;\\n  }\\n  .tryon_container_model_tryon {\\n    gap: 10px;\\n  }\\n  .tryon_container_live_tryon_left {\\n    font-size: 14px;\\n  }\\n  .tryon_container_live_tryon {\\n    padding: 12px 8px;\\n  }\\n  .tryon_container_choose_model_heading {\\n    font-size: 16px;\\n  }\\n  .tryon_container_model_tryon_container {\\n    width: 92px;\\n    height: 92px;\\n  }\\n\\n  .tryon_container_model_tryon_upload {\\n    width: 92px;\\n    height: 92px;\\n  }\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/chooseTryOn.css"],"names":[],"mappings":"AAAA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,aAAa;EACb,cAAc;EACd,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,eAAe;EACf,iBAAiB;EACjB,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;AACnB;AACA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;EACR,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;EACR,cAAc;EACd,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;EACR,cAAc;EACd,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,eAAe;EACf,kBAAkB;EAClB,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;AACpB;AACA;EACE,YAAY;EACZ,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,mBAAmB;EACnB,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;EACnB,cAAc;EACd,eAAe;EACf,QAAQ;AACV;;AAEA;EACE,aAAa;EACb,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,sEAAsE;EACtE,kBAAkB;AACpB;;AAEA;EACE;IACE,gBAAgB;EAClB;EACA;IACE,aAAa;EACf;EACA;IACE,eAAe;IACf,kBAAkB;IAClB,SAAS;EACX;EACA;IACE,SAAS;EACX;EACA;IACE,eAAe;EACjB;EACA;IACE,iBAAiB;EACnB;EACA;IACE,eAAe;EACjB;EACA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;AACF","sourcesContent":[".tryon-screen {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  display: flex;\\n  z-index: -1000;\\n  /* display: none; */\\n  justify-content: center;\\n}\\n\\n.tryon_container {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 0 auto;\\n  padding-top: 64px;\\n  gap: 24px;\\n  max-width: 344px;\\n}\\n\\n.tryon_screen_light {\\n  background: white;\\n}\\n.tryon_screen_dark {\\n  background: #1c1d1e;\\n}\\n\\n.tryon_container_heading {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  color: #101112;\\n}\\n\\n.tryon_container_heading_text {\\n  font-size: 20px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 120%;\\n}\\n\\n.tryon_container_heading_subtext {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 140%;\\n  color: #4c4d4d;\\n}\\n\\n.tryon_container_live_tryon {\\n  padding: 16px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: #f1f1f1;\\n  border-radius: 8px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_live_tryon_left {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  color: #4c4d4d;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n\\n.tryon_container_live_tryon_left_camera {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.tryon_container_live_tryon_right path {\\n  /* fill: #4c4d4d; */\\n}\\n\\n.tryon_container_upload_tryon {\\n  padding: 16px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: #f1f1f1;\\n  border-radius: 8px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_upload_tryon_left {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  color: #4c4d4d;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n\\n.tryon_container_upload_tryon_left_camera {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.tryon_container_live_tryon_right path {\\n  /* fill: #4c4d4d; */\\n}\\n\\n.tryon_container_choose_model_heading {\\n  color: #101112;\\n  font-size: 18px;\\n  font-style: normal;\\n  line-height: 140%;\\n  margin-bottom: 4px;\\n}\\n\\n.tryon_container_model_tryon {\\n  display: grid;\\n  grid-template-columns: auto auto auto;\\n  gap: 8px;\\n}\\n\\n.tryon_container_model_tryon_container {\\n  width: 108px;\\n  height: 108px;\\n  cursor: pointer;\\n}\\n\\n.tryon_container_model_tryon_container img {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n  border-radius: 8px;\\n}\\n.tryon_container_model_tryon_upload {\\n  width: 108px;\\n  height: 108px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  background: #e7e7e7;\\n  border-radius: 8px;\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 600;\\n  line-height: normal;\\n  color: #b7b8b8;\\n  cursor: pointer;\\n  gap: 8px;\\n}\\n\\n.tryon_container_footer {\\n  height: 100px;\\n  padding: 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, #000000 100%);\\n  /* opacity: 0.3; */\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .tryon_container {\\n    max-width: 296px;\\n  }\\n  .tryon_container_heading_subtext {\\n    display: none;\\n  }\\n  .tryon_container_heading_text {\\n    font-size: 18px;\\n    position: relative;\\n    top: 12px;\\n  }\\n  .tryon_container_model_tryon {\\n    gap: 10px;\\n  }\\n  .tryon_container_live_tryon_left {\\n    font-size: 14px;\\n  }\\n  .tryon_container_live_tryon {\\n    padding: 12px 8px;\\n  }\\n  .tryon_container_choose_model_heading {\\n    font-size: 16px;\\n  }\\n  .tryon_container_model_tryon_container {\\n    width: 92px;\\n    height: 92px;\\n  }\\n\\n  .tryon_container_model_tryon_upload {\\n    width: 92px;\\n    height: 92px;\\n  }\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1691\n')},8194:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".config-settings {\\n  position: absolute;\\n  bottom: 0;\\n  width: 100%;\\n  z-index: 5;\\n  border-radius: 16px 16px 0px 0px;\\n  border-top: 1px solid rgba(255, 255, 255, 0.2);\\n  background: rgba(0, 0, 0, 0.16);\\n  backdrop-filter: blur(25px);\\n  visibility: hidden;\\n  opacity: 0;\\n  transition: visibility 0s linear 0.33s, opacity 0.33s linear;\\n}\\n\\n.show-config-settings {\\n  opacity: 1;\\n  visibility: visible;\\n  transition-delay: 0s;\\n}\\n\\n.config-settings-hide {\\n  display: none;\\n}\\n\\n.config-bottom-sheet-container {\\n  display: flex;\\n  padding: 16px;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  gap: 16px;\\n  transform: translateY(100%);\\n  transition: 0.3s ease;\\n}\\n\\n.show-config-settings .config-bottom-sheet-container {\\n  transform: translateY(0%);\\n}\\n\\n.config-bottom-sheet-header {\\n  display: flex;\\n  align-items: flex-start;\\n  gap: 8px;\\n  align-self: stretch;\\n}\\n\\n.config-bottom-sheet-pill {\\n  display: flex;\\n  height: 40px;\\n  padding: 0px 12px 0px 8px;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 4px;\\n  border-radius: 40px;\\n  background: rgba(16, 17, 18, 0.24);\\n  cursor: pointer;\\n  border: 1px solid transparent;\\n}\\n\\n.hide-pill {\\n  display: none;\\n}\\n\\n.config-bottom-sheet-pill:hover {\\n  border: 1px solid #404141;\\n  background: rgba(16, 17, 18, 0.48);\\n}\\n\\n.active-config-bottom-sheet-pill-active {\\n  background: #fff;\\n  backdrop-filter: blur(25px);\\n  border: 1px solid transparent;\\n}\\n.active-config-bottom-sheet-pill-active .config-bottom-sheet-pill-text {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 500;\\n  color: #101112;\\n}\\n.active-config-bottom-sheet-pill-active:hover {\\n  background: #fff !important;\\n  border: 1px solid transparent;\\n}\\n\\n.config-bottom-sheet-pill-icon-wrapper {\\n  display: flex;\\n  width: 24px;\\n  height: 24px;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\n.config-bottom-sheet-pill-text {\\n  color: white;\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n\\n.config-bottom-sheet-divider {\\n  height: 1px;\\n  width: 100%;\\n  background: rgba(255, 255, 255, 0.4);\\n  box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.16);\\n}\\n\\n.config-bottom-sheet-actions {\\n  position: absolute;\\n  display: flex;\\n  gap: 10px;\\n  top: -48px;\\n  right: 16px;\\n}\\n\\n.config-bottom-sheet-reset-button,\\n.config-bottom-sheet-close-button {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 40px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: relative;\\n  background: rgba(16, 17, 18, 0.1);\\n  backdrop-filter: blur(25px);\\n  cursor: pointer;\\n}\\n\\n.config-bottom-sheet-content {\\n  width: 100%;\\n}\\n\\n.ring-row-container {\\n  display: flex;\\n  align-items: center;\\n  gap: 16px;\\n  align-self: stretch;\\n}\\n\\n.config-bottom-sheet-ring-divs {\\n  display: flex;\\n  width: 64px;\\n  padding: 0px 10px;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 4px;\\n  border-radius: 80px;\\n}\\n\\n.config-bottom-sheet-ringicon-divs {\\n  display: flex;\\n  width: 64px;\\n  height: 64px;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 10px;\\n  border-radius: 80px;\\n  background: rgba(16, 17, 18, 0.24);\\n  cursor: pointer;\\n}\\n\\n.ring-selected {\\n  background: #fff;\\n}\\n\\n.config-bottom-sheet-ringicon-label {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n  color: #fff;\\n}\\n\\n.slider-container {\\n  display: flex;\\n  height: 40px;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 16px;\\n  align-self: stretch;\\n  width: 100%;\\n  /* max-width: 580px; */\\n}\\n\\n.slider-main-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  gap: 8px;\\n  align-self: stretch;\\n}\\n\\n.slider-input-div {\\n  display: flex;\\n  align-items: center;\\n  flex: 1;\\n}\\n\\n.slider-input-div input {\\n  width: 100%;\\n  height: 1px;\\n  padding: 1px;\\n  /* accent-color: #fff; */\\n  -webkit-appearance: none;\\n  background: linear-gradient(\\n    to right,\\n    #fff 0%,\\n    #fff 50%,\\n    rgba(255, 255, 255, 0.4) 50%,\\n    rgba(255, 255, 255, 0.4) 100%\\n  );\\n  transition: background 450ms ease-in;\\n  outline: none;\\n  cursor: pointer;\\n  border-radius: 4px;\\n}\\ninput::-webkit-slider-thumb {\\n  background-color: white;\\n  border-radius: 0;\\n\\n  height: 16px;\\n  width: 16px;\\n  border-radius: 50%;\\n  -webkit-appearance: none;\\n  filter: drop-shadow(0px 4px 10px rgba(0, 0, 0, 0.25));\\n}\\n\\n.slider-left-text,\\n.slider-right-text {\\n  width: 56px;\\n}\\n.slider-right-text {\\n  text-align: end;\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .config-bottom-sheet-pill {\\n    height: 32px;\\n  }\\n  .config-bottom-sheet-pill-text {\\n    font-size: 12px;\\n  }\\n  .active-config-bottom-sheet-pill-active .config-bottom-sheet-pill-text {\\n    font-size: 12px;\\n  }\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/configSettings.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,UAAU;EACV,gCAAgC;EAChC,8CAA8C;EAC9C,+BAA+B;EAC/B,2BAA2B;EAC3B,kBAAkB;EAClB,UAAU;EACV,4DAA4D;AAC9D;;AAEA;EACE,UAAU;EACV,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,SAAS;EACT,2BAA2B;EAC3B,qBAAqB;AACvB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,QAAQ;EACR,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,yBAAyB;EACzB,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;EACR,mBAAmB;EACnB,kCAAkC;EAClC,eAAe;EACf,6BAA6B;AAC/B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,kCAAkC;AACpC;;AAEA;EACE,gBAAgB;EAChB,2BAA2B;EAC3B,6BAA6B;AAC/B;AACA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,cAAc;AAChB;AACA;EACE,2BAA2B;EAC3B,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,oCAAoC;EACpC,+CAA+C;AACjD;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,SAAS;EACT,UAAU;EACV,WAAW;AACb;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,iCAAiC;EACjC,2BAA2B;EAC3B,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,iBAAiB;EACjB,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;EACR,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,mBAAmB;EACnB,kCAAkC;EAClC,eAAe;AACjB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,mBAAmB;EACnB,WAAW;EACX,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,QAAQ;EACR,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,OAAO;AACT;;AAEA;EACE,WAAW;EACX,WAAW;EACX,YAAY;EACZ,wBAAwB;EACxB,wBAAwB;EACxB;;;;;;GAMC;EACD,oCAAoC;EACpC,aAAa;EACb,eAAe;EACf,kBAAkB;AACpB;AACA;EACE,uBAAuB;EACvB,gBAAgB;;EAEhB,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,wBAAwB;EACxB,qDAAqD;AACvD;;AAEA;;EAEE,WAAW;AACb;AACA;EACE,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;EACd;EACA;IACE,eAAe;EACjB;EACA;IACE,eAAe;EACjB;AACF","sourcesContent":[".config-settings {\\n  position: absolute;\\n  bottom: 0;\\n  width: 100%;\\n  z-index: 5;\\n  border-radius: 16px 16px 0px 0px;\\n  border-top: 1px solid rgba(255, 255, 255, 0.2);\\n  background: rgba(0, 0, 0, 0.16);\\n  backdrop-filter: blur(25px);\\n  visibility: hidden;\\n  opacity: 0;\\n  transition: visibility 0s linear 0.33s, opacity 0.33s linear;\\n}\\n\\n.show-config-settings {\\n  opacity: 1;\\n  visibility: visible;\\n  transition-delay: 0s;\\n}\\n\\n.config-settings-hide {\\n  display: none;\\n}\\n\\n.config-bottom-sheet-container {\\n  display: flex;\\n  padding: 16px;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  gap: 16px;\\n  transform: translateY(100%);\\n  transition: 0.3s ease;\\n}\\n\\n.show-config-settings .config-bottom-sheet-container {\\n  transform: translateY(0%);\\n}\\n\\n.config-bottom-sheet-header {\\n  display: flex;\\n  align-items: flex-start;\\n  gap: 8px;\\n  align-self: stretch;\\n}\\n\\n.config-bottom-sheet-pill {\\n  display: flex;\\n  height: 40px;\\n  padding: 0px 12px 0px 8px;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 4px;\\n  border-radius: 40px;\\n  background: rgba(16, 17, 18, 0.24);\\n  cursor: pointer;\\n  border: 1px solid transparent;\\n}\\n\\n.hide-pill {\\n  display: none;\\n}\\n\\n.config-bottom-sheet-pill:hover {\\n  border: 1px solid #404141;\\n  background: rgba(16, 17, 18, 0.48);\\n}\\n\\n.active-config-bottom-sheet-pill-active {\\n  background: #fff;\\n  backdrop-filter: blur(25px);\\n  border: 1px solid transparent;\\n}\\n.active-config-bottom-sheet-pill-active .config-bottom-sheet-pill-text {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 500;\\n  color: #101112;\\n}\\n.active-config-bottom-sheet-pill-active:hover {\\n  background: #fff !important;\\n  border: 1px solid transparent;\\n}\\n\\n.config-bottom-sheet-pill-icon-wrapper {\\n  display: flex;\\n  width: 24px;\\n  height: 24px;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\n.config-bottom-sheet-pill-text {\\n  color: white;\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n\\n.config-bottom-sheet-divider {\\n  height: 1px;\\n  width: 100%;\\n  background: rgba(255, 255, 255, 0.4);\\n  box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.16);\\n}\\n\\n.config-bottom-sheet-actions {\\n  position: absolute;\\n  display: flex;\\n  gap: 10px;\\n  top: -48px;\\n  right: 16px;\\n}\\n\\n.config-bottom-sheet-reset-button,\\n.config-bottom-sheet-close-button {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 40px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: relative;\\n  background: rgba(16, 17, 18, 0.1);\\n  backdrop-filter: blur(25px);\\n  cursor: pointer;\\n}\\n\\n.config-bottom-sheet-content {\\n  width: 100%;\\n}\\n\\n.ring-row-container {\\n  display: flex;\\n  align-items: center;\\n  gap: 16px;\\n  align-self: stretch;\\n}\\n\\n.config-bottom-sheet-ring-divs {\\n  display: flex;\\n  width: 64px;\\n  padding: 0px 10px;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 4px;\\n  border-radius: 80px;\\n}\\n\\n.config-bottom-sheet-ringicon-divs {\\n  display: flex;\\n  width: 64px;\\n  height: 64px;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 10px;\\n  border-radius: 80px;\\n  background: rgba(16, 17, 18, 0.24);\\n  cursor: pointer;\\n}\\n\\n.ring-selected {\\n  background: #fff;\\n}\\n\\n.config-bottom-sheet-ringicon-label {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n  color: #fff;\\n}\\n\\n.slider-container {\\n  display: flex;\\n  height: 40px;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 16px;\\n  align-self: stretch;\\n  width: 100%;\\n  /* max-width: 580px; */\\n}\\n\\n.slider-main-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  gap: 8px;\\n  align-self: stretch;\\n}\\n\\n.slider-input-div {\\n  display: flex;\\n  align-items: center;\\n  flex: 1;\\n}\\n\\n.slider-input-div input {\\n  width: 100%;\\n  height: 1px;\\n  padding: 1px;\\n  /* accent-color: #fff; */\\n  -webkit-appearance: none;\\n  background: linear-gradient(\\n    to right,\\n    #fff 0%,\\n    #fff 50%,\\n    rgba(255, 255, 255, 0.4) 50%,\\n    rgba(255, 255, 255, 0.4) 100%\\n  );\\n  transition: background 450ms ease-in;\\n  outline: none;\\n  cursor: pointer;\\n  border-radius: 4px;\\n}\\ninput::-webkit-slider-thumb {\\n  background-color: white;\\n  border-radius: 0;\\n\\n  height: 16px;\\n  width: 16px;\\n  border-radius: 50%;\\n  -webkit-appearance: none;\\n  filter: drop-shadow(0px 4px 10px rgba(0, 0, 0, 0.25));\\n}\\n\\n.slider-left-text,\\n.slider-right-text {\\n  width: 56px;\\n}\\n.slider-right-text {\\n  text-align: end;\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .config-bottom-sheet-pill {\\n    height: 32px;\\n  }\\n  .config-bottom-sheet-pill-text {\\n    font-size: 12px;\\n  }\\n  .active-config-bottom-sheet-pill-active .config-bottom-sheet-pill-text {\\n    font-size: 12px;\\n  }\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8194\n')},6029:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".left-nav-icon {\\n  position: absolute;\\n  left: 16px;\\n  top: 16px;\\n  display: none;\\n  justify-content: center;\\n  align-items: center;\\n  width: 40px;\\n  height: 40px;\\n  cursor: pointer;\\n  border-radius: 50%;\\n  z-index: 11;\\n}\\n\\n.cross-nav-icon {\\n  position: absolute;\\n  right: 16px;\\n  top: 16px;\\n  display: none;\\n  justify-content: center;\\n  align-items: center;\\n  width: 40px;\\n  height: 40px;\\n  cursor: pointer;\\n  border-radius: 50%;\\n  z-index: 4;\\n}\\n\\n.icon-blur-bg {\\n  backdrop-filter: blur(25px);\\n  background: rgba(16, 17, 18, 0.1);\\n}\\n\\n.icon-blur-bg img {\\n  width: 24px;\\n  height: 24px;\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/navigationButtons.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,2BAA2B;EAC3B,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;AACd","sourcesContent":[".left-nav-icon {\\n  position: absolute;\\n  left: 16px;\\n  top: 16px;\\n  display: none;\\n  justify-content: center;\\n  align-items: center;\\n  width: 40px;\\n  height: 40px;\\n  cursor: pointer;\\n  border-radius: 50%;\\n  z-index: 11;\\n}\\n\\n.cross-nav-icon {\\n  position: absolute;\\n  right: 16px;\\n  top: 16px;\\n  display: none;\\n  justify-content: center;\\n  align-items: center;\\n  width: 40px;\\n  height: 40px;\\n  cursor: pointer;\\n  border-radius: 50%;\\n  z-index: 4;\\n}\\n\\n.icon-blur-bg {\\n  backdrop-filter: blur(25px);\\n  background: rgba(16, 17, 18, 0.1);\\n}\\n\\n.icon-blur-bg img {\\n  width: 24px;\\n  height: 24px;\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAyOS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDZ0g7QUFDakI7QUFDL0YsOEJBQThCLG1GQUEyQixDQUFDLDRGQUFxQztBQUMvRjtBQUNBLDBEQUEwRCx1QkFBdUIsZUFBZSxjQUFjLGtCQUFrQiw0QkFBNEIsd0JBQXdCLGdCQUFnQixpQkFBaUIsb0JBQW9CLHVCQUF1QixnQkFBZ0IsR0FBRyxxQkFBcUIsdUJBQXVCLGdCQUFnQixjQUFjLGtCQUFrQiw0QkFBNEIsd0JBQXdCLGdCQUFnQixpQkFBaUIsb0JBQW9CLHVCQUF1QixlQUFlLEdBQUcsbUJBQW1CLGdDQUFnQyxzQ0FBc0MsR0FBRyx1QkFBdUIsZ0JBQWdCLGlCQUFpQixHQUFHLFNBQVMsK0dBQStHLFlBQVksV0FBVyxVQUFVLFVBQVUsWUFBWSxhQUFhLFdBQVcsVUFBVSxVQUFVLFlBQVksV0FBVyxNQUFNLEtBQUssWUFBWSxXQUFXLFVBQVUsVUFBVSxZQUFZLGFBQWEsV0FBVyxVQUFVLFVBQVUsWUFBWSxXQUFXLE1BQU0sS0FBSyxZQUFZLGFBQWEsT0FBTyxLQUFLLFVBQVUsVUFBVSx5Q0FBeUMsdUJBQXVCLGVBQWUsY0FBYyxrQkFBa0IsNEJBQTRCLHdCQUF3QixnQkFBZ0IsaUJBQWlCLG9CQUFvQix1QkFBdUIsZ0JBQWdCLEdBQUcscUJBQXFCLHVCQUF1QixnQkFBZ0IsY0FBYyxrQkFBa0IsNEJBQTRCLHdCQUF3QixnQkFBZ0IsaUJBQWlCLG9CQUFvQix1QkFBdUIsZUFBZSxHQUFHLG1CQUFtQixnQ0FBZ0Msc0NBQXNDLEdBQUcsdUJBQXVCLGdCQUFnQixpQkFBaUIsR0FBRyxxQkFBcUI7QUFDL3VEO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWRpYXBpcGUtZmFjZW1lc2gtZWZmZWN0cy8uL3NyYy9odG1sU2VydmljZS9zdHlsZXMvbmF2aWdhdGlvbkJ1dHRvbnMuY3NzP2Y4ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIubGVmdC1uYXYtaWNvbiB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBsZWZ0OiAxNnB4O1xcbiAgdG9wOiAxNnB4O1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgei1pbmRleDogMTE7XFxufVxcblxcbi5jcm9zcy1uYXYtaWNvbiB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMTZweDtcXG4gIHRvcDogMTZweDtcXG4gIGRpc3BsYXk6IG5vbmU7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB3aWR0aDogNDBweDtcXG4gIGhlaWdodDogNDBweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIHotaW5kZXg6IDQ7XFxufVxcblxcbi5pY29uLWJsdXItYmcge1xcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDI1cHgpO1xcbiAgYmFja2dyb3VuZDogcmdiYSgxNiwgMTcsIDE4LCAwLjEpO1xcbn1cXG5cXG4uaWNvbi1ibHVyLWJnIGltZyB7XFxuICB3aWR0aDogMjRweDtcXG4gIGhlaWdodDogMjRweDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2h0bWxTZXJ2aWNlL3N0eWxlcy9uYXZpZ2F0aW9uQnV0dG9ucy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFNBQVM7RUFDVCxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxTQUFTO0VBQ1QsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLDJCQUEyQjtFQUMzQixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtBQUNkXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5sZWZ0LW5hdi1pY29uIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDE2cHg7XFxuICB0b3A6IDE2cHg7XFxuICBkaXNwbGF5OiBub25lO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDQwcHg7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICB6LWluZGV4OiAxMTtcXG59XFxuXFxuLmNyb3NzLW5hdi1pY29uIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAxNnB4O1xcbiAgdG9wOiAxNnB4O1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgei1pbmRleDogNDtcXG59XFxuXFxuLmljb24tYmx1ci1iZyB7XFxuICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMjVweCk7XFxuICBiYWNrZ3JvdW5kOiByZ2JhKDE2LCAxNywgMTgsIDAuMSk7XFxufVxcblxcbi5pY29uLWJsdXItYmcgaW1nIHtcXG4gIHdpZHRoOiAyNHB4O1xcbiAgaGVpZ2h0OiAyNHB4O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6029\n')},5974:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".popup-modal {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 100%;\\n  display: none;\\n  z-index: 10;\\n  justify-content: center;\\n  align-items: center;\\n  background: rgba(28, 28, 28, 0.4);\\n  z-index: 12;\\n}\\n\\n.modal-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 16px;\\n  padding: 16px;\\n  border-radius: 8px;\\n  justify-content: center;\\n  align-items: center;\\n  max-width: 328px;\\n  background: #fff;\\n}\\n\\n.modal-heading {\\n  font-size: 18px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n  color: #242b38;\\n  text-align: center;\\n}\\n\\n.modal-separator {\\n  border: 1px solid rgba(28, 28, 28, 0.1);\\n  width: 100%;\\n}\\n\\n.modal-actions-container {\\n  display: flex;\\n  justify-content: center;\\n  gap: 16px;\\n}\\n\\n.modal-positive-action {\\n  min-width: 104px;\\n  padding: 10px 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 6px;\\n  background: linear-gradient(168deg, #e65f6e 0.66%, #da0e64 59.95%);\\n  color: #fff;\\n  border-radius: 8px;\\n  border: none;\\n  cursor: pointer;\\n  font-weight: 600;\\n}\\n\\n.modal-negative-action {\\n  min-width: 104px;\\n  padding: 10px 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 6px;\\n  border: 1px solid #da0e64;\\n  color: #e65e97;\\n  background: #fff;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  background: rgba(218, 14, 100, 0.04);\\n  font-weight: 600;\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .modal-container {\\n    width: min-content;\\n  }\\n  .modal-heading {\\n    font-size: 16px;\\n  }\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/popupModal.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,MAAM;EACN,SAAS;EACT,WAAW;EACX,YAAY;EACZ,aAAa;EACb,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,iCAAiC;EACjC,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,aAAa;EACb,kBAAkB;EAClB,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;EACjB,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,uCAAuC;EACvC,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;EACR,kEAAkE;EAClE,WAAW;EACX,kBAAkB;EAClB,YAAY;EACZ,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;EACR,yBAAyB;EACzB,cAAc;EACd,gBAAgB;EAChB,kBAAkB;EAClB,eAAe;EACf,oCAAoC;EACpC,gBAAgB;AAClB;;AAEA;EACE;IACE,kBAAkB;EACpB;EACA;IACE,eAAe;EACjB;AACF","sourcesContent":[".popup-modal {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 100%;\\n  display: none;\\n  z-index: 10;\\n  justify-content: center;\\n  align-items: center;\\n  background: rgba(28, 28, 28, 0.4);\\n  z-index: 12;\\n}\\n\\n.modal-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 16px;\\n  padding: 16px;\\n  border-radius: 8px;\\n  justify-content: center;\\n  align-items: center;\\n  max-width: 328px;\\n  background: #fff;\\n}\\n\\n.modal-heading {\\n  font-size: 18px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n  color: #242b38;\\n  text-align: center;\\n}\\n\\n.modal-separator {\\n  border: 1px solid rgba(28, 28, 28, 0.1);\\n  width: 100%;\\n}\\n\\n.modal-actions-container {\\n  display: flex;\\n  justify-content: center;\\n  gap: 16px;\\n}\\n\\n.modal-positive-action {\\n  min-width: 104px;\\n  padding: 10px 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 6px;\\n  background: linear-gradient(168deg, #e65f6e 0.66%, #da0e64 59.95%);\\n  color: #fff;\\n  border-radius: 8px;\\n  border: none;\\n  cursor: pointer;\\n  font-weight: 600;\\n}\\n\\n.modal-negative-action {\\n  min-width: 104px;\\n  padding: 10px 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 6px;\\n  border: 1px solid #da0e64;\\n  color: #e65e97;\\n  background: #fff;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  background: rgba(218, 14, 100, 0.04);\\n  font-weight: 600;\\n}\\n\\n@media (min-aspect-ratio: 4/5) and (max-aspect-ratio: 1/1) {\\n  .modal-container {\\n    width: min-content;\\n  }\\n  .modal-heading {\\n    font-size: 16px;\\n  }\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5974\n')},991:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".setting-options {\\n  visibility: hidden;\\n  z-index: 11;\\n  position: absolute;\\n  right: 12px;\\n  bottom: 36px;\\n}\\n.settingOptions-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  transform: translateX(0%);\\n  transition: 0.3s ease;\\n}\\n\\n.hide-settingOptions .settingOptions-container {\\n  transform: translateX(1000px);\\n}\\n\\n.settingOptions-icon-container {\\n  box-sizing: border-box;\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  display: flex;\\n  padding: 4px;\\n  justify-content: center;\\n  border: 1px solid transparent;\\n  backdrop-filter: blur(25px);\\n  background: rgba(16, 17, 18, 0.1);\\n  cursor: pointer;\\n}\\n\\n.settingOptions-icon-wrapper {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 50%;\\n  box-sizing: border-box;\\n}\\n\\n.settingOptions-icon-disabled {\\n  opacity: 0.5;\\n  pointer-events: none;\\n  touch-action: none;\\n}\\n\\n.settingOptions-custom-icon-wrapper {\\n  width: 100%;\\n  height: 100%;\\n  border: 1px solid white;\\n  padding: 4px;\\n  border-radius: 50%;\\n  box-sizing: border-box;\\n}\\n\\n.settingOptions-custom-icon {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 50%;\\n  background: white;\\n}\\n.settingOptions-icon-selected {\\n  border: 1px solid white;\\n}\\n.settingOptions-icon-selected .settingOptions-icon-wrapper {\\n  background: white;\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/settingOptions.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;EACR,yBAAyB;EACzB,qBAAqB;AACvB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,6BAA6B;EAC7B,2BAA2B;EAC3B,iCAAiC;EACjC,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,oBAAoB;EACpB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,YAAY;EACZ,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;AACnB;AACA;EACE,uBAAuB;AACzB;AACA;EACE,iBAAiB;AACnB","sourcesContent":[".setting-options {\\n  visibility: hidden;\\n  z-index: 11;\\n  position: absolute;\\n  right: 12px;\\n  bottom: 36px;\\n}\\n.settingOptions-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  transform: translateX(0%);\\n  transition: 0.3s ease;\\n}\\n\\n.hide-settingOptions .settingOptions-container {\\n  transform: translateX(1000px);\\n}\\n\\n.settingOptions-icon-container {\\n  box-sizing: border-box;\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  display: flex;\\n  padding: 4px;\\n  justify-content: center;\\n  border: 1px solid transparent;\\n  backdrop-filter: blur(25px);\\n  background: rgba(16, 17, 18, 0.1);\\n  cursor: pointer;\\n}\\n\\n.settingOptions-icon-wrapper {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 50%;\\n  box-sizing: border-box;\\n}\\n\\n.settingOptions-icon-disabled {\\n  opacity: 0.5;\\n  pointer-events: none;\\n  touch-action: none;\\n}\\n\\n.settingOptions-custom-icon-wrapper {\\n  width: 100%;\\n  height: 100%;\\n  border: 1px solid white;\\n  padding: 4px;\\n  border-radius: 50%;\\n  box-sizing: border-box;\\n}\\n\\n.settingOptions-custom-icon {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 50%;\\n  background: white;\\n}\\n.settingOptions-icon-selected {\\n  border: 1px solid white;\\n}\\n.settingOptions-icon-selected .settingOptions-icon-wrapper {\\n  background: white;\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkxLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNnSDtBQUNqQjtBQUMvRiw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsNERBQTRELHVCQUF1QixnQkFBZ0IsdUJBQXVCLGdCQUFnQixpQkFBaUIsR0FBRyw2QkFBNkIsa0JBQWtCLDJCQUEyQixhQUFhLDhCQUE4QiwwQkFBMEIsR0FBRyxvREFBb0Qsa0NBQWtDLEdBQUcsb0NBQW9DLDJCQUEyQixnQkFBZ0IsaUJBQWlCLHVCQUF1QixrQkFBa0IsaUJBQWlCLDRCQUE0QixrQ0FBa0MsZ0NBQWdDLHNDQUFzQyxvQkFBb0IsR0FBRyxrQ0FBa0MsZ0JBQWdCLGlCQUFpQixrQkFBa0IsNEJBQTRCLHdCQUF3Qix1QkFBdUIsMkJBQTJCLEdBQUcsbUNBQW1DLGlCQUFpQix5QkFBeUIsdUJBQXVCLEdBQUcseUNBQXlDLGdCQUFnQixpQkFBaUIsNEJBQTRCLGlCQUFpQix1QkFBdUIsMkJBQTJCLEdBQUcsaUNBQWlDLGdCQUFnQixpQkFBaUIsdUJBQXVCLHNCQUFzQixHQUFHLGlDQUFpQyw0QkFBNEIsR0FBRyw4REFBOEQsc0JBQXNCLEdBQUcsU0FBUyw0R0FBNEcsWUFBWSxXQUFXLFlBQVksV0FBVyxVQUFVLEtBQUssS0FBSyxVQUFVLFlBQVksV0FBVyxZQUFZLGFBQWEsT0FBTyxLQUFLLFlBQVksT0FBTyxLQUFLLFlBQVksV0FBVyxVQUFVLFlBQVksV0FBVyxVQUFVLFlBQVksYUFBYSxhQUFhLGFBQWEsV0FBVyxPQUFPLEtBQUssVUFBVSxVQUFVLFVBQVUsWUFBWSxhQUFhLGFBQWEsYUFBYSxPQUFPLEtBQUssVUFBVSxZQUFZLGFBQWEsT0FBTyxLQUFLLFVBQVUsVUFBVSxZQUFZLFdBQVcsWUFBWSxhQUFhLE9BQU8sS0FBSyxVQUFVLFVBQVUsWUFBWSxhQUFhLE1BQU0sS0FBSyxZQUFZLE1BQU0sS0FBSyxZQUFZLDRDQUE0Qyx1QkFBdUIsZ0JBQWdCLHVCQUF1QixnQkFBZ0IsaUJBQWlCLEdBQUcsNkJBQTZCLGtCQUFrQiwyQkFBMkIsYUFBYSw4QkFBOEIsMEJBQTBCLEdBQUcsb0RBQW9ELGtDQUFrQyxHQUFHLG9DQUFvQywyQkFBMkIsZ0JBQWdCLGlCQUFpQix1QkFBdUIsa0JBQWtCLGlCQUFpQiw0QkFBNEIsa0NBQWtDLGdDQUFnQyxzQ0FBc0Msb0JBQW9CLEdBQUcsa0NBQWtDLGdCQUFnQixpQkFBaUIsa0JBQWtCLDRCQUE0Qix3QkFBd0IsdUJBQXVCLDJCQUEyQixHQUFHLG1DQUFtQyxpQkFBaUIseUJBQXlCLHVCQUF1QixHQUFHLHlDQUF5QyxnQkFBZ0IsaUJBQWlCLDRCQUE0QixpQkFBaUIsdUJBQXVCLDJCQUEyQixHQUFHLGlDQUFpQyxnQkFBZ0IsaUJBQWlCLHVCQUF1QixzQkFBc0IsR0FBRyxpQ0FBaUMsNEJBQTRCLEdBQUcsOERBQThELHNCQUFzQixHQUFHLHFCQUFxQjtBQUM3Z0g7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21lZGlhcGlwZS1mYWNlbWVzaC1lZmZlY3RzLy4vc3JjL2h0bWxTZXJ2aWNlL3N0eWxlcy9zZXR0aW5nT3B0aW9ucy5jc3M/Y2U2YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5zZXR0aW5nLW9wdGlvbnMge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbiAgei1pbmRleDogMTE7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMTJweDtcXG4gIGJvdHRvbTogMzZweDtcXG59XFxuLnNldHRpbmdPcHRpb25zLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogOHB4O1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcXG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcXG59XFxuXFxuLmhpZGUtc2V0dGluZ09wdGlvbnMgLnNldHRpbmdPcHRpb25zLWNvbnRhaW5lciB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwMHB4KTtcXG59XFxuXFxuLnNldHRpbmdPcHRpb25zLWljb24tY29udGFpbmVyIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICB3aWR0aDogNDBweDtcXG4gIGhlaWdodDogNDBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBwYWRkaW5nOiA0cHg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDI1cHgpO1xcbiAgYmFja2dyb3VuZDogcmdiYSgxNiwgMTcsIDE4LCAwLjEpO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uc2V0dGluZ09wdGlvbnMtaWNvbi13cmFwcGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi5zZXR0aW5nT3B0aW9ucy1pY29uLWRpc2FibGVkIHtcXG4gIG9wYWNpdHk6IDAuNTtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgdG91Y2gtYWN0aW9uOiBub25lO1xcbn1cXG5cXG4uc2V0dGluZ09wdGlvbnMtY3VzdG9tLWljb24td3JhcHBlciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xcbiAgcGFkZGluZzogNHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLnNldHRpbmdPcHRpb25zLWN1c3RvbS1pY29uIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogd2hpdGU7XFxufVxcbi5zZXR0aW5nT3B0aW9ucy1pY29uLXNlbGVjdGVkIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xcbn1cXG4uc2V0dGluZ09wdGlvbnMtaWNvbi1zZWxlY3RlZCAuc2V0dGluZ09wdGlvbnMtaWNvbi13cmFwcGVyIHtcXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvaHRtbFNlcnZpY2Uvc3R5bGVzL3NldHRpbmdPcHRpb25zLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7QUFDQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsUUFBUTtFQUNSLHlCQUF5QjtFQUN6QixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsNkJBQTZCO0VBQzdCLDJCQUEyQjtFQUMzQixpQ0FBaUM7RUFDakMsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFlBQVk7RUFDWixvQkFBb0I7RUFDcEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5zZXR0aW5nLW9wdGlvbnMge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbiAgei1pbmRleDogMTE7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMTJweDtcXG4gIGJvdHRvbTogMzZweDtcXG59XFxuLnNldHRpbmdPcHRpb25zLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogOHB4O1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcXG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcXG59XFxuXFxuLmhpZGUtc2V0dGluZ09wdGlvbnMgLnNldHRpbmdPcHRpb25zLWNvbnRhaW5lciB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwMHB4KTtcXG59XFxuXFxuLnNldHRpbmdPcHRpb25zLWljb24tY29udGFpbmVyIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICB3aWR0aDogNDBweDtcXG4gIGhlaWdodDogNDBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBwYWRkaW5nOiA0cHg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDI1cHgpO1xcbiAgYmFja2dyb3VuZDogcmdiYSgxNiwgMTcsIDE4LCAwLjEpO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uc2V0dGluZ09wdGlvbnMtaWNvbi13cmFwcGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi5zZXR0aW5nT3B0aW9ucy1pY29uLWRpc2FibGVkIHtcXG4gIG9wYWNpdHk6IDAuNTtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgdG91Y2gtYWN0aW9uOiBub25lO1xcbn1cXG5cXG4uc2V0dGluZ09wdGlvbnMtY3VzdG9tLWljb24td3JhcHBlciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xcbiAgcGFkZGluZzogNHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLnNldHRpbmdPcHRpb25zLWN1c3RvbS1pY29uIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogd2hpdGU7XFxufVxcbi5zZXR0aW5nT3B0aW9ucy1pY29uLXNlbGVjdGVkIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xcbn1cXG4uc2V0dGluZ09wdGlvbnMtaWNvbi1zZWxlY3RlZCAuc2V0dGluZ09wdGlvbnMtaWNvbi13cmFwcGVyIHtcXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///991\n')},1786:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".status-pill {\\n  position: absolute;\\n  top: 64px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 8px;\\n  width: 100%;\\n  z-index: 5;\\n}\\n\\n.pill-container {\\n  width: 125px;\\n  padding: 4px 12px;\\n  backdrop-filter: blur(16px);\\n  background: rgba(0, 0, 0, 0.4);\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 4px;\\n  border-radius: 8px;\\n}\\n\\n.pill-text {\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: normal;\\n  letter-spacing: 0.12px;\\n  color: #fff;\\n}\\n\\n.pill-status-text {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n", "",{"version":3,"sources":["webpack://./src/htmlService/styles/statusPill.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,SAAS;EACT,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;EACR,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,2BAA2B;EAC3B,8BAA8B;EAC9B,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;EACR,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;EACnB,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB","sourcesContent":[".status-pill {\\n  position: absolute;\\n  top: 64px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 8px;\\n  width: 100%;\\n  z-index: 5;\\n}\\n\\n.pill-container {\\n  width: 125px;\\n  padding: 4px 12px;\\n  backdrop-filter: blur(16px);\\n  background: rgba(0, 0, 0, 0.4);\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 4px;\\n  border-radius: 8px;\\n}\\n\\n.pill-text {\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: normal;\\n  letter-spacing: 0.12px;\\n  color: #fff;\\n}\\n\\n.pill-status-text {\\n  font-size: 14px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 140%;\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc4Ni5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDZ0g7QUFDakI7QUFDL0YsOEJBQThCLG1GQUEyQixDQUFDLDRGQUFxQztBQUMvRjtBQUNBLHdEQUF3RCx1QkFBdUIsY0FBYyxrQkFBa0IsNEJBQTRCLHdCQUF3QixhQUFhLGdCQUFnQixlQUFlLEdBQUcscUJBQXFCLGlCQUFpQixzQkFBc0IsZ0NBQWdDLG1DQUFtQyxrQkFBa0IsMkJBQTJCLDRCQUE0Qix3QkFBd0IsYUFBYSx1QkFBdUIsR0FBRyxnQkFBZ0Isb0JBQW9CLHVCQUF1QixxQkFBcUIsd0JBQXdCLDJCQUEyQixnQkFBZ0IsR0FBRyx1QkFBdUIsb0JBQW9CLHVCQUF1QixxQkFBcUIsc0JBQXNCLEdBQUcsU0FBUyx3R0FBd0csWUFBWSxXQUFXLFVBQVUsWUFBWSxhQUFhLFdBQVcsVUFBVSxVQUFVLE1BQU0sS0FBSyxVQUFVLFlBQVksYUFBYSxhQUFhLFdBQVcsWUFBWSxhQUFhLGFBQWEsV0FBVyxZQUFZLE9BQU8sS0FBSyxVQUFVLFlBQVksYUFBYSxhQUFhLGFBQWEsV0FBVyxNQUFNLEtBQUssVUFBVSxZQUFZLGFBQWEsYUFBYSx3Q0FBd0MsdUJBQXVCLGNBQWMsa0JBQWtCLDRCQUE0Qix3QkFBd0IsYUFBYSxnQkFBZ0IsZUFBZSxHQUFHLHFCQUFxQixpQkFBaUIsc0JBQXNCLGdDQUFnQyxtQ0FBbUMsa0JBQWtCLDJCQUEyQiw0QkFBNEIsd0JBQXdCLGFBQWEsdUJBQXVCLEdBQUcsZ0JBQWdCLG9CQUFvQix1QkFBdUIscUJBQXFCLHdCQUF3QiwyQkFBMkIsZ0JBQWdCLEdBQUcsdUJBQXVCLG9CQUFvQix1QkFBdUIscUJBQXFCLHNCQUFzQixHQUFHLHFCQUFxQjtBQUMvNUQ7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21lZGlhcGlwZS1mYWNlbWVzaC1lZmZlY3RzLy4vc3JjL2h0bWxTZXJ2aWNlL3N0eWxlcy9zdGF0dXNQaWxsLmNzcz8xMjYwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnN0YXR1cy1waWxsIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogNjRweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDhweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgei1pbmRleDogNTtcXG59XFxuXFxuLnBpbGwtY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMjVweDtcXG4gIHBhZGRpbmc6IDRweCAxMnB4O1xcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDE2cHgpO1xcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjQpO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDRweDtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG59XFxuXFxuLnBpbGwtdGV4dCB7XFxuICBmb250LXNpemU6IDEycHg7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcXG4gIGxldHRlci1zcGFjaW5nOiAwLjEycHg7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuXFxuLnBpbGwtc3RhdHVzLXRleHQge1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gIGxpbmUtaGVpZ2h0OiAxNDAlO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvaHRtbFNlcnZpY2Uvc3R5bGVzL3N0YXR1c1BpbGwuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixRQUFRO0VBQ1IsV0FBVztFQUNYLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsMkJBQTJCO0VBQzNCLDhCQUE4QjtFQUM5QixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsUUFBUTtFQUNSLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5zdGF0dXMtcGlsbCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDY0cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiA4cHg7XFxuICB3aWR0aDogMTAwJTtcXG4gIHotaW5kZXg6IDU7XFxufVxcblxcbi5waWxsLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMTI1cHg7XFxuICBwYWRkaW5nOiA0cHggMTJweDtcXG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cigxNnB4KTtcXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC40KTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiA0cHg7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxufVxcblxcbi5waWxsLXRleHQge1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XFxuICBsZXR0ZXItc3BhY2luZzogMC4xMnB4O1xcbiAgY29sb3I6ICNmZmY7XFxufVxcblxcbi5waWxsLXN0YXR1cy10ZXh0IHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICBsaW5lLWhlaWdodDogMTQwJTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1786\n')},2480:()=>{},4654:()=>{}}]);