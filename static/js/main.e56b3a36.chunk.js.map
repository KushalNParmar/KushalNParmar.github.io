{"version":3,"sources":["../../src/constants.js","../../src/util.js","../../src/options.js","../../src/create-element.js","../../src/component.js","../../src/diff/children.js","../../src/diff/props.js","../../src/diff/index.js","../../src/render.js","../../src/diff/catch-error.js","../../src/index.js","components/TryonFrame.jsx","components/Wrapper.jsx","components/App.jsx","index.js"],"names":["MODE_HYDRATE","slice","options","vnodeId","rerenderQueue","prevDebounce","defer","depthSort","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","isArray","Array","assign","obj","props","i","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","call","defaultProps","createVNode","original","vnode","__k","__","__b","__e","__d","__c","constructor","__v","__i","__u","Fragment","BaseComponent","context","this","getDomSibling","childIndex","sibling","updateParentDomPointers","child","base","enqueueRender","c","push","process","debounceRendering","renderQueueLength","component","newVNode","oldVNode","oldDom","parentDom","commitQueue","refQueue","sort","shift","__P","diff","__n","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","childVNode","newDom","firstChildDom","oldChildren","newChildrenLength","constructNewChildrenArray","applyRef","insert","nextSibling","skewedIndex","matchingIndex","oldChildrenLength","remainingOldChildren","skew","String","findMatchingIndex","unmount","parentVNode","insertBefore","nodeType","x","y","setStyle","style","value","setProperty","test","dom","name","oldValue","useCapture","o","cssText","replace","toLowerCase","l","_attached","Date","now","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","removeAttribute","setAttribute","eventHandler","_dispatched","event","tmp","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","renderHook","count","newType","outer","contextType","__E","prototype","render","doRender","sub","state","__h","_sb","getDerivedStateFromProps","__s","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","__r","getChildContext","getSnapshotBeforeUpdate","indexOf","diffElementNodes","diffed","root","some","cb","newHtml","oldHtml","newChildren","inputValue","checked","localName","document","createTextNode","createElementNS","is","data","childNodes","attributes","__html","innerHTML","current","skipRemove","r","componentWillUnmount","replaceNode","firstChild","error","errorInfo","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","then","bind","resolve","setTimeout","a","b","currentIndex","currentComponent","previousComponent","prevRaf","currentHook","afterPaintEffects","EMPTY","_options","oldBeforeDiff","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","oldRoot","getHookState","index","hooks","__H","__V","useState","initialState","reducer","init","hookState","_reducer","invokeOrReturn","currentValue","__N","nextValue","action","_hasScuFromHooks","updateHookState","p","stateHooks","filter","every","prevScu","shouldUpdate","hookItem","prevCWU","useReducer","flushAfterPaintEffects","invokeCleanup","invokeEffect","__m","_pendingArgs","requestAnimationFrame","afterNextFrame","hasErrored","HAS_RAF","raf","done","clearTimeout","timeout","cancelAnimationFrame","hook","comp","cleanup","argsChanged","oldArgs","newArgs","arg","f","TryonFrame","setInputValue","useEffect","args","window","GlamAR","mode","platform","console","log","h","className","id","placeholder","onChange","target","onClick","handleSubmitClick","applyMakeupBySku","Wrapper","_ref","App","body"],"mappings":"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","file":"static/js/main.e56b3a36.chunk.js","sourcesContent":["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tparentDom = component._parentDom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\tif (!newDom && oldVNode._dom == oldDom) {\n\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t}\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\n\t\t// Handle unmounting null placeholders, i.e. VNode => null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[skewedIndex];\n\t\t\tif (\n\t\t\t\toldVNode &&\n\t\t\t\toldVNode.key == null &&\n\t\t\t\toldVNode._dom &&\n\t\t\t\t(oldVNode._flags & MATCHED) === 0\n\t\t\t) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[skewedIndex] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex === skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex > skewedIndex) {\n\t\t\t\tif (remainingOldChildren > newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex < skewedIndex) {\n\t\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\t\tskew = matchingIndex - skewedIndex;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tskew = 0;\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != null && oldDom.nodeType === 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) === 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/i, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname === 'onFocusOut' ||\n\t\t\tname === 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = Date.now();\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname !== 'rowSpan' &&\n\t\t\tname !== 'colSpan' &&\n\t\t\tname !== 'role' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {PreactEvent} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tif (this._listeners) {\n\t\tconst eventHandler = this._listeners[e.type + false];\n\t\t/**\n\t\t * This trick is inspired by Vue https://github.com/vuejs/core/blob/main/packages/runtime-dom/src/modules/events.ts#L90-L101\n\t\t * when the dom performs an event it leaves micro-ticks in between bubbling up which means that an event can trigger on a newly\n\t\t * created DOM-node while the event bubbles up, this can cause quirky behavior as seen in https://github.com/preactjs/preact/issues/3927\n\t\t */\n\t\tif (!e._dispatched) {\n\t\t\t// When an event has no _dispatched we know this is the first event-target in the chain\n\t\t\t// so we set the initial dispatched time.\n\t\t\te._dispatched = Date.now();\n\t\t\t// When the _dispatched is smaller than the time when the targetted event handler was attached\n\t\t\t// we know we have bubbled up to an element that was added during patching the dom.\n\t\t} else if (e._dispatched <= eventHandler._attached) {\n\t\t\treturn;\n\t\t}\n\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {PreactEvent} e The event object from the browser\n * @private\n */\nfunction eventProxyCapture(e) {\n\tif (this._listeners) {\n\t\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n\t}\n}\n","import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t// ^ could possibly be simplified to:\n\t\t\t\t// excessDomChildren.length = 0;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\troot._nextDom = undefined;\n\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value === !!nodeType &&\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS('http://www.w3.org/2000/svg', nodeType);\n\t\t} else {\n\t\t\tdom = document.createElement(nodeType, newProps.is && newProps);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\n\t\t\t\tsetProperty(dom, i, null, value, isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' &&\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], false);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any>} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\n\nconst TryonFrame = () => {\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    window.GlamAR.init(\n      'container__frame_wrapper',\n      'ba843e66-4b93-48f6-a02e-ea48d920e52e',\n      { mode: 'private', platform: 'web' }\n    );\n\n    window.GlamAR.addEventListener('*', (e) => {\n      switch (e) {\n        case 'loaded':\n          console.log('SDK loaded');\n          break;\n        case 'sku-applied':\n          console.log('SKU applied');\n          break;\n        case 'sku-failed':\n          console.log('SKU Failed to apply');\n          break;\n      }\n    });\n  }, []);\n\n  const handleSubmitClick = () => {\n    window.GlamAR.applyMakeupBySku(inputValue);\n  };\n  const handleValueChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  return (\n    <div className=\"d-flex\">\n      <div id=\"container__frame_wrapper\" />\n      <div>\n        <input\n          className=\"sku-input\"\n          type=\"text\"\n          placeholder=\"Enter sku Id\"\n          onChange={handleValueChange}\n        />\n        <button className=\"submit-btn\" onClick={handleSubmitClick}>\n          Apply Sku\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TryonFrame;\n","import { h } from 'preact';\nconst Wrapper = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Wrapper;\n","import { h } from 'preact';\n\nimport TryonFrame from './TryonFrame';\nimport Wrapper from './Wrapper';\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <TryonFrame />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import { h, render } from 'preact';\n\nimport './styles/index.scss';\nimport App from './components/App';\n\nrender(<App />, document.body);\n"],"sourceRoot":""}